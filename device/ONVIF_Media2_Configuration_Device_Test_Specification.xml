<?xml version="1.0" encoding="UTF-8"?>
<!--For PDF version (standard)-->
<!-- <?xml-stylesheet href="docbook/xsl/fo/docbook.xsl" type="text/xsl" ?>-->
<!--For PDF version-->
<!-- <?xml-stylesheet href="ONVIF-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<!--For online version-->
<?xml-stylesheet href="docbook-css/docbook.xsl" type="text/xsl" ?>
<!--For PDF version - New ONVIF-->
<!--<?xml-stylesheet href="../ONVIFNew-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xml="http://www.w3.org/XML/1998/namespace" xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd" version="0.1" xml:id="ONVIF_Media2_Config_Device_TS">
  <info>
    <orgname>
      <phrase>
        <trademark class="registered">ONVIF</trademark>
      </phrase>
    </orgname>
    <title>Media2 Configuration Device Test Specification</title>
    <titleabbrev>Media2 Configuration Device Test Spec</titleabbrev>
    <subtitle>Version 21.12</subtitle>
    <date>December 2021</date>
    <copyright>
      <year>2021</year>
      <holder>ONVIF, Inc. All rights reserved.</holder>
    </copyright>
    <address>
      <uri>www.onvif.org</uri>
    </address>
    <legalnotice role="notices">
      <para>
        Recipients of this document may copy, distribute, publish, or display this
        document so long as this copyright notice, license and disclaimer are retained with
        all copies of the document. No license is granted to modify this document.
      </para>
      <para>
        THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR
        AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
        NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
        NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY
        PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS,
        COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
      </para>
      <para>
        IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR
        ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES,
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR
        NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE
        POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT. THE
        FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR
        LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE
        AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE
        CORPORATION.
      </para>
    </legalnotice>
    <revhistory>

      <revision>
        <revnumber>16.06</revnumber>
        <date>Feb 12, 2016</date>
        <revdescription>
          <para>
            Original publication
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.06</revnumber>
        <date>Feb 19, 2016</date>
        <revdescription>
          <para>
            Step 11 and diagram have been updated in test 4.1.3 updated according to the feedback of Bhetanabottla Sriram
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.06</revnumber>
        <date>Feb 25, 2016</date>
        <revdescription>
          <para>
            The issue in last step in tests MEDIA2-4-2-3 has been fixed
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.06</revnumber>
        <date>Mar 8, 2016</date>
        <revdescription>
          <para>
            The tests 4.1.1 – 4.1.3 have been updated according to the feedback from F2F Tokyo.
          </para>
          <para>
            OSD configuration tests have been added
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.06</revnumber>
        <date>Mar 15, 2016</date>
        <revdescription>
          <para>
            The tests MEDIA2-4-4-1 - MEDIA2-4-4-4 have been updated according to Fredrik’s feedback.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.06</revnumber>
        <date>Apr 4, 2016</date>
        <revdescription>
          <para>
            The response for SetOSD and DeleteOSD requests have been updated according to the notes from Sano Hiroyuki
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.07</revnumber>
        <date>Jun 23, 2016</date>
        <revdescription>
          <para>
            Test numbering and document version have been fixed
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.07</revnumber>
        <date>Jul 13, 2016</date>
        <revdescription>
          <para>
            F2F commnets implemented.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.07</revnumber>
        <date>Jul 14, 2016</date>
        <revdescription>
          <para>
            Notes from F. Svensson implemented. Tests sequences updated.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.07</revnumber>
        <date>Jul 27, 2016</date>
        <revdescription>
          <para>
            Review comments implemented
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.07</revnumber>
        <date>Aug 8, 2016</date>
        <revdescription>
          <para>
            Comments from Nicolas Brochu implemented
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Oct 4, 2016</date>
        <revdescription>
          <para>
            The test MEDIA2-4-4-2 have been updated.
          </para>
          <para>
            Pre-Requisite of the tests MEDIA2-4-4-1 - MEDIA2-4-4-4 have been updated.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Oct 13, 2016</date>
        <revdescription>
          <para>
            Test case MEDIA2-4-5-1 SNAPSHOT URI has been added.
          </para>
          <para>
            Annex A.5 Configure Media profile with Video Source Configuration and Video Encoder Configuration has been added.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Oct 26, 2016</date>
        <revdescription>
          <para>
            The following test cases and annexes were added in the scope of #1154:
          </para>
          <para>
            MEDIA2-5-1-1 GET VIDEO SOURCE CONFIGURATION OPTIONS
          </para>
          <para>
            MEDIA2-5-1-2 GET VIDEO SOURCE CONFIGURATIONS
          </para>
          <para>
            MEDIA2-5-1-3 VIDEO SOURCE CONFIGURATIONS AND VIDEO SOURCE CONFIGURATION OPTIONS CONSISTENCY
          </para>
          <para>
            MEDIA2-5-1-4 PROFILES AND VIDEO SOURCE CONFIGURATIONS CONSISTENCY
          </para>
          <para>
            MEDIA2-5-1-5 MODIFY ALL SUPPORTED VIDEO SOURCE CONFIGURATIONS
          </para>
          <para>
            MEDIA2-5-1-6 GET VIDEO SOURCE CONFIGURATIONS – INVALID TOKEN
          </para>
          <para>
            A.8 Get Service Capabilities
          </para>
          <para>
            A.7 Get Video Source Configurations List
          </para>
          <para>
            A.6 Configure Media profile with Video Source Configuration
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Oct 26, 2016</date>
        <revdescription>
          <para>
            The following test cases and annexes were added in the scope of #1160:
          </para>
          <para>
            MEDIA2-6-1-1 GET AUDIO SOURCE CONFIGURATION OPTIONS
          </para>
          <para>
            MEDIA2-6-1-2 GET AUDIO SOURCE CONFIGURATIONS
          </para>
          <para>
            MEDIA2-6-1-3 AUDIO SOURCE CONFIGURATIONS AND AUDIO SOURCE CONFIGURATION OPTIONS CONSISTENCY
          </para>
          <para>
            MEDIA2-6-1-4 PROFILES AND AUDIO SOURCE CONFIGURATIONS CONSISTENCY
          </para>
          <para>
            MEDIA2-6-1-5 MODIFY ALL SUPPORTED AUDIO SOURCE CONFIGURATIONS
          </para>
          <para>
            MEDIA2-6-1-6 GET AUDIO SOURCE CONFIGURATIONS – INVALID TOKEN
          </para>
          <para>
            A.9 Get Audio Source Configurations List
          </para>
          <para>
            A.10 Configure Media profile with Audio Source Configuration
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Oct 26, 2016</date>
        <revdescription>
          <para>
            The following test cases and annexes were added in the scope of #1166:
          </para>
          <para>
            MEDIA2-4-5-1 SNAPSHOT URI
          </para>
          <para>
            A.5 Configure Media profile with Video Source Configuration and Video Encoder Configuration
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Oct 26, 2016</date>
        <revdescription>
          <para>
            The following test cases and annexes were added in the scope of #1170:
          </para>
          <para>
            MEDIA2-4-1-2 CREATE MEDIA PROFILE WITH PRE-DEFINED CONFIGURATION
          </para>
          <para>
            MEDIA2-4-1-3 DYNAMIC MEDIA PROFILE CONFIGURATION
          </para>
          <para>
            MEDIA2-4-2-4 VIDEO ENCODER CONFIGURATIONS – ALL SUPPORTED VIDEO ENCODER CONFIGURATIONS
          </para>
          <para>
            MEDIA2-4-3-1 G.711 AUDIO ENCODER CONFIGURATION
          </para>
          <para>
            MEDIA2-4-3-2 AAC AUDIO ENCODER CONFIGURATION
          </para>
          <para>
            MEDIA2-6-1-5 MODIFY ALL SUPPORTED AUDIO SOURCE CONFIGURATIONS
          </para>
          <para>
            MEDIA2-5-1-5 MODIFY ALL SUPPORTED VIDEO SOURCE CONFIGURATIONS
          </para>
          <para>
            The following annexes were added in the scope of #1170:
          </para>
          <para>
            A.11 Delete Media Profile if Max Reached
          </para>
          <para>
            A.12 Crete PullPoint Subscription
          </para>
          <para>
            A.14 Retrieve Profile Changed Event by PullPoint
          </para>
          <para>
            A.13 Delete Subscription
          </para>
          <para>
            A.16 Get Video Encoder Configurations List
          </para>
          <para>
            A.17 Get Audio Encoder Configurations List
          </para>
          <para>
            A.15 Retrieve Configuration Changed Event by PullPoint
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Oct 27, 2016</date>
        <revdescription>
          <para>
            MEDIA2-4-4-2 was updated to get last PositionOption for second create
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Oct 28, 2016</date>
        <revdescription>
          <para>
            The following test cases and annexes were added in the scope of #1162:
          </para>
          <para>
            MEDIA2-7-1-1 GET AUDIO OUTPUT CONFIGURATION OPTIONS
          </para>
          <para>
            MEDIA2-7-1-2 GET AUDIO OUTPUT CONFIGURATIONS
          </para>
          <para>
            MEDIA2-7-1-3 AUDIO OUTPUT CONFIGURATIONS AND AUDIO OUTPUT CONFIGURATION OPTIONS CONSISTENCY
          </para>
          <para>
            MEDIA2-7-1-4 PROFILES AND AUDIO OUTPUT CONFIGURATIONS CONSISTENCY
          </para>
          <para>
            MEDIA2-7-1-5 MODIFY ALL SUPPORTED AUDIO OUTPUT CONFIGURATIONS
          </para>
          <para>
            MEDIA2-7-1-6 GET AUDIO OUTPUT CONFIGURATIONS – INVALID TOKEN
          </para>
          <para>
            MEDIA2-8-1-1 GET AUDIO DECODER CONFIGURATION OPTIONS
          </para>
          <para>
            MEDIA2-8-1-2 GET AUDIO DECODER CONFIGURATIONS
          </para>
          <para>
            MEDIA2-8-1-3 PROFILES AND AUDIO DECODER CONFIGURATIONS CONSISTENCY
          </para>
          <para>
            MEDIA2-8-1-4 MODIFY ALL SUPPORTED AUDIO DECODER CONFIGURATIONS
          </para>
          <para>
            MEDIA2-8-1-5 GET AUDIO DECODER CONFIGURATIONS – INVALID TOKEN
          </para>
          <para>
            A.18 Get Audio Output Configurations List
          </para>
          <para>
            A.19 Configure Media profile with Audio Output Configuration
          </para>
          <para>
            A.20 Get Audio Decoder Configurations List
          </para>
          <para>
            A.21 Configure Media profile with Audio Output Configuration and Audio Decoder Configuration
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Oct 28, 2016</date>
        <revdescription>
          <para>
            The following test cases and annexes were added in the scope of #1172:
          </para>
          <para>
            MEDIA2-9-1-1 READY TO USE MEDIA PROFILE FOR PTZ
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Oct 28, 2016</date>
        <revdescription>
          <para>
            The following test cases and annexes were added in the scope of #1180:
          </para>
          <para>
            MEDIA2-10-1-1 GET VIDEO SOURCE MODES
          </para>
          <para>
            MEDIA2-10-1-2 SET VIDEO SOURCE MODES
          </para>
          <para>
            A.22 Get Video Sources List
          </para>
          <para>
            A.23 Waiting for Reboot
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Nov 13, 2016</date>
        <revdescription>
          <para>
            The following test cases and annexes were added in the scope of #1156:
          </para>
          <para>
            MEDIA2-4-2-5 VIDEO ENCODER INSTANCES
          </para>
          <para>
            A.24 Find Guaranteed Number of Media Profiles for Video Source Configuration
          </para>
          <para>
            A.25 Configure Video Encoder Configuration to Get Guaranteed Number of Media Profiles for Video Source Configuration
          </para>
          <para>
            A.26 Add Video Encoder Configuration to Get Guaranteed Number of Media Profiles for Video Source Configuration
          </para>
          <para>
            A.27 Create New or Configure Fixed Media Profiles to Get Guaranteed Number of Media Profiles for Video Source Configuration
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Nov 23, 2016</date>
        <revdescription>
          <para>
            The following test case was added in the scope of #1174:
          </para>
          <para>
            MEDIA2-9-1-2 DYNAMIC MEDIA PROFILE CONFIGURATION FOR PTZ
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Nov 27, 2016</date>
        <revdescription>
          <para>
            The Annexes format was changed according to comment in #1166.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Nov 27, 2016</date>
        <revdescription>
          <para>
            The test MEDIA2-2-4-2 was apdated according comments in #1180:
          </para>
          <para>
            Typos were fixed.
          </para>
          <para>
            The first not enabled will be used for first Set.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Nov 27, 2016</date>
        <revdescription>
          <para>
            The following were updated according #1215:
          </para>
          <para>
            Command under test were updated.
          </para>
          <para>
            Step 8 was removed from MEDIA2-2-3-1.
          </para>
          <para>
            Step 5.1 was updated with description in MEDIA2-2-3-3.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Nov 27, 2016</date>
        <revdescription>
          <para>
            The format was updated according #1238.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Nov 27, 2016</date>
        <revdescription>
          <para>
            Test Structures and test IDs were updated according #1265.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Nov 27, 2016</date>
        <revdescription>
          <para>
            The following annexes were updated in the scope of #1260:
          </para>
          <para>
            A.4 OSDConfigurationOptions and OSDConfiguration mapping
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Dec 07, 2016</date>
        <revdescription>
          <para>
            Annex A.27 were renamed.
          </para>
          <para>
            Annex A.27 Procedure Purpose were updated.
          </para>
          <para>
            Annex A.27 Procedure was fixed to Create Media Profile if maxProfiles was not reached.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Dec 08, 2016</date>
        <revdescription>
          <para>
            Fixed typos and link according description in #1162.
          </para>
          <para>
            Fixed typos and link according description in #1166.
          </para>
          <para>
            Fixed typos and link according description in #1161.
          </para>
          <para>
            Fixed typos and link according description in #1170.
          </para>
          <para>
            Fixed typos and link according description in #1180.
          </para>
          <para>
            Fixed responses according in #1178.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Dec 12, 2016</date>
        <revdescription>
          <para>
            MEDIA2-1-1-3 DYNAMIC MEDIA PROFILE CONFIGURATION was updated:
          </para>
          <para>
            subscribtion creation were moved to the loop to prevent receiveing messages after Annex A.1.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Jan 09, 2017</date>
        <revdescription>
          <para>
            MEDIA2-2-2-5 was updated according #1294 and #1154:
          </para>
          <para>
            Step 5.9 was updated.
          </para>
          <para>
            Step 5.3 was updated.
          </para>
          <para>
            Some typos was fixed according #1154.
          </para>
          <para>
            Step 5.9 was updated.
          </para>
          <para>
            MEDIA2-4-1-1 was updated according #1174:
          </para>
          <para>
            ONVIF Core Specification Coverage and Pre-Requisite were updated.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Jan 18, 2017</date>
        <revdescription>
          <para>
            The test MEDIA2-2-3-4 VIDEO ENCODER CONFIGURATIONS – ALL SUPPORTED VIDEO ENCODER CONFIGURATIONS was apdated according to #1293:
          </para>
          <para>
            GovLength parameter in SetVideoEncoderConfiguration request was updated.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Jan 26, 2017</date>
        <revdescription>
          <para>
            The following test cases were added according to #1296:
          </para>
          <para>
            MEDIA2-7-1-1 MEDIA2 SERVICE CAPABILITIES
          </para>
          <para>
            MEDIA2-7-1-2 GET SERVICES AND GET MEDIA2 SERVICE CAPABILITIES CONSISTENCY
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Jan 30, 2017</date>
        <revdescription>
          <para>
            MEDIA2-3-4-4 MODIFY ALL SUPPORTED AUDIO DECODER CONFIGURATIONS test case was updated according to #1295.
          </para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Feb 09, 2017</date>
        <revdescription>
          <para>
            MEDIA2-1-1-1 READY TO USE MEDIA PROFILE FOR VIDEO STREAMING test case was updated according to #1284.
          </para>
          <para>
            MEDIA2-2-3-5 VIDEO ENCODER CONFIGURATION OPTIONS test case was added according to #1273.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Feb 20, 2017</date>
        <revdescription>
          <para>
            MEDIA2-2-3-1 VIDEO ENCODER CONFIGURATION test case was updated according to #1215.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Mar 03, 2017</date>
        <revdescription>
          <para>
            MEDIA2-1-1-1 READY TO USE MEDIA PROFILE FOR VIDEO STREAMING test case was updated according to #1284 and #1345.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Mar 06, 2017</date>
        <revdescription>
          <para>
            MEDIA2-4-1-2 DYNAMIC MEDIA PROFILE CONFIGURATION FOR PTZ test case was updated according to #1307.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Mar 22, 2017</date>
        <revdescription>
          <para>
            MEDIA2-1-1-4 GET PROFILES test case was added according to #1333.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Mar 24, 2017</date>
        <revdescription>
          <para>
            Media2-2-2-5 MODIFY ALL SUPPORTED VIDEO SOURCE CONFIGURATIONS test case was updated according to #1312.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Mar 31, 2017</date>
        <revdescription>
          <para>
            MEDIA2-7-1-1 MEDIA2 SERVICE CAPABILITIES test case was updated according to #1288.
          </para>
          <para>
            The following test cases were updated according to #1367:
          </para>
          <para>
            MEDIA2-3-2-1 G.711 AUDIO ENCODER CONFIGURATION
          </para>
          <para>
            MEDIA2-3-2-2 AAC AUDIO ENCODER CONFIGURATION
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Apr 03, 2017</date>
        <revdescription>
          <para>
            MEDIA2-1-1-5 CREATE MEDIA PROFILE WITH CONFIGURATIONS test case was added according to #1344.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Apr 24, 2017</date>
        <revdescription>
          <para>
            MEDIA2-2-1-1 VIDEO ENCODER INSTANCES test case was updated according to #1156.
          </para>
          <para>
            Annex A.28 was added.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>May 24, 2017</date>
        <revdescription>
          <para>
            MEDIA2-2-3-1 VIDEO ENCODER CONFIGURATION test case was updated according to #1363.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Jul 13, 2017</date>
        <revdescription>
          <para>
            MEDIA2-6-1-5 GET OSDS test case was added according to #1347.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Jul 14, 2017</date>
        <revdescription>
          <para>
            MEDIA2-1-1-6 REMOVE ALL CONFIGURATIONS FROM MEDIA PROFILE test case was added according to #1404.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Sept 28, 2017</date>
        <revdescription>
          <para>
            MEDIA2-2-2-7 PROFILES AND VIDEO SOURCE CONFIGURATION OPTIONS CONSISTENCY test case was added according to #1484.
          </para>
          <para>
            MEDIA2-2-3-1 VIDEO ENCODER CONFIGURATION test case was changed according to #1485.
          </para>
          <para>
            The following test cases and annexes were added in the scope of #1488:
          </para>
          <para>
            MEDIA2-3-2-3 GET AUDIO ENCODER CONFIGURATION OPTIONS
          </para>
          <para>
            MEDIA2-3-2-4 AUDIO ENCODER CONFIGURATIONS AND AUDIO ENCODER CONFIGURATION OPTIONS CONSISTENCY
          </para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Oct 24, 2017</date>
        <revdescription>
          <para>
            MEDIA2-1-1-7 FIXED MEDIA PROFILE CONFIGURATION test case was added according to #1472.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Oct 31, 2017</date>
        <revdescription>
          <para>
            The following test case waere added according to #1500:
          </para>
          <para>
            MEDIA2-6-1-6 GET OSD OPTIONS
          </para>
          <para>
            MEDIA2-6-1-7 OSD CONFIGURATIONS AND OSD OPTIONS CONSISTENCY
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Nov 03, 2017</date>
        <revdescription>
          <para>
            The following test case waere added according to #1487:
          </para>
          <para>
            MEDIA2-4-1-2 DYNAMIC MEDIA PROFILE CONFIGURATION FOR PTZ
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Nov 24, 2017</date>
        <revdescription>
          <para>
            MEDIA2-6-1-6 GET OSD OPTIONS updated according to #1534
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Nov 27, 2017</date>
        <revdescription>
          <para>
            MEDIA2-7-1-1 MEDIA2 SERVICE CAPABILITIES updated according to #1522
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Nov 28, 2017</date>
        <revdescription>
          <para>
            MEDIA2-1-1-3 DYNAMIC MEDIA PROFILE CONFIGURATION was updated according to #1499
          </para>
          <para>
            Annex A.1 Create Empty Profile was updated according to #1499
          </para>
          <para>
            MEDIA2-6-1-7 OSD CONFIGURATIONS AND OSD OPTIONS CONSISTENCY was updated according to #1500
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Nov 29, 2017</date>
        <revdescription>
          <para>
            Media Configuration Test Cases\Video Configuration\General section was removed.
          </para>
          <para>
            Annex A.28 Remove all non-fixed Media Profiles and remove all configurations from fixed Media Profiles was removed.
          </para>
          <para>
            Annex A.27 Create New Media Profiles to Get Guaranted Number of Media Profiles for Video Source Configuration
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Dec 01, 2017</date>
        <revdescription>
          <para>
            MEDIA2-8-1-1 MODIFY ALL SUPPORTED METADATA CONFIGURATIONS was added according to #1486.
          </para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 16, 2018</date>
        <revdescription>
          <para>
            MEDIA2-6-1-4 SET OSD CONFIGURATION TEXT OVERLAY was changed according to #1519.
          </para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 17, 2018</date>
        <revdescription>
          <para>
            MEDIA2-7-1-1 MEDIA2 SERVICE CAPABILITIES was changed according to #1521.
          </para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 23, 2018</date>
        <revdescription>
          <para>
            The following test cases were updated according to #1483:
          </para>
          <para>
            MEDIA2-6-1-6 GET OSD OPTIONS
          </para>
          <para>
            MEDIA2-6-1-2 CREATE OSD CONFIGURATION FOR IMAGE OVERLAY
          </para>
          <para>
            MEDIA2-6-1-3 SET OSD CONFIGURATION IMAGE OVERLAY
          </para>
          <para>
            The following annex was added according to #1483:
          </para>
          <para>
            Annex A.28 OSD Picture File Parameters
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 24, 2018</date>
        <revdescription>
          <para>
            The following test cases were updated according to #1546:
          </para>
          <para>
            MEDIA2-6-1-1 CREATE OSD CONFIGURATION FOR TEXT OVERLAY
          </para>
          <para>
            MEDIA2-6-1-2 CREATE OSD CONFIGURATION FOR IMAGE OVERLAY
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 24, 2018</date>
        <revdescription>
          <para>
            MEDIA2-6-1-6 GET OSD OPTIONS was updated according to #1511.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 24, 2018</date>
        <revdescription>
          <para>
            The following test cases were updated according to #1575:
          </para>
          <para>
            MEDIA2-8-1-1 MODIFY ALL SUPPORTED METADATA CONFIGURATIONS (note and steps 5.3 and 5.9 were updated)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 24, 2018</date>
        <revdescription>
          <para>
            The following test cases were updated according to #1560:
          </para>
          <para>
            MEDIA2-2-3-4 VIDEO ENCODER CONFIGURATIONS – ALL SUPPORTED VIDEO ENCODER CONFIGURATIONS (step 5.3.12 was removed, step 7 was added)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Mar 20, 2018</date>
        <revdescription>
          <para>
            The following test cases were updated according to #1581:
          </para>
          <para>
            MEDIA2-6-1-6 GET OSD OPTIONS (step 4.3 and step 5 added)
          </para>
          <para>
            MEDIA2-6-1-7 OSD CONFIGURATIONS AND OSD OPTIONS CONSISTENCY (step 4.6.2 added)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Mar 21, 2018</date>
        <revdescription>
          <para>
            The following test cases were updated according to #1547:
          </para>
          <para>
            Annex A.30 Device Configuration to Create OSD with Required Type added
          </para>
          <para>
            Annex A.29 Delete OSD added
          </para>
          <para>
            MEDIA2-6-1-1 CREATE OSD CONFIGURATION FOR TEXT OVERLAY (Pre-Requisite about maximum number of OSD removed, step 4.6, step 4.7, step 4.15, step 4.16, and step 4.25 added)
          </para>
          <para>
            MEDIA2-6-1-2 CREATE OSD CONFIGURATION FOR IMAGE OVERLAY (Pre-Requisite about maximum number of OSD removed, step 4.6, and step 4.24 added)
          </para>
          <para>
            MEDIA2-6-1-3 SET OSD CONFIGURATION IMAGE OVERLAY (Pre-Requisite about maximum number of OSD removed, step 4.7, and step 4.19 added)
          </para>
          <para>
            MEDIA2-6-1-4 SET OSD CONFIGURATION TEXT OVERLAY (Pre-Requisite about maximum number of OSD removed, step 4.7, and step 4.18 added)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Apr 09, 2018</date>
        <revdescription>
          <para>
            Annex A.30 Device Configuration to Create OSD with Required Type updated according to #1608
          </para>
          <para>
            Annex A.31 Delete All Text OSDs added according to #1608
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Apr 18, 2018</date>
        <revdescription>
          <para>
            MEDIA2-7-1-1 MEDIA2 SERVICE CAPABILITIES updated according to #1595 (step 16 added)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Apr 24, 2018</date>
        <revdescription>
          <para>
            MEDIA2-2-3-4 SET ALL SUPPORTED VIDEO ENCODER CONFIGURATIONS updated according to #1617
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>May 07, 2018</date>
        <revdescription>
          <para>
            The following were updated according to #1620:
          </para>
          <para>
            MEDIA2-5-1-2 VIDEO ENCODER INSTANCES PER VIDEO SOURCE (added)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jun 21, 2018</date>
        <revdescription>
          <para>Reformatting document using new template</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.12</revnumber>
        <date>Aug 07, 2018</date>
        <revdescription>
          <para>
            MEDIA2-7-1-1 MEDIA2 SERVICE CAPABILITIES updated according to #1691
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06 SR1</revnumber>
        <date>Sep 19, 2018</date>
        <revdescription>
          <para>
            The following were updated according to #1641:
          </para>
          <para>
            MEDIA2-2-3-4 SET ALL SUPPORTED VIDEO ENCODER CONFIGURATIONS (note was updated to remove Quality, RateControl.FrameRateLimit, and RateControl.BitrateLimit from comparison)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.12</revnumber>
        <date>Dec 07, 2018</date>
        <revdescription>
          <para>
            The following were updated according to #1762:
          </para>
          <para>
            DYNAMIC MEDIA PROFILE CONFIGURATION FOR PTZ (PTZConfiguration.Name value in 6.3.6 step was updated)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.12</revnumber>
        <date>Dec 21, 2018</date>
        <revdescription>
          <para>Switching Hub description in 'Network Configuration for DUT' section was updated according to #1737</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.06</revnumber>
        <date>Jan 10, 2019</date>
        <revdescription>
          <para>
            The following were updated according to #1762:
          </para>
          <para>
            DYNAMIC MEDIA PROFILE CONFIGURATION FOR PTZ (step 5 added, step 7.3.3 updated)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.06</revnumber>
        <date>Apr 10, 2019</date>
        <revdescription>
          <para>
            The following were updated according to #1764:
          </para>
          <para>
            MEDIA2-3-2-2 AAC AUDIO ENCODER CONFIGURATION (step 5.3 and step 5.3.1 updated)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.06</revnumber>
        <date>Apr 26, 2019</date>
        <revdescription>
          <para>
            The following were updated according to #1813:
          </para>
          <para>
            MEDIA2-4-1-2 DYNAMIC MEDIA PROFILE CONFIGURATION FOR PTZ (steps 7.3.6 - 7.3.11 added)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.12</revnumber>
        <date>Sep 23, 2019</date>
        <revdescription>
          <para>
            The following were updated according to #1926:
          </para>
          <para>
            MEDIA2-1-1-3 DYNAMIC MEDIA PROFILE CONFIGURATION (steps 7- 8 replaced with steps 6.34-6.57)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.12</revnumber>
        <date>Sep 25, 2019</date>
        <revdescription>
          <para>
            The following were updated according to #1913:
          </para>
          <para>
            MEDIA2-1-1-4 GET PROFILES (steps 16 and 17 added)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.12</revnumber>
        <date>Oct 08, 2019</date>
        <revdescription>
          <para>
            The following were updated according to #1894:
          </para>
          <para>
            MEDIA2-1-1-3 DYNAMIC MEDIA PROFILE CONFIGURATION (steps with metadata moved under Metadata feature, see step 6.34)
          </para>
          <para>
            MEDIA2-8-1-1 MODIFY ALL SUPPORTED METADATA CONFIGURATIONS (Metadata feature added into Pre-Requisite)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.12</revnumber>
        <date>Oct 09, 2019</date>
        <revdescription>
          <para>
            The following were done according to #1913:
          </para>
          <para>
            MEDIA2-1-1-3 DYNAMIC MEDIA PROFILE CONFIGURATION (step 7 added)
          </para>
          <para>MEDIA2-9-1-1 GET ANALYTICS CONFIGURATIONS (test case added)</para>
          <para>MEDIA2-9-1-2 PROFILES AND ANALYTICS CONFIGURATIONS CONSISTENCY (test case added)</para>
          <para>MEDIA2-9-1-3 GET ANALYTICS CONFIGURATIONS – INVALID TOKEN (test case added)</para>
          <para>A.32 Get Analytics Configurations List (annex case added)</para>
          <para>MEDIA2-8-1-2 GET METADATA CONFIGURATIONS (test case added)</para>
          <para>MEDIA2-8-1-3 PROFILES AND METADATA CONFIGURATIONS CONSISTENCY (test case added)</para>
          <para>MEDIA2-8-1-4 GET METADATA CONFIGURATIONS – INVALID TOKEN (test case added)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.12</revnumber>
        <date>Oct 11, 2019</date>
        <revdescription>
          <para>
            The following were done according to #1957:
          </para>
          <para>
            MEDIA2-3-2-3 GET AUDIO ENCODER CONFIGURATION OPTIONS(Type parameter in step 7 updated, step 9 updated)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>Mar 03, 2020</date>
        <revdescription>
          <para>
            Minor changes according to #1913:
          </para>
          <para>
            MEDIA2-1-1-3 DYNAMIC MEDIA PROFILE CONFIGURATION (invalid step ID fixed)
          </para>
          <para>
            MEDIA2-1-1-4 GET PROFILES (Specification coverage section updated)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>May 12, 2020</date>
        <revdescription>
          <para>
            The following were updated according to #1901 and #1999:
          </para>
          <para>MEDIA2-1-1-2 CREATE MEDIA PROFILE WITH PRE-DEFINED CONFIGURATION (steps 5, 8, 17, 18 updated)</para>
          <para>MEDIA2-1-1-3 DYNAMIC MEDIA PROFILE CONFIGURATION (all steps with calling of A.12, A.14, and A.13 updated)</para>
          <para>MEDIA2-2-2-5 MODIFY ALL SUPPORTED VIDEO SOURCE CONFIGURATIONS (steps 4, 5.5, 5.11, 6 updated)</para>
          <para>MEDIA2-2-3-4 SET ALL SUPPORTED VIDEO ENCODER CONFIGURATIONS (steps 4, 5.3.3, 5.3.9, 7 updated)</para>
          <para>MEDIA2-3-1-5 MODIFY ALL SUPPORTED AUDIO SOURCE CONFIGURATIONS (steps 4, 5.5, 6 updated)</para>
          <para>MEDIA2-3-2-1 G.711 AUDIO ENCODER CONFIGURATION (steps 4, 5.3.4, 5.3.11, 6 updated)</para>
          <para>MEDIA2-3-2-2 AAC AUDIO ENCODER CONFIGURATION (steps 4, 5.3.4, 5.3.11, 6 updated)</para>
          <para>MEDIA2-3-3-5 MODIFY ALL SUPPORTED AUDIO OUTPUT CONFIGURATIONS (steps 4, 5.5, 5.11, 6 updated)</para>
          <para>MEDIA2-4-1-2 DYNAMIC MEDIA PROFILE CONFIGURATION FOR PTZ (steps 6, 7.3.3, 7.3.14, 7.3.27, 9 updated)</para>
          <para>MEDIA2-8-1-1 MODIFY ALL SUPPORTED METADATA CONFIGURATIONS (steps 4, 5.5, 5.11, 6 updated)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Jul 30, 2020</date>
        <revdescription>
          <para>
            The following were updated according to #2072:
          </para>
          <para>MEDIA2-1-1-5 CREATE MEDIA PROFILE WITH CONFIGURATIONS (separated CreateProfile for each configuration)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Sep 28, 2020</date>
        <revdescription>
          <para>
            The following were updated according to #2088:
          </para>
          <para>MEDIA2-2-3-1-v17.12 VIDEO ENCODER CONFIGURATION (Video feature was added in Pre-Requisite)</para>
          <para>MEDIA2-2-3-2 VIDEO ENCODER CONFIGURATIONS AND VIDEO ENCODER CONFIGURATION OPTIONS CONSISTENCY (Video feature was added in Pre-Requisite)</para>
          <para>MEDIA2-2-3-3 PROFILES AND VIDEO ENCODER CONFIGURATION OPTIONS CONSISTENCY (Video feature was added in Pre-Requisite)</para>
          <para>MEDIA2-2-3-4-v20.06 SET ALL SUPPORTED VIDEO ENCODER CONFIGURATIONS (Video feature was added in Pre-Requisite)</para>
          <para>MEDIA2-2-3-5-v17.06 VIDEO ENCODER CONFIGURATION OPTIONS VALIDATION (Video feature was added in Pre-Requisite)</para>
          <para>MEDIA2-5-1-2 VIDEO ENCODER INSTANCES PER VIDEO SOURCE (Video feature was added in Pre-Requisite)</para>
          <para>MEDIA2-1-1-3 DYNAMIC MEDIA PROFILE CONFIGURATION (Step 6.10 was changed: steps for Video Encoder were moved under condition that Video is supported)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Oct 01, 2020</date>
        <revdescription>
          <para>
            The following were updated according to #2099:
          </para>
          <para>MEDIA2-5-1-1 SNAPSHOT URI (step 4 added)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Nov 09, 2020</date>
        <revdescription>
          <para>
            The following test case was added according to #2025:
          </para>
          <para>MEDIA2-1-1-8 READY TO USE MEDIA PROFILE FOR METADATA STREAMING</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Dec 17, 2020</date>
        <revdescription>
          <para>
            The following test case was added according to #2120:
          </para>
          <para>MEDIA2-1-1-9 READY TO USE MEDIA PROFILE FOR VIDEO STREAMING (PROFILE M)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>Apr 09, 2021</date>
        <revdescription>
          <para>
            The following annex was updated according to #2124:
          </para>
          <para>A.23 Waiting for Reboot (condition with Discovery feature supporting added)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>May 27, 2021</date>
        <revdescription>
          <para>
            The following test case was updated according to #2216:
          </para>
          <para>MEDIA2-2-2-5 MODIFY ALL SUPPORTED VIDEO SOURCE CONFIGURATIONS (step 5.3 and 5.9 modified to skip change of Rotate if Reboot=true)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.12</revnumber>
        <date>Aug 31, 2021</date>
        <revdescription>
          <para>
            The following test case was updated according to #2216:
          </para>
          <para>MEDIA2-2-2-5 MODIFY ALL SUPPORTED VIDEO SOURCE CONFIGURATIONS (step 7 added)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.12</revnumber>
        <date>Oct 07, 2021</date>
        <revdescription>
          <para>
            The following test cases and annexes were added in the scope of #2222:
          </para>
          <para>
            MEDIA2-10-1-1 CREATE MASKS
            </para>
            <para>
            MEDIA2-10-1-2 GET MASKS
            </para>
            <para>
            MEDIA2-10-1-3 SET MASKS
            </para>
            <para>
            MEDIA2-10-1-4 GET MASK OPTIONS
            </para>
            <para>
            MEDIA2-10-1-5 MASK CONFIGURATIONS AND MASK OPTIONS CONSISTENCY
            </para>
            <para>
            A.34 Device Configuration For Create Mask
            </para>
            <para>
            A.35 Delete Mask
            </para>
            <para>
            A.36 Create Mask
            </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.12</revnumber>
        <date>Oct 13, 2021</date>
        <revdescription>
          <para>
            The following test cases and annexes were added in the scope of #2222:
          </para>
          <para>
            MEDIA2-10-1-6 SINGLE COLOR ONLY PARAMETER
            </para>
            <para>
            A.37 Remove all Masks from Video Source Configuration
            </para>
        </revdescription>
      </revision>

     
    </revhistory>
  </info>
  <chapter xml:id="s.intro">
    <title>Introduction</title>
    <para>
      The goal of the ONVIF test specification set is to make it possible to realize fully interoperable
      IP physical security implementation from different vendors. The set of ONVIF test specification describes
      the test cases need to verify the [ONVIF Network Interface Specs] and [ONVIF Conformance] requirements.
      In addition, the test cases are to be basic inputs for some Profile specification requirements.
      It also describes the test framework, test setup, pre-requisites, test policies needed for the execution
      of the described test cases.
    </para>
    <para>
      This ONVIF Media2 Test Specification acts as a supplementary document to the [ONVIF Network Interface Specs],
      illustrating test cases need to be executed and passed. And this specification acts as an input document
      to the development of test tool, which will be used to test the ONVIF device implementation conformance
      towards ONVIF standard. This test tool is referred as ONVIF Client hereafter.
    </para>
    <section xml:id="s.intro.scope">
      <title>Scope</title>
      <para>
        This ONVIF Media2 Test Specification defines and regulates the conformance testing procedure
        for the ONVIF conformant devices. Conformance testing is meant to be functional black-box testing.
        The objective of this specification is to provide test cases to test individual requirements
        of ONVIF devices according to ONVIF Media2 Service, which is defined in [ONVIF Network Interface Specs].
      </para>
      <para>
        The principal intended purposes are:<itemizedlist>
          <listitem>
            <para>Provide self-assessment tool for implementations.</para>
          </listitem>
          <listitem>
            <para>
              Provide comprehensive test suite coverage for [ONVIF Network Interface Specs].
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        This specification <emphasis role="bold">does not</emphasis> address the following:
        <itemizedlist>
          <listitem>
            <para>
              Product use cases and non-functional (performance and regression) testing.
            </para>
          </listitem>
          <listitem>
            <para>
              SOAP Implementation Interoperability test i.e. Web Service Interoperability Basic Profile version 2.0 (WS-I BP 2.0).
            </para>
          </listitem>
          <listitem>
            <para>
              Network protocol implementation Conformance test for HTTP, HTTPS, RTP and RTSP protocol.
            </para>
          </listitem>
          <listitem>
            <para>
              Poor streaming performance test (audio/video distortions, missing audio/video frames, incorrect
              lib synchronization etc.).
            </para>
            <para>
              Wi-Fi Conformance test
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        The set of ONVIF Test Specification will not cover the complete set of requirements as defined in [ONVIF Network Interface Specs];
        instead it would cover subset of it. The scope of this specification is to derive all the normative requirements
        of [ONVIF Network Interface Specs], which are related to ONVIF Media2 Service and some of the optional requirements.
      </para>
      <para>
        This ONVIF Media2 Test Specification covers ONVIF Media2 service, which is a functional block of [ONVIF Network Interface Specs].
        The following sections describe the brief overview of and scope of each functional block.
      </para>
    </section>
    <section xml:id="s.intro.media_configuration">
      <title>Media Configuration</title>
      <para>
        Media Configuration section covers the test cases needed for the verification of media2 service features as mentioned
        in [ONVIF Network Interface Specs]. Media2 service is used to configure the media configurations.
      </para>
      <para>
        Briefly it covers the following things:
        <itemizedlist>
          <listitem>
            <para>
              Manage media profiles.
            </para>
          </listitem>
          <listitem>
            <para>
              Manage configuration entities.
            </para>
          </listitem>
          <listitem>
            <para>
              Getting snapshot
            </para>
          </listitem>
          <listitem>
            <para>
              Manage OSD configurationd
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        The scope of this specification is to cover following configuration entities and Audio/Video media formats:
        <itemizedlist>
          <listitem>
            <para>
              Configuration Entities:
              <itemizedlist>
                <listitem>
                  <para>
                    Video source configuration
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Audio source configuration
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Video encoder configuration
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Audio encoder configuration
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Video Codec:
              <itemizedlist>
                <listitem>
                  <para>
                    H.264
                  </para>
                </listitem>
                <listitem>
                  <para>
                    H.265
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Audio Codec:
              <itemizedlist>
                <listitem>
                  <para>
                    G.711
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AAC
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              OSD:
              <itemizedlist>
                <listitem>
                  <para>
                    Text Overlay
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Image Overlay
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
  </chapter>
  <chapter xml:id="s.docbook">
    <title>Normative references</title>
    <itemizedlist>
      <listitem>
        <para>[ONVIF Conformance] ONVIF Conformance Process Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/conformance/">https://www.onvif.org/profiles/conformance/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Profile Policy] ONVIF Profile Policy:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/">https://www.onvif.org/profiles/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Network Interface Specs] ONVIF Network Interface Specification documents:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Core Specs] ONVIF Core Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Media2 Spec] ONVIF Media 2 Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Base Test] ONVIF Base Device Test Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/conformance/device-test/">https://www.onvif.org/profiles/conformance/device-test/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ISO/IEC Directives, Part 2] ISO/IEC Directives, Part 2, Annex H:</para>
        <para>
          <link xlink:href="http://www.iso.org/directives">http://www.iso.org/directives</link>
        </para>
      </listitem>
      <listitem>
        <para>[ISO 16484-5] ISO 16484-5:2014-09 Annex P:</para>
        <para>
          <link xlink:href="https://www.iso.org/obp/ui/#!iso:std:63753:en">https://www.iso.org/obp/ui/#!iso:std:63753:en</link>
        </para>
      </listitem>
      <listitem>
        <para>[SOAP 1.2, Part 1] W3C SOAP 1.2, Part 1, Messaging Framework:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/soap12-part1/">http://www.w3.org/TR/soap12-part1/</link>
        </para>
      </listitem>
      <listitem>
        <para>[XML-Schema, Part 1] W3C XML Schema Part 1: Structures Second Edition:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/xmlschema-1/">http://www.w3.org/TR/xmlschema-1/</link>
        </para>
      </listitem>
      <listitem>
        <para>[XML-Schema, Part 2] W3C XML Schema Part 2: Datatypes Second Edition:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/xmlschema-2/">http://www.w3.org/TR/xmlschema-2/</link>
        </para>
      </listitem>
      <listitem>
        <para>[WS-Security] "Web Services Security: SOAP Message Security 1.1 (WS-Security 2004)", OASIS Standard, February 2006.:</para>
        <para>
          <link xlink:href="http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf">http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf</link>
        </para>
      </listitem>
      <listitem>
        <para>[RFC 2396] "Uniform Resource Identifiers (URI): Generic Syntax", T. Berners-Lee, MIT/LCS, R. Fielding, U.C. Irvine, L. Masinter, Xerox Corporation, August 1998:</para>
        <para>
          <link xlink:href="https://www.ietf.org/rfc/rfc2396.txt">https://www.ietf.org/rfc/rfc2396.txt</link>
        </para>
      </listitem>
    </itemizedlist>
  </chapter>
  <chapter xml:id="additions">
    <title>Terms and Definitions</title>
    <section xml:id="additions.conventions">
      <title>Conventions</title>
      <para>
        The key words "shall", "shall not", "should", "should not", "may", "need not",
        "can", "cannot" in this specification are to be interpreted as described in [ISO/IEC
        Directives Part 2].
      </para>
    </section>
    <section xml:id="additions.definitions">
      <title>Definitions</title>
      <para>This section describes terms and definitions used in this document.</para>
      <variablelist>
        <varlistentry>
          <term>Profile</term>
          <listitem>
            <para>See ONVIF Profile Policy.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ONVIF Device</term>
          <listitem>
            <para>
              Computer appliance or software program that exposes one or multiple
              ONVIF Web Services.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ONVIF Client</term>
          <listitem>
            <para>
              Computer appliance or software program that uses ONVIF Web
              Services.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Configuration Entity</term>
          <listitem>
            <para>
              A network video device media abstract component that is used to produce a media stream on the network,
              i.e. video and/or audio stream.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Media Profile</term>
          <listitem>
            <para>
              A media profile maps a video and/or audio source to a video and/or an audio encoder, PTZ and analytics configurations.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>SOAP</term>
          <listitem>
            <para>
              SOAP is a lightweight protocol intended for exchanging structured
              information in a decentralized, distributed environment. It uses XML
              technologies to define an extensible messaging framework providing a
              message construct that can be exchanged over a variety of underlying
              protocols.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Device Test Tool</term>
          <listitem>
            <para>
              ONVIF Device Test Tool that tests ONVIF Device implementation towards
              the ONVIF Test Specification set.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Media 2 Service</term>
          <listitem>
            <para>
              Services to determine the streaming properties of requested media streams.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:id="additions.abbreviations">
      <title>Abbreviations</title>
      <para>This section describes abbreviations used in this document.</para>
      <variablelist>
        <varlistentry>
          <term>HTTP</term>
          <listitem>
            <para>Hyper Text Transport Protocol.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>AAC</term>
          <listitem>
            <para>Advanced Audio Coding.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>URI</term>
          <listitem>
            <para>Uniform Resource Identifier.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>WSDL</term>
          <listitem>
            <para>Web Services Description Language.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>XML</term>
          <listitem>
            <para>eXtensible Markup Language.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>JPEG</term>
          <listitem>
            <para>Joint Photographic Experts Group.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TTL</term>
          <listitem>
            <para>Time To Live.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>
  <chapter xml:id="overview">
    <title>Test Overview</title>
    <para>
      This section describes about the test setup and prerequisites needed,
      and the test policies that should be followed for test case execution.
    </para>
    <section xml:id="overview.test_setup">
      <title>Test Setup</title>
      <section xml:id="overview.test_setup.network_configuration">
        <title>Network Configuration for DUT</title>
        <para>
          The generic test configuration for the execution of test cases defined in this document is as shown below (Figure 1).
        </para>
        <para>
          Based on the individual test case requirements, some of the entities in the below setup may not be needed for the execution of those corresponding test cases.
        </para>
        <figure>
          <title>Test Configuration for DUT</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="test_network.png" format="PNG" scalefit="0"/>
            </imageobject>
            <textobject>
              <phrase>Test Configuration for DUT</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <para>
          <emphasis role="bold">DUT:</emphasis> ONVIF device to be tested. Hereafter, this is referred to as DUT (Device Under Test).
        </para>
        <para>
          <emphasis role="bold">ONVIF Client (Test Tool):</emphasis> Tests are executed by this system and it controls the behavior of the DUT. It handles both expected and unexpected behavior.
        </para>
        <para>
          <emphasis role="bold">HTTP Proxy:</emphasis> provides facilitation in case of RTP and RTSP tunneling over HTTP.
        </para>
        <para>
          <emphasis role="bold">Wireless Access Point:</emphasis> provides wireless connectivity to the devices that support wireless connection.
        </para>
        <para>
          <emphasis role="bold">DNS Server:</emphasis> provides DNS related information to the connected devices.
        </para>
        <para>
          <emphasis role="bold">DHCP Server:</emphasis> provides IPv4 Address to the connected devices.
        </para>
        <para>
          <emphasis role="bold">NTP Server:</emphasis> provides time synchronization between ONVIF Client and DUT.
        </para>
        <para>
          <emphasis role="bold">Switching Hub:</emphasis> provides network connectivity among all the test equipments in the test environment. All devices should be connected to the Switching Hub.
          When running multiple test instances in parallel on the same network, the Switching Hub should be configured to use filtering in order to avoid multicast traffic being flooded to all ports, because this may affect test stability.
        </para>
        <para>
          <emphasis role="bold">Router:</emphasis> provides router advertisements for IPv6 configuration.
        </para>
      </section>
    </section>
    <section xml:id="overview.prerequisites">
      <title>Prerequisites</title>
      <para>
        The pre-requisites for executing the test cases described in this Test Specification are:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              The DUT shall be configured with an IPv4 address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be IP reachable [in the test configuration].
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be able to be discovered by the Test Tool.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be configured with the time i.e. manual configuration of UTC time and if NTP is supported by DUT, then NTP time shall be synchronized with NTP Server.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT time and Test tool time shall be synchronized with each other either manually or by common NTP server
            </para>
          </listitem>
        </orderedlist>
      </para>
    </section>
    <section xml:id="overview.test_policy">
      <title>Test Policy</title>
      <para>
        This section describes the test policies specific to the test case execution of each functional block.
      </para>
      <para>
        The DUT shall adhere to the test policies defined in this section.
      </para>
      <section xml:id="overview.test_policy.media_configuration">
        <title>Media Configuration</title>
        <para>
          Prior to the execution of Media Configuration test cases, DUT shall be discovered by ONVIF Client using device management service, and it shall demonstrate media capabilities to ONVIF Client using GetServiceCapabilities command.
        </para>
        <para>
          DUT shall support at least one media profile with Video Configuration. Video Configuration shall include video source and video encoder media entities.
        </para>
        <para>
          DUT shall support either H.264 or H.265 encoding.
        </para>
        <para>
          ONVIF Client shall explicitly specify the optional media formats supported by DUT.
        </para>
        <para>
          ONVIF Client shall explicitly specify if the DUT supports Audio and PTZ.
        </para>
        <para>
          DUT shall allow creation of at least one media profile by ONVIF Client. In certain test cases, ONVIF Client may create new media configuration (i.e. media profile and media entities). In such cases, the test procedure will delete those modified configurations at the end of the test procedure.
        </para>
        <para>
          DUT should respond with proper response message for all SOAP actions. Sending fault messages such as "ter:ConfigurationConflict" will be treated as FAILURE of the test cases.
        </para>
        <para>
          Please refer to <xref linkend="tc.media_configuration"/> for Media Configuration Test Cases.
        </para>
      </section>
    </section>
  </chapter>
  <!--Media Configuration Test Cases-->
  <chapter xml:id="tc.media_configuration" xreflabel="Section 5">
    <title>Media Configuration Test Cases</title>
    <!--Media Profile-->
    <section xml:id="tc.media_configuration.media_profile">
      <title>Media Profile</title>
      <!--MEDIA2-1-1-1-->
      <section xml:id="tc.MEDIA2-1-1-1" revision="18.06" annotations="vxcvxcv">
        <title>READY TO USE MEDIA PROFILE FOR VIDEO STREAMING</title>
        <para >
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-1-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Video Streaming (Profile T Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl, deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that DUT has a ready-to-use Media Service 2.0 Profile for streaming video (either H.264 or H.265) per video source.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT, DeviceIO Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetVideoSources</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetVideoSourcesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list =: <emphasis role="italic">videoSourceTokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[0] := All
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                For each Video Source token <emphasis role="italic">videoSourceToken</emphasis> in <emphasis role="italic">videoSourceTokenList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis> does not contain at least one Media Profile with Configurations.VideoSource.SourceToken value is equal to <emphasis role="italic">videoSourceToken</emphasis> and with Configurations.VideoEncoder, which Configurations.VideoEncoder.Encoding equals to "H264" or "H265", FAIL the test and skip other steps.
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetVideoSourcesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-1-1-2-->
      <section xml:id="tc.MEDIA2-1-1-2">
        <title>CREATE MEDIA PROFILE WITH PRE-DEFINED CONFIGURATION</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-1-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Get media profiles, Create media profile, Delete media profile.
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles, CreateProfile, DeleteProfile
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the DUT can create media profile with populated configuration parameter.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Event Service was received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                <!--<annotation>
									<para>Currently this annex is inline, also see comments in annex</para>
								</annotation>-->Subscribtion
                ONVIF Client deletes Media Profile if Maximum Number of Media Profiles is reached by following the procedure mentioned in <xref linkend="Annex_HelperDeleteMediaProfileWhenMaxProfiles"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">videoSourceConfCompleteList</emphasis> - Video Source Configurations list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="MEDIA2-1-1-2.CPPS">
              <para>
                If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">"tns1:Media/ProfileChanged"</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription Reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription Termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreateProfile</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Name := "testMedia2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Configuration[0].Type := VideoSource
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Configuration[0].Token = <emphasis role="italic">videoSourceConfCompleteList</emphasis>[0].@token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreateProfileResponse</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">profileToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">profileToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[0] := VideoSource
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">profileList</emphasis>[0].@token != <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">profileList</emphasis>[0].Configurations.VideoSource.@token != <emphasis role="italic">videoSourceConfCompleteList</emphasis>[0].@token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">DeleteProfile</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">profileToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">DeleteProfileResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If subscription was created at step <xref linkend="MEDIA2-1-1-2.CPPS"/>, ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">profileToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoProfile</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">DeleteProfileResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">CreateProfileResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send the <emphasis role="bold">env:Sender/ter:Action/ter:NoConfig</emphasis> SOAP 1.2 fault message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See Annex in [ONVIF Base Test] for Invalid SOAP 1.2 fault message definition.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
        </para>
      </section>
      <!--MEDIA2-1-1-3-->
      <section xml:id="tc.MEDIA2-1-1-3">
        <title>DYNAMIC MEDIA PROFILE CONFIGURATION</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-1-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Get media profiles, Create media profile, Delete media profile, Add one or more configurations to a profile, Remove one or more configurations from a profile, Get configurations.
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles, CreateProfile, DeleteProfile, AddConfiguration, RemoveConfiguration, GetVideoEncoderConfigurations, GetVideoSourceConfigurations
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of the DUT for dynamic media profile configuration.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Event Service was received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates new Media Profile or removes all configurations from fixed Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperCreateEmptyProfile"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">newProfileFlag</emphasis> - flag that indicates that new Media Profile was created
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">profileToken</emphasis> - empty Media Profile
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="MEDIA2-1-1-3.CPPS">
              <para>
                If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">"tns1:Media/ProfileChanged"</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription Reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription Termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <!--VSC and VEC-->
            <listitem>
              <para>
                ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">videoSourceConfList</emphasis> - Video Source Configurations list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each Video Source Configuration <emphasis role="italic">videoSourceConfiguration</emphasis> in <emphasis role="italic">videoSourceConfList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ProfileToken = <emphasis role="italic">profileToken</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Name skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Configuration[0].Type = VideoSource
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Configuration[0].Token = <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">s</emphasis> - Subscription reference
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">profileToken</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Type[0] := VideoSource
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Profiles list =: <emphasis role="italic">profileList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis>[0].@token != <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis>[0].Configurations.VideoSource.@token != <emphasis role="italic">videoSourceConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If DUT supports Video
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ConfigurationToken skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  ProfileToken = <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with compatible video encoder configurations in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Configurations list =: <emphasis role="italic">videoEncoderConfigurationList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">videoEncoderConfigurationList</emphasis>.Configurations is skipped or empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Set <emphasis role="italic">videoEncoderConfiguration</emphasis> := <emphasis role="italic">videoEncoderConfigurationList</emphasis>.Configurations[0].
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Name skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type := VideoEncoder
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token := <emphasis role="italic">videoEncoderConfiguration</emphasis>.@token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := VideoSource
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[1] := VideoEncoder
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].@token != <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.VideoSource.@token != <emphasis role="italic">videoSourceConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.VideoEncoder.@token != <emphasis role="italic">videoEncoderConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type := VideoEncoder
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token skipped
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := VideoSource
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[1] := VideoEncoder
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.VideoSource.@token != <emphasis role="italic">videoSourceConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations contains VideoEncoder, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <!--Analytics-->
                  <listitem>
                    <para>
                      If the DUT supports Analytics:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetAnalyticsConfigurations</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ConfigurationToken skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  ProfileToken = <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with compatible analytics configurations in <emphasis role="bold">GetAnalyticsConfigurationsResponse</emphasis> with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Configurations list =: <emphasis role="italic">analyticsConfigurationList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem xml:id="tc.MEDIA2-1-1-3.GetCompatibleAnalyticsConfigurationList" xreflabel="6.11.3">
                          <para>
                            If <emphasis role="italic">analyticsConfigurationList</emphasis>.Configurations is skipped or empty, go to the step <xref linkend="MEDIA2-1-1-3.6.34"/> .
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Set <emphasis role="italic">analyticsConfiguration</emphasis> := <emphasis role="italic">analyticsConfigurationList</emphasis>.Configurations[0].
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Name skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type := Analytics
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token := <emphasis role="italic">analyticsConfiguration</emphasis>.@token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := "VideoSource"
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[1] := "Analytics"
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].@token != <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.VideoSource.@token != <emphasis role="italic">videoSourceConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.Analytics.@token != <emphasis role="italic">analyticsConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type := Analytics
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token skipped
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := VideoSource
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[1] := Analytics
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.VideoSource.@token != <emphasis role="italic">videoSourceConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations contains Analytics, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <!--Metadata-->
                  <listitem>
                    <para>
                      If the DUT supports Metadata:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetMetadataConfigurations</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ConfigurationToken skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  ProfileToken = <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with compatible metadata configurations in <emphasis role="bold">GetMetadataConfigurationsResponse</emphasis> with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Configurations list =: <emphasis role="italic">metadataConfigurationList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">metadataConfigurationList</emphasis>.Configurations is skipped or empty, go to the step <xref linkend="MEDIA2-1-1-3.6.34"/> .
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Set <emphasis role="italic">metadataConfiguration</emphasis> := <emphasis role="italic">metadataConfigurationList</emphasis>.Configurations[0].
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken = <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Name skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type = Metadata
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token = <emphasis role="italic">metadataConfiguration</emphasis>.@token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := VideoSource
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[1] := Metadata
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].@token != <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.VideoSource.@token != <emphasis role="italic">videoSourceConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.Metadata.@token != <emphasis role="italic">metadataConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>

                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken = <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type = Metadata
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token skipped
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := VideoSource
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[1] := Metadata
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>

                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].ConfigurationsVideoSource.@token != <emphasis role="italic">videoSourceConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations contains Metadata, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>

                  <!--Remove VS-->
                  <listitem xml:id="MEDIA2-1-1-3.6.34" xreflabel="6.13">
                    <para>
                      ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ProfileToken = <emphasis role="italic">profileToken</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Configuration[0].Type = VideoSource
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Configuration[0].Token = <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">s</emphasis> - Subscription reference
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">profileToken</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Type[0] := VideoSource
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Profiles list =: <emphasis role="italic">profileList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis>[0].Configurations contains VideoSource, FAIL the test and skip other steps.
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">analyticsConfigurationList</emphasis>.Configurations was skipped or empty for each <emphasis role="italic">videoSourceConfiguration</emphasis> at step <xref linkend="tc.MEDIA2-1-1-3.GetCompatibleAnalyticsConfigurationList"/>, FAIL the test, restore DUT settings and skip other steps.
              </para>
            </listitem>
            <!--ASC and AEC-->
            <listitem>
              <para>
                If the DUT supports Audio:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves Audio Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioSourceConfigurationsList"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">audioSourceConfList</emphasis> - Audio Source Configurations list
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each Audio Source Configuration <emphasis role="italic">audioSourceConfiguration</emphasis> in <emphasis role="italic">audioSourceConfList</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>

                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken = <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Name skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type = AudioSource
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token = <emphasis role="italic">audioSourceConfiguration</emphasis>.@token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := AudioSource
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].@token != <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.AudioSource.@token != <emphasis role="italic">audioSourceConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurations</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ConfigurationToken skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  ProfileToken = <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Configurations list =: <emphasis role="italic">audioEncoderConfigurationList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">audioEncoderConfigurationList</emphasis>.Configurations is skipped or empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Set <emphasis role="italic">audioEncoderConfiguration</emphasis> := <emphasis role="italic">audioEncoderConfigurationList</emphasis>.Configurations[0].
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Name skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type := AudioEncoder
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := AudioSource
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := AudioEncoder
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].@token != <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.AudioSource.@token != <emphasis role="italic">audioSourceConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.AudioEncoder.@token != <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type := AudioEncoder
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token skipped
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := AudioSource
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[1] := AudioEncoder
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.AudioSource.@token != <emphasis role="italic">audioSourceConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations contains AudioEncoder, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken = <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type = AudioSource
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token skipped
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := AudioSource
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations contains AudioSource, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <!--AOC and ADC-->
            <listitem>
              <para>
                If the DUT supports Audio Output:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves Audio Output Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioOutputConfigurationsList"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">audioOutputConfList</emphasis> - Audio Output Configurations list
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each Audio Output Configuration <emphasis role="italic">audioOutputConfiguration</emphasis> in <emphasis role="italic">audioOutputConfList</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken = <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Name skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type = AudioOutput
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token = <emphasis role="italic">audioOutputConfiguration</emphasis>.@token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := AudioOutput
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].@token != <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.AudioOutput.@token != <emphasis role="italic">audioOutputConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurations</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ConfigurationToken skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  ProfileToken = <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Configurations list =: <emphasis role="italic">audioDecoderConfigurationList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">audioDecoderConfigurationList</emphasis>.Configurations is skipped or empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Set <emphasis role="italic">audioDecoderConfiguration</emphasis> := <emphasis role="italic">audioDecoderConfigurationList</emphasis>.Configurations[0].
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Name skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type := AudioDecoder
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token := <emphasis role="italic">audioDecoderConfiguration</emphasis>.@token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := AudioOutput
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[1] := AudioDecoder
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].@token != <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.AudioOutput.@token != <emphasis role="italic">audioOutputConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.AudioDecoder.@token != <emphasis role="italic">audioDecoderConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type := AudioDecoder
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token skipped
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := AudioOutput
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[1] := AudioDecoder
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.AudioOutput.@token != <emphasis role="italic">audioOutputConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations contains AudioDecoder, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken = <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type = AudioOutput
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token skipped
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := AudioOutput
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations contains AudioOutput, FAIL the test and skip other steps.
                          </para>
                        </listitem>


                      </orderedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <!--restore and unsuscribe-->
            <listitem>
              <para>
                If <emphasis role="italic">newProfileFlag</emphasis> = true, do the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="3.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">DeleteProfile</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">profileToken</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">DeleteProfileResponse</emphasis> message.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">profileToken</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Type skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT returns <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoProfile</emphasis> SOAP 1.2 fault.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If subscription was created at step <xref linkend="MEDIA2-1-1-3.CPPS"/>, ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores DUT configuration if requered.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">DeleteProfileResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAnalyticsConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send the <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoConfig</emphasis> SOAP 1.2 fault message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See Annex in [ONVIF Base Test] for Invalid SOAP 1.2 fault message definition.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
        </para>
      </section>
      <!--MEDIA2-1-1-4-->
      <section xml:id="tc.MEDIA2-1-1-4">
        <title>GET PROFILES</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-1-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetProfiles (Media2 Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of the DUT for GetProfiles with different Type parameters.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <!--Type = All-->
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[0] =: All
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">profileList1</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <!--Type skipped-->
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">profileList2</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If amount of profiles in <emphasis role="italic">profileList2</emphasis> is not equal to amount of profiles in <emphasis role="italic">profileList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList2</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList1</emphasis> does not contain profile with token equals to <emphasis role="italic">profile</emphasis>.token, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profile</emphasis> contains not empty Configurations element, FAIL the test and skip other steps.
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <!--Type = VideoSource-->
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[0] =: VideoSource
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">profileList3</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If amount of profiles in <emphasis role="italic">profileList3</emphasis> is not equal to amount of profiles in <emphasis role="italic">profileList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList3</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profile</emphasis> contains at least one configuration in Configurations element differs from VideoSource, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If amount of VideoSource elements in <emphasis role="italic">profile</emphasis> is not equal to amount of VideoSource elements
                      in <emphasis role="italic">profileList1</emphasis>[0], where <emphasis role="italic">profileList1</emphasis>[0] is profile with token equals to <emphasis role="italic">profile</emphasis>.token, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="tc.MEDIA2-1-1-4.15.3">
                      If <emphasis role="italic">profile</emphasis>.Configurations.VideoSource element is not equal to <emphasis role="italic">profileList1</emphasis>[0].Configurations.VideoSource element,
                      where <emphasis role="italic">profileList1</emphasis>[0] is profile with token equals to <emphasis role="italic">profile</emphasis>.token, FAIL the test and skip other steps.
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <!--Type = Analytics-->
            <listitem>
              <para>
                If Analytics feature is supported:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Type[0] =: Analytics
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Profiles list =: <emphasis role="italic">profileList4</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList4</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If amount of profiles in <emphasis role="italic">profileList4</emphasis> is not equal to amount of profiles in <emphasis role="italic">profileList1</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList4</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="2.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profile</emphasis> contains at least one configuration in Configurations element differs from Analytics, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If amount of Analytics elements in <emphasis role="italic">profile</emphasis> is not equal to amount of Analytics elements
                            in <emphasis role="italic">profileList1</emphasis>[0], where <emphasis role="italic">profileList1</emphasis>[0] is profile with token equals to <emphasis role="italic">profile</emphasis>.token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para xml:id="tc.MEDIA2-1-1-4.CheckAnalyticsInProfile" xreflabel="16.5.3">
                            If <emphasis role="italic">profile</emphasis>.Configurations.Analytics element is not equal to <emphasis role="italic">profileList1</emphasis>[0].Configurations.Analytics element,
                            where <emphasis role="italic">profileList1</emphasis>[0] is profile with token equals to <emphasis role="italic">profile</emphasis>.token, FAIL the test and skip other steps.
                          </para>
                        </listitem>


                      </orderedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <!--Type = Metadata-->
            <listitem>
              <para>
                If Metadata feature is supported:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Type[0] =: Metadata
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Profiles list =: <emphasis role="italic">profileList5</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList5</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If amount of profiles in <emphasis role="italic">profileList5</emphasis> is not equal to amount of profiles in <emphasis role="italic">profileList1</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList5</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="2.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profile</emphasis> contains at least one configuration in Configurations element differs from Metadata, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If amount of Metadata elements in <emphasis role="italic">profile</emphasis> is not equal to amount of Metadata elements
                            in <emphasis role="italic">profileList1</emphasis>[0], where <emphasis role="italic">profileList1</emphasis>[0] is profile with token equals to <emphasis role="italic">profile</emphasis>.token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para xml:id="tc.MEDIA2-1-1-4.CheckMetadataInProfile" xreflabel="16.5.3">
                            If <emphasis role="italic">profile</emphasis>.Configurations.Metadata element is not equal to <emphasis role="italic">profileList1</emphasis>[0].Configurations.Metadata element,
                            where <emphasis role="italic">profileList1</emphasis>[0] is profile with token equals to <emphasis role="italic">profile</emphasis>.token, FAIL the test and skip other steps.
                          </para>
                        </listitem>


                      </orderedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>

            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <link linkend="tc.MEDIA2-1-1-4.15.3">15.3</link>:
          <itemizedlist>
            <listitem>
              <para>
                SourceToken
              </para>
            </listitem>
            <listitem>
              <para>
                Name
              </para>
            </listitem>
            <listitem>
              <para>
                Bounds.x
              </para>
            </listitem>
            <listitem>
              <para>
                Bounds.y
              </para>
            </listitem>
            <listitem>
              <para>
                Bounds.width
              </para>
            </listitem>
            <listitem>
              <para>
                Bounds.height
              </para>
            </listitem>
            <listitem>
              <para>
                Extension.Rotate
              </para>
            </listitem>
            <listitem>
              <para>
                Extension.Rotate.Mode
              </para>
            </listitem>
            <listitem>
              <para>
                Extension.Rotate.Degree
              </para>
            </listitem>
            <listitem>
              <para>
                Extension.Extension.LensDescription list (XFactor will be used as a key)
              </para>
            </listitem>
            <listitem>
              <para>
                Extension.Extension.LensDescription.FocalLength
              </para>
            </listitem>
            <listitem>
              <para>
                Extension.Extension.LensDescription.Offset.x
              </para>
            </listitem>
            <listitem>
              <para>
                Extension.Extension.LensDescription.Offset.y
              </para>
            </listitem>
            <listitem>
              <para>
                Extension.Extension.LensDescription.Projection list (Angle and Radius will be used as key)
              </para>
            </listitem>
            <listitem>
              <para>
                Extension.Extension.LensDescription.Projection.Transmittance
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.MEDIA2-1-1-4.CheckAnalyticsInProfile"/>:
          <itemizedlist>
            <listitem>
              <para>
                Name
              </para>
            </listitem>
            <listitem>
              <para>
                AnalyticsEngineConfiguration.AnalyticsModule list (Type and Name will be used as key. Parameters item will not be compared).
              </para>
            </listitem>
            <listitem>
              <para>
                AnalyticsEngineConfiguration.RuleEngineConfiguration list (Type and Name will be used as key. Parameters item will not be compared).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.MEDIA2-1-1-4.CheckMetadataInProfile"/>:
          <itemizedlist>
            <listitem>
              <para>
                Name
              </para>
            </listitem>
            <listitem>
              <para>
                CompressionType
              </para>
            </listitem>
            <listitem>
              <para>
                GeoLocation
              </para>
            </listitem>
            <listitem>
              <para>
                PTZStatus.Status
              </para>
            </listitem>
            <listitem>
              <para>
                PTZStatus.Position
              </para>
            </listitem>
            <listitem>
              <para>
                Events.Filter (only field presence will be compared)
              </para>
            </listitem>
            <listitem>
              <para>
                Events.SubscriptionPolicy (only field presence will be compared)
              </para>
            </listitem>
            <listitem>
              <para>
                Analytics
              </para>
            </listitem>
            <listitem>
              <para>
                AnalyticsEngineConfiguration.AnalyticsModule list (Type and Name will be used as key. Parameters item will not be compared).
              </para>
            </listitem>


          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-1-1-5-->
      <section xml:id="tc.MEDIA2-1-1-5">
        <title>CREATE MEDIA PROFILE WITH CONFIGURATIONS</title>

        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-1-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Get media profiles, Create media profile.
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles, CreateProfile
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the DUT can create media profile with video source configuration parameter, audio source configuration parameter and audio output configuration parameter.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                <!--<annotation>
									<para>Currently this annex is inline, also see comments in annex</para>
								</annotation>-->Subscribtion
                ONVIF Client deletes Media Profile if Maximum Number of Media Profiles is reached by following the procedure mentioned in <xref linkend="Annex_HelperDeleteMediaProfileWhenMaxProfiles"/>.
              </para>
            </listitem>
            <!--<listitem>
              <para>
                TODO: uncomment after new fwture is ready in the scope of #1867
                If Media2 Video Source is supported
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>-->
            <listitem>
              <para>
                ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">videoSourceConfCompleteList</emphasis> - Video Source Configurations list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreateProfile</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Name := "testMedia"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Configuration[0].Type := VideoSource
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Configuration[0].Token = <emphasis role="italic">videoSourceConfCompleteList</emphasis>[0].@token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreateProfileResponse</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">profileToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">profileToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[0] := All
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">profileList</emphasis>[0].@token != <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">profileList</emphasis>[0].Configurations.VideoSource.@token != <emphasis role="italic">videoSourceConfCompleteList</emphasis>[0].@token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes created profile by following the procedure mentioned in <xref linkend="Annex_HelperDeleteMediaProfile"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">profileToken</emphasis> - Media profile token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <!--</orderedlist>     
             </para>
               </listitem>-->
            <listitem>
              <para>
                If Media2 Audio is supported
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves Audio Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioSourceConfigurationsList"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">audioSourceConfCompleteList</emphasis> - Audio Source Configurations list
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">CreateProfile</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Name := "testMedia"
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Configuration[1].Type := AudioSource
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Configuration[1].Token = <emphasis role="italic">audioSourceConfCompleteList</emphasis>[0].@token
                          </para>
                        </listitem>



                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">CreateProfileResponse</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token =: <emphasis role="italic">profileToken</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">profileToken</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Type[0] := All
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Profiles list =: <emphasis role="italic">profileList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis>[0].@token != <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis>[0].Configurations.AudioSource.@token != <emphasis role="italic">audioSourceConfCompleteList</emphasis>[0].@token, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client deletes created profile by following the procedure mentioned in <xref linkend="Annex_HelperDeleteMediaProfile"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">profileToken</emphasis> - Media profile token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                If Media2 Audio Outputs is supported
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves Audio Output Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioOutputConfigurationsList"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">audioOutputConfCompleteList</emphasis> - Audio Output Configurations list
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">CreateProfile</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Name := "testMedia"
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Configuration[0].Type := AudioOutput
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Configuration[0].Token = <emphasis role="italic">audioOutputConfCompleteList</emphasis>[0].@token
                          </para>
                        </listitem>




                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">CreateProfileResponse</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token =: <emphasis role="italic">profileToken</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">profileToken</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Type[0] := All
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Profiles list =: <emphasis role="italic">profileList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis>[0].@token != <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis>[0].Configurations.AudioOutput.@token != <emphasis role="italic">audioOutputConfCompleteList</emphasis>[0].@token, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client deletes created profile by following the procedure mentioned in <xref linkend="Annex_HelperDeleteMediaProfile"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">profileToken</emphasis> - Media profile token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">CreateProfileResponse</emphasis> message.
              </para>
            </listitem>

          </itemizedlist>
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
        </para>
      </section>
      <!--MEDIA2-1-1-6-->
      <section xml:id="tc.MEDIA2-1-1-6">
        <title>REMOVE ALL CONFIGURATIONS FROM MEDIA PROFILE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-1-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Remove one or more configurations from a profile (Media 2 Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> RemoveConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the removal of all configurations from Media Profile with RemoveConfiguration command and Type = All.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[0] := All
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> list repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem xml:id="tc.MEDIA2-1-1-6.5.1">
                    <para>
                      ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Configuration[0].Type := All
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Configuration[0].Token skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">profile</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Type[0] := All
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Profiles list =: <emphasis role="italic">profileList1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList1</emphasis>[0].Configurations is not empty, FAIL the test and and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client restores configurations of Media Profile with @token = <emphasis role="italic">profile</emphasis>.@token.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message(s).
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message(s).
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-1-1-7-->
      <section xml:id="tc.MEDIA2-1-1-7">
        <title>FIXED MEDIA PROFILE CONFIGURATION</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-1-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Media profiles (Media 2 Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> RemoveConfiguration, AddConfiguration, GetProfiles.
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the removal of all configurations from fixed Media Profile. To verify adding of configurations to fixed Media Profile.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT.
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[0] := All
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> list with <emphasis role="italic">@fixed</emphasis> = true repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem xml:id="tc.MEDIA2-1-1-7.5.1">
                    <para>
                      ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Configuration[0].Type := All
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Configuration[0].Token skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">profile</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Type[0] := All
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Profiles list =: <emphasis role="italic">profileList1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList1</emphasis>[0].Configurations is not empty, FAIL the test and and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request to restore configurations of Media Profile <emphasis role="italic">profile</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            For each configuration item <emphasis role="italic">configuration</emphasis> in <emphasis role="italic">profile</emphasis>.Configurations list:
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Configuration[0].Type := <emphasis role="italic">configuration</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token := <emphasis role="italic">configuration</emphasis>.@token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">profile</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Type[0] := All
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Profiles list =: <emphasis role="italic">profileList2</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If list of configurations in <emphasis role="italic">profileList2</emphasis>[0].Configurations is not equal to list of configurations in <emphasis role="italic">profileList</emphasis>[0].Configurations, were <emphasis role="italic">profileList</emphasis>[0] is profile with token = <emphasis role="italic">profile</emphasis>.@token, FAIL the test and and skip other steps.
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message(s).
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message(s).
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message(s).
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-1-1-8-->
      <section xml:id="tc.MEDIA2-1-1-8">
        <title>READY TO USE MEDIA PROFILE FOR METADATA STREAMING</title>
        <para >
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-1-1-8
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Metadata streaming (Profile M Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that DUT has a ready-to-use Media Service 2.0 Profile for streaming metadata.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Profile M scope. Metadata feature is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[0] := All
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">videoSourceConfList</emphasis> - Video Source Configurations list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each video source configuration <emphasis role="italic">videoSourceConf</emphasis> in <emphasis role="italic">videoSourceConfList</emphasis>
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="4.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis> does not contain at least one Media Profile with Configurations.VideoSource.token = <emphasis role="italic">videoSourceConf</emphasis>.token and with Configurations.Metadata, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-1-1-9-->
      <section xml:id="tc.MEDIA2-1-1-9">
        <title>READY TO USE MEDIA PROFILE FOR VIDEO STREAMING (PROFILE M)</title>
        <para >
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-1-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Video streaming (Profile M Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that DUT has a ready-to-use Media Service 2.0 Profile for streaming video.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Profile M scope. Video feature is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[0] := All
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">videoSourceConfList</emphasis> - Video Source Configurations list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each video source configuration <emphasis role="italic">videoSourceConf</emphasis> in <emphasis role="italic">videoSourceConfList</emphasis>
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="4.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profileList</emphasis> does not contain at least one Media Profile with Configurations.VideoSource.token = <emphasis role="italic">videoSourceConf</emphasis>.token and with Configurations.VideoEncoder, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Video Configuration-->
    <section xml:id="tc.media_configuration.video_configuration">
      <title>Video Configuration</title>
      <!--Video Source Configuration-->
      <section xml:id="tc.media_configuration.video_configuration.vsc">
        <title>Video Source Configuration</title>
        <!--MEDIA2-2-2-1-->
        <section xml:id="tc.MEDIA2-2-2-1">
          <title>GET VIDEO SOURCE CONFIGURATION OPTIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-2-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configuration <emphasis role="italic">options</emphasis>, Video source configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetVideoSourceConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving Video Source Configuration <emphasis role="italic">options</emphasis> for specified Video Source Configuration, for specified Profile, generic for the Device.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Media2 Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap</emphasis> - Media2 Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetVideoSourceConfigurationOptionsResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options =: <emphasis role="italic">options</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">options</emphasis>.BoundsRange.XRange.Min &gt; <emphasis role="italic">options</emphasis>.BoundsRange.XRange.Max, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">options</emphasis>.BoundsRange.YRange.Min &gt; <emphasis role="italic">options</emphasis>.BoundsRange.YRange.Max, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">options</emphasis>.BoundsRange.WidthRange.Min &gt; <emphasis role="italic">options</emphasis>.BoundsRange.WidthRange.Max, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">options</emphasis>.BoundsRange.HeightRange.Min &gt; <emphasis role="italic">options</emphasis>.BoundsRange.HeightRange.Max, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">cap</emphasis>.@Rotation = true:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        If <emphasis role="italic">options</emphasis>.Extension.Rotate is skipped, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">videoSourceConfList</emphasis> - Video Source Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken := <emphasis role="italic">videoSourceConfList</emphasis>[0].@token
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetVideoSourceConfigurationOptionsResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options =: <emphasis role="italic">options</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2-2-2-1.14">
                <para>
                  ONVIF Client retrieves Media Profile, which contains Video Source Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileWithVideoSource"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Video Source Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetVideoSourceConfigurationOptionsResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options =: <emphasis role="italic">options</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If Media Profile <emphasis role="italic">profile</emphasis> was changed at step <link linkend="tc.MEDIA2-2-2-1.14">14</link>, ONVIF Client restores Media Profile.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoSourceConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-2-2-2-->
        <section xml:id="tc.MEDIA2-2-2-2">
          <title>GET VIDEO SOURCE CONFIGURATIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-2-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Video source configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetVideoSourceConfigurations
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving complete Video Source Configuration List, Video Source Configuration by Configuration token and compatible Video Source Configuration by Profile token.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Configurations list =: <emphasis role="italic">videoSourceConfCompleteList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">videoSourceConfCompleteList</emphasis> is empty, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">videoSourceConfCompleteList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  For each <emphasis role="italic">videoSourceConfiguration</emphasis> in <emphasis role="italic">videoSourceConfCompleteList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">videoSourceConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfList</emphasis> is empty, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfList</emphasis> contains more than one item, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfList</emphasis> does not contain item with @token = <emphasis role="italic">videoSourceConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type[0] := VideoSource
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken skipped
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">videoSourceConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfCompleteList</emphasis> does not contain at least one item with @token from <emphasis role="italic">videoSourceConfList</emphasis>, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile</emphasis>.Configurations contains VideoSource:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              If <emphasis role="italic">videoSourceConfList</emphasis> does not contain item with @token = <emphasis role="italic">profile</emphasis>.Configurations.VideoSource.@token, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-2-2-3-->
        <section xml:id="tc.MEDIA2-2-2-3">
          <title>VIDEO SOURCE CONFIGURATIONS AND VIDEO SOURCE CONFIGURATION OPTIONS CONSISTENCY</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-2-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get configuration <emphasis role="italic">options</emphasis>, Video source configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles, GetVideoSourceConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify all Video Source Configurations are consistent with Video Source Configuration Options.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Media2 Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap</emphasis> - Media2 Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">videoSourceConfList</emphasis> - Video Source Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Video Source Configuration <emphasis role="italic">videoSourceConfiguration</emphasis> in <emphasis role="italic">videoSourceConfList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetVideoSourceConfigurationOptionsResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options =: <emphasis role="italic">options</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfiguration</emphasis>.SourceToken is not in <emphasis role="italic">options</emphasis>.VideoSourceTokensAvailable list, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfiguration</emphasis>.Bounds.x &lt; <emphasis role="italic">options</emphasis>.BoundsRange.XRange.Min, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfiguration</emphasis>.Bounds.x &gt; <emphasis role="italic">options</emphasis>.BoundsRange.XRange.Max, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfiguration</emphasis>.Bounds.y &lt; <emphasis role="italic">options</emphasis>.BoundsRange.YRange.Min, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfiguration</emphasis>.Bounds.y &gt; <emphasis role="italic">options</emphasis>.BoundsRange.YRange.Max, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfiguration</emphasis>.Bounds.width &lt; <emphasis role="italic">options</emphasis>.BoundsRange.WidthRange.Min, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfiguration</emphasis>.Bounds.width &gt; <emphasis role="italic">options</emphasis>.BoundsRange.WidthRange.Max, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfiguration</emphasis>.Bounds.height &lt; <emphasis role="italic">options</emphasis>.BoundsRange.HeightRange.Min, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceConfiguration</emphasis>.Bounds.height &gt; <emphasis role="italic">options</emphasis>.BoundsRange.HeightRange.Max, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">cap</emphasis>.@Rotation = true:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              If <emphasis role="italic">options</emphasis>.Extension.Rotate is skipped, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If <emphasis role="italic">videoSourceConfiguration</emphasis>.Extension.Rotate is skipped, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If <emphasis role="italic">videoSourceConfiguration</emphasis>.Extension.Rotate.Mode is not in the <emphasis role="italic">options</emphasis>.Extension.Rotate.Mode list, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If <emphasis role="italic">options</emphasis>.Extension.Rotate.DegreeList specified and contains at least one Item:
                              <orderedlist numeration="arabic" inheritnum="inherit">
                                <?dbfo label-width="4.5em"?>
                                <listitem>
                                  <para>
                                    If <emphasis role="italic">videoSourceConfiguration</emphasis>.Extension.Rotate.Degree is specified and not listed in <emphasis role="italic">options</emphasis>.Extension.Rotate.DegreeList.Item list, FAIL the test and skip other steps.
                                  </para>
                                </listitem>
                              </orderedlist>
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoSourceConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-2-2-4-->
        <section xml:id="tc.MEDIA2-2-2-4">
          <title>PROFILES AND VIDEO SOURCE CONFIGURATIONS CONSISTENCY</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-2-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get media profiles, Video source configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetVideoSourceConfigurations, GetProfiles
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify all Media Profiles are consistent with Video Source Configurations.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type[0] := VideoSource
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Media Profile  <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis>, which contains Configurations.VideoSource repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">profile</emphasis>.Configurations.VideoSource.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">videoSourceConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-2-2-4.5.3">
                      <para>
                        If <emphasis role="italic">videoSourceConfList</emphasis>[0] is not equal to <emphasis role="italic">profile</emphasis>.Configurations.VideoSource, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <link linkend="tc.MEDIA2-2-2-4.5.3">5.3</link>:
            <itemizedlist>
              <listitem>
                <para>
                  SourceToken
                </para>
              </listitem>
              <listitem>
                <para>
                  Name
                </para>
              </listitem>
              <listitem>
                <para>
                  Bounds.x
                </para>
              </listitem>
              <listitem>
                <para>
                  Bounds.y
                </para>
              </listitem>
              <listitem>
                <para>
                  Bounds.width
                </para>
              </listitem>
              <listitem>
                <para>
                  Bounds.height
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Rotate
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Rotate.Mode
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Rotate.Degree
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Extension.LensDescription list (XFactor will be used as a key)
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Extension.LensDescription.FocalLength
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Extension.LensDescription.Offset.x
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Extension.LensDescription.Offset.y
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Extension.LensDescription.Projection list (Angle and Radius will be used as key)
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Extension.LensDescription.Projection.Transmittance
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-2-2-5-->
        <section xml:id="tc.MEDIA2-2-2-5">
          <title>MODIFY ALL SUPPORTED VIDEO SOURCE CONFIGURATIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-2-5
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get configuration <emphasis role="italic">options</emphasis>, Video source configuration, Modify a configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetVideoSourceConfigurationOptions, GetVideoSourceConfigurations, SetVideoSourceConfiguration
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify whether all supported Video Source Configuration Options can be set.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">videoSourceConfList</emphasis> - Video Source Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="MEDIA2-2-2-5.CPPS">
                <para>
                  If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="bold">"tns1:Media/ConfigurationChanged"</emphasis> - Notification Topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">s</emphasis> - Subscription reference
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Video Source Configuration <emphasis role="italic">videoSourceConfiguration</emphasis> in <emphasis role="italic">videoSourceConfList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetVideoSourceConfigurationOptionsResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options =: <emphasis role="italic">options</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-2-2-5.5.3">
                      <para>
                        ONVIF Client invokes <emphasis role="bold">SetVideoSourceConfiguration</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configuration.@token := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Name := "TestName1"
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.SourceToken := first value from <emphasis role="italic">options</emphasis>.VideoSourceTokensAvailable list
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Bounds.x := <emphasis role="italic">options</emphasis>.BoundsRange.XRange.Min
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Bounds.y := <emphasis role="italic">options</emphasis>.BoundsRange.YRange.Min
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Bounds.width := <emphasis role="italic">options</emphasis>.BoundsRange.WidthRange.Min
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Bounds.height := <emphasis role="italic">options</emphasis>.BoundsRange.HeightRange.Min
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If <emphasis role="italic">options</emphasis>.Extension.Rotate specified and options.Extension.Rotate.@Reboot != true:
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configuration.Extension.Rotate.Mode := first value from <emphasis role="italic">options</emphasis>.Extension.Rotate.Mode list
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If Configuration.Extension.Rotate.Mode = ON and options.Extension.Rotate.@Reboot != true:
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    If <emphasis role="italic">options</emphasis>.Extension.Rotate.DegreeList is specified and contains at least one Item:
                                    <itemizedlist>
                                      <listitem>
                                        <para>
                                          Configuration.Extension.Rotate.Degree := first value from <emphasis role="italic">options</emphasis>.Extension.Rotate.DegreeList.Item list
                                        </para>
                                      </listitem>
                                    </itemizedlist>
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    If <emphasis role="italic">options</emphasis>.Extension.Rotate.DegreeList is not specified:
                                    <itemizedlist>
                                      <listitem>
                                        <para>
                                          Configuration.Extension.Rotate.Degree := -180
                                        </para>
                                      </listitem>
                                    </itemizedlist>
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">SetVideoSourceConfigurationResponse</emphasis> message.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              in <emphasis role="italic">s</emphasis> - Subscription reference
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">videoSourceConfiguration</emphasis>.@token - Configuration token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in VideoSource - Configuration Type
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">videoSourceConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-2-2-5.5.8">
                      <para>
                        If <emphasis role="italic">videoSourceConfList</emphasis>[0] is not equal to Configuration from step <link linkend="tc.MEDIA2-2-2-5.5.3">5.3</link>, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-2-2-5.5.9">
                      <para>
                        ONVIF Client invokes <emphasis role="bold">SetVideoSourceConfiguration</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configuration.@token := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Name := "TestName2"
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.SourceToken := last value from <emphasis role="italic">options</emphasis>.VideoSourceTokensAvailable list
                            </para>
                          </listitem>



                          <listitem>
                            <para>
                              If <emphasis role="italic">options</emphasis>.BoundsRange.XRange.Min = <emphasis role="italic">options</emphasis>.BoundsRange.XRange.Max and
                              <emphasis role="italic">options</emphasis>.BoundsRange.YRange.Min = <emphasis role="italic">options</emphasis>.BoundsRange.YRange.Max and
                              <emphasis role="italic">options</emphasis>.BoundsRange.WidthRange.Min = <emphasis role="italic">options</emphasis>.BoundsRange.WidthRange.Max and
                              <emphasis role="italic">options</emphasis>.BoundsRange.HeightRange.Min = <emphasis role="italic">options</emphasis>.BoundsRange.HeightRange.Max:
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configuration.Bounds.x := <emphasis role="italic">options</emphasis>.BoundsRange.XRange.Min
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Bounds.y := <emphasis role="italic">options</emphasis>.BoundsRange.YRange.Min
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Bounds.width := <emphasis role="italic">options</emphasis>.BoundsRange.WidthRange.Min
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Bounds.height := <emphasis role="italic">options</emphasis>.BoundsRange.HeightRange.Min
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If <emphasis role="italic">options</emphasis>.BoundsRange.XRange.Min does not equal to <emphasis role="italic">options</emphasis>.BoundsRange.XRange.Max or
                              <emphasis role="italic">options</emphasis>.BoundsRange.YRange.Min does not equal to <emphasis role="italic">options</emphasis>.BoundsRange.YRange.Max or
                              <emphasis role="italic">options</emphasis>.BoundsRange.WidthRange.Min does not equal to <emphasis role="italic">options</emphasis>.BoundsRange.WidthRange.Max or
                              <emphasis role="italic">options</emphasis>.BoundsRange.HeightRange.Min does not equal to <emphasis role="italic">options</emphasis>.BoundsRange.HeightRange.Max:
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configuration.Bounds.x := (<emphasis role="italic">options</emphasis>.BoundsRange.XRange.Max + <emphasis role="italic">options</emphasis>.BoundsRange.XRange.Min - <emphasis role="italic">options</emphasis>.BoundsRange.WidthRange.Min) / 2
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Bounds.y := (<emphasis role="italic">options</emphasis>.BoundsRange.YRange.Max + <emphasis role="italic">options</emphasis>.BoundsRange.YRange.Min - <emphasis role="italic">options</emphasis>.BoundsRange.HeightRange.Min) / 2
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Bounds.width := min{<emphasis role="italic">options</emphasis>.BoundsRange.WidthRange.Max, <emphasis role="italic">options</emphasis>.BoundsRange.XRange.Max - Configuration.Bounds.x}
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Bounds.height := min{<emphasis role="italic">options</emphasis>.BoundsRange.HeightRange.Max, <emphasis role="italic">options</emphasis>.BoundsRange.YRange.Max - Configuration.Bounds.y}
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>

                          <listitem>
                            <para>
                              If <emphasis role="italic">options</emphasis>.Extension.Rotate specified and options.Extension.Rotate.@Reboot != true:
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configuration.Extension.Rotate.Mode := last value from <emphasis role="italic">options</emphasis>.Extension.Rotate.Mode list
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If Configuration.Extension.Rotate.Mode = ON and options.Extension.Rotate.@Reboot != true:
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    If <emphasis role="italic">options</emphasis>.Extension.Rotate.DegreeList is specified and contains at least one Item:
                                    <itemizedlist>
                                      <listitem>
                                        <para>
                                          Configuration.Extension.Rotate.Degree := last value from <emphasis role="italic">options</emphasis>.Extension.Rotate.DegreeList.Item list
                                        </para>
                                      </listitem>
                                    </itemizedlist>
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    If <emphasis role="italic">options</emphasis>.Extension.Rotate.DegreeList is not specified:
                                    <itemizedlist>
                                      <listitem>
                                        <para>
                                          Configuration.Extension.Rotate.Degree := 180
                                        </para>
                                      </listitem>
                                    </itemizedlist>
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">SetVideoSourceConfigurationResponse</emphasis> message.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              in <emphasis role="italic">s</emphasis> - Subscription reference
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">videoSourceConfiguration</emphasis>.@token - Configuration token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in VideoSource - Configuration Type
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">videoSourceConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-2-2-5.5.14">
                      <para>
                        If <emphasis role="italic">videoSourceConfList</emphasis>[0] is not equal to Configuration from step <link linkend="tc.MEDIA2-2-2-5.5.9">5.9</link>, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client restores settings of Video Source Configuration with @token = <emphasis role="italic">videoSourceConfiguration</emphasis>.@token.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If subscription was created at step <xref linkend="MEDIA2-2-2-5.CPPS"/>, ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">s</emphasis> - Subscription reference
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Video Source Configuration <emphasis role="italic">videoSourceConfiguration</emphasis> in <emphasis role="italic">videoSourceConfList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetVideoSourceConfigurationOptionsResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options =: <emphasis role="italic">options</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">options</emphasis>.Extension.Rotate specified and <emphasis role="italic">options</emphasis>.Extension.Rotate.@Reboot = true:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="2.5em"?>
                            <listitem xml:id="tc.MEDIA2-2-2-5.7.3.1">
                                  <para>
                                    ONVIF Client invokes <emphasis role="bold">SetVideoSourceConfiguration</emphasis> request with parameters
                                    <itemizedlist>
                                      <listitem>
                                        <para>
                                          Configuration.@token := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                                        </para>
                                      </listitem>
                                      <listitem>
                                        <para>
                                          Configuration.Name := "TestName1"
                                        </para>
                                      </listitem>
                                      <listitem>
                                        <para>
                                          Configuration.SourceToken := first value from <emphasis role="italic">options</emphasis>.VideoSourceTokensAvailable list
                                        </para>
                                      </listitem>
                                      <listitem>
                                        <para>
                                          Configuration.Bounds.x := <emphasis role="italic">options</emphasis>.BoundsRange.XRange.Min
                                        </para>
                                      </listitem>
                                      <listitem>
                                        <para>
                                          Configuration.Bounds.y := <emphasis role="italic">options</emphasis>.BoundsRange.YRange.Min
                                        </para>
                                      </listitem>
                                      <listitem>
                                        <para>
                                          Configuration.Bounds.width := <emphasis role="italic">options</emphasis>.BoundsRange.WidthRange.Min
                                        </para>
                                      </listitem>
                                      <listitem>
                                        <para>
                                          Configuration.Bounds.height := <emphasis role="italic">options</emphasis>.BoundsRange.HeightRange.Min
                                        </para>
                                      </listitem>
                                      <listitem>
                                        <para>
                                          Configuration.Extension.Rotate.Mode := first value from <emphasis role="italic">options</emphasis>.Extension.Rotate.Mode list
                                        </para>
                                      </listitem>
                                      <listitem>
                                        <para>
                                          If Configuration.Extension.Rotate.Mode = ON and options.Extension.Rotate.@Reboot = true:
                                          <itemizedlist>
                                            <listitem>
                                              <para>
                                                If <emphasis role="italic">options</emphasis>.Extension.Rotate.DegreeList is specified and contains at least one Item:
                                                <itemizedlist>
                                                  <listitem>
                                                    <para>
                                                      Configuration.Extension.Rotate.Degree := first value from <emphasis role="italic">options</emphasis>.Extension.Rotate.DegreeList.Item list
                                                    </para>
                                                  </listitem>
                                                </itemizedlist>
                                              </para>
                                            </listitem>
                                            <listitem>
                                              <para>
                                                If <emphasis role="italic">options</emphasis>.Extension.Rotate.DegreeList is not specified:
                                                <itemizedlist>
                                                  <listitem>
                                                    <para>
                                                      Configuration.Extension.Rotate.Degree := -180
                                                    </para>
                                                  </listitem>
                                                </itemizedlist>
                                              </para>
                                            </listitem>
                                          </itemizedlist>
                                        </para>
                                      </listitem>
                                    </itemizedlist>
                                  </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client waits for the Device reboot by following the procedure mentioned in <xref linkend="Annex_HelperWaitingReboot"/>.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                DUT responds with <emphasis role="bold">SetVideoSourceConfigurationResponse</emphasis> message.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ConfigurationToken := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      ProfileToken skipped
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      Configurations list =: <emphasis role="italic">videoSourceConfList</emphasis>
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem xml:id="tc.MEDIA2-2-2-5.7.3.6">
                              <para>
                                If <emphasis role="italic">videoSourceConfList</emphasis>[0] is not equal to Configuration from step <link linkend="tc.MEDIA2-2-2-5.7.3.1">7.3.1</link>, FAIL the test and skip other steps.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client restores settings of Video Source Configuration with @token = <emphasis role="italic">videoSourceConfiguration</emphasis>.@token.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client waits for the Device reboot by following the procedure mentioned in <xref linkend="Annex_HelperWaitingReboot"/>.
                              </para>
                            </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">SetVideoSourceConfigurationResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoSourceConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <link linkend="tc.MEDIA2-2-2-5.5.8">5.8</link>  and <link linkend="tc.MEDIA2-2-2-5.5.14">5.14</link>:
            <itemizedlist>
              <listitem>
                <para>
                  SourceToken
                </para>
              </listitem>
              <listitem>
                <para>
                  Name
                </para>
              </listitem>
              <listitem>
                <para>
                  Bounds.x
                </para>
              </listitem>
              <listitem>
                <para>
                  Bounds.y
                </para>
              </listitem>
              <listitem>
                <para>
                  Bounds.width
                </para>
              </listitem>
              <listitem>
                <para>
                  Bounds.height
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Rotate
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Rotate.Mode
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Rotate.Degree
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Extension.LensDescription list (XFactor will be used as a key)
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Extension.LensDescription.FocalLength
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Extension.LensDescription.Offset.x
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Extension.LensDescription.Offset.y
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Extension.LensDescription.Projection list (Angle and Radius will be used as key)
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Extension.LensDescription.Projection.Transmittance
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <link linkend="tc.MEDIA2-2-2-5.7.3.6">7.3.6</link>:
            <itemizedlist>
              <listitem>
                <para>
                  Extension.Rotate
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Rotate.Mode
                </para>
              </listitem>
              <listitem>
                <para>
                  Extension.Rotate.Degree
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-2-2-6-->
        <section xml:id="tc.MEDIA2-2-2-6">
          <title>GET VIDEO SOURCE CONFIGURATIONS – INVALID TOKEN</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-2-6
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Video source configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetVideoSourceConfigurations
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify SOAP 1.2 Fault receiving in case of GetVideoSourceConfigurations with invalid token.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">videoSourceConfList</emphasis> - Video Source Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken := other than listed in <emphasis role="italic">videoSourceConfList</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT returns <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoConfig</emphasis> SOAP 1.2 fault.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  The DUT did not send the <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoConfig</emphasis> SOAP 1.2 fault message
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-2-2-7-->
        <section xml:id="tc.MEDIA2-2-2-7">
          <title>PROFILES AND VIDEO SOURCE CONFIGURATION OPTIONS CONSISTENCY</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-2-7
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> None.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles, GetVideoSourceConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To check that GetProfiles command and GetVideoSourceConfigurationOptions command are consistent.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters:
                  <itemizedlist>
                    <listitem>
                      <para>
                        Type = VideoSource
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters:
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles List =: <emphasis role="italic">profilesList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>

              <listitem>
                <para>
                  For each media profile <emphasis role="italic">profile1</emphasis> from <emphasis role="bold">profilesList</emphasis> containing Configurations.VideoSource element do the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>

                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurationOptions</emphasis>request with parameters:
                        <itemizedlist>
                          <listitem>
                            <para>

                              ConfigurationToken=<emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken =: <emphasis role="italic">profile1</emphasis>.@token
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationOptionsResponse</emphasis> message with parameters:
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options  =: <emphasis role="italic">configurationOptions</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.SourceToken is not equal to one of <emphasis role="italic">configurationOptions</emphasis>.VideoSourceTokensAvailable items, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Bounds.@x &lt; <emphasis role="italic">configurationOptions</emphasis>.BoundsRange.XRange.Min, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Bounds.@x &gt; <emphasis role="italic">configurationOptions</emphasis>.BoundsRange.XRange.Max, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Bounds.@y &lt; <emphasis role="italic">configurationOptions</emphasis>.BoundsRange.YRange.Min, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Bounds.@y &gt; <emphasis role="italic">configurationOptions</emphasis>.BoundsRange.YRange.Max, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Bounds.@width &lt; <emphasis role="italic">configurationOptions</emphasis>.BoundsRange.WidthRange.Min, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Bounds.@width &gt; <emphasis role="italic">configurationOptions</emphasis>.BoundsRange.WidthRange.Max, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Bounds.@height &lt; <emphasis role="italic">configurationOptions</emphasis>.BoundsRange.HeightRange.Min, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Bounds.@height &gt; <emphasis role="italic">configurationOptions</emphasis>.BoundsRange.HeightRange.Max, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource contains Extension element:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Extension contains Rotate element:
                              <orderedlist numeration="arabic" inheritnum="inherit">
                                <?dbfo label-width="4.5em"?>
                                <listitem>
                                  <para>
                                    If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Extension.Rotate.Mode is not equal to one of <emphasis role="italic">configurationOptions</emphasis>.Extension.Rotate.Mode items, FAIL the test and skip other steps.
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Extension.Rotate contains Degree element and <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Extension.Rotate.Degree is not equal to one of <emphasis role="italic">configurationOptions</emphasis>.Extension.Rotate.DegreeList.Items items, FAIL the test and skip other steps.
                                  </para>
                                </listitem>
                              </orderedlist>
                            </para>
                          </listitem>

                          <listitem>
                            <para>
                              If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Extension contains Extension element:
                              <orderedlist numeration="arabic" inheritnum="inherit">
                                <?dbfo label-width="4.5em"?>
                                <listitem>
                                  <para>
                                    If <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Extension.Extension contains SceneOrientation element and <emphasis role="italic">profile1</emphasis>.Configurations.VideoSource.Extension.Extension.SceneOrientation.Mode is not equal to one of <emphasis role="italic">configurationOptions</emphasis>.Extension.Extension. SceneOrientationMode items, FAIL the test and skip other steps.
                                  </para>
                                </listitem>
                              </orderedlist>
                            </para>
                          </listitem>

                        </orderedlist>
                      </para>
                    </listitem>

                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoSourceConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
      </section>
      <!--Video Encoder Configuration-->
      <section xml:id="tc.media_configuration.video_configuration.vec">
        <title>Video Encoder Configuration</title>
        <!--MEDIA2-2-3-1-->
        <section xml:id="tc.MEDIA2-2-3-1">
          <title>VIDEO ENCODER CONFIGURATION</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-3-1
          </para>
          <para>
            <emphasis role="bold">Specification coverage:</emphasis> Get media profiles (Media2 Service), Get configurations (Media2 Service)
          </para>
          <para>
            <emphasis role="bold">Feature under test:</emphasis> GetProfiles, GetVideoEncoderConfigurations
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT sends All Video Encoder Configurations, specific Video Encoder Configuration, and Video Encoder Configurations compatible with specific profile.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Video feature is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken - skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken - skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with all video encoder configurations in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Configurations list =: <emphasis role="italic">videoEncoderConfCompleteList1</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">videoEncoderConfCompleteList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token - skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type list - skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList1</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Media Profile <emphasis role="italic">profile1</emphasis> in <emphasis role="italic">profileList1</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken - skipped
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken := <emphasis role="italic">profile1</emphasis>.@token
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with compatible video encoder configurations in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">videoEncoderConfList1</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoEncoderConfList1</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile1</emphasis>.Configurations contains VideoEncoder:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              If <emphasis role="italic">videoEncoderConfList1</emphasis> does not contain item with @token = <emphasis role="italic">profile1</emphasis>.Configurations.VideoEncoder.@token, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        For each Video Encoder Configuration <emphasis role="italic">videoEncoderConf1</emphasis> in <emphasis role="italic">videoEncoderConfList1</emphasis> repeat the following steps:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              If <emphasis role="italic">videoEncoderConfCompleteList1</emphasis> does not contain item with @token = <emphasis role="italic">videoEncoderConf1</emphasis>.@token, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>

              <listitem>
                <para>
                  For each Video Encoder Configuration <emphasis role="italic">configuration1</emphasis> in <emphasis role="italic">videoEncoderConfCompleteList1</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">configuration1</emphasis>.@token
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with requested video encoder configuration in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">videoEncoderConfList2</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoEncoderConfList2</emphasis> does not contain only one item with the same @token, FAIL the test and skip other steps.
                      </para>
                    </listitem>

                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-2-3-2-->
        <section xml:id="tc.MEDIA2-2-3-2">
          <title>VIDEO ENCODER CONFIGURATIONS AND VIDEO ENCODER CONFIGURATION OPTIONS CONSISTENCY</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-3-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> None.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetVideoEncoderConfigurations, GetVideoEncoderConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify all video encoder configurations are consistent with video encoder configurations options.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Video feature is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> to get all video encoder configurations from DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends the list of video encoder configurations.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client verifies the list of video encoder configurations sent by DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Video Encoder Configuration in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis>, ONVIF Client saves this configuration in <emphasis role="italic">Configuration1</emphasis> and runs the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> with <emphasis role="italic">Configuration1</emphasis> token as input argument.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT sends <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> with the list of video encoder configuration options available for <emphasis role="italic">Configuration1</emphasis>.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client verifies that <emphasis role="italic">Configuration1</emphasis> parameters are consistent with at least one option from <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis>. See details of fields mapping in <xref linkend="Annex_HelperVECOvsVEC"/> VideoEncoderConfigurationOptions and VideoEncoderConfiguration mapping.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT failed consistency check according to <xref linkend="Annex_HelperVECOvsVEC"/>.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-2-3-3-->
        <section xml:id="tc.MEDIA2-2-3-3">
          <title>PROFILES AND VIDEO ENCODER CONFIGURATION OPTIONS CONSISTENCY</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-3-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> None.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles, GetVideoEncoderConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To check that <emphasis role="bold">GetProfiles</emphasis> command and GetVideoEncoderConfigurationOptions command are consistent.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Video feature is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> with Type=VideoEncoder as input parameter.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends the list of existing media profiles in <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  For each media profile from <emphasis role="bold">GetProfilesResponse</emphasis>, ONVIF Client saves this profile in <emphasis role="italic">Profile1</emphasis> variable, saves <emphasis role="italic">Profile1</emphasis> Configurations VideoEncoder configuration in <emphasis role="italic">Configuration1</emphasis> variable and runs the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> with ConfigurationToken=<emphasis role="italic">Configuration1</emphasis> and ProfileToken=<emphasis role="italic">Profile1</emphasis> token as input arguments.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT sends <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> with the list of configuration <emphasis role="italic">options</emphasis>.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client verifies that <emphasis role="italic">Configuration1</emphasis> parameters are consistent with at least one option from <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis>. See details of fields mapping in <xref linkend="Annex_HelperVECOvsVEC"/> VideoEncoderConfigurationOptions and VideoEncoderConfiguration mapping. ONVIF Client saves this option in <emphasis role="italic">Option1</emphasis> variable.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT failed consistency check according to <xref linkend="Annex_HelperVECOvsVEC"/>
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-2-3-4-->
        <section xml:id="tc.MEDIA2-2-3-4">
          <title>SET ALL SUPPORTED VIDEO ENCODER CONFIGURATIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-3-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get configuration <emphasis role="italic">options</emphasis>, Video encoder configuration, Modify a configuration
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetVideoEncoderConfigurationOptions, GetVideoEncoderConfigurations, SetVideoEncoderConfiguration
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify whether all supported <emphasis role="italic">options</emphasis> can be set.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Event Service was received from the DUT. Video feature is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Video Encoder Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoEncoderConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">videoEncoderConfList</emphasis> - Video Encoder Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="MEDIA2-2-3-4.CPPS">
                <para>
                  If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="bold">"tns1:Media/ConfigurationChanged"</emphasis> - Notification Topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">s</emphasis> - Subscription reference
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Video Encoder Configuration <emphasis role="italic">videoEncoderConfiguration</emphasis> in <emphasis role="italic">videoEncoderConfList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">videoEncoderConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options list =: <emphasis role="italic">optionsList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        For each <emphasis role="italic">options</emphasis> in <emphasis role="italic">optionsList</emphasis> repeat the following steps:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem xml:id="tc.MEDIA2-2-3-4.5.3.1" xreflabel="5.3.1">
                            <para>
                              ONVIF Client invokes <emphasis role="bold">SetVideoEncoderConfiguration</emphasis> request with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configuration.@token := <emphasis role="italic">videoEncoderConfiguration</emphasis>.@token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Name := "TestName1"
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.@GovLength := if <emphasis role="italic">options</emphasis>.GovLengthRange is specified, set minimum value from <emphasis role="italic">options</emphasis>.GovLengthRange list, otherwise, skip the parameter
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.@Profile := if <emphasis role="italic">videoEncoderConfiguration</emphasis>.@Profile is specified and <emphasis role="italic">options</emphasis>.@ProfilesSupported is specified and contains at least one item, <emphasis role="italic">options</emphasis>.@ProfilesSupported[0], otherwise, skip the parameter
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Encoding := <emphasis role="italic">options</emphasis>.Encoding
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Resolution := <emphasis role="italic">options</emphasis>.ResolutionsAvailable[0]
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.RateControl.@ConstantBitRate skipped
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.RateControl.@FrameRateLimit := minimum value from <emphasis role="italic">options</emphasis>.FrameRatesSupported list
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.RateControl.@BitrateLimit := <emphasis role="italic">options</emphasis>.BitrateRange.Min
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Multicast := <emphasis role="italic">videoEncoderConfiguration</emphasis>.Multicast
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Quality := <emphasis role="italic">options</emphasis>.QualityRange.Min
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              DUT responds with <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">s</emphasis> - Subscription reference
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">videoEncoderConfiguration</emphasis>.@token - Configuration token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in VideoEncoder - Configuration Type
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    ConfigurationToken := <emphasis role="italic">videoEncoderConfiguration</emphasis>.@token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    ProfileToken skipped
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              The DUT responds with requested video encoder configuration in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configurations list =: <emphasis role="italic">videoEncoderConfList</emphasis>
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem xml:id="tc.MEDIA2-2-3-4.5.3.6" xreflabel="5.3.6">
                            <para>
                              If <emphasis role="italic">videoEncoderConfList</emphasis>[0] is not equal to Configuration from step <xref linkend="tc.MEDIA2-2-3-4.5.3.1"/>, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                          <listitem xml:id="tc.MEDIA2-2-3-4.5.3.7" xreflabel="5.3.7">
                            <para>
                              ONVIF Client invokes <emphasis role="bold">SetVideoEncoderConfiguration</emphasis> request with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configuration.@token := <emphasis role="italic">videoEncoderConfiguration</emphasis>.@token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Name := "TestName2"
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.@GovLength := if <emphasis role="italic">options</emphasis>.GovLengthRange is specified, set maximum value from <emphasis role="italic">options</emphasis>.GovLengthRange list, otherwise, skip the parameter
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.@Profile := if <emphasis role="italic">videoEncoderConfiguration</emphasis>.@Profile is specified and <emphasis role="italic">options</emphasis>.@ProfilesSupported is specified and contains at least one item, <emphasis role="italic">options</emphasis>.@ProfilesSupported[last], otherwise, skip the parameter
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Encoding := <emphasis role="italic">options</emphasis>.Encoding
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Resolution := <emphasis role="italic">options</emphasis>.ResolutionsAvailable[last]
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.RateControl.@ConstantBitRate skipped
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.RateControl.@FrameRateLimit := maximum value from <emphasis role="italic">options</emphasis>.FrameRatesSupported list
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.RateControl.@BitrateLimit := <emphasis role="italic">options</emphasis>.BitrateRange.Max
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Multicast := <emphasis role="italic">videoEncoderConfiguration</emphasis>.Multicast
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Quality := <emphasis role="italic">options</emphasis>.QualityRange.Max
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              DUT responds with <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">s</emphasis> - Subscription reference
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">videoEncoderConfiguration</emphasis>.@token - Configuration token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in VideoEncoder - Configuration Type
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    ConfigurationToken := <emphasis role="italic">videoEncoderConfiguration</emphasis>.@token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    ProfileToken skipped
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              The DUT responds with requested video encoder configuration in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configurations list =: <emphasis role="italic">videoEncoderConfList</emphasis>
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem xml:id="tc.MEDIA2-2-3-4.5.3.12" xreflabel="5.3.12">
                            <para>
                              If <emphasis role="italic">videoEncoderConfList</emphasis>[0] is not equal to Configuration from step <xref linkend="tc.MEDIA2-2-3-4.5.3.7"/>, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores settings for all Video Encoder Configurations.
                </para>
              </listitem>
              <listitem>
                <para>
                  If subscription was created at step <xref linkend="MEDIA2-2-3-4.CPPS"/>, ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">s</emphasis> - Subscription reference
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>

            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">SetVideoEncoderConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">SetVideoEncoderConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <!--<annotation>
						<para>Current implementation does not check Profile</para>
					</annotation>-->
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.MEDIA2-2-3-4.5.3.6"/> and <xref linkend="tc.MEDIA2-2-3-4.5.3.12"/>:
            <itemizedlist>
              <listitem>
                <para>
                  Name
                </para>
              </listitem>
              <listitem>
                <para>
                  Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  Resolution.Height
                </para>
              </listitem>
              <listitem>
                <para>
                  Resolution.Width
                </para>
              </listitem>
              <listitem>
                <para>
                  <!--<annotation>
										<para>Current implementation compare GovLength only if it was specified both in Set and Get. The situation when GovLength was in set, but skipped in get will be ignored</para>
									</annotation>-->
                  GovLength
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-2-3-5-->
        <section xml:id="tc.MEDIA2-2-3-5">
          <title>VIDEO ENCODER CONFIGURATION OPTIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-3-5
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Video Encoder Configuration Options.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetVideoEncoderConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To validate video encoder configurations options.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Video feature is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>

                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options list =: <emphasis role="italic">vecOptionsList</emphasis>
                      </para>
                    </listitem>

                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Options (<emphasis role="italic">options</emphasis>) in (<emphasis role="italic">vecOptionsList</emphasis>) repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        If  <emphasis role="italic">options</emphasis> contains GovLengthRange, ONVIF Client checks the following:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              If  <emphasis role="italic">options</emphasis>.GovLengthRange list does not contain two values, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If  <emphasis role="italic">options</emphasis>.GovLengthRange list contains more than two values, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If  the first value in <emphasis role="italic">options</emphasis>.GovLengthRange list is greater than  the second value, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        If  <emphasis role="italic">options</emphasis> contains FrameRatesSupported and <emphasis role="italic">options</emphasis>.FrameRatesSupported list is not sorted with descending sort order, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>

                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with all video encoder configurations in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Configurations list =: <emphasis role="italic">vecList</emphasis>
                      </para>
                    </listitem>

                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">vecList</emphasis> is empty, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Video Encoder Configuration (<emphasis role="italic">vec</emphasis>) in <emphasis role="italic">vecList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">vec</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>

                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options list =: <emphasis role="italic">vecOptionsList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        For each Options (<emphasis role="italic">options</emphasis>) in (<emphasis role="italic">vecOptionsList</emphasis>) repeat the following steps:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              If  <emphasis role="italic">options</emphasis> contains GovLengthRange, ONVIF Client checks the following:
                              <orderedlist numeration="arabic" inheritnum="inherit">
                                <?dbfo label-width="4.5em"?>
                                <listitem>
                                  <para>
                                    If  <emphasis role="italic">options</emphasis>.GovLengthRange list does not contain two values, FAIL the test and skip other steps.
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    If  <emphasis role="italic">options</emphasis>.GovLengthRange list contains more than two values, FAIL the test and skip other steps.
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    If  the first value in <emphasis role="italic">options</emphasis>.GovLengthRange list is greater than  the second value, FAIL the test and skip other steps.
                                  </para>
                                </listitem>
                              </orderedlist>

                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If  <emphasis role="italic">options</emphasis> contains FrameRatesSupported and <emphasis role="italic">options</emphasis>.FrameRatesSupported list is not sorted with descending sort order, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> message.
                </para>
              </listitem>

            </itemizedlist>
          </para>
        </section>
      </section>
      <!--Video Source-->
      <section xml:id="tc.media_configuration.video_configuration.vs">
        <title>Video Source</title>
        <!--MEDIA2-2-4-1-->
        <section xml:id="tc.MEDIA2-2-4-1">
          <title>GET VIDEO SOURCE MODES</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-4-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Video source mode, GetVideoSourceModes.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetVideoSourceModes
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving supported Video Source Modes for specified Video Source.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Device IO Service is received from the DUT. Video sources modes is supported by Device as indicated by the VideoSourceMode=true capability.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Video Sources list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourcesList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">videoSourcesList</emphasis> - Video Sources list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Video Source token <emphasis role="italic">videoSourceToken</emphasis> from <emphasis role="italic">videoSourcesList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoSourceModes</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              VideoSourceToken := <emphasis role="italic">videoSourceToken</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetVideoSourceModesResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              VideoSourceModes list =: <emphasis role="italic">videoSourceModesList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceModesList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceModesList</emphasis> contains at least two items with Enabled=true, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceModesList</emphasis> contains no items with Enabled=true, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceModesList</emphasis> contains at least one item with empty Encodings list, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoSourceModesResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-2-4-2-->
        <section xml:id="tc.MEDIA2-2-4-2">
          <title>SET VIDEO SOURCE MODES</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-2-4-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Video source mode, GetVideoSourceModes, SetVideoSourceModes.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetVideoSourceModes, SetVideoSourceModes
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl, deviceio.wsld
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify change of Video Source Mode for specified Video Source.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Device IO Service is received from the DUT. Video sources modes is supported by Device as indicated by the VideoSourceMode=true capability.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Video Sources list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourcesList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">videoSourcesList</emphasis> - Video Sources list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Video Source token <emphasis role="italic">videoSourceToken</emphasis> from <emphasis role="italic">videoSourcesList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoSourceModes</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              VideoSourceToken := <emphasis role="italic">videoSourceToken</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetVideoSourceModesResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              VideoSourceModes list =: <emphasis role="italic">videoSourceModesList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Set <emphasis role="italic">modeToEnable</emphasis> := videoSourceModesList[<emphasis role="italic">first</emphasis>].@token, where <emphasis role="italic">first</emphasis> is the index number of the first item on the <emphasis role="italic">videoSourceModesList</emphasis> list that has no @Enabled or @Enabled = false (if any).
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">SetVideoSourceMode</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              VideoSourceToken := <emphasis role="italic">videoSourceToken</emphasis>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              VideoSourceModeToken := <emphasis role="italic">modeToEnable</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">SetVideoSourceModeResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Reboot =: <emphasis role="italic">rebootFlag</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">rebootFlag</emphasis> = true, ONVIF Client waits for the Device reboot by following the procedure mentioned in <xref linkend="Annex_HelperWaitingReboot"/>.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoSourceModes</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              VideoSourceToken := <emphasis role="italic">videoSourceToken</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetVideoSourceModesResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              VideoSourceModes list =: <emphasis role="italic">videoSourceModesList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceModesList</emphasis> contains at least two items with @Enabled=true, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceModesList</emphasis> item with @token = <emphasis role="italic">modeToEnable</emphasis> has no @Enabled or @Enabled = false for it, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceModesList</emphasis> have only one item, go to step <link linkend="tc.MEDIA2-2-4-2.4.20">4.20</link>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Set <emphasis role="italic">modeToEnable</emphasis> := videoSourceModesList[<emphasis role="italic">last</emphasis>].@token, where <emphasis role="italic">last</emphasis> is the index number of the last item on the <emphasis role="italic">videoSourceModesList</emphasis> list.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">SetVideoSourceMode</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              VideoSourceToken := <emphasis role="italic">videoSourceToken</emphasis>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              VideoSourceModeToken := <emphasis role="italic">modeToEnable</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">SetVideoSourceModeResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Reboot =: <emphasis role="italic">rebootFlag</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">rebootFlag</emphasis> = true, ONVIF Client waits for the Device reboot by following the procedure mentioned in <xref linkend="Annex_HelperWaitingReboot"/>.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetVideoSourceModes</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              VideoSourceToken := <emphasis role="italic">videoSourceToken</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetVideoSourceModesResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              VideoSourceModes list =: <emphasis role="italic">videoSourceModesList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceModesList</emphasis> contains at least two items with @Enabled=true, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">videoSourceModesList</emphasis> item with @token = <emphasis role="italic">modeToEnable</emphasis> has no @Enabled or @Enabled = false for it, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-2-4-2.4.20">
                      <para>
                        ONVIF Client restores settings for <emphasis role="italic">videoSourceModesList</emphasis>.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetVideoSourceModesResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">SetVideoSourceModesResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
      </section>
    </section>
    <!--Audio Configuration-->
    <section xml:id="tc.media_configuration.audio_configuration">
      <title>Audio Configuration</title>
      <!--Audio Source Configuration-->
      <section xml:id="tc.media_configuration.audio_configuration.asc">
        <title>Audio Source Configuration</title>
        <!--MEDIA2-3-1-1-->
        <section xml:id="tc.MEDIA2-3-1-1">
          <title>GET AUDIO SOURCE CONFIGURATION OPTIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-1-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configuration options, Audio source configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioSourceConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving Audio Source Configuration options for specified Audio Source Configuration, for specified Profile, generic for the Device.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio configuration is supported by the DUT as indicated by receiving the GetAudioEncoderConfigurationOptionsResponse.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetAudioSourceConfigurationOptionsResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options =: <emphasis role="italic">options</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioSourceConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioSourceConfCompleteList</emphasis> - Audio Source Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken := <emphasis role="italic">audioSourceConfigurationList</emphasis>[0].@token
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetAudioSourceConfigurationOptionsResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options =: <emphasis role="italic">options</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2-3-1-1.8">
                <para>
                  ONVIF Client retrieves Media Profile, which contains Audio Source Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileWithAudioSource"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Source Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetAudioSourceConfigurationOptionsResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options =: <emphasis role="italic">options</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If Media Profile <emphasis role="italic">profile</emphasis> was changed at step <link linkend="tc.MEDIA2-3-1-1.8">8</link>, ONVIF Client restores Media Profile.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioSourceConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-1-2-->
        <section xml:id="tc.MEDIA2-3-1-2">
          <title>GET AUDIO SOURCE CONFIGURATIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-1-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Audio source configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioSourceConfigurations
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving complete Audio Source Configuration List, Audio Source Configuration by Configuration token and compatible Audio Source Configuration by Profile token.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio configuration is supported by the DUT as indicated by receiving the GetAudioEncoderConfigurationOptionsResponse.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurations</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Configurations list =: <emphasis role="italic">audioSourceConfCompleteList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">audioSourceConfCompleteList</emphasis> is empty, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">audioSourceConfCompleteList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Audio Source Configuration <emphasis role="italic">audioSourceConfiguration</emphasis> in <emphasis role="italic">audioSourceConfCompleteList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioSourceConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">audioSourceConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioSourceConfList</emphasis> is empty, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioSourceConfList</emphasis> contains more than one item, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioSourceConfList</emphasis> does not contain item with @token = <emphasis role="italic">audioSourceConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type[0] := AudioSource
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken skipped
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">audioSourceConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioSourceConfList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioSourceConfCompleteList</emphasis> does not contain at least one item with @token from <emphasis role="italic">audioSourceConfList</emphasis>, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile</emphasis>.Configurations contains AudioSource:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              If <emphasis role="italic">audioSourceConfList</emphasis> does not contain item with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioSource.@token, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-1-3-->
        <section xml:id="tc.MEDIA2-3-1-3">
          <title>AUDIO SOURCE CONFIGURATIONS AND AUDIO SOURCE CONFIGURATION OPTIONS CONSISTENCY</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-1-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get configuration options, Audio source configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles, GetAudioSourceConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify all Audio Source Configurations are consistent with Audio Source Configuration Options.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio configuration is supported by the DUT as indicated by receiving the GetAudioEncoderConfigurationOptionsResponse.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioSourceConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioSourceConfList</emphasis> - Audio Source Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Audio Source Configuration <emphasis role="italic">audioSourceConfiguration</emphasis> in <emphasis role="italic">audioSourceConfList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioSourceConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetAudioSourceConfigurationOptionsResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options =: <emphasis role="italic">options</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioSourceConfiguration</emphasis>.SourceToken is not in <emphasis role="italic">options</emphasis>.InputTokensAvailable list, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioSourceConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-1-4-->
        <section xml:id="tc.MEDIA2-3-1-4">
          <title>PROFILES AND AUDIO SOURCE CONFIGURATIONS CONSISTENCY</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-1-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get media profiles, Audio source configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioSourceConfigurations, GetAudioSourceConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify all Media Profiles are consistent with Audio Source Configurations.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio configuration is supported by the DUT as indicated by receiving the GetAudioEncoderConfigurationOptionsResponse.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type[0] := AudioSource
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> which contains Configurations.AudioSource repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">profile</emphasis>.Configurations.AudioSource.@token
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">audioSourceConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioSourceConfList</emphasis>[0] is not equal to <emphasis role="italic">profile</emphasis>.Configurations.AudioSource, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-1-5-->
        <section xml:id="tc.MEDIA2-3-1-5">
          <title>MODIFY ALL SUPPORTED AUDIO SOURCE CONFIGURATIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-1-5
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get configuration options, Audio source configuration, Modify a configuration
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioSourceConfigurationOptions, GetAudioSourceConfigurations, SetAudioSourceConfiguration
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify whether all supported Audio Source Configuration Options can be set.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Event Service was received from the DUT.
            Audio configuration is supported by the DUT as indicated by receiving the GetAudioEncoderConfigurationOptionsResponse.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioSourceConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioSourceConfList</emphasis> - Audio Source Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="MEDIA2-3-1-5.CPPS">
                <para>
                  If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="bold">"tns1:Media/ConfigurationChanged"</emphasis> - Notification Topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">s</emphasis> - Subscription reference
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Audio Source Configuration <emphasis role="italic">audioSourceConfiguration</emphasis> in <emphasis role="italic">audioSourceConfList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioSourceConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetAudioSourceConfigurationOptionsResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options =: <emphasis role="italic">options</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-3-1-5.5.3">
                      <para>
                        ONVIF Client invokes <emphasis role="bold">SetAudioSourceConfiguration</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configuration.@token := <emphasis role="italic">audioSourceConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Name := "TestName1"
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.SourceToken := other then current value (if possible) from <emphasis role="italic">options</emphasis>.InputTokensAvailable list
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">SetAudioSourceConfigurationResponse</emphasis> message.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              in <emphasis role="italic">s</emphasis> - Subscription reference
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">audioSourceConfiguration</emphasis>.@token - Configuration token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in AudioSource - Configuration Type
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioSourceConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">audioSourceConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-3-1-5.5.8">
                      <para>
                        If <emphasis role="italic">audioSourceConfList</emphasis>[0] is not equal to Configuration from step <link linkend="tc.MEDIA2-3-1-5.5.3">5.3</link>, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client restores settings of Audio Source Configuration with @token = <emphasis role="italic">audioSourceConfiguration</emphasis>.@token.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If subscription was created at step <xref linkend="MEDIA2-3-1-5.CPPS"/>, ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">s</emphasis> - Subscription reference
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">SetAudioSourceConfigurationResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioSourceConfigurationOptionsResponse </emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <link linkend="tc.MEDIA2-3-1-5.5.8">5.8</link>:
            <itemizedlist>
              <listitem>
                <para>
                  SourceToken
                </para>
              </listitem>
              <listitem>
                <para>
                  Name
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-1-6-->
        <section xml:id="tc.MEDIA2-3-1-6">
          <title>GET AUDIO SOURCE CONFIGURATIONS – INVALID TOKEN</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-1-6
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Audio source configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioSourceConfigurations
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify SOAP 1.2 Fault receiving in case of <emphasis role="bold">GetAudioSourceConfigurations</emphasis> with invalid token.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio configuration is supported by the DUT as indicated by receiving the GetAudioEncoderConfigurationOptionsResponse.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioSourceConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioSourceConfCompleteList</emphasis> - Audio Source Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurations</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken := other than listed in <emphasis role="italic">audioSourceConfCompleteList</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT returns <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoConfig</emphasis> SOAP 1.2 fault.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  The DUT did not send the <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoConfig</emphasis> SOAP 1.2 fault message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
      </section>
      <!--Audio Encoder Configuration-->
      <section xml:id="tc.media_configuration.audio_configuration.aec">
        <title>Audio Encoder Configuration</title>
        <!--MEDIA2-3-2-1-->
        <section xml:id="tc.MEDIA2-3-2-1">
          <title>G.711 AUDIO ENCODER CONFIGURATION</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-2-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get configuration options, Audio encoder configuration, Modify a configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioEncoderConfigurations, GetAudioEncoderConfigurationOptions, SetAudioEncoderConfiguration
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify that DUT changes audio configuration with G.711 Encoding properly.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Event Service was received from the DUT. Media2_G.711 feature is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Encoder Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioEncoderConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioEncoderConfList</emphasis> - Audio Encoder Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="MEDIA2-3-2-1.CPPS">
                <para>
                  If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="bold">"tns1:Media/ConfigurationChanged"</emphasis> - Notification Topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">s</emphasis> - Subscription Reference
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">terminationTime</emphasis> - Subscription Termination time
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Audio Encoder Configuration <emphasis role="italic">audioEncoderConfiguration</emphasis> in <emphasis role="italic">audioEncoderConfList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options list =: <emphasis role="italic">optionsList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">optionsList</emphasis> contains an item with Encoding = PCMU, do the following steps:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              Set <emphasis role="italic">options</emphasis> := first item from <emphasis role="italic">optionsList</emphasis> with Encoding = PCMU.
                            </para>
                          </listitem>
                          <listitem xml:id="tc.MEDIA2-3-2-1.5.3.2">
                            <para>
                              ONVIF Client invokes <emphasis role="bold">SetAudioEncoderConfiguration</emphasis> request with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configuration.@token := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Name := string different from <emphasis role="italic">audioEncoderConfiguration</emphasis>.Name value (length shall be less than or equal to 64 characters and it shall contain only readable characters)
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Encoding := <emphasis role="italic">options</emphasis>.Encoding
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Bitrate := minimum value from <emphasis role="italic">options</emphasis>.BitrateList.Items list if <emphasis role="italic">options</emphasis>.BitrateList.Items list contains items, otherwise, <emphasis role="italic">audioEncoderConfiguration</emphasis>.Bitrate
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.SampleRate := minimum value from <emphasis role="italic">options</emphasis>.SampleRateList.Items list if <emphasis role="italic">options</emphasis>.SampleRateList.Items list contains items, otherwise, <emphasis role="italic">audioEncoderConfiguration</emphasis>.SampleRate
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Multicast := <emphasis role="italic">audioEncoderConfiguration</emphasis>.Multicast
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              DUT responds with <emphasis role="bold">SetAudioEncoderConfigurationResponse</emphasis> message.
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">s</emphasis> - Subscription reference
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token - Configuration token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in AudioEncoder - Configuration Type
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurations</emphasis> request with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    ConfigurationToken := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    ProfileToken skipped
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              The DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configurations list =: <emphasis role="italic">audioEncoderConfList</emphasis>
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If <emphasis role="italic">audioEncoderConfList</emphasis> contains more items with @token = <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token than 1, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                          <listitem xml:id="tc.MEDIA2-3-2-1.5.3.8">
                            <para>
                              If <emphasis role="italic">audioEncoderConfList</emphasis>[0] is not equal to Configuration from step <link linkend="tc.MEDIA2-3-2-1.5.3.2">5.3.2</link>, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                          <listitem xml:id="tc.MEDIA2-3-2-1.5.3.9">
                            <para>
                              ONVIF Client invokes <emphasis role="bold">SetAudioEncoderConfiguration</emphasis> request with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configuration.@token := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Name := <emphasis role="italic">audioEncoderConfiguration</emphasis>.Name
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Encoding := <emphasis role="italic">options</emphasis>.Encoding
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Bitrate := maximum value from <emphasis role="italic">options</emphasis>.BitrateList.Items list if <emphasis role="italic">options</emphasis>.BitrateList.Items list contains items, otherwise, <emphasis role="italic">audioEncoderConfiguration</emphasis>.Bitrate
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.SampleRate := maximum value from <emphasis role="italic">options</emphasis>.SampleRateList.Items list if <emphasis role="italic">options</emphasis>.SampleRateList.Items list contains items, otherwise, <emphasis role="italic">audioEncoderConfiguration</emphasis>.SampleRate
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Multicast := <emphasis role="italic">audioEncoderConfiguration</emphasis>.Multicast
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              DUT responds with <emphasis role="bold">SetAudioEncoderConfigurationResponse</emphasis> message.
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">s</emphasis> - Subscription reference
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token - Configuration token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in AudioEncoder - Configuration Type
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurations</emphasis> request with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    ConfigurationToken := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    ProfileToken skipped
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              The DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configurations list =: <emphasis role="italic">audioEncoderConfList</emphasis>
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If <emphasis role="italic">audioEncoderConfList</emphasis> contains more items with @token = <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token than 1, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                          <listitem xml:id="tc.MEDIA2-3-2-1.5.3.15">
                            <para>
                              If <emphasis role="italic">audioEncoderConfList</emphasis>[0] is not equal to Configuration from step <link linkend="tc.MEDIA2-3-2-1.5.3.9">5.3.9</link>, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If subscription was created at step <xref linkend="MEDIA2-3-2-1.CPPS"/>, ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">s</emphasis> - Subscription reference
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioSourceConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <link linkend="tc.MEDIA2-3-2-1.5.3.8">5.3.8</link> and <link linkend="tc.MEDIA2-3-2-1.5.3.15">5.3.15</link>:
            <itemizedlist>
              <listitem>
                <para>
                  @token
                </para>
              </listitem>
              <listitem>
                <para>
                  Name
                </para>
              </listitem>
              <listitem>
                <para>
                  Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  Multicast.Address.Type
                </para>
              </listitem>
              <listitem>
                <para>
                  Multicast.Address.IPv4Address
                </para>
              </listitem>
              <listitem>
                <para>
                  Multicast.Address.IPv6Address
                </para>
              </listitem>
              <listitem>
                <para>
                  Multicast.Port
                </para>
              </listitem>
              <listitem>
                <para>
                  Multicast.TTL
                </para>
              </listitem>
              <listitem>
                <para>
                  Multicast.AutoStart
                </para>
              </listitem>
              <listitem>
                <para>
                  Bitrate
                </para>
              </listitem>
              <listitem>
                <para>
                  SampleRate
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-2-2-->
        <section xml:id="tc.MEDIA2-3-2-2">
          <title>AAC AUDIO ENCODER CONFIGURATION</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-2-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get configuration options, Audio encoder configuration, Modify a configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioEncoderConfigurations, GetAudioEncoderConfigurationOptions, SetAudioEncoderConfiguration
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify that DUT changes audio configuration with AAC Encoding properly.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Event Service was received from the DUT. Media2_AAC feature is supported by DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Encoder Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioEncoderConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioEncoderConfList</emphasis> - Audio Encoder Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="MEDIA2-3-2-2.CPPS">
                <para>
                  If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="bold">"tns1:Media/ConfigurationChanged"</emphasis> - Notification Topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">s</emphasis> - Subscription Reference
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">terminationTime</emphasis> - Subscription Termination time
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Audio Encoder Configuration <emphasis role="italic">audioEncoderConfiguration</emphasis> in <emphasis role="italic">audioEncoderConfList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options list =: <emphasis role="italic">optionsList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">optionsList</emphasis> contains an item with Encoding = MP4A-LATM or MPEG4-GENERIC, do the following steps:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              Set <emphasis role="italic">options</emphasis> := first item from <emphasis role="italic">optionsList</emphasis> with Encoding = MP4A-LATM or MPEG4-GENERIC.
                            </para>
                          </listitem>
                          <listitem xml:id="tc.MEDIA2-3-2-2.5.3.2">
                            <para>
                              ONVIF Client invokes <emphasis role="bold">SetAudioEncoderConfiguration</emphasis> request with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configuration.@token := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Name := string different from <emphasis role="italic">audioEncoderConfiguration</emphasis>.Name value (length shall be less than or equal to 64 characters and it shall contain only readable characters)
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Encoding := <emphasis role="italic">options</emphasis>.Encoding
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Bitrate := minimum value from <emphasis role="italic">options</emphasis>.BitrateList.Items list if <emphasis role="italic">options</emphasis>.BitrateList.Items list contains items, otherwise, <emphasis role="italic">audioEncoderConfiguration</emphasis>.Bitrate
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.SampleRate := minimum value from <emphasis role="italic">options</emphasis>.SampleRateList.Items list if <emphasis role="italic">options</emphasis>.SampleRateList.Items list contains items, otherwise, <emphasis role="italic">audioEncoderConfiguration</emphasis>.SampleRate
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Multicast := <emphasis role="italic">audioEncoderConfiguration</emphasis>.Multicast
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              DUT responds with <emphasis role="bold">SetAudioEncoderConfigurationResponse</emphasis> message.
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">s</emphasis> - Subscription reference
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token - Configuration token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in AudioEncoder - Configuration Type
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurations</emphasis> request with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    ConfigurationToken := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    ProfileToken skipped
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              The DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configurations list =: <emphasis role="italic">audioEncoderConfList</emphasis>
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If <emphasis role="italic">audioEncoderConfList</emphasis> contains more items with @token = <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token than 1, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                          <listitem xml:id="tc.MEDIA2-3-2-2.5.3.8">
                            <para>
                              If <emphasis role="italic">audioEncoderConfList</emphasis>[0] is not equal to Configuration from step <link linkend="tc.MEDIA2-3-2-2.5.3.2">5.3.2</link>, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                          <listitem xml:id="tc.MEDIA2-3-2-2.5.3.9">
                            <para>
                              ONVIF Client invokes <emphasis role="bold">SetAudioEncoderConfiguration</emphasis> request with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configuration.@token := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Name := <emphasis role="italic">audioEncoderConfiguration</emphasis>.Name
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Encoding := <emphasis role="italic">options</emphasis>.Encoding
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Bitrate := maximum value from <emphasis role="italic">options</emphasis>.BitrateList.Items list if <emphasis role="italic">options</emphasis>.BitrateList.Items list contains items, otherwise, <emphasis role="italic">audioEncoderConfiguration</emphasis>.Bitrate
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.SampleRate := maximum value from <emphasis role="italic">options</emphasis>.SampleRateList.Items list if <emphasis role="italic">options</emphasis>.SampleRateList.Items list contains items, otherwise, <emphasis role="italic">audioEncoderConfiguration</emphasis>.SampleRate
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.Multicast := <emphasis role="italic">audioEncoderConfiguration</emphasis>.Multicast
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              DUT responds with <emphasis role="bold">SetAudioEncoderConfigurationResponse</emphasis> message.
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">s</emphasis> - Subscription reference
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token - Configuration token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    in AudioEncoder - Configuration Type
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurations</emphasis> request with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    ConfigurationToken := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    ProfileToken skipped
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              The DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> with parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    Configurations list =: <emphasis role="italic">audioEncoderConfList</emphasis>
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If <emphasis role="italic">audioEncoderConfList</emphasis> contains more items with @token = <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token than 1, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                          <listitem xml:id="tc.MEDIA2-3-2-2.5.3.15">
                            <para>
                              If <emphasis role="italic">audioEncoderConfList</emphasis>[0] is not equal to Configuration from step <link linkend="tc.MEDIA2-3-2-2.5.3.9">5.3.9</link>, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If subscription was created at step <xref linkend="MEDIA2-3-2-2.CPPS"/>, ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">s</emphasis> - Subscription reference
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioSourceConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <link linkend="tc.MEDIA2-3-2-2.5.3.8">5.3.8</link> and <link linkend="tc.MEDIA2-3-2-2.5.3.15">5.3.15</link>:
            <itemizedlist>
              <listitem>
                <para>
                  @token
                </para>
              </listitem>
              <listitem>
                <para>
                  Name
                </para>
              </listitem>
              <listitem>
                <para>
                  Encoding
                </para>
              </listitem>
              <listitem>
                <para>
                  Multicast.Address.Type
                </para>
              </listitem>
              <listitem>
                <para>
                  Multicast.Address.IPv4Address
                </para>
              </listitem>
              <listitem>
                <para>
                  Multicast.Address.IPv6Address
                </para>
              </listitem>
              <listitem>
                <para>
                  Multicast.Port
                </para>
              </listitem>
              <listitem>
                <para>
                  Multicast.TTL
                </para>
              </listitem>
              <listitem>
                <para>
                  Multicast.AutoStart
                </para>
              </listitem>
              <listitem>
                <para>
                  Bitrate
                </para>
              </listitem>
              <listitem>
                <para>
                  SampleRate
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-2-3-->
        <section xml:id="tc.MEDIA2-3-2-3">
          <title>GET AUDIO ENCODER CONFIGURATION OPTIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-2-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configuration options.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioEncoderConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving Audio Encoder Configuration Options for specified Audio Encoder Configuration, for specified Profile, generic for the Device.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options =: <emphasis role="italic">options</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client retrieves Audio Encoder Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioEncoderConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioEncoderConfList</emphasis> - Audio Encoder Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>

              <listitem>
                <para>
                  For each Audio Encoder Configuration (<emphasis role="italic">audioEncoderConf</emphasis>) in <emphasis role="italic">audioEncoderConfList</emphasis>
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioEncoderConf</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options =: <emphasis role="italic">options</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <!--<listitem xml:id="tc.MEDIA2-3-2-3.8">
								<para>
									ONVIF Client retrieves Media Profile, which contains Audio Encoder Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileWithAudioEncoder"/> with the following input and output parameters
									<itemizedlist>
										<listitem>
											<para>
												out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Encoder Configuration
											</para>
										</listitem>
									</itemizedlist>
								</para>
							</listitem>-->
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type : = AudioSource
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Profile (<emphasis role="italic">profile</emphasis>) in <emphasis role="italic">profileList</emphasis> that contains Configurations.AudioSource
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken skipped
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options =: <emphasis role="italic">options</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>


              <!--<listitem>
								<para>
									If Media Profile <emphasis role="italic">profile</emphasis> was changed at step <xref linkend="tc.MEDIA2-3-2-3.8"/>, ONVIF Client restores Media Profile.
								</para>
							</listitem>-->
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>

            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-2-4-->
        <section xml:id="tc.MEDIA2-3-2-4">
          <title>AUDIO ENCODER CONFIGURATIONS AND AUDIO ENCODER CONFIGURATION OPTIONS CONSISTENCY</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-2-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get configuration options, Audio encoder configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles, GetAudioEncoderConfigurations
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify all Audio Encoder Configurations are consistent with Audio Encoder Configuration Options.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Encoder Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioEncoderConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioEncoderConfList</emphasis> - Audio Encoder Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Audio Encoder Configuration <emphasis role="italic">audioEncoderConfiguration</emphasis> in <emphasis role="italic">audioEncoderConfList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioEncoderConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options List=: <emphasis role="italic">optionsList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>

                    <listitem>
                      <para>
                        If <emphasis role="italic">optionsList</emphasis> does not contain at least one Options.Encoding element with value is equal to <emphasis role="italic">audioEncoderConfiguration</emphasis>.Encoding, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">optionsList</emphasis> does not contain at least one Options.Encoding element with value is equal to <emphasis role="italic">audioEncoderConfiguration</emphasis>.Encoding and with at least one Options.BitrateList.Items element with value is equal to  <emphasis role="italic">audioEncoderConfiguration</emphasis>.Bitrate, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">optionsList</emphasis> does not contain at least one Options.Encoding element with value is equal to <emphasis role="italic">audioEncoderConfiguration</emphasis>.Encoding and with at least one Options.SampleRateList.Items element with value is equal to  <emphasis role="italic">audioEncoderConfiguration</emphasis>.SampleRate, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioEncoderConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>


      </section>
      <!--Audio Output Configuration-->
      <section xml:id="tc.media_configuration.audio_configuration.aoc">
        <title>Audio Output Configuration</title>
        <!--MEDIA2-3-3-1-->
        <section xml:id="tc.MEDIA2-3-3-1">
          <title>GET AUDIO OUTPUT CONFIGURATION OPTIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-3-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configuration options, Audio output configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioOutputConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving Audio Output Configuration options for specified Audio Output Configuration, for specified Profile, generic for the Device.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio Outputs is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioOutput capability.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetAudioOutputConfigurationOptionsResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options =: <emphasis role="italic">options</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">options</emphasis>.OutputLevelRange.Min &gt; <emphasis role="italic">options</emphasis>.OutputLevelRange.Max, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Output Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioOutputConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioOutputConfList</emphasis> - Audio Output Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken := <emphasis role="italic">audioOutputConfList</emphasis>[0].@token
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetAudioOutputConfigurationOptionsResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options =: <emphasis role="italic">options</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="tc.MEDIA2-3-3-1.9">
                <para>
                  ONVIF Client retrieves Media Profile, which contains Audio Output Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileWithAudioOutput"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile with Audio Output Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetAudioOutputConfigurationOptionsResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options =: <emphasis role="italic">options</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If Media Profile <emphasis role="italic">profile</emphasis> was changed at step <link linkend="tc.MEDIA2-3-3-1.9">9</link>, ONVIF Client restores Media Profile.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioOutputConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-3-2-->
        <section xml:id="tc.MEDIA2-3-3-2">
          <title>GET AUDIO OUTPUT CONFIGURATIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-3-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Audio output configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioOutputConfigurations
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving complete Audio Output Configuration List, Audio Output Configuration by Configuration token and compatible Audio Output Configuration by Profile token.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio Outputs is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioOutput capability.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurations</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Configurations list =: <emphasis role="italic">audioOutputConfCompleteList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">audioOutputConfCompleteList</emphasis> is empty, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">audioOutputConfCompleteList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Audio Output Configuration <emphasis role="italic">audioOutputConfiguration</emphasis> in <emphasis role="italic">audioOutputConfCompleteList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioOutputConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">audioOutputConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioOutputConfList</emphasis> is empty, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioOutputConfList</emphasis> contains more than one item, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioOutputConfList</emphasis> does not contain item with @token = <emphasis role="italic">audioOutputConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type[0] := AudioOutput
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken skipped
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">audioOutputConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioOutputConfList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioOutputConfCompleteList</emphasis> does not contain at least one item with @token from <emphasis role="italic">audioOutputConfList</emphasis>, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile</emphasis>.Configurations contains AudioOutput:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              If <emphasis role="italic">audioOutputConfList</emphasis> does not contain item with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioOutput.@token, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioOutputConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-3-3-->
        <section xml:id="tc.MEDIA2-3-3-3">
          <title>AUDIO OUTPUT CONFIGURATIONS AND AUDIO OUTPUT CONFIGURATION OPTIONS CONSISTENCY</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-3-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get configuration options, Audio output configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles, GetAidioOutputConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify all Audio Output Configurations are consistent with Audio Output Configuration Options.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio Outputs is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioOutput capability.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Output Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioOutputConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioOutputConfList</emphasis> - Audio Output Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Audio Output Configuration <emphasis role="italic">audioOutputConfiguration</emphasis> in <emphasis role="italic">audioOutputConfList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioOutputConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetAudioOutputConfigurationOptionsResponse </emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options =: <emphasis role="italic">options</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioOutputConfiguration</emphasis>.OutputToken is not in <emphasis role="italic">options</emphasis>.OutputTokensAvailable list, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioOutputConfiguration</emphasis>.SendPrimacy specified:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              If <emphasis role="italic">audioOutputConfiguration</emphasis>.SendPrimacy is not in <emphasis role="italic">options</emphasis>.SendPrimacyOptions, FAIL the test and skip other steps
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioOutputConfiguration</emphasis>.OutputLevel &lt; <emphasis role="italic">options</emphasis>.OutputLevelRange.Min, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioOutputConfiguration</emphasis>.OutputLevel &gt; <emphasis role="italic">options</emphasis>.OutputLevelRange.Max, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioOutputConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-3-4-->
        <section xml:id="tc.MEDIA2-3-3-4">
          <title>PROFILES AND AUDIO OUTPUT CONFIGURATIONS CONSISTENCY</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-3-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get media profiles, Audio output configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioOutputConfigurations, GetAudioOutputConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify all Media Profiles are consistent with Audio Output Configurations.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio Outputs is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioOutput capability.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type[0] := AudioOutput
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> which contains Configurations.AudioOutput repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">profile</emphasis>.Configurations.AudioOutput.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">audioOutputConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-3-3-4.5.3">
                      <para>
                        If <emphasis role="italic">audioOutputConfList</emphasis>[0] is not equal to <emphasis role="italic">profile</emphasis>.Configurations.AudioOutput, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <link linkend="tc.MEDIA2-3-3-4.5.3">5.3</link>:
            <itemizedlist>
              <listitem>
                <para>
                  Name
                </para>
              </listitem>
              <listitem>
                <para>
                  OutputToken
                </para>
              </listitem>
              <listitem>
                <para>
                  SendPrimacy
                </para>
              </listitem>
              <listitem>
                <para>
                  OutputLevel
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-3-5-->
        <section xml:id="tc.MEDIA2-3-3-5">
          <title>MODIFY ALL SUPPORTED AUDIO OUTPUT CONFIGURATIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-3-5
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get configuration options, Audio output configuration, Modify a configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioOutputConfigurationOptions, GetAudioOutputConfigurations, SetAudioOutputConfiguration
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify whether all supported Audio Output Configuration Options can be set.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio Outputs is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioOutput capability.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Output Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioOutputConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioOutputConfList</emphasis> - Audio Output Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="MEDIA2-3-3-5.CPPS">
                <para>
                  If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="bold">"tns1:Media/ConfigurationChanged"</emphasis> - Notification Topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">s</emphasis> - Subscription reference
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Audio Output Configuration <emphasis role="italic">audioOutputConfiguration</emphasis> in <emphasis role="italic">audioOutputConfList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioOutputConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetAudioOutputConfigurationOptionsResponse </emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options =: <emphasis role="italic">options</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-3-3-5.5.3">
                      <para>
                        ONVIF Client invokes <emphasis role="bold">SetAudioOutputConfiguration</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configuration.@token := <emphasis role="italic">audioOutputConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Name := "TestName1"
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.OutputToken := first value from <emphasis role="italic">options</emphasis>.OutputTokensAvailable list
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.SendPrimacy := if <emphasis role="italic">options</emphasis>.SendPrimacyOptions is specified, set first value from options.SendPrimacyOptions list, otherwise, set <emphasis role="italic">audioOutputConfiguration</emphasis>.SendPrimacy
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.OutputLevel := <emphasis role="italic">options</emphasis>.OutputLevelRange.Min
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">SetAudioOutputConfigurationResponse</emphasis> message.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              in <emphasis role="italic">s</emphasis> - Subscription reference
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">audioOutputConfiguration</emphasis>.@token - Configuration token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in AudioOutput - Configuration Type
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioOutputConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">audioOutputConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioOutputConfList</emphasis>[0] is not equal to Configuration from step <link linkend="tc.MEDIA2-3-3-5.5.3">5.3</link>, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-3-3-5.5.9">
                      <para>
                        ONVIF Client invokes <emphasis role="bold">SetAudioOutputConfiguration</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configuration.@token := <emphasis role="italic">audioOutputConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Name := "TestName2"
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.OutputToken := last value from <emphasis role="italic">options</emphasis>.OutputTokensAvailable list
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.SendPrimacy := if <emphasis role="italic">options</emphasis>.SendPrimacyOptions is specified, set last value from options.SendPrimacyOptions list, otherwise, set <emphasis role="italic">audioOutputConfiguration</emphasis>.SendPrimacy
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.OutputLevel := <emphasis role="italic">options</emphasis>.OutputLevelRange.Max
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">SetAudioOutputConfigurationResponse</emphasis> message.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              in <emphasis role="italic">s</emphasis> - Subscription reference
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">audioOutputConfiguration</emphasis>.@token - Configuration token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in AudioOutput - Configuration Type
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioOutputConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">audioOutputConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioOutputConfList</emphasis>[0] is not equal to Configuration from step <link linkend="tc.MEDIA2-3-3-5.5.9">5.9</link>, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client restores settings of Audio Output Configuration with @token = <emphasis role="italic">audioOutputConfiguration</emphasis>.@token.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If subscription was created at step <xref linkend="MEDIA2-3-3-5.CPPS"/>, ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">s</emphasis> - Subscription reference
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">SetAudioOutputConfigurationResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioOutputConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at steps 5.8 and 5.14:
            <itemizedlist>
              <listitem>
                <para>
                  OutputToken
                </para>
              </listitem>
              <listitem>
                <para>
                  Name
                </para>
              </listitem>
              <listitem>
                <para>
                  SendPrimacy
                </para>
              </listitem>
              <listitem>
                <para>
                  OutputLevel
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-3-6-->
        <section xml:id="tc.MEDIA2-3-3-6">
          <title>GET AUDIO OUTPUT CONFIGURATIONS – INVALID TOKEN</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-3-6
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Audio output configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioOutputConfigurations
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify SOAP 1.2 Fault receiving in case of <emphasis role="bold">GetAudioOutputConfigurations</emphasis> with invalid token.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio Outputs is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioOutput capability.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Output Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioOutputConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioOutputConfList</emphasis> - Audio Output Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurations</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken := other than listed in <emphasis role="italic">audioOutputConfList</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT returns <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoConfig</emphasis> SOAP 1.2 fault.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  The DUT did not send the <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoConfig</emphasis> SOAP 1.2 fault message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
      </section>
      <!--Audio Decoder Configuration-->
      <section xml:id="tc.media_configuration.audio_configuration.adc">
        <title>Audio Decoder Configuration</title>
        <!--MEDIA2-3-4-1-->
        <section xml:id="tc.MEDIA2-3-4-1">
          <title>GET AUDIO DECODER CONFIGURATION OPTIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-4-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configuration options, Audio decoder configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioDecoderConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving Audio Decoder Configuration options for specified Audio Decoder Configuration, for specified Profile, generic for the Device.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio Outputs is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioOutput capability. Audio Decoder is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioDecoder capability.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationOptionsResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options list =: <emphasis role="italic">optionsList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Decoder Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioDecoderConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioDecoderConfList</emphasis> - Audio Decoder Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken := <emphasis role="italic">audioDecoderConfList</emphasis>[0].@token
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationOptionsResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options list =: <emphasis role="italic">optionsList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures Media Profile containing Audio Output Configuration and Audio Decoder Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileWithAudioBackCh"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">profile</emphasis> - Media Profile containing Audio Output Configuration and Audio Decoder Configuration
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurationOptions</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationOptionsResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Options list =: <emphasis role="italic">optionsList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If Media Profile <emphasis role="italic">profile</emphasis> was changed at step 8, ONVIF Client restores Media Profile.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioDecoderConfigurationOptionsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-4-2-->
        <section xml:id="tc.MEDIA2-3-4-2">
          <title>GET AUDIO DECODER CONFIGURATIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-4-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Audio decoder configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioDecoderConfigurations
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving complete Audio Decoder Configuration List, Audio Decoder Configuration by Configuration token and compatible Audio Decoder Configuration by Profile token.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio decoder is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioDecoder capability.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurations</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Configurations list =: <emphasis role="italic">audioDecoderConfCompleteList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">audioDecoderConfCompleteList</emphasis> is empty, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">audioDecoderConfCompleteList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Audio Decoder Configuration <emphasis role="italic">audioDecoderConfiguration</emphasis> in <emphasis role="italic">audioDecoderConfCompleteList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioDecoderConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">audioDecoderConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioDecoderConfList</emphasis> is empty, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioDecoderConfList</emphasis> contains more than one item, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioDecoderConfList</emphasis> does not contain item with @token = <emphasis role="italic">audioDecoderConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type[0] := AudioDecoder
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken skipped
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">audioDecoderConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioDecoderConfList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">audioDecoderConfCompleteList</emphasis> does not contain at least one item with @token from <emphasis role="italic">audioDecoderConfList</emphasis>, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile</emphasis>.Configurations contains AudioDecoder:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              If <emphasis role="italic">audioDecoderConfList</emphasis> does not contain item with @token = <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-4-3-->
        <section xml:id="tc.MEDIA2-3-4-3">
          <title>PROFILES AND AUDIO DECODER CONFIGURATIONS CONSISTENCY</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-4-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get media profiles, Audio decoder configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioDecoderConfigurations, GetAudioDecoderConfigurationOptions
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify all Media Profiles are consistent with Audio Decoder Configurations.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio Decoder is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioDecoder capability.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type[0] := AudioDecoder
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> which contains Configurations.AudioDecoder repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurations</emphasis> request with parameters
                        <emphasis role="bold">Note:</emphasis> The following fields are compared at step <link linkend="tc.MEDIA2-2-2-4.5.3">5.3</link>:
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> with parameters
                        <emphasis role="bold">Note:</emphasis> The following fields are compared at step <link linkend="tc.MEDIA2-2-2-4.5.3">5.3</link>:
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">audioDecoderConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-3-4-3.5.3">
                      <para>
                        If <emphasis role="italic">audioDecoderConfList</emphasis>[0] is not equal to <emphasis role="italic">profile</emphasis>.Configurations.AudioDecoder, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <link linkend="tc.MEDIA2-3-4-3.5.3">5.3</link>:
            <itemizedlist>
              <listitem>
                <para>
                  Name
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-4-4-->
        <section xml:id="tc.MEDIA2-3-4-4">
          <title>MODIFY ALL SUPPORTED AUDIO DECODER CONFIGURATIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-4-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Audio decoder configuration, Modify a configuration
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioDecoderConfigurations, SetAudioDecoderConfiguration
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify change of Audio Decoder Configuration.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Event Service was received from the DUT. Audio Decoder is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioDecoder capability.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Decoder Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioDecoderConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioDecoderConfList</emphasis> - Audio Decoder Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <!--<listitem>
								<para>
								ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
								<itemizedlist>
								<listitem>
								<para>
								in <emphasis role="bold">"tns1:Media/ConfigurationChanged"</emphasis> - Notification Topic
								</para>
								</listitem>
								<listitem>
								<para>
								out <emphasis role="italic">s</emphasis> - Subscription reference
								</para>
								</listitem>
								<listitem>
								<para>
								out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
								</para>
								</listitem>
								<listitem>
								<para>
								out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
								</para>
								</listitem>
								</itemizedlist>
								</para>
							</listitem>-->
              <listitem>
                <para>
                  For each Audio Decoder Configuration <emphasis role="italic">audioDecoderConfiguration</emphasis> in <emphasis role="italic">audioDecoderConfList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">SetAudioDecoderConfiguration</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configuration.@token := <emphasis role="italic">audioDecoderConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Name := "TestName1"
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">SetAudioDecoderConfigurationResponse</emphasis> message.
                      </para>
                    </listitem>
                    <!--<listitem>
											<para>
											ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
											<itemizedlist>
											<listitem>
											<para>
											in <emphasis role="italic">s</emphasis> - Subscription reference
											</para>
											</listitem>
											<listitem>
											<para>
											in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
											</para>
											</listitem>
											<listitem>
											<para>
											in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
											</para>
											</listitem>
											<listitem>
											<para>
											in <emphasis role="italic">audioDecoderConfiguration</emphasis>.@token - Configuration token
											</para>
											</listitem>
											<listitem>
											<para>
											in AudioDecoder - Configuration Type
											</para>
											</listitem>
											</itemizedlist>
											</para>
										</listitem>-->
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">audioDecoderConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken := <emphasis role="italic">audioDecoderConfiguration</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">audioDecoderConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-3-4-4.5.6">
                      <para>
                        If <emphasis role="italic">audioDecoderConfList</emphasis>[0] is not equal to Configuration from step 4.1, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client restores settings of Audio Decoder Configuration with @token = <emphasis role="italic">audioDecoderConfiguration</emphasis>.@token.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <!--<listitem>
								<para>
								ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
								<itemizedlist>
								<listitem>
								<para>
								in <emphasis role="italic">s</emphasis> - Subscription reference
								</para>
								</listitem>
								</itemizedlist>
								</para>
							</listitem>-->
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">SetAudioDecoderConfigurationResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <link linkend="tc.MEDIA2-3-4-4.5.6">4.5</link>:
            <itemizedlist>
              <listitem>
                <para>
                  Name
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-3-4-5-->
        <section xml:id="tc.MEDIA2-3-4-5">
          <title>GET AUDIO DECODER CONFIGURATIONS – INVALID TOKEN</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-3-4-5
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Audio decoder configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetAudioDecoderConfigurations
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify SOAP 1.2 Fault receiving in case of <emphasis role="bold">GetAudioDecoderConfigurations</emphasis> with invalid token.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis>Media2 Service is received from the DUT. Audio Decoder is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioDecoder capability.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Audio Decoder Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAudioDecoderConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">audioDecoderConfList</emphasis> - Audio Decoder Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurations</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken := other than listed in <emphasis role="italic">audioDecoderConfList</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT returns <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoConfig</emphasis> SOAP 1.2 fault.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  The DUT did not send the <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoConfig</emphasis> SOAP 1.2 fault message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
      </section>
    </section>
    <!--PTZ Configuration-->
    <section xml:id="tc.media_configuration.ptz_configuration">
      <title>PTZ Configuration</title>
      <!--MEDIA2-4-1-1-->
      <section xml:id="tc.MEDIA2-4-1-1">
        <title>READY TO USE MEDIA PROFILE FOR PTZ</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-4-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Absolute PTZ Move (Profile T) or Continuous PTZ Move (Profile T), Media profiles (Media 2), PTZ Configuration (Media 2)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that DUT has a ready-to-use Media Service 2.0 Profile for PTZ.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. PTZ Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[0] := VideoSource
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[1] := PTZ
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">profileList</emphasis> contains no Media Profiles with both Configurations.VideoSource and Configurations.PTZ, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-4-1-2-->
      <section xml:id="tc.MEDIA2-4-1-2">
        <title>DYNAMIC MEDIA PROFILE CONFIGURATION FOR PTZ</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-4-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Get media profiles, Create media profile, Delete media profile, Add one or more configurations to a profile, Remove one or more configurations from a profile, Get configurations, GetConfigurations (PTZ Service), GetCompatibleConfigurations (PTZ Service).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetProfiles, AddConfiguration for PTZ Configuration, RemoveConfiguration for PTZ Configuration, GetVideoSourceConfigurations, GetConfigurations, GetCompatibleConfigurations, SetConfiguration, tns1:Media/ProfileChanged, tns1:Media/ConfigurationChanged
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of the DUT for dynamic media profile configuration with PTZ.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Event Service was received from the DUT.
          PTZ Service was received from the DUT. GetCompatibleConfigurations is supported by Device as indicated by the GetCompatibleConfigurations = true capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[0] := VideoSource
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[1] := PTZ
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis>, which contains Configurations.VideoSource repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>

                  <listitem>
                    <para>
                      If <emphasis role="italic">profile</emphasis>.Configurations contains PTZ repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type := PTZ
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token skipped
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="MEDIA2-4-1-2.CPPS">
              <para>
                If DUT supports Pull-Point Notification feature and (Profile Changed Notification or Configuration Changed Notification feature), ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">"tns1:Media/ProfileChanged|tns1:Media/ConfigurationChanged"</emphasis> - Notification Topic if both Profile Changed Notification and Configuration Changed Notification features are supported. Otherwise only supported topic is used as Notification Topic.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis>, which contains Configurations.VideoSource repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetCompatibleConfigurations</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ProfileToken := <emphasis role="italic">profileToken</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetCompatibleConfigurationsResponse </emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            PTZConfiguration list =: <emphasis role="italic">ptzConfigurationList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each PTZ Configuration <emphasis role="italic">ptzConfiguration</emphasis> in <emphasis role="italic">ptzConfigurationList</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Name skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type := PTZ
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token := <emphasis role="italic">ptzConfiguration</emphasis>.@token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetConfigurationOptions</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ConfigurationToken := <emphasis role="italic">ptzConfiguration</emphasis>.@token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DUT responds with <emphasis role="bold">GetConfigurationOptionsResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  PTZConfigurationOptions =: <emphasis role="italic">ptzOptions</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains at least two AbsolutePanTiltPositionSpace elements with equal URI values, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains at least two AbsoluteZoomPositionSpace elements with equal URI values, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains at least two RelativePanTiltTranslationSpace elements with equal URI values, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains at least two RelativeZoomTranslationSpace elements with equal URI values, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains at least two ContinuousPanTiltVelocitySpace elements with equal URI values, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains at least two ContinuousZoomVelocitySpace elements with equal URI values, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>

                          <para>
                            ONVIF Client invokes <emphasis role="bold">SetConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  PTZConfiguration.@token := <emphasis role="italic">ptzConfiguration</emphasis>.@token
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  PTZConfiguration.Name := "TestNameN" (N is number that increases for each iteration of cycle beginning from 0)
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  PTZConfiguration.UseCount := <emphasis role="italic">ptzConfiguration</emphasis>.UseCount
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  PTZConfiguration.MoveRamp skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  PTZConfiguration.PresetRamp skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  PTZConfiguration.PresetTourRamp skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  PTZConfiguration.NodeToken := <emphasis role="italic">ptzConfiguration</emphasis>.NodeToken
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains AbsolutePanTiltPositionSpace:
                                  <itemizedlist>
                                    <listitem>
                                      <para>
                                        PTZConfiguration.DefaultAbsolutePantTiltPositionSpace := <emphasis role="italic">ptzOptions</emphasis>.Spaces.AbsolutePanTiltPositionSpace.URI from first other then current (if possible) item from <emphasis role="italic">ptzOptions</emphasis>.Spaces.AbsolutePanTiltPositionSpace list
                                      </para>
                                    </listitem>
                                  </itemizedlist>
                                </para>
                                <para>
                                  otherwise, PTZConfiguration.DefaultAbsolutePantTiltPositionSpace skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains AbsoluteZoomPositionSpace:
                                  <itemizedlist>
                                    <listitem>
                                      <para>
                                        PTZConfiguration.DefaultAbsoluteZoomPositionSpace := <emphasis role="italic">ptzOptions</emphasis>.Spaces.AbsoluteZoomPositionSpace.URI from first other then current (if possible) item form <emphasis role="italic">ptzOptions</emphasis>.Spaces.AbsoluteZoomPositionSpace list
                                      </para>
                                    </listitem>
                                  </itemizedlist>
                                </para>
                                <para>
                                  otherwise, PTZConfiguration.DefaultAbsoluteZoomPositionSpace skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains RelativePanTiltTranslationSpace:
                                  <itemizedlist>
                                    <listitem>
                                      <para>
                                        PTZConfiguration.DefaultRelativePanTiltTranslationSpace := <emphasis role="italic">ptzOptions</emphasis>.Spaces.RelativePanTiltTranslationSpace.URI from first other then current (if possible) item from <emphasis role="italic">ptzOptions</emphasis>.Spaces.RelativePanTiltTranslationSpace list
                                      </para>
                                    </listitem>
                                  </itemizedlist>
                                </para>
                                <para>
                                  otherwise, PTZConfiguration.DefaultRelativePanTiltTranslationSpace skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains RelativeZoomTranslationSpace:
                                  <itemizedlist>
                                    <listitem>
                                      <para>
                                        PTZConfiguration.DefaultRelativeZoomTranslationSpace := <emphasis role="italic">ptzOptions</emphasis>.Spaces.RelativeZoomTranslationSpace.URI from first other then current (if possible) item from <emphasis role="italic">ptzOptions</emphasis>.Spaces.RelativeZoomTranslationSpace list
                                      </para>
                                    </listitem>
                                  </itemizedlist>
                                </para>
                                <para>
                                  otherwise, PTZConfiguration.DefaultRelativeZoomTranslationSpace skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains ContinuousPanTiltVelocitySpace:
                                  <itemizedlist>
                                    <listitem>
                                      <para>
                                        PTZConfiguration.DefaultContinuousPanTiltVelocitySpace := <emphasis role="italic">ptzOptions</emphasis>.Spaces.ContinuousPanTiltVelocitySpace.URI from first other then current (if possible) item from <emphasis role="italic">ptzOptions</emphasis>.Spaces.ContinuousPanTiltVelocitySpace list
                                      </para>
                                    </listitem>
                                  </itemizedlist>
                                </para>
                                <para>
                                  otherwise, PTZConfiguration.DefaultContinuousPanTiltVelocitySpace skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains ContinuousZoomVelocitySpace:
                                  <itemizedlist>
                                    <listitem>
                                      <para>
                                        PTZConfiguration.DefaultContinuousZoomVelocitySpace := <emphasis role="italic">ptzOptions</emphasis>.Spaces.ContinuousZoomVelocitySpace.URI from first other then current (if possible) item from <emphasis role="italic">ptzOptions</emphasis>.Spaces.ContinuousZoomVelocitySpace list
                                      </para>
                                    </listitem>
                                  </itemizedlist>
                                </para>
                                <para>
                                  otherwise, PTZConfiguration.DefaultContinuousZoomVelocitySpace skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains PanTiltSpeedSpace or ZoomSpeedSpace:
                                  <itemizedlist>
                                    <listitem>
                                      <para>
                                        If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains PanTiltSpeedSpace:
                                        <itemizedlist>
                                          <listitem>
                                            <para>
                                              PTZConfiguration.DefaultPTZSpeed.PanTilt.space := <emphasis role="italic">ptzOptions</emphasis>.Spaces.PanTiltSpeedSpace.URI from first other then current (if possible) item from <emphasis role="italic">ptzOptions</emphasis>.Spaces.PanTiltSpeedSpace
                                            </para>
                                          </listitem>
                                          <listitem>
                                            <para>
                                              PTZConfiguration.DefaultPTZSpeed.PanTilt.x := <emphasis role="italic">ptzOptions</emphasis>.Spaces.PanTiltSpeedSpace.XRange.Max from the same item from <emphasis role="italic">ptzOptions</emphasis>.Spaces.PanTiltSpeedSpace as was used for PTZConfiguration.DefaultPTZSpeed.PanTilt.space
                                            </para>
                                          </listitem>
                                          <listitem>
                                            <para>
                                              PTZConfiguration.DefaultPTZSpeed.PanTilt.y := <emphasis role="italic">ptzOptions</emphasis>.Spaces.PanTiltSpeedSpace.XRange.Min from the same item from <emphasis role="italic">ptzOptions</emphasis>.Spaces.PanTiltSpeedSpace as was used for PTZConfiguration.DefaultPTZSpeed.PanTilt.space
                                            </para>
                                          </listitem>
                                        </itemizedlist>
                                      </para>
                                      <para>
                                        otherwise, PTZConfiguration.DefaultPTZSpeed.PanTilt skipped
                                      </para>
                                    </listitem>
                                    <listitem>
                                      <para>
                                        If <emphasis role="italic">ptzOptions</emphasis>.Spaces contains ZoomSpeedSpace:
                                        <itemizedlist>
                                          <listitem>
                                            <para>
                                              PTZConfiguration.DefaultPTZSpeed.Zoom.space := <emphasis role="italic">ptzOptions</emphasis>.Spaces.ZoomSpeedSpace.URI from first other then current (if possible) item from <emphasis role="italic">ptzOptions</emphasis>.Spaces.ZoomSpeedSpace
                                            </para>
                                          </listitem>
                                          <listitem>
                                            <para>
                                              PTZConfiguration.DefaultPTZSpeed.Zoom.x := <emphasis role="italic">ptzOptions</emphasis>.Spaces.ZoomSpeedSpace.XRange.Max from the same item from <emphasis role="italic">ptzOptions</emphasis>.Spaces.ZoomSpeedSpace as was used for PTZConfiguration.DefaultPTZSpeed.Zoom.space
                                            </para>
                                          </listitem>
                                        </itemizedlist>
                                      </para>
                                      <para>
                                        otherwise, PTZConfiguration.DefaultPTZSpeed.Zoom skipped
                                      </para>
                                    </listitem>
                                  </itemizedlist>
                                </para>
                                <para>
                                  otherwise, PTZConfiguration.DefaultPTZSpeed skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  PTZConfiguration.DefaultPTZTimeout =: PTZTimeout.Min
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  PanTiltLimits skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  ZoomLimits skipped
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  PTZConfiguration.PTControlDirection skipped
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DUT responds with <emphasis role="bold">SetConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">ptzConfiguration</emphasis>.@token - Configuration token
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in PTZ - Configuration Type
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  PTZConfigurationToken := <emphasis role="italic">ptzConfiguration</emphasis>.@token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetConfigurationResponse</emphasis> with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  PTZConfiguration =: <emphasis role="italic">ptzConfiguration</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">ptzConfiguration</emphasis> is not equal to PTZConfiguration from step 6.3.6, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := All
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].@token != <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.PTZ.@token != <emphasis role="italic">ptzConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations.PTZ is not equal to PTZConfiguration from step 6.3.6, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ProfileToken := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Type := PTZ
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Configuration[0].Token skipped
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If DUT supports Pull-Point Notification feature and Profile Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ProfileChanged</emphasis> event for the specified Media Profile by following the procedure mentioned in <xref linkend="Annex_HelperPullProfileChanged"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">s</emphasis> - Subscription reference
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  in <emphasis role="italic">profileToken</emphasis> - Media Profile token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Token := <emphasis role="italic">profileToken</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Type[0] := PTZ
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Profiles list =: <emphasis role="italic">profileList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis> contains more than one item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">profileList</emphasis>[0].Configurations contains PTZ, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores Media Profiles and PTZ Configurations that were changed.
              </para>
            </listitem>
            <listitem>
              <para>
                If subscription was created at step <xref linkend="MEDIA2-4-1-2.CPPS"/>, ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetCompatibleConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">SetConfigurationResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps 6.3.18 and 6.3.11:
          <itemizedlist>
            <listitem>
              <para>
                Name
              </para>
            </listitem>
            <listitem>
              <para>
                NodeToken
              </para>
            </listitem>
            <listitem>
              <para>
                DefaultAbsolutePantTiltPositionSpace
              </para>
            </listitem>
            <listitem>
              <para>
                DefaultAbsoluteZoomPositionSpace
              </para>
            </listitem>
            <listitem>
              <para>
                DefaultRelativePanTiltTranslationSpace
              </para>
            </listitem>
            <listitem>
              <para>
                DefaultRelativeZoomTranslationSpace
              </para>
            </listitem>
            <listitem>
              <para>
                DefaultContinuousPanTiltVelocitySpace
              </para>
            </listitem>
            <listitem>
              <para>
                DefaultContinuousZoomVelocitySpace
              </para>
            </listitem>
            <listitem>
              <para>
                DefaultPTZSpeed.PanTilt.x
              </para>
            </listitem>
            <listitem>
              <para>
                DefaultPTZSpeed.PanTilt.y
              </para>
            </listitem>
            <listitem>
              <para>
                DefaultPTZSpeed.PanTilt.space
              </para>
            </listitem>
            <listitem>
              <para>
                DefaultPTZSpeed.Zoom.x
              </para>
            </listitem>
            <listitem>
              <para>
                DefaultPTZSpeed.Zoom.space
              </para>
            </listitem>
            <listitem>
              <para>
                DefaultPTZTimeout
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Media Streaming-->
    <section xml:id="tc.media_configuration.media_streaming">
      <title>Media Streaming</title>
      <!--MEDIA2-5-1-1-->
      <section xml:id="tc.MEDIA2-5-1-1">
        <title>SNAPSHOT URI</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-5-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Get media profiles, Request snapshot URI
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSnapshotUri
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To retrieve snapshot URI of DUT for given media profile
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> SnapshotUri feature for Media2 service is supported by the DUT. Media2 Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Video feature
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client configures Media Profile containing Video Source Configuration and Video Encoder Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileWithVideo"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">profile</emphasis> - Media Profile containing Video Source Configuration and Video Encoder Configuration
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT does not support Video feature
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client configures Media Profile containing Video Source Configuration by following the procedure mentioned in <xref linkend="Annex_HelperConfigureMediaProfileWithVideoSource"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">profile</emphasis> - Media Profile containing Video Source Configuration
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetSnapshotUri</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                DUT responds with <emphasis role="bold">GetSnapshotUriResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Uri =: <emphasis role="italic">snapshotUri</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">HTTP GET</emphasis> request on the <emphasis role="italic">snapshotUri</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT responds with <emphasis role="bold">HTTP 200 OK</emphasis> message and the single shot JPEG image data.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies the JPEG image sent by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                If media profile profile was changed at step 3, ONVIF Client restores media profile.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetSnapshotUriResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">200 OK</emphasis> message to <emphasis role="bold">HTTP GET</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send valid JPEG image data.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-5-1-2-->
      <section xml:id="tc.MEDIA2-5-1-2">
        <title>VIDEO ENCODER INSTANCES PER VIDEO SOURCE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-5-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetVideoEncoderInstances
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetVideoEncoderInstances
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl, deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that for each video source there is at least one video source configuration for which the GetVideoEncoderInstances returns a Total greater than 0.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Device IO Service is received from the DUT. Video feature is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <!--GetVideoSourceConfigurations-->
            <listitem>
              <para>
                ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">videoSourceConfList1</emphasis> - Video Source Configurations list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Video Sources list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourcesList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">videoSourcesList1</emphasis> - Video Sources list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>



            <!--GetVideoEncoderInstances-->
            <listitem>
              <para>
                For each Video Source  <emphasis role="italic">videoSource1</emphasis> from <emphasis role="italic">videoSourcesList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      Set <emphasis role="italic">totalGreaterThanZeroFlag</emphasis> := false.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each Video Source Configuration <emphasis role="italic">videoSourceConfig1</emphasis> with SourceToken = <emphasis role="italic">videoSource1</emphasis> from <emphasis role="italic">videoSourceConfList1</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetVideoEncoderInstances</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  ConfigurationToken := <emphasis role="italic">videoSourceConfig1</emphasis>.token
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DUT responds with <emphasis role="bold">GetVideoEncoderInstancesResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Info = <emphasis role="italic">info1</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">info1</emphasis>.Total > 0:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="3.5em"?>
                              <listitem>
                                <para>
                                  Set <emphasis role="italic">totalGreaterThanZeroFlag</emphasis> := true.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Go to step <xref linkend="tc.MEDIA2-5-1-2.6.3"/>.
                                </para>
                              </listitem>
                            </orderedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem xml:id="tc.MEDIA2-5-1-2.6.3" xreflabel="5.3">
                    <para>
                      If <emphasis role="italic">totalGreaterThanZeroFlag</emphasis> = false, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetVideoSourcesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetVideoEncoderInstancesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--OSD-->
    <section xml:id="tc.media_configuration.osd">
      <title>OSD Configuration</title>
      <!--MEDIA2-6-1-1-->
      <section xml:id="tc.MEDIA2-6-1-1">
        <title>CREATE OSD CONFIGURATION FOR TEXT OVERLAY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-6-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetVideoSourceConfigurations, GetOSDs, GetOSDOptions, CreateOSD, DeleteOSD
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the DUT creates OSD Configuration.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service feature is supported by DUT. OSD feature is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> message to retrieve a list of existing Video Source Configurations on the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT returns at least one Video Source Configuration in the <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message. For each Video Source Configuration from <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis>, ONVIF Client saves the token of this configuration in <emphasis role="italic">VideoSourceConfigurationToken1</emphasis> variable and runs the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <!--<listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> with configuration token = <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>. DUT sends <emphasis role="bold">GetOSDsResponse</emphasis> with a list of OSD Configurations. ONVIF Client saves this list in <emphasis role="italic">OSDConfigurationsList1</emphasis> variable.
                    </para>
                  </listitem>-->
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDToken - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetOSDsResponse</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDs list =: <emphasis role="italic">OSDConfigurationsList1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>

                  <!--<listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDOptions</emphasis> message with Configuration Token = <emphasis role="italic">VideoSourceConfigurationToken1</emphasis> to retrieve the OSD configuration options for the specified video source configuration.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends the range of configurable values for the given video source configuration in the <emphasis role="bold">GetOSDOptionsResponse</emphasis> message. ONVIF Client saves options from <emphasis role="bold">GetOSDOptionsResponse</emphasis> in <emphasis role="italic">OSDOptions1</emphasis> variable.
                    </para>
                  </listitem>-->

                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDOptions</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT responds with <emphasis role="bold">GetOSDOptionsResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDOptions =: <emphasis role="italic">OSDOptions1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      ONVIF Client checks if current Video Source Configuration supports OSD configurations of the Type = Text. Otherwise, skip steps 4.6-4.25 and go to the next Video Source Configuration.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set <emphasis role="italic">osdTextStringType1</emphasis> := <emphasis role="italic">OSDOptions1</emphasis>.TextOption.Type[0], where Type[0] is the 1st in Type list from {Plain, Date, Time, DateAndTime} values
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="tc.MEDIA2-6-1-1.4.7" xreflabel="4.7">
                      ONVIF Client configures Device to have free space to create OSD with Text type and with required TextString Type by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationToCreateOSD"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">OSDConfigurationsList1</emphasis> - OSD Configurations List
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">osdOptions</emphasis> - OSD Options
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in "Text" - OSD Type
                          </para>
                        </listitem>
                        <!--<listitem>
                          <para>
                            in <emphasis role="italic">osdTextStringType1</emphasis> - OSD TextString Type
                          </para>
                        </listitem>-->
                        <listitem>
                          <para>
                            out <emphasis role="italic">OSDConfigurationsList1</emphasis> - updated OSD Configurations List
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem xml:id="tc.MEDIA2-6-1-1.4.8" xreflabel="4.8">
                    <para>
                      ONVIF Client invokes <emphasis role="bold">CreateOSD</emphasis> with token = "testOSD" (note: this token can be ignored by DUT), VideoSourceConfigurationToken = <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>, Type="Text" and the rest of parameter are populated using values from <emphasis role="italic">OSDOptions1</emphasis>. For this step, if the value has a range of available values, then minimum value (or the first value from list if list of available values is provided by DUT) from <emphasis role="italic">OSDOptions1</emphasis> should be used. See details of fields mapping in <xref linkend="Annex_HelperOSDOvsOSD"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT creates OSD Configuration and sends <emphasis role="bold">CreateOSDResponse</emphasis> message. ONVIF Client receives <emphasis role="bold">CreateOSDResponse</emphasis> with token of newly created OSD Configuration and saves this token to OSDConfigurationToken1 variable.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client verifies that <emphasis role="italic">OSDConfigurationsList1</emphasis> does not contain configuration with token = <emphasis role="italic">OSDConfigurationToken1</emphasis>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> message with OSD Token = <emphasis role="italic">OSDConfigurationToken1</emphasis> as input parameter to retrieve newly created OSD Configuration.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends OSD Configuration for the given token. ONVIF Client verifies that response contains OSD Configuration with token = <emphasis role="italic">OSDConfigurationToken1</emphasis> and configuration fields equal to the fields set at <xref linkend="tc.MEDIA2-6-1-1.4.8"/> step.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">DeleteOSD</emphasis> with OSD Token = <emphasis role="italic">OSDConfigurationToken1</emphasis> as input parameter.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends <emphasis role="bold">DeleteOSDResponse</emphasis>, which indicates that DUT has deleted OSD Configuration. ONVIF Client verifies the response.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set <emphasis role="italic">osdTextStringType2</emphasis> := <emphasis role="italic">OSDOptions1</emphasis>.TextOption.Type[0], where Type[0] is the last in Type list from {Plain, Date, Time, DateAndTime} values
                    </para>
                  </listitem>
                  <!--<listitem>
                    <para>
                      If <emphasis role="italic">osdTextStringType2</emphasis> is not equals to <emphasis role="italic">osdTextStringType1</emphasis>:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                    <para xml:id="tc.MEDIA2-6-1-1.4.16" xreflabel="4.16">
                      ONVIF Client configures Device to have free space to create OSD with Text type and with required TextString Type by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationToCreateOSD"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">OSDConfigurationsList1</emphasis> - OSD Configurations List
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">osdOptions</emphasis> - OSD Options
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in "Text" - OSD Type
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">osdTextStringType2</emphasis> - OSD TextString Type
                          </para>
                        </listitem>
                       <listitem>
                          <para>
                            out <emphasis role="italic">OSDConfigurationsList1</emphasis> - updated OSD Configurations List
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                      </orderedlist>
                    </para>
                  </listitem>-->



                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">CreateOSD</emphasis> with token = "testOSD", VideoSourceConfigurationToken = <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>, Type="Text" and the rest of parameters are populated using values from <emphasis role="italic">OSDOptions1</emphasis>. For this step, if the value has a range of available values, then maximum value (or the last value from list if list of available values is provided by DUT) from <emphasis role="italic">OSDOptions1</emphasis> should be used. See details of fields mapping in <xref linkend="Annex_HelperOSDOvsOSD"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT created OSD Configuration and sends <emphasis role="bold">CreateOSDResponse</emphasis> message. ONVIF Client receives <emphasis role="bold">CreateOSDResponse</emphasis> with token of newly created OSD Configuration and saves this token to <emphasis role="italic">OSDConfigurationToken2</emphasis> variable.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client verifies that <emphasis role="italic">OSDConfigurationsList1</emphasis> does not contain configuration with token = <emphasis role="italic">OSDConfigurationToken2</emphasis>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> message with configuration token = <emphasis role="italic">OSDConfigurationsList1</emphasis> as input parameter to retrieve the list of OSD Configurations, which includes newly created OSD Configuration.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends <emphasis role="bold">GetOSDsResponse</emphasis> with a list of OSD Configurations. ONVIF Client verifies that response contains OSD Configuration with token = <emphasis role="italic">OSDConfigurationToken2</emphasis> and the fields of this configuration equal to the fields set at step 4.15.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">DeleteOSD</emphasis> with OSD Token = <emphasis role="italic">OSDConfigurationToken2</emphasis> as input parameter.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends <emphasis role="bold">DeleteOSDResponse</emphasis>, which indicates that DUT has deleted OSD Configuration. ONVIF Client verifies the response.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> message with configuration token = <emphasis role="italic">VideoSourceConfigurationToken1</emphasis> as input parameter to retrieve the list of OSD Configurations, which includes newly created OSD Configuration.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends <emphasis role="bold">GetOSDsResponse</emphasis> with a list of OSD Configurations. ONVIF Client verifies that response does not contain OSD Configuration with token = <emphasis role="italic">OSDConfigurationToken2</emphasis>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If OSD Configuration was deleted at <xref linkend="tc.MEDIA2-6-1-1.4.7"/> step, ONVIF Client restores OSD Configuration.
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send at least one text overlay (Text Option is skipped) in <emphasis role="bold">GetOSDOptionsResponse</emphasis>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> does not contain at least one Video Source configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDOptionsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateOSDResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">DeleteOSDResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">GetOSDsResponse</emphasis> contains deleted OSD Configuration
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-6-1-2-->
      <section xml:id="tc.MEDIA2-6-1-2">
        <title>CREATE OSD CONFIGURATION FOR IMAGE OVERLAY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-6-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetVideoSourceConfigurations, GetOSDs, GetOSDOptions, CreateOSD, DeleteOSD
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the DUT creates OSD Configuration.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service feature is supported by DUT. OSD feature is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> message to retrieve a list of existing Video Source Configurations on the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT returns at least one Video Source Configuration in the <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message. For each Video Source Configuration from <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis>, ONVIF Client saves the token of this configuration in VideoSourceConfigurationToken1 variable and runs steps 4.1 - 4.24:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDToken - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetOSDsResponse</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDs list =: <emphasis role="italic">OSDConfigurationsList1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDOptions</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT responds with <emphasis role="bold">GetOSDOptionsResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDOptions =: <emphasis role="italic">OSDOptions1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>



                  <!--<listitem>
                    <para>
                      If <emphasis role="bold">GetOSDOptionsResponse</emphasis> contains at least one item in Image Option list (image overlay), then ONVIF Client saves the options from <emphasis role="bold">GetOSDOptionsResponse</emphasis> in <emphasis role="italic">OSDOptions1</emphasis> variable and goes to step 4.6.
                    </para>
                  </listitem>-->
                  <listitem>
                    <para>
                      ONVIF Client checks if current Video Source Configuration supports OSD configurations of the Type = Image. Otherwise, skip steps 4.6 – 4.24 and go to the next Video Source Configuration.
                    </para>
                  </listitem>

                  <listitem>
                    <para xml:id="tc.MEDIA2-6-1-2.4.7" xreflabel="4.6">
                      ONVIF Client configures Device to have free space to create OSD with Image type by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationToCreateOSD"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">OSDConfigurationsList1</emphasis> - OSD Configurations List
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">osdOptions</emphasis> - OSD Options
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in "Image" - OSD Type
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            out <emphasis role="italic">OSDConfigurationsList1</emphasis> - updated OSD Configurations List
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">osdOptions</emphasis>.ImageOption contains FormatsSupported attribute:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            Set <emphasis role="italic">imagePath1</emphasis> := <emphasis role="italic">osdOptions</emphasis>.ImageOption.ImagePath[0]
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF client invokes <emphasis role="bold">HTTP POST</emphasis> to <emphasis role="italic">imagePath1</emphasis> with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  HTTP Header [Content-Type] := "image/png"
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  HTTP Body := PNG picture (see <xref linkend="Annex_OSDPictureFileParameters"/> for details)
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">HTTP 200 OK</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client waits <emphasis role="italic">timeout1</emphasis>.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis>.ImageOption contains more than one ImagePath:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  Set <emphasis role="italic">imagePath2</emphasis> := <emphasis role="italic">osdOptions</emphasis>.ImageOption.ImagePath[last]
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  ONVIF client invokes <emphasis role="bold">HTTP POST</emphasis> to <emphasis role="italic">imagePath2</emphasis> with parameters
                                  <itemizedlist>
                                    <listitem>
                                      <para>
                                        HTTP Header [Content-Type] := "image/png"
                                      </para>
                                    </listitem>
                                    <listitem>
                                      <para>
                                        HTTP Body := PNG picture (see <xref linkend="Annex_OSDPictureFileParameters"/> for details)
                                      </para>
                                    </listitem>
                                  </itemizedlist>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  The DUT responds with <emphasis role="bold">HTTP 200 OK</emphasis> message.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  ONVIF Client waits <emphasis role="italic">timeout1</emphasis>.
                                </para>
                              </listitem>
                            </orderedlist>
                          </para>
                        </listitem>

                      </orderedlist>
                    </para>
                  </listitem>


                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">CreateOSD</emphasis> with token = "testOSD", VideoSourceConfigurationToken = <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>, Type="Image", Position. Type should be set to the first item from <emphasis role="italic">OSDOptions1</emphasis>.PositionOption list and Image.ImgPath should be set to the first item from <emphasis role="italic">OSDOptions1</emphasis>.ImageOption.ImagePath list.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT creates OSD Configuration and sends <emphasis role="bold">CreateOSDResponse</emphasis> message. ONVIF Client receives <emphasis role="bold">CreateOSDResponse</emphasis> with token of newly created OSD Configuration and saves this token to OSDConfigurationToken1 variable.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client verifies that <emphasis role="italic">OSDConfigurationsList1</emphasis> does not contain configuration with token = <emphasis role="italic">OSDConfigurationToken1</emphasis>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> message with OSD Token = <emphasis role="italic">OSDConfigurationToken1</emphasis> as input parameter to retrieve newly created OSD Configuration.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends OSD Configuration for the given token. ONVIF Client verifies that response contains OSD Configuration with token = <emphasis role="italic">OSDConfigurationToken1</emphasis> and configuration fields equal to the fields set at step in 4.6.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">DeleteOSD</emphasis> with OSD Token = <emphasis role="italic">OSDConfigurationToken1</emphasis> as input parameter.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends <emphasis role="bold">DeleteOSDResponse</emphasis>, which indicates that DUT has deleted OSD Configuration. ONVIF Client verifies the response.
                    </para>
                  </listitem>



                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">CreateOSD</emphasis> with token = "testOSD", VideoSourceConfigurationToken = <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>, Type="Image", Position. Type should be set to the last item from <emphasis role="italic">OSDOptions1</emphasis>.PositionOption list and Image.ImgPath should be set to the last item from <emphasis role="italic">OSDOptions1</emphasis>.ImageOption.ImagePath list.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT created OSD Configuration and sends <emphasis role="bold">CreateOSDResponse</emphasis> message. ONVIF Client receives <emphasis role="bold">CreateOSDResponse</emphasis> with token of newly created OSD Configuration and saves this token to <emphasis role="italic">OSDConfigurationToken2</emphasis> variable.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client verifies that <emphasis role="italic">OSDConfigurationsList1</emphasis> does not contain configuration with token = <emphasis role="italic">OSDConfigurationToken2</emphasis>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> message with configuration token = <emphasis role="italic">OSDConfigurationToken2</emphasis> as input parameter to retrieve the list of OSD Configurations, which includes newly created OSD Configuration.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends <emphasis role="bold">GetOSDsResponse</emphasis> with a list of OSD Configurations. ONVIF Client verifies that response contains OSD Configuration with token = <emphasis role="italic">OSDConfigurationToken2</emphasis> and configuration fields equal to the fields set at step in 4.16.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">DeleteOSD</emphasis> with OSD Token = <emphasis role="italic">OSDConfigurationToken2</emphasis> as input parameter.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends <emphasis role="bold">DeleteOSDResponse</emphasis>, which indicates that DUT has deleted OSD Configuration. ONVIF Client verifies the response.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> message with configuration token = <emphasis role="italic">VideoSourceConfigurationToken1</emphasis> as input parameter to retrieve the list of OSD Configurations, which includes newly created OSD Configuration.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends <emphasis role="bold">GetOSDsResponse</emphasis> with a list of OSD Configurations. ONVIF Client verifies that response does not contain OSD Configuration with token = <emphasis role="italic">OSDConfigurationToken2</emphasis>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If OSD Configuration was deleted at <xref linkend="tc.MEDIA2-6-1-2.4.7"/> step, ONVIF Client restores OSD Configuration.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send at least one image overlay (Image Option is skipped) in <emphasis role="bold">GetOSDOptionsResponse</emphasis>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> does not contain at least one Video Source configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDOptionsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateOSDResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">DeleteOSDResponse</emphasis> message.
              </para>
            </listitem>

            <listitem>
              <para>
                The <emphasis role="bold">GetOSDsResponse</emphasis> contains deleted OSD Configuration.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-6-1-3-->
      <section xml:id="tc.MEDIA2-6-1-3">
        <title>SET OSD CONFIGURATION IMAGE OVERLAY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-6-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetVideoSourceConfigurations, GetOSDs, GetOSDOptions, CreateOSD, DeleteOSD, SetOSD
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that DUT changes OSD Configuration for Image Overlay.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service feature is supported by DUT. OSD feature is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> message to retrieve a list of existing Video Source Configurations on the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT returns at least one Video Source Configuration in the <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message. For each Video Source Configuration from <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis>, ONVIF Client saves this configuration in VideoSourceConfigurationToken1 variable and runs the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDOptions</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT responds with <emphasis role="bold">GetOSDOptionsResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDOptions =: <emphasis role="italic">osdOptions1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <!--<listitem>
                    <para>
                      DUT sends the range of configurable values for the given video source configuration in the <emphasis role="bold">GetOSDOptionsResponse</emphasis> message.
                    </para>
                  </listitem>-->
                  <listitem>
                    <para>
                      If <emphasis role="bold">GetOSDOptionsResponse</emphasis> contains at least one item in Image Option (image overlay), then ONVIF Client saves the options from <emphasis role="bold">GetOSDOptionsResponse</emphasis> in <emphasis role="italic">OSDOptions1</emphasis> variable and goes to step 4.5.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">OSDOptions1</emphasis> Image Option list is empty, then PASS the test.
                    </para>
                  </listitem>
                  <!--<listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> with configuration token = <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>. DUT sends <emphasis role="bold">GetOSDsResponse</emphasis> with a list of OSD Configurations.
                    </para>
                  </listitem>-->
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDToken - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetOSDsResponse</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDs list =: <emphasis role="italic">OSDConfigurationsList1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>

                  <listitem>
                    <para xml:id="tc.MEDIA2-6-1-3.4.7" xreflabel="4.7">
                      ONVIF Client configures Device to have free space to create OSD with Image type and with required TextString Type by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationToCreateOSD"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">OSDConfigurationsList1</emphasis> - OSD Configurations List
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">osdOptions</emphasis> - OSD Options
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in "Image" - OSD Type
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            out <emphasis role="italic">OSDConfigurationsList1</emphasis> - updated OSD Configurations List
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">osdOptions</emphasis>.ImageOption contains FormatsSupported attribute:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            Set <emphasis role="italic">imagePath1</emphasis> := <emphasis role="italic">osdOptions</emphasis>.ImageOption.ImagePath[0]
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF client invokes <emphasis role="bold">HTTP POST</emphasis> to <emphasis role="italic">imagePath1</emphasis> with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  HTTP Header [Content-Type] := "image/png"
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  HTTP Body := PNG picture (see <xref linkend="Annex_OSDPictureFileParameters"/> for details)
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">HTTP 200 OK</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client waits <emphasis role="italic">timeout1</emphasis>.
                          </para>
                        </listitem>

                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">CreateOSD</emphasis> with token = "testOSD", VideoSourceConfigurationToken = <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>, Type="Image", Position.Type should be set to the first item from <emphasis role="italic">OSDOptions1</emphasis>.PositionOption list and Image.ImgPath should be set to the first item from <emphasis role="italic">OSDOptions1</emphasis>.ImageOption.ImagePath list.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT creates OSD Configuration and sends <emphasis role="bold">CreateOSDResponse</emphasis> message. ONVIF Client receives <emphasis role="bold">CreateOSDResponse</emphasis> with token of newly created OSD Configuration and saves this token to OSDConfigurationToken1 variable.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> message with OSD Token = <emphasis role="italic">OSDConfigurationToken1</emphasis> as input parameter to retrieve newly created OSD Configuration.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends OSD Configuration for the given token. ONVIF Client verifies that response contains OSD Configuration with token = <emphasis role="italic">OSDConfigurationToken1</emphasis> and saves this configuration in OSDConfigurations1 variable.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client changes position parameter in OSDConfigurations1 variable. The Position.Type should be changed to the last item from <emphasis role="italic">OSDOptions1</emphasis>.PositionOption list.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">SetOSD</emphasis> with OSD = OSDConfigurations1 as input parameter. DUT applies the changes and sends <emphasis role="bold">SetOSDResponse</emphasis>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> message with OSD Token = OSDConfigurations1 token as input parameter.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends OSD Configuration for the given token. ONVIF Client verifies that response contains OSD Configuration with token = OSDConfigurations1 token and Position.Type is set to the value, which has been set at step 4.11.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If new OSD Configuration has been created at step 4.5, then ONVIF Client invokes <emphasis role="bold">DeleteOSD</emphasis> with OSD Token = OSDConfigurations1 token as input parameter.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends <emphasis role="bold">DeleteOSDResponse</emphasis>, which indicates that DUT has deleted OSD Configuration. ONVIF Client verifies the response.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If OSD Configuration was deleted at <xref linkend="tc.MEDIA2-6-1-3.4.7"/> step, ONVIF Client restores OSD Configuration.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send at least one image overlay (Image Option list is empty) in <emphasis role="bold">GetOSDOptionsResponse</emphasis>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> does not contain at least one Video Source configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDOptionsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateOSDResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT rejected create OSD Request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">DeleteOSDResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">DeleteOSDResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-6-1-4-->
      <section xml:id="tc.MEDIA2-6-1-4">
        <title>SET OSD CONFIGURATION TEXT OVERLAY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-6-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetVideoSourceConfigurations, GetOSDs, GetOSDOptions, CreateOSD, DeleteOSD, SetOSD
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that DUT changes OSD Configuration for Test Overlay.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service feature is supported by DUT. OSD feature is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> message to retrieve a list of existing Video Source Configurations on the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT returns at least one Video Source Configuration in the <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message. For each Video Source Configuration from <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis>, ONVIF Client saves this configuration in VideoSourceConfigurationToken1 variable and runs steps  4.1 - 4.18:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>


                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDOptions</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT responds with <emphasis role="bold">GetOSDOptionsResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDOptions =: <emphasis role="italic">OSDOptions1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDToken - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetOSDsResponse</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDs list =: <emphasis role="italic">OSDConfigurationsList1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>


                  <listitem>
                    <para>
                      Onvif client checks if DUT supports OSD configurations of the type=text. Otherwise, skip all steps and pass the test.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set <emphasis role="italic">osdTextStringType</emphasis> := <emphasis role="italic">OSDOptions1</emphasis>.TextOption.Type[0], where Type[0] is the 1st in Type list from {Plain, Date, Time, DateAndTime} values
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="tc.MEDIA2-6-1-4.4.7" xreflabel="4.7">
                      ONVIF Client configures Device to have free space to create OSD with Text type and with required TextString Type by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationToCreateOSD"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">OSDConfigurationsList1</emphasis> - OSD Configurations List
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">osdOptions</emphasis> - OSD Options
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in "Text" - OSD Type
                          </para>
                        </listitem>
                        <!--<listitem>
                          <para>
                            in <emphasis role="italic">osdTextStringType</emphasis> - OSD TextString Type
                          </para>
                        </listitem>-->
                        <listitem>
                          <para>
                            out <emphasis role="italic">OSDConfigurationsList1</emphasis> - updated OSD Configurations List
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">CreateOSD</emphasis> with token = "testOSD", VideoSourceConfigurationToken = <emphasis role="italic">VideoSourceConfigurationToken1</emphasis>, Type="Text"  and the rest of parameters are populated using values from <emphasis role="italic">OSDOptions1</emphasis>. For this step, if the value has a range of available values, then minimum value (or the first value from list if list of available values is provided by DUT) from <emphasis role="italic">OSDOptions1</emphasis> should be used. See details of fields mapping in <xref linkend="Annex_HelperOSDOvsOSD"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT creates OSD Configuration and sends <emphasis role="bold">CreateOSDResponse</emphasis> message. ONVIF Client receives <emphasis role="bold">CreateOSDResponse</emphasis> with token of newly created OSD Configuration and saves this token to OSDConfigurationToken1 variable.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> message with OSD Token = <emphasis role="italic">OSDConfigurationToken1</emphasis> as input parameter to retrieve newly created OSD Configuration.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends OSD Configuration for the given token. ONVIF Client verifies that response contains OSD Configuration with token = <emphasis role="italic">OSDConfigurationToken1</emphasis> and saves this configuration in <emphasis role="italic">OSDConfigurations1</emphasis> variable.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client changes the fields value of <emphasis role="italic">OSDConfigurations1</emphasis> variable to the maximum available values. If the value has a range of available values, then maximum value (or the last value from list if list of available values is provided by DUT) from <emphasis role="italic">OSDOptions1</emphasis> should be used. OSD.TextString.Type shall not be changed. See details of fields mapping in <xref linkend="Annex_HelperOSDOvsOSD"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">SetOSD</emphasis> with OSD = <emphasis role="italic">OSDConfigurations1</emphasis> as input parameter. DUT applies the changes and sends <emphasis role="bold">SetOSDResponse</emphasis>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> message with OSD Token = <emphasis role="italic">OSDConfigurations1</emphasis> token as input parameter.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends OSD Configuration for the given token. ONVIF Client verifies that response contains OSD Configuration with token = <emphasis role="italic">OSDConfigurations1</emphasis> token and configuration fields equal to the fields set at step 4.9.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If new OSD Configuration has been created at step 4.5, then ONVIF Client invokes <emphasis role="bold">DeleteOSD</emphasis> with OSD Token = <emphasis role="italic">OSDConfigurations1</emphasis> token as input parameter.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT sends <emphasis role="bold">DeleteOSDResponse</emphasis>, which indicates that DUT has deleted OSD Configuration. ONVIF Client verifies the response.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If OSD Configuration was deleted at <xref linkend="tc.MEDIA2-6-1-4.4.7"/> step, ONVIF Client restores OSD Configuration.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> does not contain at least one Video Source configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDOptionsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateOSDResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT rejected create OSD Request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetOSDResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">DeleteOSDResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-6-1-5-->
      <section xml:id="tc.MEDIA2-6-1-5">
        <title>GET OSDS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-6-1-5
        </para>
        <para>
          <emphasis role="bold">Specification coverage:</emphasis> GetOSDs (Media 2 Service Specification), Get configurations (Media 2 Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature under test:</emphasis> GetOSDs
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify DUT sends complete OSDs list and list of OSDs, which are compatible with specific Video Source Configuration.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. OSD feature is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      OSDToken - skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ConfigurationToken - skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetOSDsResponse</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      OSDs list =: <emphasis role="italic">osdConfCompleteList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">osdConfCompleteList1</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">videoSourceConfList1</emphasis> - Video Source Configurations list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each Video Source Configuration <emphasis role="italic">videoSourceConf1</emphasis> in <emphasis role="italic">videoSourceConfList1</emphasis> list repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDToken - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">videoSourceConf1</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetOSDsResponse</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDs list =: <emphasis role="italic">osdConfList1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">osdConfList1</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">osdConfCompleteList1</emphasis> does not contain at least one item from <emphasis role="italic">osdConfList1</emphasis> list, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetOSDsResponse</emphasis> message(s).
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-6-1-6-->
      <section xml:id="tc.MEDIA2-6-1-6">
        <title>GET OSD OPTIONS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-6-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetOSDOptions
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetOSDOptions
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify consistency in OSD Options.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service feature is supported by DUT. OSD feature is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">videoSourceConfList</emphasis> - Video Source Configurations list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each Video Source Configuration <emphasis role="italic">videoSourceConfiguration</emphasis> in <emphasis role="italic">videoSourceConfList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDOptions</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT responds with <emphasis role="bold">GetOSDOptionsResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDOptions =: <emphasis role="italic">osdOptions</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="tc.MEDIA2-6-1-6.4.3" xreflabel="4.3">
                      If <emphasis role="italic">osdOptions</emphasis>.MaximumNumberOfOSDs.Total &gt; 0:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis> has Type = "Text" and does not have TextOption element, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis> has TextOption element and does not have Type = "Text" , FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis> has Type = "Image" and does not have ImageOption element, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis> has ImageOption element and does not have Type = "Image" , FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis>.MaximumNumberOfOSDs has @PlainText with value &gt; 0 and <emphasis role="italic">osdOptions</emphasis> does not have Type = "Text", FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis>.MaximumNumberOfOSDs has @Image with value &gt; 0 and <emphasis role="italic">osdOptions</emphasis> does not have Type = "Image", FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis>.ImageOption contains FormatsSupported attribute:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="3.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">osdOptions</emphasis>.ImageOption.FormatsSupported does not contain "image/png" item, FAIL the test and skip other steps.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">osdOptions</emphasis>.ImageOption does not contain MaxSize attribute or it does not contain both MaxWidth attribute and MaxHeight attribute, FAIL the test and skip other steps.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">osdOptions</emphasis>.ImageOption contains MaxSize attribute with value less than 1024, FAIL the test and skip other steps.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">osdOptions</emphasis>.ImageOption contains MaxWidth attribute with value less than 16, FAIL the test and skip other steps.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">osdOptions</emphasis>.ImageOption contains MaxHeight attribute with value less than 16, FAIL the test and skip other steps.
                                </para>
                              </listitem>
                            </orderedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis>.TextOption has Type = "Date" and does not have at least one DateFormat element, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis>.TextOption has Type = "Time" and does not have at least one TimeFormat element, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis>.TextOption has Type = "DateAndTime" and does not have at least one DateFormat element and at least one TimeFormat element, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If there was no at least one <emphasis role="italic">osdOptions</emphasis> with MaximumNumberOfOSDs.Total &gt; 0 at step <xref linkend="tc.MEDIA2-6-1-6.4.3"/>, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>

        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>


            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDOptionsResponse</emphasis> message(s).
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-6-1-7-->
      <section xml:id="tc.MEDIA2-6-1-7">
        <title>OSD CONFIGURATIONS AND OSD OPTIONS CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-6-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetOSDOptions, GetOSDs
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetOSDOptions, GetOSDs
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify all OSD configurations are consistent with OSD Options.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service feature is supported by DUT. OSD feature is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">videoSourceConfList</emphasis> - Video Source Configurations list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each Video Source Configuration <emphasis role="italic">videoSourceConfiguration</emphasis> in <emphasis role="italic">videoSourceConfList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDs</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDToken skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT responds with <emphasis role="bold">GetOSDsResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDs =: <emphasis role="italic">osdList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">osdList</emphasis> is empty, skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetOSDOptions</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">videoSourceConfiguration</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DUT responds with <emphasis role="bold">GetOSDOptionsResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            OSDOptions =: <emphasis role="italic">osdOptions</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      For each OSD <emphasis role="italic">osd</emphasis> in <emphasis role="italic">osdList</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osd</emphasis>.VideoSourceConfigurationToken is not equal to <emphasis role="italic">videoSourceConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <!--#1581-->
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis>.MaximumNumberOfOSDs.Total is not greater than 0, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis> does not contain Type element with value is equal to <emphasis role="italic">osd</emphasis>.Type, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osdOptions</emphasis> does not contain PositionOption element with value is equal to <emphasis role="italic">osd</emphasis>.Position.Type, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osd</emphasis>.TextString specified:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">osdOptions</emphasis> does not contain TextOption element with Type element with value is equal to <emphasis role="italic">osd</emphasis>.TextString.Type, FAIL the test and skip other steps.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Set <emphasis role="italic">osdOptions</emphasis>.TextOption =: <emphasis role="italic">textOption1</emphasis>.
                                </para>
                              </listitem>
                            </orderedlist>
                          </para>
                        </listitem>


                        <listitem>
                          <para>
                            If <emphasis role="italic">osd</emphasis>.TextString.DateFormat specified:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis> does not contain at least one DateFormat element with value is equal to <emphasis role="italic">osd</emphasis>.TextString.DateFormat, FAIL the test and skip other steps.
                                </para>
                              </listitem>
                            </orderedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">osd</emphasis>.TextString.TimeFormat specified:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis> does not contain at least one TimeFormat element with value is equal to <emphasis role="italic">osd</emphasis>.TextString.TimeFormat, FAIL the test and skip other steps.
                                </para>
                              </listitem>
                            </orderedlist>
                          </para>
                        </listitem>
                        <!--FontSize-->
                        <listitem>
                          <para>
                            If <emphasis role="italic">osd</emphasis>.TextString.FontSize specified:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis>.FontSizeRange.Min &#62; <emphasis role="italic">osd</emphasis>.TextString.FontSize, FAIL the test and skip other steps.

                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis>.FontSizeRange.Max &#60; <emphasis role="italic">osd</emphasis>.TextString.FontSize, FAIL the test and skip other steps.

                                </para>
                              </listitem>
                            </orderedlist>
                          </para>
                        </listitem>
                        <!--FontColor-->
                        <listitem>
                          <para>
                            If <emphasis role="italic">osd</emphasis>.TextString.FontColor specified:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis> does not contain FontColor.Color element, FAIL the test and skip other steps.

                                </para>
                              </listitem>


                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis>.FontColor.Color has at least one ColorList element:

                                  <orderedlist numeration="arabic" inheritnum="inherit">
                                    <?dbfo label-width="6.5em"?>


                                    <listitem>
                                      <para>
                                        If <emphasis role="italic">textOption1</emphasis>.FontColor does not contain ColorList element with @X  = <emphasis role="italic">osd</emphasis>.TextString.FontColor.Color.@X, and with @Y  = <emphasis role="italic">osd</emphasis>.TextString.FontColor.Color.@Y, and with @Z = <emphasis role="italic">osd</emphasis>.TextString.FontColor.Color.@Z, and with @Colorspace = <emphasis role="italic">osd</emphasis>.TextString.FontColor.Color.@Colorspace, FAIL the test and skip other steps.
                                      </para>
                                    </listitem>
                                  </orderedlist>

                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis>.FontColor.Color has at least one ColorspaceRange element:
                                  <orderedlist numeration="arabic" inheritnum="inherit">
                                    <?dbfo label-width="5.5em"?>
                                    <listitem>
                                      <para>
                                        If <emphasis role="italic">osd</emphasis>.TextString.FontColor.Color does not have @Colorspace element, FAIL the test and skip other steps.
                                      </para>
                                    </listitem>
                                    <listitem>
                                      <para>
                                        Set <emphasis role="italic">textOption1</emphasis>.FontColor.Color.ColorspaceRange =: <emphasis role="italic">colorspaceRange1</emphasis>, where <emphasis role="italic">textOption1</emphasis>.FontColor.Color.ColorspaceRange is the first ColorspaceRange element that corresponds the following requirements:
                                        <itemizedlist>
                                          <listitem>
                                            <para>
                                              <emphasis role="italic">colorspaceRange1</emphasis>.@Colorspace = <emphasis role="italic">osd</emphasis>.TextString.FontColor.Color.@Colorspace.
                                            </para>
                                          </listitem>

                                          <listitem>
                                            <para>
                                              <emphasis role="italic">colorspaceRange1</emphasis>.X.Min &lt;= <emphasis role="italic">osd</emphasis>.TextString.FontColor.Color.@X
                                            </para>
                                          </listitem>
                                          <listitem>
                                            <para>
                                              <emphasis role="italic">colorspaceRange1</emphasis>.X.Max &gt;= <emphasis role="italic">osd</emphasis>.TextString.FontColor.Color.@X
                                            </para>
                                          </listitem>
                                          <listitem>
                                            <para>
                                              <emphasis role="italic">colorspaceRange1</emphasis>.Y.Min &lt;= <emphasis role="italic">osd</emphasis>.TextString.FontColor.Color.@Y
                                            </para>
                                          </listitem>
                                          <listitem>
                                            <para>
                                              <emphasis role="italic">colorspaceRange1</emphasis>.Y.Max &gt;= <emphasis role="italic">osd</emphasis>.TextString.FontColor.Color.@Y
                                            </para>
                                          </listitem>
                                          <listitem>
                                            <para>
                                              <emphasis role="italic">colorspaceRange1</emphasis>.Z.Min &lt;= <emphasis role="italic">osd</emphasis>.TextString.FontColor.Color.@Z
                                            </para>
                                          </listitem>
                                          <listitem>
                                            <para>
                                              <emphasis role="italic">colorspaceRange1</emphasis>.Z.Max &gt;= <emphasis role="italic">osd</emphasis>.TextString.FontColor.Color.@Z
                                            </para>
                                          </listitem>
                                        </itemizedlist>
                                      </para>
                                    </listitem>
                                    <listitem>
                                      <para>
                                        If <emphasis role="italic">colorspaceRange1</emphasis> is empty, FAIL the test and skip other steps.

                                      </para>
                                    </listitem>

                                  </orderedlist>


                                </para>
                              </listitem>

                            </orderedlist>
                          </para>
                        </listitem>
                        <!--FontColor.Transparent-->
                        <listitem>
                          <para>
                            If <emphasis role="italic">osd</emphasis>.TextString.FontColor.@Transparent specified:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis> does not contain FontColor.Transparent element, FAIL the test and skip other steps.

                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis>.FontColor.Transparent.Min &gt; <emphasis role="italic">osd</emphasis>.TextString.FontColor.@Transparent, FAIL the test and skip other steps.

                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis>.FontColor.Transparent.Max &lt; <emphasis role="italic">osd</emphasis>.TextString.FontColor.@Transparent, FAIL the test and skip other steps.

                                </para>
                              </listitem>



                            </orderedlist>
                          </para>
                        </listitem>
                        <!--BackgroundColor-->
                        <listitem>
                          <para>
                            If <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor specified:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis> does not contain BackgroundColor.Color element, FAIL the test and skip other steps.

                                </para>
                              </listitem>



                            </orderedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">textOption1</emphasis>.BackgroundColor.Color has at least one ColorList element:

                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="6.5em"?>


                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis>.BackgroundColor does not contain ColorList element with @X  = <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.Color.@X, and with @Y  = <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.Color.@Y, and with @Z = <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.Color.@Z, and with @Colorspace = <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.Color.@Colorspace, FAIL the test and skip other steps.
                                </para>
                              </listitem>
                            </orderedlist>

                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">textOption1</emphasis>.BackgroundColor.Color has at least one ColorspaceRange element:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="5.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.Color does not have @Colorspace element, FAIL the test and skip other steps.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Set <emphasis role="italic">textOption1</emphasis>.BackgroundColor.Color.ColorspaceRange =: <emphasis role="italic">colorspaceRange1</emphasis>, where <emphasis role="italic">textOption1</emphasis>.BackgroundColor.Color.ColorspaceRange is the first ColorspaceRange element that corresponds the following requirements:
                                  <itemizedlist>
                                    <listitem>
                                      <para>
                                        <emphasis role="italic">colorspaceRange1</emphasis>.@Colorspace = <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.Color.@Colorspace.
                                      </para>
                                    </listitem>

                                    <listitem>
                                      <para>
                                        <emphasis role="italic">colorspaceRange1</emphasis>.X.Min &lt;= <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.Color.@X
                                      </para>
                                    </listitem>
                                    <listitem>
                                      <para>
                                        <emphasis role="italic">colorspaceRange1</emphasis>.X.Max &gt;= <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.Color.@X
                                      </para>
                                    </listitem>
                                    <listitem>
                                      <para>
                                        <emphasis role="italic">colorspaceRange1</emphasis>.Y.Min &lt;= <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.Color.@Y
                                      </para>
                                    </listitem>
                                    <listitem>
                                      <para>
                                        <emphasis role="italic">colorspaceRange1</emphasis>.Y.Max &gt;= <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.Color.@Y
                                      </para>
                                    </listitem>
                                    <listitem>
                                      <para>
                                        <emphasis role="italic">colorspaceRange1</emphasis>.Z.Min &lt;= <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.Color.@Z
                                      </para>
                                    </listitem>
                                    <listitem>
                                      <para>
                                        <emphasis role="italic">colorspaceRange1</emphasis>.Z.Max &gt;= <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.Color.@Z
                                      </para>
                                    </listitem>
                                  </itemizedlist>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">colorspaceRange1</emphasis> is empty, FAIL the test and skip other steps.

                                </para>
                              </listitem>

                            </orderedlist>


                          </para>
                        </listitem>
                        <!--BackgroundColor.Transparent-->
                        <listitem>
                          <para>
                            If <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.@Transparent specified:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis> does not contain BackgroundColor.Transparent element, FAIL the test and skip other steps.

                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis>.BackgroundColor.Transparent.Min &gt; <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.@Transparent, FAIL the test and skip other steps.

                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">textOption1</emphasis>.BackgroundColor.Transparent.Max &lt; <emphasis role="italic">osd</emphasis>.TextString.BackgroundColor.@Transparent, FAIL the test and skip other steps.

                                </para>
                              </listitem>



                            </orderedlist>
                          </para>
                        </listitem>

                        <listitem>
                          <para>
                            If <emphasis role="italic">osd</emphasis>.Image specified:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">osdOptions</emphasis> does not contain ImageOption element, FAIL the test and skip other steps.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">osdOptions</emphasis>.ImageOption does not contain ImagePath element with value is equal to <emphasis role="italic">osd</emphasis>.Image.ImgPath, FAIL the test and skip other steps.
                                </para>
                              </listitem>

                            </orderedlist>
                          </para>
                        </listitem>


                      </orderedlist>
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
          </orderedlist>

        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>

            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDsResponse</emphasis> message(s).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetOSDOptionsResponse</emphasis> message(s).
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Capabilities-->
    <section xml:id="tc.media_configuration.capabilities">
      <title>Capabilities</title>
      <!--MEDIA2-7-1-1-->
      <section xml:id="tc.MEDIA2-7-1-1">
        <title>MEDIA2 SERVICE CAPABILITIES</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-7-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Capabilities (ONVIF Media2 Service Specification),  GetServiceCapabilities command (ONVIF Media2 Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServiceCapabilities (for Media2 Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Media2 Service Capabilities.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Capabilities =: <emphasis role="italic">cap</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.ProfileCapabilities does not contain MaximumNumberOfProfiles attribute, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.ProfileCapabilities does not contain ConfigurationsSupported attribute, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.ProfileCapabilities.ConfigurationsSupported contains no items, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.ProfileCapabilities.ConfigurationsSupported contains 'All' item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Analytics Service and <emphasis role="italic">cap</emphasis>.ProfileCapabilities.ConfigurationsSupported does not contain 'Analytics' item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT <emphasis role="italic">cap</emphasis>.ProfileCapabilities.ConfigurationsSupported contains 'Analytics' item and DUT does not support Analytics Service, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports PTZ Service and <emphasis role="italic">cap</emphasis>.ProfileCapabilities.ConfigurationsSupported does not contain 'PTZ' item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT <emphasis role="italic">cap</emphasis>.ProfileCapabilities.ConfigurationsSupported contains 'PTZ' item and DUT does not support PTZ Service, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Media2/Video feature and <emphasis role="italic">cap</emphasis>.ProfileCapabilities.ConfigurationsSupported does not contain 'VideoSource' item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Media2/Audio feature and <emphasis role="italic">cap</emphasis>.ProfileCapabilities.ConfigurationsSupported does not contain 'AudioSource' item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Media2/Audio outputs feature and <emphasis role="italic">cap</emphasis>.ProfileCapabilities.ConfigurationsSupported does not contain 'AudioDecoder' item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.StreamingCapabilities contains RTSPWebSocketUri
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>

                  <listitem>
                    <para>
                      Set <emphasis role="italic">rtspWebSocketUri</emphasis> := <emphasis role="italic">cap</emphasis>.StreamingCapabilities.RTSPWebSocketUri
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      If scheme component of <emphasis role="italic">rtspWebSocketUri</emphasis> is not equal to <emphasis role="bold">ws</emphasis> or <emphasis role="bold">wss</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If hierarchical component (hier_part in [rfc2396]) of <emphasis role="italic">rtspWebSocketUri</emphasis> is not absolute path construction (abs_path in [rfc2396]), FAIL the test and skip other steps.
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.ProfileCapabilities.ConfigurationsSupported contains 'PTZ' item
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetConfigurations</emphasis> request.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetConfigurationsResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            PTZConfiguration list =: <emphasis role="italic">ptzConfigurationList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">ptzConfigurationList</emphasis> is empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.ProfileCapabilities.ConfigurationsSupported contains 'Analytics' item
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetAnalyticsConfigurations</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ConfigurationToken  skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ProfileToken skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAnalyticsConfigurationsResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Configurations list =: <emphasis role="italic">analyticsConfigurationList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">analyticsConfigurationList</emphasis> is empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>

            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetAnalyticsConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <section xml:id="tc.MEDIA2-7-1-2">
        <title>GET SERVICES AND GET MEDIA2 SERVICE CAPABILITIES CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-7-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Capability exchange (ONVIF Core Specification), Capabilities (ONVIF Media2 Service Specification), GetServiceCapabilities command (ONVIF Media2 Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServices, GetServiceCapabilities (for Media2 Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> devicemgmt.wsdl, media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Services and Media2 Service Capabilities consistency.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServices</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      IncludeCapability := true
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetServicesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Services list  =: <emphasis role="italic">servicesList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client selects Service with Service.Namespace = “http://www.onvif.org/ver20/media/wsdl”:
                <itemizedlist>
                  <listitem>
                    <para>
                      Services list [Namespace = “http://www.onvif.org/ver20/media/wsdl”] =: <emphasis role="italic">media2Service</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis> message to retrieve media2 service capabilities of the DUT.
              </para>
            </listitem>

            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Capabilities =: <emphasis role="italic">cap</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis> differs from <emphasis role="italic">media2Service</emphasis>.Capabilities.Capabilities, FAIL the test.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>

          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetServicesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step 6:
          <itemizedlist>
            <listitem>
              <para>
                SnapshotUri
              </para>
            </listitem>
            <listitem>
              <para>
                Rotation
              </para>
            </listitem>
            <listitem>
              <para>
                VideoSourceMode
              </para>
            </listitem>
            <listitem>
              <para>
                OSD
              </para>
            </listitem>
            <listitem>
              <para>
                Mask
              </para>
            </listitem>
            <listitem>
              <para>
                ProfileCapabilities.MaximumNumberOfProfiles
              </para>
            </listitem>
            <listitem>
              <para>
                ProfileCapabilities.ConfigurationsSupported
              </para>
            </listitem>
            <listitem>
              <para>
                StreamingCapabilities.RTSPStreaming
              </para>
            </listitem>
            <listitem>
              <para>
                StreamingCapabilities.RTPMulticast
              </para>
            </listitem>
            <listitem>
              <para>
                StreamingCapabilities.RTP_RTSP_TCP
              </para>
            </listitem>
            <listitem>
              <para>
                StreamingCapabilities.NonAggregateControl
              </para>
            </listitem>
            <listitem>
              <para>
                StreamingCapabilities.RTSPWebSocketUri
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

    </section>
    <!--Metadata Configuration-->
    <section xml:id="tc.media_configuration.metadata_configuration">
      <title>Metadata Configuration</title>
      <!--Metadata Configuration-->
      <section xml:id="tc.media_configuration.metadata_configuration.asc">
        <title>Metadata Configuration</title>
        <!--MEDIA2-8-1-1-->
        <section xml:id="tc.MEDIA2-8-1-1">
          <title>MODIFY ALL SUPPORTED METADATA CONFIGURATIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-8-1-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get configuration options, Metadata Configuration, Modify a configuration,    Configuration
            Change
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetMetadataConfigurationOptions, GetMetadataConfigurations, SetMetadataConfiguration, Media Configuration Changed Event.
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify whether all supported Metadata Configuration Options can be set. To verify tns1:Media/ConfigurationChanged event generation when Metadata Configuration changes.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature under Media2 Service is supported by the DUT. Event Service was received from the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Metadata Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetMetadataConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfList</emphasis> - Metadata Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem xml:id="MEDIA2-8-1-1.CPPS">
                <para>
                  If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="bold">"tns1:Media/ConfigurationChanged"</emphasis> - Notification Topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">s</emphasis> - Subscription reference
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Metadata Configuration <emphasis role="italic">metadataConfiguration</emphasis> in <emphasis role="italic">metadataConfList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetMetadataConfigurationOptions</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">metadataConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetMetadataConfigurationOptionsResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Options =: <emphasis role="italic">options</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-8-1-1.5.3" xreflabel="5.3">
                      <para>
                        ONVIF Client invokes <emphasis role="bold">SetMetadataConfiguration</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configuration.@token := <emphasis role="italic">metadataConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Name := "TestName1"
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.UseCount := <emphasis role="italic">metadataConfiguration</emphasis>.UseCount
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If <emphasis role="italic">options</emphasis> does not contain at least one Extension.CompressionType element:
                              <itemizedlist>
                                <?dbfo label-width="2.5em"?>
                                <listitem>
                                  <para>
                                    Configuration.CompressionType skipped
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Otherwise:
                              <itemizedlist>
                                <?dbfo label-width="2.5em"?>
                                <listitem>
                                  <para>
                                    Configuration.CompressionType := <emphasis role="italic">options</emphasis>.Extension.CompressionType[0]
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT does not support PTZ service:
                              <itemizedlist>
                                <?dbfo label-width="2.5em"?>
                                <listitem>
                                  <para>
                                    Configuration.PTZStatus skipped
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT supports PTZ service:
                              <itemizedlist>
                                <?dbfo label-width="2.5em"?>
                                <listitem>
                                  <para>
                                    Configuration.PTZStatus.Status := (<emphasis role="italic">options</emphasis>.PTZStatusFilterOptions.PanTiltStatusSupported or <emphasis role="italic">options</emphasis>.PTZStatusFilterOptions.ZoomStatusSupported)
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    If <emphasis role="italic">options</emphasis>.PTZStatusFilterOptions.PanTiltPositionSupported and <emphasis role="italic">options</emphasis>.PTZStatusFilterOptions.ZoomPositionSupported  are skipped:
                                    <itemizedlist>
                                      <?dbfo label-width="2.5em"?>
                                      <listitem>
                                        <para>
                                          Configuration.PTZStatus.Position := false
                                        </para>
                                      </listitem>
                                    </itemizedlist>
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Otherwise:
                                    <itemizedlist>
                                      <?dbfo label-width="2.5em"?>
                                      <listitem>
                                        <para>
                                          Configuration.PTZStatus.Position := (<emphasis role="italic">options</emphasis>.PTZStatusFilterOptions.ZoomPositionSupported) or <emphasis role="italic">options</emphasis>.PTZStatusFilterOptions.PanTiltPositionSupported)
                                        </para>
                                      </listitem>
                                    </itemizedlist>
                                  </para>
                                </listitem>

                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Events.Filter.TopicExpression := "tns1:Media/ConfigurationChanged"
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Events.Filter.TopicExpression.Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT does not support Analytics service:
                              <itemizedlist>
                                <?dbfo label-width="2.5em"?>
                                <listitem>
                                  <para>
                                    Configuration.Analytics skipped
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT supports Analytics service:
                              <itemizedlist>
                                <?dbfo label-width="2.5em"?>
                                <listitem>
                                  <para>
                                    Configuration.Analytics := true
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>

                          <listitem>
                            <para>
                              Configuration.Multicast := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.SessionTimeout := <emphasis role="italic">metadataConfiguration</emphasis>.SessionTimeout
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.AnalyticsEngineConfiguration skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">SetMetadataConfigurationResponse</emphasis> message.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              in <emphasis role="italic">s</emphasis> - Subscription reference
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">metadataConfiguration</emphasis>.@token - Configuration token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in Metadata - Configuration Type
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetMetadataConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">metadataConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetMetadataConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">metadataConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-8-1-1.5.8" xreflabel="5.8">
                      <para>
                        If <emphasis role="italic">metadataConfList</emphasis>[0] is not equal to Configuration from step <xref linkend="tc.MEDIA2-8-1-1.5.3"/>, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-8-1-1.5.9" xreflabel="5.9">
                      <para>
                        ONVIF Client invokes <emphasis role="bold">SetMetadataConfiguration</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configuration.@token := <emphasis role="italic">metadataConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Name := "TestName2"
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.UseCount := <emphasis role="italic">metadataConfiguration</emphasis>.UseCount
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If <emphasis role="italic">options</emphasis> does not contain at least one Extension.CompressionType element:
                              <itemizedlist>
                                <?dbfo label-width="2.5em"?>
                                <listitem>
                                  <para>
                                    Configuration.CompressionType skipped
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Otherwise:
                              <itemizedlist>
                                <?dbfo label-width="2.5em"?>
                                <listitem>
                                  <para>
                                    Configuration.CompressionType := if <emphasis role="italic">options</emphasis>.Extension.CompressionType contains at least two items <emphasis role="italic">options</emphasis>.Extension.CompressionType[1], otherwise <emphasis role="italic">options</emphasis>.Extension.CompressionType[0]
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT does not support PTZ service:
                              <itemizedlist>
                                <?dbfo label-width="2.5em"?>
                                <listitem>
                                  <para>
                                    Configuration.PTZStatus skipped
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT supports PTZ service:
                              <itemizedlist>
                                <?dbfo label-width="2.5em"?>
                                <listitem>
                                  <para>
                                    Configuration.PTZStatus.Status := false
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    Configuration.PTZStatus.Position := false
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.Events skipped
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT does not support Analytics service:
                              <itemizedlist>
                                <?dbfo label-width="2.5em"?>
                                <listitem>
                                  <para>
                                    Configuration.Analytics skipped
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              If DUT supports Analytics service:
                              <itemizedlist>
                                <?dbfo label-width="2.5em"?>
                                <listitem>
                                  <para>
                                    Configuration.Analytics := false
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>

                          <listitem>
                            <para>
                              Configuration.Multicast := <emphasis role="italic">metadataConfiguration</emphasis>.Multicast
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.SessionTimeout := <emphasis role="italic">metadataConfiguration</emphasis>.SessionTimeout
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              Configuration.AnalyticsEngineConfiguration skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">SetMetadataConfigurationResponse</emphasis> message.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If DUT supports Pull-Point Notification feature and Configuration Changed Notification feature, ONVIF Client retrieves and checks <emphasis role="bold">tns1:Media/ConfigurationChanged</emphasis> event for the specified Configuration by following the procedure mentioned in <xref linkend="Annex_HelperPullConfigurationChanged"/> with the following input and output parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              in <emphasis role="italic">s</emphasis> - Subscription reference
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in <emphasis role="italic">audioSourceConfiguration</emphasis>.@token - Configuration token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              in Metadata - Configuration Type
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetMetadataConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">metadataConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetMetadataConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">metadataConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-8-1-1.5.14" xreflabel="5.14">
                      <para>
                        If <emphasis role="italic">metadataConfList</emphasis>[0] is not equal to Configuration from step <xref linkend="tc.MEDIA2-8-1-1.5.9"/>, FAIL the test and skip other steps.
                      </para>
                    </listitem>


                    <!--<listitem>
                      <para>
                        ONVIF Client restores settings of Metadata Configuration with @token = <emphasis role="italic">metadataConfiguration</emphasis>.@token.
                      </para>
                    </listitem>-->
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If subscription was created at step <xref linkend="MEDIA2-8-1-1.CPPS"/>, ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">s</emphasis> - Subscription reference
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores Metadata Configurations.
                </para>
              </listitem>

            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetMetadataConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">SetMetadataConfigurationResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetMetadataConfigurationOptionsResponse </emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.MEDIA2-8-1-1.5.8"/> and <xref linkend="tc.MEDIA2-8-1-1.5.14"/>:
            <itemizedlist>
              <listitem>
                <para>
                  token
                </para>
              </listitem>
              <listitem>
                <para>
                  Name
                </para>
              </listitem>
              <listitem>
                <para>
                  CompressionType
                </para>
              </listitem>
              <listitem>
                <para>
                  PTZStatus
                </para>
              </listitem>
              <listitem>
                <para>
                  Events
                </para>
              </listitem>
              <listitem>
                <para>
                  Analytics
                </para>
              </listitem>
              <listitem>
                <para>
                  Multicast
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-8-1-2-->
        <section xml:id="tc.MEDIA2-8-1-2">
          <title>GET METADATA CONFIGURATIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-8-1-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Metadata configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetMetadataConfigurations
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving complete Metadata Configuration List, Metadata Configuration by Configuration token and compatible Metadata Configuration by Profile token.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature under Media2 Service is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Metadata Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetMetadataConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfCompleteList</emphasis> - Metadata Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">metadataConfCompleteList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  For each <emphasis role="italic">metadataConfiguration</emphasis> in <emphasis role="italic">metadataConfCompleteList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetMetadataConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">metadataConfiguration</emphasis>.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetMetadataConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">metadataConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">metadataConfList</emphasis> is empty, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">metadataConfList</emphasis> contains more than one item, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">metadataConfList</emphasis> does not contain item with @token = <emphasis role="italic">metadataConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type[0] := Metadata
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetMetadataConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken skipped
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetMetadataConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">metadataConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">metadataConfList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">metadataConfCompleteList</emphasis> does not contain at least one item with @token from <emphasis role="italic">metadataConfList</emphasis>, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">profile</emphasis>.Configurations contains Metadata:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem>
                            <para>
                              If <emphasis role="italic">metadataConfList</emphasis> does not contain item with @token = <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token, FAIL the test and skip other steps.
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetMetadataConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-8-1-3-->
        <section xml:id="tc.MEDIA2-8-1-3">
          <title>PROFILES AND METADATA CONFIGURATIONS CONSISTENCY</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-8-1-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get media profiles, Metadata configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetMetadataConfigurations, GetProfiles
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify all Media Profiles are consistent with Metadata Configurations.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature under Media2 Service is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Token skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        Type[0] := Metadata
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Profiles list =: <emphasis role="italic">profileList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Media Profile  <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis>, which contains Configurations.Metadata repeat the following steps:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetMetadataConfigurations</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              ConfigurationToken := <emphasis role="italic">profile</emphasis>.Configurations.Metadata.@token
                            </para>
                          </listitem>
                          <listitem>
                            <para>
                              ProfileToken skipped
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT responds with <emphasis role="bold">GetMetadataConfigurationsResponse</emphasis> with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Configurations list =: <emphasis role="italic">metadataConfList</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem xml:id="tc.MEDIA2-8-1-3.CompareMetadata" xreflabel="5.3">
                      <para>
                        If <emphasis role="italic">metadataConfList</emphasis>[0] is not equal to <emphasis role="italic">profile</emphasis>.Configurations.Metadata, FAIL the test and skip other steps.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT did not send <emphasis role="bold">GetMetadataConfigurationsResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.MEDIA2-8-1-3.CompareMetadata"/>:
            <itemizedlist>
              <listitem>
                <para>
                  Name
                </para>
              </listitem>
              <listitem>
                <para>
                  CompressionType
                </para>
              </listitem>
              <listitem>
                <para>
                  GeoLocation
                </para>
              </listitem>
              <listitem>
                <para>
                  PTZStatus.Status
                </para>
              </listitem>
              <listitem>
                <para>
                  PTZStatus.Position
                </para>
              </listitem>
              <listitem>
                <para>
                  Events.Filter (only field presence will be compared)
                </para>
              </listitem>
              <listitem>
                <para>
                  Events.SubscriptionPolicy (only field presence will be compared)
                </para>
              </listitem>
              <listitem>
                <para>
                  Analytics
                </para>
              </listitem>
              <listitem>
                <para>
                  AnalyticsEngineConfiguration.AnalyticsModule list (Type and Name will be used as key. Parameters item will not be compared).
                </para>
              </listitem>


            </itemizedlist>
          </para>
        </section>
        <!--MEDIA2-8-1-4-->
        <section xml:id="tc.MEDIA2-8-1-4">
          <title>GET METADATA CONFIGURATIONS – INVALID TOKEN</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-8-1-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Metadata configuration.
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetMetadataConfigurations
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify SOAP 1.2 Fault receiving in case of GetMetadataConfigurations with invalid token.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature under Media2 Service is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Metadata Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetMetadataConfigurationsList"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">metadataConfList</emphasis> - Metadata Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetMetadataConfigurations</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        ConfigurationToken := other than listed in <emphasis role="italic">metadataConfList</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        ProfileToken skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT returns <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoConfig</emphasis> SOAP 1.2 fault.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  The DUT did not send the <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoConfig</emphasis> SOAP 1.2 fault message
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
      </section>
    </section>
    <!--Analytics Configuration-->
    <section xml:id="tc.media_configuration.analytics_configuration">
      <title>Analytics Configuration</title>
      <!--MEDIA2-9-1-1-->
      <section xml:id="tc.MEDIA2-9-1-1">
        <title>GET ANALYTICS CONFIGURATIONS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-9-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Analytics configuration.
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAnalyticsConfigurations
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving complete Analytics Configuration List, Analytics Configuration by Configuration token and compatible Analytics Configuration by Profile token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Analytics feature under Media2 Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Analytics Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAnalyticsConfigurationsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">analyticsConfCompleteList</emphasis> - Analytics Configurations list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">analyticsConfCompleteList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each <emphasis role="italic">analyticsConfiguration</emphasis> in <emphasis role="italic">analyticsConfCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetAnalyticsConfigurations</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">analyticsConfiguration</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ProfileToken skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAnalyticsConfigurationsResponse</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Configurations list =: <emphasis role="italic">analyticsConfList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">analyticsConfList</emphasis> is empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">analyticsConfList</emphasis> contains more than one item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">analyticsConfList</emphasis> does not contain item with @token = <emphasis role="italic">analyticsConfiguration</emphasis>.@token, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[0] := Analytics
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each Media Profile <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetAnalyticsConfigurations</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ConfigurationToken skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAnalyticsConfigurationsResponse</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Configurations list =: <emphasis role="italic">analyticsConfList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">analyticsConfList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">analyticsConfCompleteList</emphasis> does not contain at least one item with @token from <emphasis role="italic">analyticsConfList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">profile</emphasis>.Configurations contains Analytics:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">analyticsConfList</emphasis> does not contain item with @token = <emphasis role="italic">profile</emphasis>.Configurations.Analytics.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAnalyticsConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-9-1-2-->
      <section xml:id="tc.MEDIA2-9-1-2">
        <title>PROFILES AND ANALYTICS CONFIGURATIONS CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-9-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Get media profiles, Analytics configuration.
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAnalyticsConfigurations, GetProfiles
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify all Media Profiles are consistent with Analytics Configurations.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Analytics feature under Media2 Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Type[0] := Analytics
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Profiles list =: <emphasis role="italic">profileList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each Media Profile  <emphasis role="italic">profile</emphasis> in <emphasis role="italic">profileList</emphasis>, which contains Configurations.Analytics repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetAnalyticsConfigurations</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ConfigurationToken := <emphasis role="italic">profile</emphasis>.Configurations.Analytics.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ProfileToken skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAnalyticsConfigurationsResponse</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Configurations list =: <emphasis role="italic">analyticsConfList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem xml:id="tc.MEDIA2-9-1-2.CompareAnalytics" xreflabel="5.3">
                    <para>
                      If <emphasis role="italic">analyticsConfList</emphasis>[0] is not equal to <emphasis role="italic">profile</emphasis>.Configurations.Analytics, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAnalyticsConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.MEDIA2-9-1-2.CompareAnalytics"/>:
          <itemizedlist>
            <listitem>
              <para>
                Name
              </para>
            </listitem>
            <listitem>
              <para>
                AnalyticsEngineConfiguration.AnalyticsModule list (Type and Name will be used as key. Parameters item will not be compared).
              </para>
            </listitem>
            <listitem>
              <para>
                AnalyticsEngineConfiguration.RuleEngineConfiguration list (Type and Name will be used as key. Parameters item will not be compared).
              </para>
            </listitem>



          </itemizedlist>
        </para>
      </section>
      <!--MEDIA2-9-1-3-->
      <section xml:id="tc.MEDIA2-9-1-3">
        <title>GET ANALYTICS CONFIGURATIONS – INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-9-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Get configurations, Analytics configuration.
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAnalyticsConfigurations
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify SOAP 1.2 Fault receiving in case of GetAnalyticsConfigurations with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service is received from the DUT. Analytics feature under Media2 Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Analytics Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetAnalyticsConfigurationsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">analyticsConfList</emphasis> - Analytics Configurations list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetAnalyticsConfigurations</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      ConfigurationToken := other than listed in <emphasis role="italic">analyticsConfList</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ProfileToken skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoConfig</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send the <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:NoConfig</emphasis> SOAP 1.2 fault message
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

    </section>
    <!--Masks -->
    <section xml:id="tc.media_configuration.masks">
    <title>Masks Configuration</title>

    <!--MEDIA2-10-1-1-->
    <section xml:id="tc.MEDIA2-10-1-1">
        <title>CREATE MASKS</title>
        <para>       
            <emphasis role="bold">Test Case ID</emphasis>: MEDIA2-10-1-1
        </para>
        <para>
            <emphasis role="bold">Specification Coverage:</emphasis> CreateMask, DeleteMask (ONVIF Media2 Service Specification)</para>

        <para>
            <emphasis role="bold">Feature Under Test:</emphasis> CreateMask, DeleteMask</para>

        <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl</para>

        <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify the DUT creates and removes Mask.</para>

        <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service feature is supported by DUT. Mask feature is supported by DUT.</para>

        <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT</para>

        <para>
            <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
            <orderedlist>
                <?dbfo label-width="1.5em"?>
                <listitem>
                    <para>
                        Start an ONVIF Client.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Start the DUT.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        ONVIF Client configures device for adding of new mask by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForCreateMask"/> with the following input and output parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    out <emphasis role="italic">maskOptions</emphasis> - Options to create mask with
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    out <emphasis role="italic">vscToken</emphasis> - Token of Video Source Configuration to be used
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    out <emphasis role="italic">maskToRestore</emphasis> - Mask to restore (if a Mask was removed)
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem xml:id="tc.MEDIA2-10-1-1.4">
                    <para>
                        ONVIF Client invokes <emphasis role="bold">CreateMask</emphasis> request with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    token := "TestMask" (note: this token can be ignored by DUT)
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ConfigurationToken := <emphasis role="italic">vscToken</emphasis>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Polygon := Point[0].@x="-0.4", Point[0].@y="-0.2", Point[1].@x="-0.2", Point[1].@y="0.3", Point[2].@x="0.1", Point[2].@y="0.4", Point[3].@x="0.3", Point[3].@y="-0.3" if <emphasis role="italic">maskOptions</emphasis>.RectangleOnly is false or skipped. Else Polygon := Point[0].@x="-0.5", Point[0].@y="-0.5", Point[1].@x="-0.5", Point[1].@y="0.5", Point[2].@x="0.5", Point[2].@y="0.5", Point[3].@x="0.5", Point[3].@y="-0.5"
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Type := first value from <emphasis role="italic">maskOptions</emphasis>.Types list
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If Type = "Color":
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">maskOptions</emphasis>.Color.ColorList is specified:
                                                <itemizedlist>
                                                    <listitem>
                                                        <para>
                                                            Color := first value that are listed in <emphasis role="italic">maskOptions</emphasis>.Color.ColorList
                                                        </para>
                                                    </listitem>
                                                </itemizedlist>
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange is specified:
                                                <itemizedlist>
                                                    <listitem>
                                                        <para>
                                                            Color.@Colorspace := Colorspace value of the first item that is listed in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Color.@X := value from the range [X.Min,X.Max] of the same item in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange that was used for the Color.@Colorspace
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Color.@Y := value from the range [Y.Min,Y.Max] of the same item in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange that was used for the Color.@Colorspace
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Color.@Z := value from the range [Z.Min,Z.Max] of the same item in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange that was used for the Color.@Colorspace
                                                        </para>
                                                    </listitem>
                                                </itemizedlist>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Enabled := false
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT responds with <emphasis role="bold">CreateMaskResponse</emphasis> message with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Token of the created mask =: <emphasis role="italic">maskToken</emphasis>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client invokes <emphasis role="bold">GetMasks</emphasis> request with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Token := <emphasis role="italic">maskToken</emphasis>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ConfigurationToken skipped
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT responds with <emphasis role="bold">GetMasksResponse</emphasis> message with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Masks =: <emphasis role="italic">maskList</emphasis>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        If <emphasis role="italic">maskList</emphasis>[0] is not equal to Mask from step <link linkend="tc.MEDIA2-10-1-1.4">4</link>, FAIL the test and skip other steps.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client invokes <emphasis role="bold">DeleteMask</emphasis> request with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Token := <emphasis role="italic">maskToken</emphasis>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT responds with <emphasis role="bold">DeleteMaskResponse</emphasis> message
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client invokes <emphasis role="bold">GetMasks</emphasis> request with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Token skipped
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ConfigurationToken := <emphasis role="italic">videoSourceConf1</emphasis>[0].@Token
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT responds with <emphasis role="bold">GetMasksResponse</emphasis> message with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Masks =: <emphasis role="italic">maskList2</emphasis>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        If <emphasis role="italic">maskList2</emphasis> contains Mask with @Token = <emphasis role="italic">maskToken</emphasis>, FAIL the test and skip other steps.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client restores the DUT state.
                    </para>
                </listitem>
            </orderedlist>
        </para>
        <para>
            <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
                <listitem>
                    <para>
                        DUT passes all assertions.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>

                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">GetMasksResponse</emphasis> message.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">GetMaskOptionsResponse</emphasis> message.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">CreateMaskResponse</emphasis> message.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">DeleteMaskResponse</emphasis> message.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

    <!--MEDIA2-10-1-2-->
    <section xml:id="tc.MEDIA2-10-1-2">
        <title>GET MASKS</title>
        <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-10-1-2
        </para>

        <para>
            <emphasis role="bold">Specification Coverage:</emphasis> GetMasks (ONVIF Media2 Service Specification)
        </para>

        <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetMasks
        </para>

        <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>

        <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify DUT sends complete Masks list and list of Masks, which are compatible with specific Video Source Configuration.
        </para>

        <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service feature is supported by DUT. Mask feature is supported by DUT.
        </para>

        <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>

        <para>
            <emphasis role="bold">Test Procedure:</emphasis>
        </para>

        <para>
            <orderedlist>
                <?dbfo label-width="1.5em"?>
                <listitem>
                    <para>
                        Start an ONVIF Client.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Start the DUT.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client invokes <emphasis role="bold">GetMasks</emphasis> request with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Token skipped
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ConfigurationToken skipped
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT responds with <emphasis role="bold">GetMasksResponse</emphasis> message with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Masks =: <emphasis role="italic">maskConfCompleteList1</emphasis>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        If <emphasis role="italic">maskConfCompleteList1</emphasis> is empty, FAIL the test and skip other steps.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        If <emphasis role="italic">maskConfCompleteList1</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        For each Mask <emphasis role="italic">mask</emphasis> in <emphasis role="italic">maskConfCompleteList1</emphasis> repeat the following steps:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="2.5em"?>
                            <listitem>
                                <para>
                                    ONVIF Client invokes <emphasis role="bold">GetMasks</emphasis> request with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Token := <emphasis role="italic">mask</emphasis>.@token
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                ConfigurationToken skipped
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    DUT responds with <emphasis role="bold">GetMasksResponse</emphasis> message with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Masks =: <emphasis role="italic">maskList1</emphasis>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If <emphasis role="italic">maskList1</emphasis> is empty, FAIL the test and skip other steps.
                                </para>
                            </listitem>

                            <listitem>
                                <para>
                                    If <emphasis role="italic">maskList1</emphasis> contains more than one item, FAIL the test and skip other steps.
                                </para>
                            </listitem>

                            <listitem>
                                <para>
                                    If <emphasis role="italic">maskList1</emphasis>[0].@token != <emphasis role="italic">mask</emphasis>.@token, FAIL the test and skip other steps.
                                </para>
                            </listitem>

                            <listitem xml:id="tc.MEDIA2-10-1-2.7.6">
                                <para>
                                    If <emphasis role="italic">maskList1</emphasis>[0] is not equal to <emphasis role="italic">mask</emphasis>, FAIL the test and skip other steps.
                                </para>
                            </listitem>
                        </orderedlist>

                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    out <emphasis role="italic">videoSourceConfList1</emphasis> - Video Source Configurations list
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        For each Video Source Configuration <emphasis role="italic">videoSourceConf1</emphasis> in <emphasis role="italic">videoSourceConfList1</emphasis> list repeat the following steps:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="2.5em"?>
                            <listitem>
                                <para>
                                    ONVIF Client invokes <emphasis role="bold">GetMasks</emphasis> request with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Token skipped
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                ConfigurationToken := <emphasis role="italic">videoSourceConf1</emphasis>.@Token
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    DUT responds with <emphasis role="bold">GetMasksResponse</emphasis> message with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Masks =: <emphasis role="italic">maskConfList1</emphasis>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If <emphasis role="italic">maskConfList1</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
                                </para>
                            </listitem>
                            <listitem xml:id="tc.MEDIA2-10-1-2.9.4">
                                <para>
                                    If <emphasis role="italic">maskConfCompleteList1</emphasis> does not contain at least one item with @token from <emphasis role="italic">maskConfList1</emphasis> list, FAIL the test and skip other steps.
                                </para>
                            </listitem>
                        </orderedlist>
                    </para>
                </listitem>
            </orderedlist>
        </para>
        <para>
            <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
                <listitem>
                    <para>
                        DUT passes all assertions.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">GetMasksResponse</emphasis> message(s).  
                    </para>
                </listitem>
            </itemizedlist>          
        </para>

        <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <link linkend="tc.MEDIA2-10-1-2.7.6">7.6</link>:

            <itemizedlist>
                <listitem>
                    <para>
                        token
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ConfigurationToken
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Polygon
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Type
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Color
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Enabled
                    </para>
                </listitem>
            </itemizedlist>
        </para> 
    </section>

    <!--MEDIA2-10-1-3-->
    <section xml:id="tc.MEDIA2-10-1-3">
        <title>SET MASKS</title>
        <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-10-1-3
        </para>

        <para>
            <emphasis role="bold">Specification Coverage:</emphasis> SetMask, DeleteMask (ONVIF Media2 Service Specification)
        </para>

        <para>
            <emphasis role="bold">Feature Under Test:</emphasis> SetMask
        </para>

        <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify the DUT changes and removes Mask.
        </para>

        <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service feature is supported by DUT. Mask feature is supported by DUT.
        </para>
        <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>

        <para>
            <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>

            <orderedlist>
                <?dbfo label-width="1.5em"?>
                <listitem>
                    <para>
                        Start an ONVIF Client.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Start the DUT.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client configures device for adding of new mask by following the procedure mentioned in <xref linkend="Annex_HelperDeviceConfigurationForCreateMask"/> with the following input and output parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    out <emphasis role="italic">maskOptions</emphasis> - Options to create mask with
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    out <emphasis role="italic">vscToken</emphasis> - Token of Video Source Configuration to be used
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    out <emphasis role="italic">maskToRestore</emphasis> - Mask to restore (if a Mask was removed)
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Set <emphasis role="italic">maskType</emphasis> := first value from <emphasis role="italic">maskOptions</emphasis>.Types list
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client creates mask by following the procedure mentioned in <xref linkend="Annex_HelperCreateMask"/> with the following input and output parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    in <emphasis role="italic">vscToken</emphasis> -  Video Source configuration token
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    in <emphasis role="italic">maskOptions</emphasis> - Options of the mask
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    in <emphasis role="italic">maskType</emphasis> - Mask type 
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    out <emphasis role="italic">maskToken</emphasis> - Token of the created mask
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem xml:id="tc.MEDIA2-10-1-3.5">
                    <para>
                        ONVIF Client invokes <emphasis role="bold">SetMask</emphasis> request with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    token := <emphasis role="italic">maskToken</emphasis>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ConfigurationToken := <emphasis role="italic">vscToken</emphasis>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Polygon := Point[0].@x="-0.5", Point[0].@y="-0.3", Point[1].@x="-0.3", Point[1].@y="0.4", Point[2].@x="0.2", Point[2].@y="0.5", Point[3].@x="0.4", Point[3].@y="-0.4" if <emphasis role="italic">maskOptions</emphasis>.RectangleOnly is false or skipped. Else Polygon := Point[0].@x="-0.6", Point[0].@y="-0.6", Point[1].@x="-0.6", Point[1].@y="0.6", Point[2].@x="0.6", Point[2].@y="0.6", Point[3].@x="0.6", Point[3].@y="-0.6"
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Type := last value from <emphasis role="italic">maskOptions</emphasis>.Types list
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If Type = "Color":
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic"> maskOptions</emphasis>.Color.ColorList is specified:
                                                <itemizedlist>
                                                    <listitem>
                                                        <para>
                                                            Color := last value that are listed in <emphasis role="italic">maskOptions</emphasis>.Color.ColorList
                                                        </para>
                                                    </listitem>
                                                </itemizedlist>
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange is specified:
                                                <itemizedlist>
                                                    <listitem>
                                                        <para>
                                                            Color.@Colorspace := Colorspace value of the last item that is listed in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Color.@X := value from the range [X.Min,X.Max] of the same item in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange that was used for the Color.@Colorspace
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Color.@Y := value from the range [Y.Min,Y.Max] of the same item in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange that was used for the Color.@Colorspace
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Color.@Z := value from the range [Z.Min,Z.Max] of the same item in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange that was used for the Color.@Colorspace
                                                        </para>
                                                    </listitem>
                                                </itemizedlist>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Enabled := true
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT responds with <emphasis role="bold">SetMaskResponse</emphasis> message
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client invokes <emphasis role="bold">GetMasks</emphasis> request with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Token := <emphasis role="italic">maskToken</emphasis>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ConfigurationToken skipped
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT responds with <emphasis role="bold">GetMasksResponse</emphasis> message with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Masks =: <emphasis role="italic">maskList</emphasis>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        If <emphasis role="italic">maskList</emphasis>[0] is not equal to Mask from step <link linkend="tc.MEDIA2-10-1-3.5">5</link>, FAIL the test and skip other steps.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client invokes <emphasis role="bold">DeleteMask</emphasis> request with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Token := <emphasis role="italic">maskToken</emphasis>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT responds with <emphasis role="bold">DeleteMaskResponse</emphasis> message
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client invokes <emphasis role="bold">GetMasks</emphasis> request with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Token skipped
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ConfigurationToken := <emphasis role="italic">videoSourceConf1</emphasis>[0].@Token
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT responds with <emphasis role="bold">GetMasksResponse</emphasis> message with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Masks =: <emphasis role="italic">maskList2</emphasis>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        If <emphasis role="italic">maskList2</emphasis> contains Mask with @Token = <emphasis role="italic">maskToken</emphasis>, FAIL the test and skip other steps.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client restores the DUT state.
                    </para>
                </listitem>
            </orderedlist>
        </para>
        <para>
            <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
                <listitem>
                    <para>
                        DUT passes all assertions.
                    </para>
                </listitem>
            </itemizedlist>
        </para>

        <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">GetMasksResponse</emphasis> message.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">GetMaskOptionsResponse</emphasis> message.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">CreateMaskResponse</emphasis> message.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT rejected create Mask Request.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">SetMaskResponse</emphasis> message.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">DeleteMaskResponse</emphasis> message.
                    </para>
                </listitem>
            </itemizedlist> 
        </para>
    </section>

    <!--MEDIA2-10-1-4-->
    <section xml:id="tc.MEDIA2-10-1-4">
        <title>GET MASK OPTIONS</title>
        <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-10-1-4
        </para>
        <para>
            <emphasis role="bold">Specification Coverage:</emphasis> GetMaskOptions (ONVIF Media2 Service Specification)
        </para>
        <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetMaskOptions
        </para>
        <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>
        <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify consistency in Mask Options.
        </para>
        <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service feature is supported by DUT. Mask feature is supported by DUT.
        </para>
        <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
            <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
            <orderedlist>
                <?dbfo label-width="1.5em"?>
                <listitem>
                    <para>
                        Start an ONVIF Client.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Start the DUT.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    out <emphasis role="italic">videoSourceConfList1</emphasis> - Video Source Configurations list
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        For each Video Source Configuration <emphasis role="italic">videoSourceConf1</emphasis> in <emphasis role="italic">videoSourceConfList1</emphasis> list repeat the following steps:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="2.5em"?>
                            <listitem>
                                <para>
                                    ONVIF Client invokes <emphasis role="bold">GetMaskOptions</emphasis> request with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                ConfigurationToken := <emphasis role="italic">videoSourceConf1</emphasis>.@token
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    DUT responds with <emphasis role="bold">GetMaskOptionsResponse</emphasis> message with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                MaskOptions =: <emphasis role="italic">maskOptions</emphasis>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If <emphasis role="italic">maskOptions</emphasis>.MaxMasks &lt; 0, FAIL the test and skip other steps.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If <emphasis role="italic">maskOptions</emphasis>.MaxPoints &lt; 3, FAIL the test and skip other steps.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If <emphasis role="italic">maskOptions</emphasis> does not have Types element, FAIL the test and skip other steps.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If <emphasis role="italic">maskOptions</emphasis> has Color.ColorspaceRange element:
                                    <orderedlist numeration="arabic" inheritnum="inherit">
                                        <?dbfo label-width="3.5em"?>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange.X.Min > <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange.X.Max, FAIL the test and skip other steps.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange.Y.Min > <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange.Y.Max, FAIL the test and skip other steps.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange.Z.Min > <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange.Z.Max, FAIL the test and skip other steps.
                                            </para>
                                        </listitem>
                                    </orderedlist>
                                </para>
                            </listitem>

                        </orderedlist>
                    </para>
                </listitem>
            </orderedlist>
        </para>
        <para>
            <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
                <listitem>
                    <para>
                        DUT passes all assertions.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            <emphasis role="bold">FAIL –</emphasis>

            <itemizedlist>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">GetMaskOptionsResponse</emphasis> message(s).
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

    <!--MEDIA2-10-1-5-->
    <section xml:id="tc.MEDIA2-10-1-5">
        <title>MASK CONFIGURATIONS AND MASK OPTIONS CONSISTENCY</title>
        <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-10-1-5
        </para>

        <para>
            <emphasis role="bold">Specification Coverage:</emphasis> GetMasks, GetMaskOptions (ONVIF Media2 Service Specification)
        </para>

        <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetMasks, GetMaskOptions
        </para>

        <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>

        <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify all Mask configurations are consistent with Mask Options.
        </para>

        <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service feature is supported by DUT. Mask feature is supported by DUT.
        </para>

        <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>

        <para>
            <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
            <orderedlist>
                <?dbfo label-width="1.5em"?>
                <listitem>
                    <para>
                        Start an ONVIF Client.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Start the DUT.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    out <emphasis role="italic">videoSourceConfList1</emphasis> - Video Source Configurations list
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        For each Video Source Configuration <emphasis role="italic">videoSourceConf1</emphasis> in <emphasis role="italic">videoSourceConfList1</emphasis> repeat the following steps:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="2.5em"?>
                            <listitem>
                                <para>
                                    ONVIF Client invokes GetMasks request with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Token skipped
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                ConfigurationToken := <emphasis role="italic">videoSourceConf1</emphasis>.@token
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    DUT responds with <emphasis role="bold">GetMasksResponse</emphasis> message with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Masks =: <emphasis role="italic">maskConfList1</emphasis>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ONVIF Client invokes <emphasis role="bold">GetMaskOptions</emphasis> request with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                ConfigurationToken := <emphasis role="italic">videoSourceConf1</emphasis>.@token
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    DUT responds with <emphasis role="bold">GetMaskOptionsResponse</emphasis> message with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                MaskOptions := <emphasis role="italic">maskOptions</emphasis>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Set <emphasis role="italic">colorMask</emphasis> := empty
                                </para>
                            </listitem>
                            <listitem xml:id="tc.MEDIA2-10-1-5.4.6">
                                <para>
                                    For each Mask <emphasis role="italic">mask</emphasis> in <emphasis role="italic">maskConfList1</emphasis> repeat the following steps:
                                    <orderedlist numeration="arabic" inheritnum="inherit">
                                        <?dbfo label-width="3.5em"?>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">mask</emphasis>.ConfigurationToken is not equal to <emphasis role="italic">videoSourceConf1</emphasis>.@token, FAIL the test and skip other steps.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">maskOptions</emphasis> does not contain Types element with value is equal to <emphasis role="italic">mask</emphasis>.Type, FAIL the test and skip other steps.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">maskOptions</emphasis>.RectangleOnly = true and <emphasis role="italic">mask</emphasis>.Polygon does not have four points, FAIL the test and skip other steps.
                                            </para>
                                        </listitem> 
                                        <listitem>
                                            <para>
                                                If number of points of <emphasis role="italic">mask</emphasis>.Polygon > <emphasis role="italic">maskOptions</emphasis>.MaxPoints, FAIL the test and skip other steps.
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">mask</emphasis>.Color is specified:
                                                <orderedlist numeration="arabic" inheritnum="inherit">
                                                    <?dbfo label-width="4.5em"?>
                                                    <listitem>
                                                        <para>
                                                            If  <emphasis role="italic">mask</emphasis>.Color@Colorspace is skipped:
                                                            <orderedlist numeration="arabic" inheritnum="inherit">
                                                                <?dbfo label-width="5.5em"?>
                                                                <listitem>
                                                                    <para>
                                                                        Set <emphasis role="italic">mask</emphasis>.Color@Colorspace = http://www.onvif.org/ver10/colorspace/YCbCr
                                                                    </para>
                                                                </listitem>
                                                            </orderedlist>
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            If <emphasis role="italic">maskOptions</emphasis>.Color has at least one ColorList element:
                                                            <orderedlist numeration="arabic" inheritnum="inherit">
                                                                <?dbfo label-width="5.5em"?>
                                                                <listitem>
                                                                    <para>
                                                                        For each ColorList element <emphasis role="italic">colorList</emphasis> in <emphasis role="italic">maskOptions</emphasis>.Color repeat the following steps:
                                                                        <orderedlist numeration="arabic" inheritnum="inherit">
                                                                            <?dbfo label-width="6.5em"?>
                                                                            <listitem>
                                                                                <para>
                                                                                    If  <emphasis role="italic">colorList</emphasis>@Colorspace is skipped:
                                                                                    <orderedlist numeration="arabic" inheritnum="inherit">
                                                                                        <?dbfo label-width="7.5em"?>
                                                                                        <listitem>
                                                                                            <para>
                                                                                                Set <emphasis role="italic">colorList</emphasis>@Colorspace = http://www.onvif.org/ver10/colorspace/YCbCr
                                                                                            </para>
                                                                                        </listitem>
                                                                                    </orderedlist>
                                                                                </para>
                                                                            </listitem>
                                                                            <listitem>
                                                                                <para>
                                                                                    If <emphasis role="italic">maskOptions</emphasis>.Color does not contain ColorList element with @X = <emphasis role="italic">mask</emphasis>.Color.@X, and with @Y = <emphasis role="italic">mask</emphasis>.Color.@Y, and with @Z = <emphasis role="italic">mask</emphasis>.Color.@Z, and with @Colorspace = <emphasis role="italic">mask</emphasis>.Color@Colorspace, FAIL the test and skip other steps.
                                                                                </para>
                                                                            </listitem>
                                                                        </orderedlist>
                                                                    </para>
                                                                </listitem>
                                                            </orderedlist>
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            If <emphasis role="italic">maskOptions</emphasis>.Color has at least one ColorspaceRange element: 
                                                            <orderedlist numeration="arabic" inheritnum="inherit">
                                                                <?dbfo label-width="5.5em"?>
                                                                <listitem>
                                                                    <para>
                                                                        Set <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange =: <emphasis role="italic">colorspaceRange1</emphasis>, where <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange is the first ColorspaceRange element that corresponds the following requirements:
                                                                        <orderedlist numeration="arabic" inheritnum="inherit">
                                                                            <?dbfo label-width="6.5em"?>
                                                                            <listitem>
                                                                                <para>
                                                                                    <emphasis role="italic">colorspaceRange1</emphasis>.@Colorspace = <emphasis role="italic">mask</emphasis>.Color.@Colorspace.
                                                                                </para>
                                                                            </listitem>
                                                                            <listitem>
                                                                                <para>
                                                                                    <emphasis role="italic">colorspaceRange1</emphasis>.X.Min &lt;= <emphasis role="italic">mask</emphasis>.Color.@X
                                                                                </para>
                                                                            </listitem>
                                                                            <listitem>
                                                                                <para>
                                                                                    <emphasis role="italic">colorspaceRange1</emphasis>.X.Max >= <emphasis role="italic">mask</emphasis>.Color.@X
                                                                                </para>
                                                                            </listitem>
                                                                            <listitem>
                                                                                <para>
                                                                                    <emphasis role="italic">colorspaceRange1</emphasis>.Y.Min &lt;= <emphasis role="italic">mask</emphasis>.Color.@Y
                                                                                </para>
                                                                            </listitem>
                                                                            <listitem>
                                                                                <para>
                                                                                    <emphasis role="italic">colorspaceRange1</emphasis>.Y.Max >= <emphasis role="italic">mask</emphasis>.Color.@Y
                                                                                </para>
                                                                            </listitem>
                                                                            <listitem>
                                                                                <para>
                                                                                    <emphasis role="italic">colorspaceRange1</emphasis>.Z.Min &lt;= <emphasis role="italic">mask</emphasis>.Color.@Z
                                                                                </para>
                                                                            </listitem>
                                                                            <listitem>
                                                                                <para>
                                                                                    <emphasis role="italic">colorspaceRange1</emphasis>.Z.Max >= <emphasis role="italic">mask</emphasis>.Color.@Z
                                                                                </para>
                                                                            </listitem>
                                                                        </orderedlist>
                                                                    </para>
                                                                </listitem>
                                                                <listitem>
                                                                    <para>
                                                                        If <emphasis role="italic">colorspaceRange1</emphasis> is empty, FAIL the test and skip other steps.
                                                                    </para>
                                                                </listitem>                                                            </orderedlist>
                                                        </para>
                                                    </listitem>
                                                                <listitem>
                                                                    <para>
                                                                        If <emphasis role="italic">MaskOptions</emphasis>.SingleColorOnly = true
                                                                        <orderedlist numeration="arabic" inheritnum="inherit">
                                                                            <?dbfo label-width="6.5em"?>
                                                                            <listitem>
                                                                                <para>
                                                                                    If <emphasis role="italic">colorMask</emphasis> is empty:
                                                                                    <orderedlist numeration="arabic" inheritnum="inherit">
                                                                                        <?dbfo label-width="7.5em"?>
                                                                                        <listitem>
                                                                                            <para>
                                                                                                <emphasis role="italic">colorMask</emphasis> := <emphasis role="italic">mask</emphasis>.Color
                                                                                            </para>
                                                                                        </listitem>
                                                                                        <listitem>
                                                                                            <para>
                                                                                                GoTo step <link linkend="tc.MEDIA2-10-1-5.4.6">4.6</link>
                                                                                            </para>
                                                                                        </listitem>
                                                                                    </orderedlist>
                                                                                </para>
                                                                            </listitem>
                                                                            <listitem>
                                                                                <para>
                                                                                    If <emphasis role="italic">colorMask</emphasis> is not equal to <emphasis role="italic">mask</emphasis>.Color, FAIL the test and skip other steps.
                                                                                </para>
                                                                            </listitem>
                                                                        </orderedlist>
                                                                    </para>
                                                                </listitem>

                                                    
                                                </orderedlist>
                                            </para>
                                        </listitem>
                                    </orderedlist>
                                </para>
                            </listitem>
                        </orderedlist>
                    </para>
                </listitem>
            </orderedlist>
        </para>
        <para>
            <emphasis role="bold">Test Result:</emphasis>
        </para>


        <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
                <listitem>
                    <para>
                        DUT passes all assertions.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            <emphasis role="bold">FAIL –</emphasis>

            <itemizedlist>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">GetMasksResponse</emphasis> message(s).
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">GetMaskOptionsResponse</emphasis> message(s).
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

    <!--MEDIA2-10-1-6-->
    <section xml:id="tc.MEDIA2-10-1-6">
        <title>SINGLE COLOR ONLY PARAMETER</title>
        <para>
            <emphasis role="bold">Test Case ID:</emphasis> MEDIA2-10-1-6
        </para>

        <emphasis role="bold">Specification Coverage:</emphasis> GetMaskOptions (ONVIF Media2 Service Specification)
        <para>
        </para>

        <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetMaskOptions
        </para>

        <para>
            <emphasis role="bold">WSDL Reference:</emphasis> media2.wsdl
        </para>

        <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify Masks Color consistency if SingleColorOnly is present and true in Mask Options.
        </para>

        <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Media2 Service feature is supported by DUT. Mask feature is supported by DUT.
        </para>

        <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>

        <para>
            <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
            <orderedlist>
                <?dbfo label-width="1.5em"?>
                <listitem>
                    <para>
                        Start an ONVIF Client.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Start the DUT.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters<itemizedlist>
                            <listitem>
                                <para>
                                    out <emphasis role="italic">videoSourceConfList1</emphasis> - Video Source Configurations list
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem xml:id="tc.MEDIA2-10-1-6.4">
                    <para>
                        For each Video Source Configuration <emphasis role="italic">videoSourceConf1</emphasis> in <emphasis role="italic">videoSourceConfList1</emphasis> list repeat the following steps:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="2.5em"?>
                            <listitem>
                                <para>
                                    ONVIF Client invokes <emphasis role="bold">GetMaskOptions</emphasis> request with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                ConfigurationToken := <emphasis role="italic">videoSourceConf1</emphasis>.@Token
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    DUT responds with <emphasis role="bold">GetMaskOptionsResponse</emphasis> message with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                MaskOptions =: <emphasis role="italic">maskOptions</emphasis>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If <emphasis role="italic">maskOptions</emphasis>.SingleColorOnly != true or <emphasis role="italic">maskOptions</emphasis>.Types list does not contain "Color" or <emphasis role="italic">maskOptions</emphasis>.MaxMasks &lt; 2 go to step <link linkend="tc.MEDIA2-10-1-6.4">4</link>.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ONVIF Client removes all Masks from Video Source Configuration by following the procedure mentioned in <xref linkend="Annex_HelperMasksCleanUp"/> with the following input and output parameters 
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                in <emphasis role="italic">videoSourceConf1</emphasis>.@token - Video Source Configuration token 
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Set <emphasis role="italic">maskType</emphasis> := “Color”
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ONVIF Client creates mask by following the procedure mentioned in <xref linkend="Annex_HelperCreateMask"/> with the following input and output parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                in <emphasis role="italic">vscToken</emphasis> -  Video Source configuration token
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                in <emphasis role="italic">maskOptions</emphasis> - Options of the mask
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                in <emphasis role="italic">maskType</emphasis> - Mask type 
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                out <emphasis role="italic">maskToken1</emphasis> - Token of the created mask
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>

                            <listitem>
                                <para>
                                    ONVIF Client invokes <emphasis role="bold">CreateMask</emphasis> request with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                token := "TestMask" (note: this token can be ignored by DUT)
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                ConfigurationToken := <emphasis role="italic">videoSourceConf1</emphasis>.@token
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                Polygon := Point[0].@x="-0.4", Point[0].@y="-0.2", Point[1].@x="-0.2", Point[1].@y="0.3", Point[2].@x="0.1", Point[2].@y="0.4", Point[3].@x="0.3", Point[3].@y="-0.3" if <emphasis role="italic">maskOptions</emphasis>.RectangleOnly is false or skipped. Else Polygon := Point[0].@x="-0.5", Point[0].@y="-0.5", Point[1].@x="-0.5", Point[1].@y="0.5", Point[2].@x="0.5", Point[2].@y="0.5", Point[3].@x="0.5", Point[3].@y="-0.5"
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                Type := “Color”
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                Enabled := false
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    DUT responds with <emphasis role="bold">CreateMaskResponse</emphasis> message with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Token of the created mask =: <emphasis role="italic">maskToken2</emphasis>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>

                            <listitem>
                                <para>
                                    ONVIF Client invokes <emphasis role="bold">GetMasks</emphasis> request with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Token := <emphasis role="italic">maskToken1</emphasis>
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                ConfigurationToken skipped
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    DUT responds with <emphasis role="bold">GetMasksResponse</emphasis> message with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Masks =: <emphasis role="italic">maskList1</emphasis>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ONVIF Client invokes <emphasis role="bold">GetMasks</emphasis> request with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Token := <emphasis role="italic">maskToken2</emphasis>
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                ConfigurationToken skipped
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    DUT responds with <emphasis role="bold">GetMasksResponse</emphasis> message with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Masks =: <emphasis role="italic">maskList2</emphasis>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If <emphasis role="italic">maskList2</emphasis>[0].Color is not equal to <emphasis role="italic">maskList1</emphasis>[0].Color, FAIL the test and skip other steps.
                                </para>
                            </listitem>
                            <listitem xml:id="tc.MEDIA2-10-1-6.4.14">
                                <para>
                                    ONVIF Client invokes <emphasis role="bold">SetMask</emphasis> request with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                token := <emphasis role="italic">maskToken2</emphasis>
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                ConfigurationToken := <emphasis role="italic">vscToken</emphasis>
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                Polygon := Point[0].@x="-0.5", Point[0].@y="-0.3", Point[1].@x="-0.3", Point[1].@y="0.4", Point[2].@x="0.2", Point[2].@y="0.5", Point[3].@x="0.4", Point[3].@y="-0.4" if <emphasis role="italic">maskOptions</emphasis>.RectangleOnly is false or skipped. Else Polygon := Point[0].@x="-0.6", Point[0].@y="-0.6", Point[1].@x="-0.6", Point[1].@y="0.6", Point[2].@x="0.6", Point[2].@y="0.6", Point[3].@x="0.6", Point[3].@y="-0.6"
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                Type := "Color"
                                            </para>
                                        </listitem>

                                        <listitem>
                                            <para>
                                                If <emphasis role="italic"> maskOptions</emphasis>.Color.ColorList is specified:
                                                <itemizedlist>
                                                    <listitem>
                                                        <para>
                                                            Color := last value that are listed in <emphasis role="italic">maskOptions</emphasis>.Color.ColorList
                                                        </para>
                                                    </listitem>
                                                </itemizedlist>
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange is specified:
                                                <itemizedlist>
                                                    <listitem>
                                                        <para>
                                                            Color.@Colorspace := Colorspace value of the last item that is listed in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Color.@X := value from the range [X.Min,X.Max] of the same item in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange that was used for the Color.@Colorspace
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Color.@Y := value from the range [Y.Min,Y.Max] of the same item in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange that was used for the Color.@Colorspace
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Color.@Z := value from the range [Z.Min,Z.Max] of the same item in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange that was used for the Color.@Colorspace
                                                        </para>
                                                    </listitem>
                                                </itemizedlist>
                                            </para>
                                        </listitem>

                                        <listitem>
                                            <para>
                                                Enabled := true
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    DUT responds with <emphasis role="bold">SetMaskResponse</emphasis> message
                                </para>
                            </listitem>

                            <listitem>
                                <para>
                                    ONVIF Client invokes <emphasis role="bold">GetMasks</emphasis> request with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Token := <emphasis role="italic">maskToken1</emphasis>
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                ConfigurationToken skipped
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    DUT responds with <emphasis role="bold">GetMasksResponse</emphasis> message with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Masks =: <emphasis role="italic">maskList3</emphasis>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If <emphasis role="italic">maskList3</emphasis>[0].Color is not equal to Color value from step <link linkend="tc.MEDIA2-10-1-6.4.14">4.14</link>, FAIL the test and skip other steps.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ONVIF Client restores the DUT state.
                                </para>
                            </listitem>
                        </orderedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        PASS the test.
                    </para>
                </listitem>
            </orderedlist>
        </para>
        <para>
            <emphasis role="bold">Test Result:</emphasis>
        </para>


        <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
                <listitem>
                    <para>
                        DUT passes all assertions.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            <emphasis role="bold">FAIL –</emphasis>

            <itemizedlist>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">CreateMaskResponse</emphasis> message(s).
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">SetMaskResponse</emphasis> message(s).
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">GetMasksResponse</emphasis> message(s).
                    </para>
                </listitem>
                <listitem>
                    <para>
                        The DUT did not send <emphasis role="bold">GetMaskOptionsResponse</emphasis> message(s).
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

</section>
  </chapter>
  <appendix>
    <title>Helper Procedures and Additional Notes</title>
    <!--A.1-->
    <section xml:id="Annex_HelperCreateEmptyProfile"  xreflabel="Annex A.1">
      <title>Create Empty Profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreateEmptyProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to find, create or configure empty Media Profile (without Configurations).
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Empty Media Profile token (<emphasis role="italic">profileToken</emphasis>).
        Flag that indicates that new Media Profile was created (<emphasis role="italic">newProfileFlag</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client retrieves Media2 Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">cap</emphasis> - Media2 Service Capabilities
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := All
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If number of items in <emphasis role="italic">profileList</emphasis> >= <emphasis role="italic">cap</emphasis>.ProfileCapabilities.MaximumNumberOfProfiles:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">profileList</emphasis> does not contain items with @fixed = false, go to step <xref linkend="Annex_HelperCreateEmptyProfile.9"/>.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">DeleteProfile</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Token := @token of item with @fixed = false from <emphasis role="italic">profileList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">DeleteProfileResponse</emphasis> message.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreateProfile</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Name := "testMedia2"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration list - skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              DUT responds with <emphasis role="bold">CreateProfileResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">profileToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">newProfileFlag</emphasis> := true
            </para>
          </listitem>
          <listitem>
            <para>
              Skip other steps of procedure.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperCreateEmptyProfile.9">
            <para>
              ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profileList</emphasis>[0].@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Type := All
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Token skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">profileToken</emphasis> := <emphasis role="italic">profileList</emphasis>[0].@token
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">newProfileFlag</emphasis> := false
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">DeleteProfileResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreateProfileResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_NameParameters"/> for Name and Token Parameters Length limitations.
      </para>
    </section>
    <!--A.2-->
    <section xml:id="Annex_NameParameters" xreflabel="Annex A.2">
      <title>Name Parameters</title>
      <para>
        There are the following limitations on maximum length of the Name parameters that shall be used during tests by ONVIF Device Test Tool to prevent faults from DUT:
        <itemizedlist>
          <listitem>
            <para>
              Name shall be less than or equal to 64 characters (only readable characters accepted).
            </para>
          </listitem>
          <listitem>
            <para>
              UTF-8 character set shall be used for Name.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> these limitations will not be used, if ONVIF Device Test Tool reuses values that were received from the DUT.
      </para>
    </section>
    <!--A.3-->
    <section xml:id="Annex_HelperVECOvsVEC" xreflabel="Annex A.3">
      <title>VideoEncoderConfigurationOptions and VideoEncoderConfiguration mapping</title>
      <para>
        <table>
          <title>VideoEncoderConfigurationOptions and VideoEncoderConfiguration mapping</title>
          <tgroup cols="2">
            <colspec colwidth="500*" />
            <colspec colwidth="500*" />
            <thead>
              <row>
                <entry>VideoEncoderConfigurationOptions field</entry>
                <entry>VideoEncoderConfiguration field</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Encoding</entry>
                <entry>Encoding</entry>
              </row>
              <row>
                <entry>QualityRange.Min-QualityRange.Max</entry>
                <entry>Quality</entry>
              </row>
              <row>
                <entry>Resolutions Available contains list of Height and Width pairs</entry>
                <entry>Height and Width</entry>
              </row>
              <row>
                <entry>GovLengthRange.Min-GovLengthRange.Max</entry>
                <entry>GovLength</entry>
              </row>
              <row>
                <entry>FrameRatesSupported contains list of available values</entry>
                <entry>RateControl.FrameRateLimit</entry>
              </row>
              <row>
                <entry>BitrateRange.Min-BitrateRange.Max</entry>
                <entry>RateControl.BitrateLimit</entry>
              </row>
              <row>
                <entry>ProfilesSupported the list of string values listed in tt:VideoEncodingProfiles</entry>
                <entry>Profile</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </para>
    </section>
    <!--A.4-->
    <section xml:id="Annex_HelperOSDOvsOSD" xreflabel="Annex A.4">
      <title>OSDConfigurationOptions and OSDConfiguration mapping</title>
      <para>
        The following rules should be used for <emphasis role="bold">CreateOSD</emphasis> message if <emphasis role="italic">osdOptions</emphasis> is the OSD Options, which were received in <emphasis role="bold">GetOSDOptionsResponse</emphasis>:
        <itemizedlist>
          <listitem>
            <para>
              OSD.@token := token for new OSD
            </para>
          </listitem>
          <listitem>
            <para>
              OSD.VideoSourceConfigurationToken := Video Source Configurtion token
            </para>
          </listitem>
          <listitem>
            <para>
              OSD.Type := one of the values that are listed in <emphasis role="italic">osdOptions</emphasis>.Type, for test propose only Text or Image shall be used.
            </para>
          </listitem>
          <listitem>
            <para>
              OSD.Position.Type := one of the values that are listed in <emphasis role="italic">osdOptions</emphasis>.PositionOption
            </para>
          </listitem>
          <listitem>
            <para>
              If OSD.Position.Type = Custom:
              <itemizedlist>
                <listitem>
                  <para>
                    OSD.Position.Pos.@x := any value from the range [-1,1]
                  </para>
                </listitem>
                <listitem>
                  <para>
                    OSD.Position.Pos.@y := any value from the range [-1,1]
                  </para>
                </listitem>
              </itemizedlist>
            </para>
            <para>
              otherwise, OSD.Position.Pos skipped
            </para>
          </listitem>
          <listitem>
            <para>
              OSD.Position.Extension skippedd
            </para>
          </listitem>
          <!--Text-->
          <listitem>
            <para>
              If OSD.Type = Text:
              <itemizedlist>
                <listitem>
                  <para>
                    OSD.TextString.Type := one of the values that are listed in <emphasis role="italic">osdOptions</emphasis>.TextOption.Type, for test propose only Plain, Date, Time, or DateAndTime shall be used.
                  </para>
                </listitem>
                <!--DateFormat-->
                <listitem>
                  <para>
                    If OSD.TextString.Type = Date or DateAndTime:
                    <itemizedlist>
                      <listitem>
                        <para>
                          OSD.TextString.DateFormat := one of the values that are listed in <emphasis role="italic">osdOptions</emphasis>.TextOption.DateFormat
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                  <para>
                    otherwise, OSD.TextString.DateFormat skipped
                  </para>
                </listitem>
                <!--TimeFormat-->
                <listitem>
                  <para>
                    If OSD.TextString.Type = Time or DateAndTime:
                    <itemizedlist>
                      <listitem>
                        <para>
                          OSD.TextString.TimeFormat := one of the values that are listed in <emphasis role="italic">osdOptions</emphasis>.TextOption.TimeFormat
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                  <para>
                    otherwise, OSD.TextString.TimeFormat skipped
                  </para>
                </listitem>
                <!--FontSize-->
                <listitem>
                  <para>
                    If <emphasis role="italic">osdOptions</emphasis>.TextOption.FontSizeRange is specified:
                    <itemizedlist>
                      <listitem>
                        <para>
                          OSD.TextString.FontSize := any value from the range [<emphasis role="italic">osdOptions</emphasis>.TextOption.FontSizeRange.Min,<emphasis role="italic">osdOptions</emphasis>.TextOption.FontSizeRange.Max]
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                  <para>
                    otherwise, OSD.TextString.FontSize skipped
                  </para>
                </listitem>
                <!--FontColor-->
                <listitem>
                  <para>
                    If <emphasis role="italic">osdOptions</emphasis>.TextOption.FontColor and <emphasis role="italic">osdOptions</emphasis>.TextOption.FontColor.Color is specified:
                    <itemizedlist>
                      <!--ColorList-->
                      <listitem>
                        <para>
                          If <emphasis role="italic">osdOptions</emphasis>.TextOption.FontColor.Color.ColorList is specified:
                          <itemizedlist>
                            <listitem>
                              <para>
                                OSD.TextString.FontColor.Color := one of the values that are listed in <emphasis role="italic">osdOptions</emphasis>.TextOption.FontColor.Color.ColorList
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <!--ColorspaceRange-->
                      <listitem>
                        <para>
                          If <emphasis role="italic">osdOptions</emphasis>.TextOption.FontColor.Color.ColorspaceRange is specified:
                          <itemizedlist>
                            <listitem>
                              <para>
                                OSD.TextString.FontColor.Color.@Colorspace := Colorspace value of one of the items that are listed in <emphasis role="italic">osdOptions</emphasis>.TextOption.FontColor.Color.ColorList.ColorspaceRange
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                OSD.TextString.FontColor.Color.@X := value from the range [X.Min,X.Max] of the same item in <emphasis role="italic">osdOptions</emphasis>.TextOption.FontColor.Color.ColorList.ColorspaceRange that was used for the OSD.TextString.FontColor.Color.@Colorspace
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                OSD.TextString.FontColor.Color.@Y := value from the range [Y.Min,Y.Max] of the same item in <emphasis role="italic">osdOptions</emphasis>.TextOption.FontColor.Color.ColorList.ColorspaceRange that was used for the OSD.TextString.FontColor.Color.@Colorspace
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                OSD.TextString.FontColor.Color.@Z := value from the range [Z.Min,Z.Max] of the same item in <emphasis role="italic">osdOptions</emphasis>.TextOption.FontColor.Color.ColorList.ColorspaceRange that was used for the OSD.TextString.FontColor.Color.@Colorspace
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <!--Transparent-->
                      <listitem>
                        <para>
                          If <emphasis role="italic">osdOptions</emphasis>.TextOption.FontColor.Transparent is specified:
                          <itemizedlist>
                            <listitem>
                              <para>
                                OSD.TextString.FontColor.@Transparent := any value from the range [<emphasis role="italic">osdOptions</emphasis>.TextOption.FontColor.Transparent.Min,<emphasis role="italic">osdOptions</emphasis>.TextOption.FontColor. Transparent.Max]
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                        <para>
                          otherwise, OSD.TextString.FontColor.@Transparent skipped
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                  <para>
                    otherwise, OSD.TextString.FontColor skipped
                  </para>
                </listitem>
                <!--BackgroundColor-->
                <listitem>
                  <para>
                    If <emphasis role="italic">osdOptions</emphasis>.TextOption.BackgroundColor and <emphasis role="italic">osdOptions</emphasis>.TextOption.BackgroundColor.Color is specified:
                    <itemizedlist>
                      <!--ColorList-->
                      <listitem>
                        <para>
                          If <emphasis role="italic">osdOptions</emphasis>.TextOption.BackgroundColor.Color.ColorList is specified:
                          <itemizedlist>
                            <listitem>
                              <para>
                                OSD.TextString.BackgroundColor.Color := one of the values that are listed in <emphasis role="italic">osdOptions</emphasis>.TextOption.BackgroundColor.Color.ColorList
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <!--ColorspaceRange-->
                      <listitem>
                        <para>
                          If <emphasis role="italic">osdOptions</emphasis>.TextOption.BackgroundColor.Color.ColorspaceRange is specified:
                          <itemizedlist>
                            <listitem>
                              <para>
                                OSD.TextString.BackgroundColor.Color.@Colorspace := Colorspace value of one of the items that are listed in <emphasis role="italic">osdOptions</emphasis>.TextOption.BackgroundColor.Color.ColorList.ColorspaceRange
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                OSD.TextString.BackgroundColor.Color.@X := value from the range [X.Min,X.Max] of the same item in <emphasis role="italic">osdOptions</emphasis>.TextOption.BackgroundColor.Color.ColorList.ColorspaceRange that was used for the OSD.TextString.BackgroundColor.Color.@Colorspace
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                OSD.TextString.BackgroundColor.Color.@Y := value from the range [Y.Min,Y.Max] of the same item in <emphasis role="italic">osdOptions</emphasis>.TextOption.BackgroundColor.Color.ColorList.ColorspaceRange that was used for the OSD.TextString.BackgroundColor.Color.@Colorspace
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                OSD.TextString.BackgroundColor.Color.@Z := value from the range [Z.Min,Z.Max] of the same item in <emphasis role="italic">osdOptions</emphasis>.TextOption.BackgroundColor.Color.ColorList.ColorspaceRange that was used for the OSD.TextString.BackgroundColor.Color.@Colorspace
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <!--Transparent-->
                      <listitem>
                        <para>
                          If <emphasis role="italic">osdOptions</emphasis>.TextOption.BackgroundColor.Transparent is specified:
                          <itemizedlist>
                            <listitem>
                              <para>
                                OSD.TextString.BackgroundColor.@Transparent := any value from the range [<emphasis role="italic">osdOptions</emphasis>.TextOption.BackgroundColor.Transparent.Min, <emphasis role="italic">osdOptions</emphasis>.TextOption.BackgroundColor.Transparent.Max]
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                        <para>
                          otherwise, SD.TextString.BackgroundColor.@Transparent skipped
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                  <para>
                    otherwise, OSD.BackgroundColor.FontColor skipped
                  </para>
                </listitem>
                <!--PlainText-->
                <listitem>
                  <para>
                    If OSD.TextString.Type = Plain:
                    <itemizedlist>
                      <listitem>
                        <para>
                          OSD.TextString.PlainText := any string value
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                  <para>
                    otherwise, OSD.TextString.PlainText skipped
                  </para>
                </listitem>
                <!--Extension-->
                <listitem>
                  <para>
                    OSD.TextString.Extension skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
            <para>
              otherwise, OSD.TextString skipped
            </para>
          </listitem>
          <!--Image-->
          <listitem>
            <para>
              If OSD.Type = Image:
              <itemizedlist>
                <listitem>
                  <para>
                    OSD.Image.ImgPath := one of the values that are listed in <emphasis role="italic">osdOptions</emphasis>.ImageOption.ImagePath
                  </para>
                </listitem>
                <listitem>
                  <para>
                    OSD.Image.Extension skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
            <para>
              otherwise, OSD.Image skipped
            </para>
          </listitem>
          <listitem>
            <para>
              OSD.Extension skippedd
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If OSD.Type = Text, but  <emphasis role="italic">osdOptions</emphasis>.TextOption is skipped, the test will be FAILED.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If OSD.Type = Image, but  <emphasis role="italic">osdOptions</emphasis>.ImageOption is skipped, the test will be FAILED.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If OSD.TextString.Type = Date or DateAndTime, but <emphasis role="italic">osdOptions</emphasis>.TextOption.DateFormat is skipped, the test will be FAILED.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If OSD.TextString.Type = Time or DateAndTime, but <emphasis role="italic">osdOptions</emphasis>.TextOption.TimeFormat is skipped, the test will be FAILED.
      </para>
    </section>
    <!--A.5-->
    <section xml:id="Annex_HelperConfigureMediaProfileWithVideo" xreflabel="Annex A.5">
      <title>Configure Media profile with Video Source Configuration and Video Encoder Configuration</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperConfigureMediaProfileWithVideo
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media Profile to contain Video Source Configuration and Video Encoder Configuration.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>) containing Video Source Configuration and Video Encoder Configuration.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := VideoSource
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[1] := VideoEncoder
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis> contains Media Profile with Configurations.VideoSource and Configurations.VideoEncoder:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    Set <emphasis role="italic">profile</emphasis> := the first Media Profile with Configurations.VideoSource and Configurations.VideoEncoder from the <emphasis role="italic">profileList</emphasis>.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Skip other steps of procedure.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis> contains Media Profile with Configurations.VideoSource:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    Set <emphasis role="italic">profile</emphasis> := the first Media Profile with Configurations.VideoSource from the <emphasis role="italic">profileList</emphasis>.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Go to step <link linkend="Annex_HelperConfigureMediaProfileWithVideo.13">13</link>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profileList</emphasis>[0].
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">videoSourceConfigurationList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">videoSourceConfigurationList</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Name skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Type := VideoSource
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Token := <emphasis role="italic">videoSourceConfigurationList</emphasis>[0]
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken = <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperConfigureMediaProfileWithVideo.13">
            <para>
              The DUT responds with compatible video encoder configurations in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">videoEncoderConfigurationList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">videoEncoderConfigurationList</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profileList</emphasis>.Profiles[0].@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Name skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Type := VideoEncoder
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Token := <emphasis role="italic">videoEncoderConfigurationList</emphasis>[0]
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.6-->
    <section xml:id="Annex_HelperConfigureMediaProfileWithVideoSource" xreflabel="Annex A.6">
      <title>Configure Media profile with Video Source Configuration</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperConfigureMediaProfileWithVideoSource
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media Profile to contain Video Source Configuration.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>) containing Video Source Configuration.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := VideoSource
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis> contains Media Profile with Configurations.VideoSource:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    Set <emphasis role="italic">profile</emphasis> := the first profile with Configurations.VideoSource from the <emphasis role="italic">profileList</emphasis>.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profileList</emphasis>[0].
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken = <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">videoSourceConfigurationList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">videoSourceConfigurationList</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Name skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Type := VideoSource
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Token := <emphasis role="italic">videoSourceConfigurationList</emphasis>[0]
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.7-->
    <section xml:id="Annex_HelperGetVideoSourceConfigurationsList" xreflabel="Annex A.7">
      <title>Get Video Source Configurations List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetVideoSourceConfigurationsList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve Video Source Configurations List.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Video Source Configurations list (<emphasis role="italic">videoSourceConfList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoSourceConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">videoSourceConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">videoSourceConfList</emphasis> is empty, FAIL the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.8-->
    <section xml:id="Annex_HelperGetServiceCapabilities"  xreflabel="Annex A.8">
      <title>Get Service Capabilities</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetServiceCapabilities
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve Media2 Service Capabilities.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Media2 Service Capabilities (<emphasis role="italic">cap</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis> request.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Capabilities =: <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.9-->
    <section xml:id="Annex_HelperGetAudioSourceConfigurationsList" xreflabel="Annex A.9">
      <title>Get Audio Source Configurations List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAudioSourceConfigurationsList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve Audio Source Configurations List.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Audio configuration is supported by the DUT as indicated by receiving the GetAudioEncoderConfigurationOptionsResponse.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Audio Source Configurations List (<emphasis role="italic">audioSourceConfList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">audioSourceConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">audioSourceConfList</emphasis> is empty, FAIL the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.10-->
    <section xml:id="Annex_HelperConfigureMediaProfileWithAudioSource" xreflabel="Annex A.10">
      <title>Configure Media profile with Audio Source Configuration</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperConfigureMediaProfileWithAudioSource
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media Profile to contain Audio Source Configuration.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Audio configuration is supported by the DUT as indicated by receiving the GetAudioEncoderConfigurationOptionsResponse.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>) containing Audio Source Configuration.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := AudioSource
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis> contains Media Profile with Configurations.AudioSource:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    Set <emphasis role="italic">profile</emphasis> := the first profile with Configurations.AudioSource from the <emphasis role="italic">profileList</emphasis>.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profileList</emphasis>[0].
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAudioSourceConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken = <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">audioSourceConfigurationList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">audioSourceConfigurationList</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Name skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Type := AudioSource
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Token := <emphasis role="italic">audioSourceConfigurationList</emphasis>[0]
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioSourceConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.11-->
    <section xml:id="Annex_HelperDeleteMediaProfileWhenMaxProfiles" xreflabel="Annex A.11">
      <title>Delete Media Profile if Max Reached</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteMediaProfileWhenMaxProfiles
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete Media Profile if maximum number of Media Profiles is reached.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client retrieves Media2 Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">cap</emphasis> - Media2 Service Capabilities
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := All
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              <!--<annotation>
								<para>Current implementation have the loop: while (profiles.Length >= nMaxNumberProfiles)</para>
							</annotation>-->
              If number of items in <emphasis role="italic">profileList</emphasis> = <emphasis role="italic">cap</emphasis>.ProfileCapabilities.MaximumNumberOfProfiles:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    <!--<annotation>
											<para>Current implementation try to delete profiles with fixed=true</para>
										</annotation>-->
                    If <emphasis role="italic">profileList</emphasis> does not contain items with @fixed = false, FAIL the test and skip other steps.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">DeleteProfile</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Token := @token of item with @fixed = false from <emphasis role="italic">profileList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">DeleteProfileResponse</emphasis> message.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">DeleteProfileResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.12-->
    <section xml:id="Annex_HelperCreatePullPointSubscription" xreflabel="Annex A.12">
      <title>Create Pull Point Subscription</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreatePullPointSubscription
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create PullPoint Subscription with specified Topic.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Notification Topic (<emphasis role="italic">topic</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>), subscription termination time (<emphasis role="italic">tt</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Filter.TopicExpression := <emphasis role="italic">topic</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    SubscriptionReference =: <emphasis role="italic">s</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    CurrentTime =: <emphasis role="italic">ct</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    TerminationTime =: <emphasis role="italic">tt</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.13-->
    <section xml:id="Annex_HelperDeleteSubscription" xreflabel="Annex A.13">
      <title>Delete Subscription</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteSubscription
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete supscribtion.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint s.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.14-->
    <section xml:id="Annex_HelperPullProfileChanged" xreflabel="Annex A.14">
      <title>Retrieve Profile Changed Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullProfileChanged
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:Media/ProfileChanged event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>),
        Subscription termination time (<emphasis role="italic">tt</emphasis>) and Media Profile token (<emphasis role="italic">profileToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullProfileChanged.1" xreflabel = "1">
            <para>
              Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="3.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty and the Token source simple item in <emphasis role="italic">notificationMessageList</emphasis> is equal
                    to <emphasis role="italic">profileToken</emphasis>, skip other steps and finish the procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">timeout1</emphasis> timeout expires for step <xref linkend="Annex_HelperPullProfileChanged.1"/> without
                    Notification with Token source simple item equal to <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.15-->
    <section xml:id="Annex_HelperPullConfigurationChanged" xreflabel="Annex A.15">
      <title>Retrieve Configuration Changed Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullConfigurationChanged
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:Media/ConfigurationChanged event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>),
        Subscription termination time (<emphasis role="italic">tt</emphasis>), configuration token (<emphasis role="italic">confToken</emphasis>) and configuration type (<emphasis role="italic">confType</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>

          <listitem xml:id="Annex_HelperPullConfigurationChanged.1" xreflabel = "1">
            <para>
              Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="3.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty and source simple item Token = <emphasis role="italic">confToken</emphasis> and Type = <emphasis role="italic">confType</emphasis>,
                    skip other steps and finish the procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">timeout1</emphasis> timeout expires for step <xref linkend="Annex_HelperPullConfigurationChanged.1"/> without
                    Notification with source simple item Token = <emphasis role="italic">confToken</emphasis> and Type = <emphasis role="italic">confType</emphasis>, FAIL the test and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.16-->
    <section xml:id="Annex_HelperGetVideoEncoderConfigurationsList" xreflabel="Annex A.16">
      <title>Get Video Encoder Configurations List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetVideoEncoderConfigurationsList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve Video Encoder Configurations List.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Video Encoder Configurations List (<emphasis role="italic">videoEncoderConfList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with all video encoder configurations in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">videoEncoderConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">videoEncoderConfList</emphasis> is empty, FAIL the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.17-->
    <section xml:id="Annex_HelperGetAudioEncoderConfigurationsList" xreflabel="Annex A.17">
      <title>Get Audio Encoder Configurations List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAudioEncoderConfigurationsList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve Audio Encoder Configurations List.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Audio configuration is supported by the DUT as indicated by receiving the GetAudioEncoderConfigurationOptionsResponse.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Audio Encoder Configurations List (<emphasis role="italic">audioEncoderConfList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAudioEncoderConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">audioEncoderConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">audioEncoderConfList</emphasis> is empty, FAIL the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioEncoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.18-->
    <section xml:id="Annex_HelperGetAudioOutputConfigurationsList" xreflabel="Annex A.18">
      <title>Get Audio Output Configurations List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAudioOutputConfigurationsList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve Audio Output Configurations List.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Audio Outputs is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioOutput capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Audio Output Configurations List (<emphasis role="italic">audioOutputConfList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">audioOutputConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">audioOutputConfList</emphasis> is empty, FAIL the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.19-->
    <section xml:id="Annex_HelperConfigureMediaProfileWithAudioOutput" xreflabel="Annex A.19">
      <title>Configure Media profile with Audio Output Configuration</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperConfigureMediaProfileWithAudioOutput
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media Profile to contain Audio Output Configuration.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Audio Outputs is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioOutput capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>) containing Audio Output Configuration.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := AudioOutput
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis> contains Media Profile with Configurations.AudioOutput:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    Set <emphasis role="italic">profile</emphasis> := the first profile with Configurations.AudioOutput from the <emphasis role="italic">profileList</emphasis>.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profileList</emphasis>[0].
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken = <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">audioOutputConfigurationList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">audioOutputConfigurationList</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Name skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Type := AudioOutput
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Token := <emphasis role="italic">audioOutputConfigurationList</emphasis>[0]
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.20-->
    <section xml:id="Annex_HelperGetAudioDecoderConfigurationsList" xreflabel="Annex A.20">
      <title>Get Audio Decoder Configurations List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAudioDecoderConfigurationsList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve Audio Decoder Configurations List.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Audio Decoder is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioDecoder capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Audio Decoder Configurations List (<emphasis role="italic">audioDecoderConfList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">audioDecoderConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">audioDecoderConfList</emphasis> is empty, FAIL the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.21-->
    <section xml:id="Annex_HelperConfigureMediaProfileWithAudioBackCh" xreflabel="Annex A.21">
      <title>Configure Media profile with Audio Output Configuration and Audio Decoder Configuration</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperConfigureMediaProfileWithAudioBackCh
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Media Profile to contain Audio Output Configuration and Audio Decoder Configuration.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Audio Outputs is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioOutput capability. Audio Decoder is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioDecoder capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Media Profile (<emphasis role="italic">profile</emphasis>) containing Audio Output Configuration and Audio Decoder Configuration.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[0] := AudioOutput
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Type[1] := AudioDecoder
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Profiles list =: <emphasis role="italic">profileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis> contains Media Profile with Configurations.AudioOutput and Configurations.AudioDecoder:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    Set <emphasis role="italic">profile</emphasis> := the first Media Profile with Configurations.AudioOutput and Configurations.AudioDecoder from the <emphasis role="italic">profileList</emphasis>.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Skip other steps of procedure.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">profileList</emphasis> contains Media Profile with Configurations.AudioOutput:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    Set <emphasis role="italic">profile</emphasis> := the first Media Profile with Configurations.AudioOutput from the <emphasis role="italic">profileList</emphasis>.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Go to step <link linkend="Annex_HelperConfigureMediaProfileWithAudioBackCh.13">13</link>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">profile</emphasis> := <emphasis role="italic">profileList</emphasis>[0].
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAudioOutputConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">audioOutputConfigurationList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">audioOutputConfigurationList</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Name skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Type := AudioOutput
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Token := <emphasis role="italic">audioOutputConfigurationList</emphasis>[0]
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAudioDecoderConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken = <emphasis role="italic">profile</emphasis>.@token
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperConfigureMediaProfileWithAudioBackCh.13">
            <para>
              The DUT responds with <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">audioDecoderConfigurationList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">audioDecoderConfigurationList</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ProfileToken := <emphasis role="italic">profileList</emphasis>.Profiles[0].@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Name skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Type := AudioDecoder
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Configuration[0].Token := <emphasis role="italic">audioDecoderConfigurationList</emphasis>[0]
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetProfilesResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioOutputConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">AddConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAudioDecoderConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.22-->
    <section xml:id="Annex_HelperGetVideoSourcesList" xreflabel="Annex A.22">
      <title>Get Video Sources List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetVideoSourcesList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve Video Sources List.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. DeviceIO Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Video Sources List (<emphasis role="italic">videoSourcesList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetVideoSources </emphasis> request.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetVideoSourcesResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token list =: <emphasis role="italic">videoSourcesList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">videoSourcesList</emphasis> is empty, FAIL the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoSourcesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.23-->
    <section xml:id="Annex_HelperWaitingReboot" xreflabel="Annex A.23">
      <title>Waiting for Reboot</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperWaitingReboot
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to wait until the Device becomes available after reboot.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
         
                <listitem>
                  <para>
                    If DUT supports Discovery:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="2.5em"?>
                      <listitem xml:id="Annex_HelperWaitingReboot.1">
                        <para>
                          Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="3.5em"?>
                            <listitem>
                              <para>
                                The DUT will send Multicast <emphasis role="bold">Hello</emphasis> message after it is successfully rebooted with parameters:
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      EndpointReference.Address equal to unique endpoint reference of the DUT
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Types list
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Scopes list
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      XAddrs list := <emphasis role="italic">xAddrsList</emphasis>
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      MetadataVersion
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                If <emphasis role="italic">xAddrsList</emphasis> contains URI address with IPv4 address other than LinkLocal from ONVIF Client subnet, go to step <link linkend="Annex_HelperWaitingReboot.3">3</link>.
                              </para>
                            </listitem>                            
                          </orderedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">timeout1</emphasis> timeout expires for the step <link linkend="Annex_HelperWaitingReboot.1">1.1</link> without <emphasis role="bold">Hello</emphasis> with URI address with not a LinkLocal IPv4 address from ONVIF Client subnet, FAIL the test and skip other steps.
                        </para>
                      </listitem>
                      <listitem xml:id="Annex_HelperWaitingReboot.3">
                        <para>
                          ONVIF client waits for 5 seconds after <emphasis role="bold">Hello</emphasis> was received.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
          <listitem>
            <para>
              If DUT does not support Discovery:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits during <emphasis role="italic">rebootTimeout</emphasis>.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
              </orderedlist>
            </para>
          
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">Hello</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Reboot Timeout field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.24-->
    <section xml:id="Annex_HelperFindGuaranteedProfiles" xreflabel="Annex A.24">
      <title>Find Guaranteed Number of Media Profiles for Video Source Configuration</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperFindGuaranteedProfiles
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure, which tries to find already existing Media Profiles to reach number of guaranteed encoder instances without change of already configured profiles.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Information about guaranteed encoder instances (<emphasis role="italic">info</emphasis>).
        List of Media Profiles that should not be changed during the procedure (<emphasis role="italic">configuredProfilesList</emphasis>).
        List of Media Profiles that could be changed (<emphasis role="italic">profilesList</emphasis>).
        Video Source Configuration (<emphasis role="italic">videoSourceConfig</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> List of configured media profiles (<emphasis role="italic">configuredProfilesList</emphasis>).
        List of Media Profiles that could be changed (<emphasis role="italic">profilesList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Set <emphasis role="italic">configuredProfilesListForVSC</emphasis> := empty.
            </para>
          </listitem>
          <listitem>
            <para>
              For each Media Profile <emphasis role="italic">profile</emphasis> from <emphasis role="italic">profileList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If number of items in <emphasis role="italic">configuredProfilesListForVSC</emphasis> is equal to <emphasis role="italic">info</emphasis>.Total, skip other steps of procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">profile</emphasis> contains Configurations.VideoSource with @token = <emphasis role="italic">videoSourceConfig</emphasis>.token and
                    Configurations.VideoEncoder that was not used in Media Profiles from <emphasis role="italic">configuredProfilesList</emphasis> list:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">encoding</emphasis> := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.Encoding.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">info</emphasis>.Codec list contains no items with Encoding = <emphasis role="italic">encoding</emphasis> or
                          if <emphasis role="italic">info</emphasis>.Codec list contains an item with Encoding = <emphasis role="italic">encoding</emphasis> and number of Media Profiles with Configurations.VideoEncoder.Encoding = <emphasis role="italic">encoding</emphasis>
                          in <emphasis role="italic">configuredProfilesListForVSC</emphasis> is less then <emphasis role="italic">info</emphasis>.Codec.Number for this <emphasis role="italic">encoding</emphasis>:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                Add <emphasis role="italic">profile</emphasis> to <emphasis role="italic">configuredProfilesListForVSC</emphasis> list.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Add <emphasis role="italic">profile</emphasis> to <emphasis role="italic">configuredProfilesList</emphasis> list.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Remove <emphasis role="italic">profile</emphasis> from <emphasis role="italic">profilesList</emphasis> list.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.25-->
    <section xml:id="Annex_HelperFindGuaranteedProfiles2" xreflabel="Annex A.25">
      <title>Configure Video Encoder Configuration to Get Guaranteed Number of Media Profiles for Video Source Configuration</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperFindGuaranteedProfiles2
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure, which tries to configure Video Encoder Configurations into already existing Media Profiles to reach number of guaranteed encoder instances without change of already configured profiles.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Information about guaranteed encoder instances (<emphasis role="italic">info</emphasis>).
        List of Media Profiles that should not be changed during the procedure (<emphasis role="italic">configuredProfilesList</emphasis>).
        List of Media Profiles that could be changed (<emphasis role="italic">profilesList</emphasis>).
        Video Source Configuration (<emphasis role="italic">videoSourceConfig</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> List of configured media profiles (<emphasis role="italic">configuredProfilesList</emphasis>).
        List of Media Profiles that could be changed (<emphasis role="italic">profilesList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Set <emphasis role="italic">configuredProfilesListForVSC</emphasis> := items from <emphasis role="italic">configuredProfilesList</emphasis> that contains Configurations.VideoSource with @token = <emphasis role="italic">videoSourceConfig</emphasis>.@token.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperFindGuaranteedProfiles2.2">
            <para>
              For each Media Profile <emphasis role="italic">profile</emphasis> from <emphasis role="italic">profileList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If number of items in <emphasis role="italic">configuredProfilesListForVSC</emphasis> is equal to <emphasis role="italic">info</emphasis>.Total, skip other steps of procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">profile</emphasis> contains Configurations.VideoSource with @token = <emphasis role="italic">videoSourceConfig</emphasis>.@token and
                    Configurations.VideoEncoder that was not used in Media Profiles and from <emphasis role="italic">configuredProfilesList</emphasis> list:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ConfigurationToken := <emphasis role="italic">profile</emphasis>.Configurations.VideoEncoder.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ProfileToken skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Options list =: <emphasis role="italic">optionsList</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          For each Video Encoder Options <emphasis role="italic">vecOptions</emphasis> in <emphasis role="italic">optionsList</emphasis> repeat the following steps:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                If <emphasis role="italic">info</emphasis>.Codec list contains no items with Encoding = <emphasis role="italic">vecOptions</emphasis>.Encoding or
                                if <emphasis role="italic">info</emphasis>.Codec list contains an item with Encoding = <emphasis role="italic">vecOptions</emphasis>.Encoding and
                                number of Media Profiles with Configurations.VideoEncoder.Encoding = <emphasis role="italic">vecOptions</emphasis>.Encoding in <emphasis role="italic">configuredProfilesListForVSC</emphasis> is less
                                then <emphasis role="italic">info</emphasis>.Codec.Number for this <emphasis role="italic">vecOptions</emphasis>.Encoding:
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      Set <emphasis role="italic">options</emphasis> := <emphasis role="italic">vecOptions</emphasis>
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Go to step <link linkend="Annex_HelperFindGuaranteedProfiles2.2.2.7">2.2.7</link>.
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">RemoveConfiguration</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="bold">profile</emphasis>.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Type := VideoEncoder
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration[0].Token skipped
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          The DUT responds with <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Go to the next Media Profile for the step <link linkend="Annex_HelperFindGuaranteedProfiles2.2">2</link>.
                        </para>
                      </listitem>
                      <listitem xml:id="Annex_HelperFindGuaranteedProfiles2.2.2.7">
                        <para>
                          ONVIF Client invokes <emphasis role="bold">SetVideoEncoderConfiguration</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configuration.@token := <emphasis role="bold">profile</emphasis>.Configurations.VideoEncoder.@token
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration.Name := <emphasis role="bold">profile</emphasis>.Configurations.VideoEncoder.Name
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration.@GovLength skipped
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration.@Profile skipped
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration.Encoding := <emphasis role="bold">options</emphasis>.Encoding
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration.Resolution := <emphasis role="bold">options</emphasis>.ResolutionsAvailable[0]
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration.RateControl skipped
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration.Multicast := <emphasis role="bold">profile</emphasis>.Configurations.VideoEncoder.Multicast
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Configuration.Quality := <emphasis role="bold">options</emphasis>.QualityRange.Min
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          DUT responds with <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Add <emphasis role="bold">profile</emphasis> to <emphasis role="bold">configuredProfilesListForVSC</emphasis> list.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Add <emphasis role="bold">profile</emphasis> to <emphasis role="bold">configuredProfilesList</emphasis> list.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Remove <emphasis role="bold">profile</emphasis> from <emphasis role="bold">profilesList</emphasis> list.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.26-->
    <section xml:id="Annex_HelperFindGuaranteedProfiles3" xreflabel="Annex A.26">
      <title>Add Video Encoder Configuration to Get Guaranteed Number of Media Profiles for Video Source Configuration</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperFindGuaranteedProfiles3
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure, which tries to add Video Encoder Configurations into already existing Media Profiles to reach number of guaranteed encoder instances without change of already configured profiles.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Information about guaranteed encoder instances (<emphasis role="italic">info</emphasis>).
        List of Media Profiles that should not be changed during the procedure (<emphasis role="italic">configuredProfilesList</emphasis>).
        List of Media Profiles that could be changed (<emphasis role="italic">profilesList</emphasis>).
        Video Source Configuration (<emphasis role="italic">videoSourceConfig</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> List of configured media profiles (<emphasis role="italic">configuredProfilesList</emphasis>).
        List of Media Profiles that could be changed (<emphasis role="italic">profilesList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Set <emphasis role="italic">configuredProfilesListForVSC</emphasis> := items from <emphasis role="italic">configuredProfilesList</emphasis> that contains Configurations.VideoSource with @token = <emphasis role="italic">videoSourceConfig</emphasis>.@token.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperFindGuaranteedProfiles3.2">
            <para>
              For each Media Profile <emphasis role="italic">profile</emphasis> from <emphasis role="italic">profileList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If number of items in <emphasis role="italic">configuredProfilesListForVSC</emphasis> is equal to <emphasis role="italic">info</emphasis>.Total, skip other steps of procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">profile</emphasis> contains Configurations.VideoSource with @token = <emphasis role="italic">videoSourceConfig</emphasis>.@token:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurations</emphasis> request with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                ConfigurationToken skipped
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          The DUT responds with compatible video encoder configurations in <emphasis role="bold">GetVideoEncoderConfigurationsResponse</emphasis> with parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                Configurations list =: <emphasis role="italic">videoEncoderConfList</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">videoEncoderConfList</emphasis> is empty, FAIL the test and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">videoEncoderConfList</emphasis> contais only items that were used in Media Profiles from <emphasis role="italic">configuredProfilesList</emphasis> list, FAIL the test and skip other steps.
                        </para>
                      </listitem>
                      <listitem xml:id="Annex_HelperFindGuaranteedProfiles3.2.2.5">
                        <para>
                          For each Video Encoder Configuration <emphasis role="italic">videoEncoderConf</emphasis> from <emphasis role="italic">videoEncoderConfList</emphasis>, which was not used in Media Profiles from <emphasis role="italic">configuredProfilesList</emphasis> list repeat the following steps:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">GetVideoEncoderConfigurationOptions</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ConfigurationToken := <emphasis role="italic">videoEncoderConf</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      ProfileToken skipped
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                DUT responds with <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      Options list =: <emphasis role="italic">optionsList</emphasis>
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                For each Video Encoder Options <emphasis role="italic">vecOptions</emphasis> in <emphasis role="italic">optionsList</emphasis> repeat the following steps:
                                <orderedlist numeration="arabic" inheritnum="inherit">
                                  <?dbfo label-width="5.5em"?>
                                  <listitem>
                                    <para>
                                      If <emphasis role="italic">info</emphasis>.Codec list contains no items with Encoding = <emphasis role="italic">vecOptions</emphasis>.Encoding or
                                      if <emphasis role="italic">info</emphasis>.Codec list contains an item with Encoding = <emphasis role="italic">vecOptions</emphasis>.Encoding and
                                      number of Media Profiles with Configurations.VideoEncoder.Encoding = <emphasis role="italic">vecOptions</emphasis>.Encoding in <emphasis role="italic">configuredProfilesListForVSC</emphasis> is less
                                      then <emphasis role="italic">info</emphasis>.Codec.Number for this <emphasis role="italic">vecOptions</emphasis>.Encoding:
                                      <orderedlist numeration="arabic" inheritnum="inherit">
                                        <?dbfo label-width="6.5em"?>
                                        <listitem>
                                          <para>
                                            Set <emphasis role="italic">options</emphasis> := <emphasis role="italic">vecOptions</emphasis>
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            Go to step <link linkend="Annex_HelperFindGuaranteedProfiles3.2.2.5.5">2.2.5.5</link>.
                                          </para>
                                        </listitem>
                                      </orderedlist>
                                    </para>
                                  </listitem>
                                </orderedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Go to the next Video Encoder Configuration for the step <link linkend="Annex_HelperFindGuaranteedProfiles3.2.2.5">2.2.5</link>
                              </para>
                            </listitem>
                            <listitem xml:id="Annex_HelperFindGuaranteedProfiles3.2.2.5.5">
                              <para>
                                ONVIF Client invokes <emphasis role="bold">SetVideoEncoderConfiguration</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      Configuration.@token := <emphasis role="italic">videoEncoderConf</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration.Name := <emphasis role="italic">videoEncoderConf</emphasis>.Name
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration.@GovLength skipped
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration.@Profile skipped
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration.Encoding := <emphasis role="italic">options</emphasis>.Encoding
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration.Resolution := <emphasis role="italic">options</emphasis>.ResolutionsAvailable[0]
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration.RateControl skipped
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration.Multicast := <emphasis role="italic">videoEncoderConf</emphasis>.Multicast
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration.Quality := <emphasis role="italic">options</emphasis>.QualityRange.Min
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                DUT responds with <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client invokes <emphasis role="bold">AddConfiguration</emphasis> request with parameters
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      ProfileToken := <emphasis role="italic">profile</emphasis>.@token
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Name skipped
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Type := VideoEncoder
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      Configuration[0].Token := <emphasis role="italic">videoEncoderConf</emphasis>.@token
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                The DUT responds with <emphasis role="bold">AddConfigurationResponse</emphasis> message.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Add <emphasis role="italic">profile</emphasis> to <emphasis role="italic">configuredProfilesListForVSC</emphasis> list.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Add <emphasis role="italic">profile</emphasis> to <emphasis role="italic">configuredProfilesList</emphasis> list.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Remove <emphasis role="italic">profile</emphasis> from <emphasis role="italic">profilesList</emphasis> list.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Go to the next Media Profile for the step <link linkend="Annex_HelperFindGuaranteedProfiles3.2">2</link>.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetVideoEncoderConfigurationOptionsResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">RemoveConfigurationResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">SetVideoEncoderConfigurationResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.27-->
    <section xml:id="Annex_HelperGetMetadataConfigurationsList" xreflabel="Annex A.27">
      <title>Get Metadata Configurations List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetMetadataConfigurationsList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve Metadata Configurations List.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Metadata feature under Media2 Service is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Metadata Configurations List (<emphasis role="italic">metadataConfList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetMetadataConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetMetadataConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">metadataConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">metadataConfList</emphasis> is empty, FAIL the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetMetadataConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.28-->
    <section xml:id="Annex_OSDPictureFileParameters" xreflabel="Annex A.28">
      <title>OSD Picture File Parameters</title>
      <para>
        ONVIF Device Test Tool uses the picture file to upload on the device with the following patameters:
        <itemizedlist>
          <listitem>
            <para>
              File format: PNG
            </para>
          </listitem>
          <listitem>
            <para>
              Size: no more than 1024 bytes
            </para>
          </listitem>
          <listitem>
            <para>
              Width: 16 pixels
            </para>
          </listitem>
          <listitem>
            <para>
              Height: 16 pixels
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.29-->
    <section xml:id="Annex_HelperDeleteOSD" xreflabel="Annex A.29">
      <title>Delete OSD</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteOSD
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete OSD Configuration.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. OSD is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> OSD token (<emphasis role="italic">osdToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>

          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">DeleteOSD</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    OSDToken := <emphasis role="italic">osdToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              DUT responds with <emphasis role="bold">DeleteOSDResponse</emphasis> message.
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">DeleteOSDResponse</emphasis> message.
            </para>
          </listitem>


        </itemizedlist>
      </para>
    </section>
    <!--A.30-->
    <section xml:id="Annex_HelperDeviceConfigurationToCreateOSD" xreflabel="Annex A.30">
      <title>Device Configuration to Create OSD with Required Type</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeviceConfigurationToCreateOSD
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure Device to have free space to create OSD with required type.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. OSD is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> OSD Configurations List (<emphasis role="italic">osdConfList</emphasis>), OSD Options (<emphasis role="italic">osdOptions</emphasis>),
        OSD Type that will be created (<emphasis role="italic">osdType</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Updated OSD Configurations List (<emphasis role="italic">osdConfList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>


          <!--<listitem>
            <para>
              If <emphasis role="italic">osdTextStringType</emphasis> is specified:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    Set <emphasis role="italic">osdTextStringTypeNumber</emphasis> := number of OSD Configuration items with Type = "Text" and with TextString.Type = <emphasis role="italic">osdTextStringType</emphasis> in <emphasis role="italic">osdConfList</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">osdOptions</emphasis>.MaximumNumberOfOSDs contains attribute with name is equal to <emphasis role="italic">osdTextStringType</emphasis> value, set <emphasis role="italic">maxOSDTextStringTypeNumber</emphasis> := value of this attribute.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>-->
          <listitem>
            <para>
              If <emphasis role="italic">osdType</emphasis> = "Image":
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    Set <emphasis role="italic">osdImageNumber</emphasis> := number of OSD Configuration items with Type = "Image".
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">osdOptions</emphasis>.MaximumNumberOfOSDs contains "Image" attribute:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          If <emphasis role="italic">osdImageNumber</emphasis> = <emphasis role="italic">osdOptions</emphasis>.MaximumNumberOfOSDs.Image:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                If <emphasis role="italic">osdConfList</emphasis> does not contain at least one OSD Configuration with Type = "Image", FAIL the test and skip other steps.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">osdToken</emphasis> := <emphasis role="italic">osdConfList</emphasis>.OSDs[0].token, where OSDs[0] is the first OSD Configuration with Type = "Image".
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client deletes OSD Configuration with image type by following the procedure mentioned in <xref linkend="Annex_HelperDeleteOSD"/> with the following input parameter
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">osdToken</emphasis> - OSD Configuration token to delete
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">osdConfList</emphasis> := <emphasis role="italic">osdConfList</emphasis> - <emphasis role="italic">osdConfList</emphasis>.OSDs[0].token, where OSDs[0] is the OSD Configuration with token = <emphasis role="italic">osdToken</emphasis>.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Skip other steps.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">osdType</emphasis> = "Text":
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <!--<listitem>
                  <para>
                    If <emphasis role="italic">maxOSDTextStringTypeNumber</emphasis> is specified:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          If <emphasis role="italic">osdTextStringTypeNumber</emphasis> = <emphasis role="italic">maxOSDTextStringTypeNumber</emphasis>:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                If <emphasis role="italic">osdConfList</emphasis> does not contain at least one OSD Configuration with Type = "Text" and with TextString.Type = <emphasis role="italic">osdTextStringType</emphasis>, FAIL the test and skip other steps.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">osdToken</emphasis> := <emphasis role="italic">osdConfList</emphasis>.OSDs[0].token, where OSDs[0] is the first OSD Configuration with Type = "Text" and with TextString.Type = <emphasis role="italic">osdTextStringType</emphasis>.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client delete OSD Cinfiguration with text type and with <emphasis role="italic">osdTextStringType</emphasis> text string type by following the procedure mentioned in <xref linkend="Annex_HelperDeleteOSD"/> with the following input parameter
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">osdToken</emphasis> - OSD Configuration token to delete
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">osdConfList</emphasis> := <emphasis role="italic">osdConfList</emphasis> - <emphasis role="italic">osdConfList</emphasis>.OSDs[0].token, where OSDs[0] is the OSD Configuration with token = <emphasis role="italic">osdToken</emphasis>.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Skip other steps.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">osdOptions</emphasis>.MaximumNumberOfOSDs contains "PlainText" attribute:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          If <emphasis role="italic">osdTypeNumber</emphasis> = <emphasis role="italic">osdOptions</emphasis>.MaximumNumberOfOSDs.PlainText:
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="4.5em"?>
                            <listitem>
                              <para>
                                If <emphasis role="italic">osdConfList</emphasis> does not contain at least one OSD Configuration with Type = "Text", FAIL the test and skip other steps.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">osdToken</emphasis> := <emphasis role="italic">osdConfList</emphasis>.OSDs[0].token, where OSDs[0] is the first OSD Configuration with Type = "Text".
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                ONVIF Client delete OSD Cinfiguration with Text type by following the procedure mentioned in <xref linkend="Annex_HelperDeleteOSD"/> with the following input parameter
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      in <emphasis role="italic">osdToken</emphasis> - OSD Configuration token to delete
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Set <emphasis role="italic">osdConfList</emphasis> := <emphasis role="italic">osdConfList</emphasis> - <emphasis role="italic">osdConfList</emphasis>.OSDs[0].token, where OSDs[0] is the OSD Configuration with token = <emphasis role="italic">osdToken</emphasis>.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                Skip other steps.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>-->
                <listitem>
                  <para>
                    ONVIF Client deletes all OSD Configurations with Type="Text" by following the procedure mentioned in <xref linkend="Annex_HelperDeleteAllTextOSDs"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          in <emphasis role="italic">osdConfList</emphasis> - current OSD Configuration list
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          out <emphasis role="italic">osdConfList</emphasis> - updated OSD Configuration list
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">osdNumber</emphasis> := number of OSD Configuration items in <emphasis role="italic">osdConfList</emphasis>.
            </para>
          </listitem>

          <listitem>
            <para>
              If <emphasis role="italic">osdNumber</emphasis> = <emphasis role="italic">osdOptions</emphasis>.MaximumNumberOfOSDs.Total:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">osdConfList</emphasis> does not contain at least one OSD Configuration, FAIL the test and skip other steps.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set <emphasis role="italic">osdToken</emphasis> := <emphasis role="italic">osdConfList</emphasis>.OSDs[0].token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client deletes OSD Configuration by following the procedure mentioned in <xref linkend="Annex_HelperDeleteOSD"/> with the following input parameter
                    <itemizedlist>
                      <listitem>
                        <para>
                          in <emphasis role="italic">osdToken</emphasis> - OSD Configuration token to delete
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set <emphasis role="italic">osdConfList</emphasis> := <emphasis role="italic">osdConfList</emphasis> - <emphasis role="italic">osdConfList</emphasis>.OSDs[0].token, where OSDs[0] is the OSD Configuration with token = <emphasis role="italic">osdToken</emphasis>.
                  </para>
                </listitem>

              </orderedlist>
            </para>
          </listitem>



        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.31-->
    <section xml:id="Annex_HelperDeleteAllTextOSDs" xreflabel="Annex A.31">
      <title>Delete All Text OSDs</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteAllTextOSDs
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete all OSD Configurations with Type="Text".
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. OSD is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> OSD Configuration list (<emphasis role="italic">osdConfList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Updated OSD Configuration list (<emphasis role="italic">updatedOSDConfList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              For each OSD Configuration with Type="Text" <emphasis role="italic">osdConfig</emphasis> in <emphasis role="italic">osdConfList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>

                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">DeleteOSD</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          OSDToken := <emphasis role="italic">osdConfig</emphasis>.token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    DUT responds with <emphasis role="bold">DeleteOSDResponse</emphasis> message.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set <emphasis role="italic">updatedOSDConfList</emphasis> := <emphasis role="italic">osdConfList</emphasis> - <emphasis role="italic">osdConfig</emphasis>.
                  </para>
                </listitem>

              </orderedlist>
            </para>
          </listitem>



        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">DeleteOSDResponse</emphasis> message.
            </para>
          </listitem>


        </itemizedlist>
      </para>
    </section>
    <!--A.32-->
    <section xml:id="Annex_HelperGetAnalyticsConfigurationsList" xreflabel="Annex A.32">
      <title>Get Analytics Configurations List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAnalyticsConfigurationsList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve Analytics Configurations List.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Analytics feature under Media2 Service is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Analytics Configurations list (<emphasis role="italic">analyticsConfList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAnalyticsConfigurations</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    ConfigurationToken skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProfileToken skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAnalyticsConfigurationsResponse</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Configurations list =: <emphasis role="italic">analyticsConfList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">analyticsConfList</emphasis> is empty, FAIL the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAnalyticsConfigurationsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.33-->
    <section xml:id="Annex_HelperDeleteMediaProfile" xreflabel="Annex A.33">
      <title>Delete Media Profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteMediaProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete Media Profile.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Media profile token (<emphasis role="italic">profileToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">DeleteProfile</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token = <emphasis role="italic">profileToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">DeleteProfileResponse</emphasis> message.
            </para>
          </listitem>



        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">DeleteProfileResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!-- A.34 -->
    <section xml:id="Annex_HelperDeviceConfigurationForCreateMask" xreflabel="Annex A.34">
        <title>Device Configuration For Create Mask</title>
        <para>
            <emphasis role="bold">Name:</emphasis> HelperDeviceConfigurationForCreateMask
        </para>

        <para>
            <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure for configuring DUT in order to add a mask.
        </para>

        <para>
            <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Mask feature is supported by the DUT.
        </para>

        <para>
            <emphasis role="bold">Input:</emphasis> None.
        </para>

        <para>
            <emphasis role="bold">Returns:</emphasis> Mask Options (<emphasis role="italic">maskOptions</emphasis>). Video Source configuration token (<emphasis role="italic">vscToken</emphasis>). Mask to restore (optional) (<emphasis role="italic">maskToRestore</emphasis>)
        </para>

        <para>
            <emphasis role="bold">Procedure:</emphasis>
        </para>
        <para>
            <orderedlist>
                <?dbfo label-width="1.5em"?>

                <listitem>
                    <para>
                        ONVIF Client retrieves Video Source Configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetVideoSourceConfigurationsList"/> with the following input and output parameters<itemizedlist>
                            <listitem>
                                <para>
                                    out <emphasis role="italic">videoSourceConfList1</emphasis> - Video Source Configurations list
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        For each Video Source Configuration <emphasis role="italic">videoSourceConf1</emphasis> in <emphasis role="italic">videoSourceConfList1</emphasis> list repeat the following steps:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="2.5em"?>
                            <listitem>
                                <para>
                                    ONVIF Client invokes <emphasis role="bold">GetMaskOptions</emphasis> request with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                ConfigurationToken := <emphasis role="italic">videoSourceConf1</emphasis>.@Token
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    DUT responds with <emphasis role="bold">GetMaskOptionsResponse</emphasis> message with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                MaskOptions =: <emphasis role="italic">maskOptions</emphasis>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If <emphasis role="italic">maskOptions</emphasis> does not contain MaxMasks attribute, FAIL the test and skip other steps.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If <emphasis role="italic">maskOptions</emphasis>.MaxMasks > 0: 
                                    <orderedlist numeration="arabic" inheritnum="inherit">
                                        <?dbfo label-width="3.5em"?>
                                        <listitem>
                                            <para>
                                                Set <emphasis role="italic">vscToken</emphasis> := <emphasis role="italic">videoSourceConf1</emphasis>.@Token 
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                ONVIF Client invokes <emphasis role="bold">GetMasks</emphasis> request with parameters
                                                <itemizedlist>
                                                    <listitem>
                                                        <para>
                                                            Token skipped
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            ConfigurationToken := <emphasis role="italic">vscToken</emphasis>
                                                        </para>
                                                    </listitem>
                                                </itemizedlist>
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                DUT responds with <emphasis role="bold">GetMasksResponse</emphasis> message with parameters
                                                <itemizedlist>
                                                    <listitem>
                                                        <para>
                                                            Masks =: <emphasis role="italic">maskConfList1</emphasis>
                                                        </para>
                                                    </listitem>
                                                </itemizedlist>
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                Set <emphasis role="italic">amountOfExistingMasks</emphasis> := amount of Mask items in <emphasis role="italic">maskConfList1</emphasis>
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">amountOfExistingMasks</emphasis> = <emphasis role="italic">maskOptions</emphasis>.MaxMasks
                                                <orderedlist numeration="arabic" inheritnum="inherit">
                                                    <?dbfo label-width="3.5em"?>
                                                    <listitem>
                                                        <para>
                                                            Set <emphasis role="italic">maskToDelete</emphasis> := <emphasis role="italic">maskConfList1</emphasis>.Masks[0].token
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            ONVIF Client deletes Mask Configuration by following the procedure mentioned in <xref linkend="Annex_HelperDeleteMask"/> with the following input parameter
                                                            <itemizedlist>
                                                                <listitem>
                                                                    <para>
                                                                        in <emphasis role="italic">maskToDelete</emphasis> - Mask Configuration token to delete
                                                                    </para>
                                                                </listitem>
                                                            </itemizedlist>
                                                        </para>
                                                    </listitem>
                                                </orderedlist>
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                Skip other steps of procedure.
                                            </para>
                                        </listitem>

                                    </orderedlist>
                                </para>
                            </listitem>
                        </orderedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        FAIL the test and skip other steps.
                    </para>
                </listitem>
            </orderedlist>
        </para>
        <para>
            <emphasis role="bold">Procedure Result:</emphasis>
        </para>
        <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
                <listitem>
                    <para>
                        DUT passes all assertions.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            <emphasis role="bold">FAIL –</emphasis>

            <itemizedlist>
                <listitem>
                    <para>
                        DUT did not send <emphasis role="bold">GetMaskOptionsResponse</emphasis> message.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT did not send <emphasis role="bold">GetMasksResponse</emphasis> message.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>
    <!-- A.35 -->
    <section xml:id="Annex_HelperDeleteMask" xreflabel="Annex A.35">
        <title>Delete Mask</title>
        <para>
            <emphasis role="bold">Name:</emphasis> HelperDeleteMask
        </para>

        <para>
            <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete specified Mask.
        </para>

        <para>
            <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Mask feature is supported by the DUT.
        </para>

        <para>
            <emphasis role="bold">Input:</emphasis> Mask token (<emphasis role="italic">maskToDelete</emphasis>).
        </para>

        <para>
            <emphasis role="bold">Returns:</emphasis> None.
        </para>

        <para>
            <emphasis role="bold">Procedure:</emphasis>
        </para>

        <para>
            <orderedlist>
                <?dbfo label-width="1.5em"?>
                <listitem>
                    <para>
                        ONVIF Client invokes <emphasis role="bold">DeleteMask</emphasis> request with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Token := <emphasis role="italic">maskToDelete</emphasis>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT responds with <emphasis role="bold">DeleteMaskResponse</emphasis> message
                    </para>
                </listitem>
            </orderedlist>
        </para>
        <para>
            <emphasis role="bold">Procedure Result:</emphasis>
        </para>
        <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
                <listitem>
                    <para>
                        DUT passes all assertions.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            <emphasis role="bold">FAIL –</emphasis>

            <itemizedlist>
                <listitem>
                    <para>
                        DUT did not send <emphasis role="bold">DeleteMaskResponse</emphasis> message.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>
    <!-- A.36 -->
    <section xml:id="Annex_HelperCreateMask" xreflabel="Annex A.36">
        <title>Create Mask</title>
        <para>
            <emphasis role="bold">Name:</emphasis> HelperCreateMask
        </para>

        <para>
            <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure for mask creation for specified Video Source Configuration with valid options.
        </para>

        <para>
            <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Mask feature is supported by the DUT.
        </para>

        <para>
            <emphasis role="bold">Input:</emphasis> Video Source configuration token (<emphasis role="italic">vscToken</emphasis>). Mask Options (<emphasis role="italic">maskOptions</emphasis>). Type of Mask (<emphasis role="italic">maskType</emphasis>). 
        </para>

        <para>
            <emphasis role="bold">Returns:</emphasis> Token of the created mask (<emphasis role="italic">maskToken</emphasis>).
        </para>

        <para>
            <emphasis role="bold">Procedure:</emphasis>
        </para>

        <para>
            <orderedlist>
                <?dbfo label-width="1.5em"?>
                <listitem>
                    <para>
                        ONVIF Client invokes <emphasis role="bold">CreateMask</emphasis> request with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    token := "TestMask" (note: this token can be ignored by DUT)
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ConfigurationToken := <emphasis role="italic">vscToken</emphasis>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Polygon := Point[0].@x="-0.4", Point[0].@y="-0.2", Point[1].@x="-0.2", Point[1].@y="0.3", Point[2].@x="0.1", Point[2].@y="0.4", Point[3].@x="0.3", Point[3].@y="-0.3" if <emphasis role="italic">maskOptions</emphasis>.RectangleOnly is false or skipped. Else Polygon := Point[0].@x="-0.5", Point[0].@y="-0.5", Point[1].@x="-0.5", Point[1].@y="0.5", Point[2].@x="0.5", Point[2].@y="0.5", Point[3].@x="0.5", Point[3].@y="-0.5"
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Type := <emphasis role="italic">maskType</emphasis>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    If Type = “Color”:
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">maskOptions</emphasis>.Color.ColorList is specified:
                                                <itemizedlist>
                                                    <listitem>
                                                        <para>
                                                            Color := first value that are listed in <emphasis role="italic">maskOptions</emphasis>.Color.ColorList
                                                        </para>
                                                    </listitem>
                                                </itemizedlist>
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>
                                                If <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange is specified:
                                                <itemizedlist>
                                                    <listitem>
                                                        <para>
                                                            Color.@Colorspace := Colorspace value of the first item that is listed in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Color.@X := value from the range [X.Min,X.Max] of the same item in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange that was used for the Color.@Colorspace
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Color.@Y := value from the range [Y.Min,Y.Max] of the same item in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange that was used for the Color.@Colorspace
                                                        </para>
                                                    </listitem>
                                                    <listitem>
                                                        <para>
                                                            Color.@Z := value from the range [Z.Min,Z.Max] of the same item in <emphasis role="italic">maskOptions</emphasis>.Color.ColorspaceRange that was used for the Color.@Colorspace
                                                        </para>
                                                    </listitem>
                                                </itemizedlist>
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    Enabled := false
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT responds with <emphasis role="bold">CreateMaskResponse</emphasis> message with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Token of the created mask =: <emphasis role="italic">maskToken</emphasis>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
            </orderedlist>
        </para>
        <para>
            <emphasis role="bold">Procedure Result:</emphasis>
        </para>
        <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
                <listitem>
                    <para>
                        DUT passes all assertions.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            <emphasis role="bold">FAIL –</emphasis>

            <itemizedlist>
                <listitem>
                    <para>
                        DUT did not send <emphasis role="bold">CreateMaskResponse</emphasis> message.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>
    <!-- A.37 -->
    <section xml:id="Annex_HelperMasksCleanUp" xreflabel="Annex A.37">
        <title>Remove all Masks from Video Source Configuration</title>
        <para>
            <emphasis role="bold">Name:</emphasis> HelperMasksCleanUp
        </para>

        <para>
            <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure, which removes all masks from Video Source Configuration.
        </para>

        <para>
            <emphasis role="bold">Pre-requisite:</emphasis> Media2 Service is received from the DUT. Mask feature is supported by the DUT.
        </para>

        <para>
            <emphasis role="bold">Input:</emphasis> Video Source configuration token (<emphasis role="italic">vscToken</emphasis>).
        </para>

        <para>
            <emphasis role="bold">Returns:</emphasis> None. 
        </para>

        <para>
            <emphasis role="bold">Procedure:</emphasis>
        </para>
        <para>
            <orderedlist>
                <?dbfo label-width="1.5em"?>

                <listitem>
                    <para>
                        ONVIF Client invokes <emphasis role="bold">GetMasks</emphasis> request with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Token skipped
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    ConfigurationToken := <emphasis role="italic">vscToken</emphasis>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT responds with <emphasis role="bold">GetMasksResponse</emphasis> message with parameters
                        <itemizedlist>
                            <listitem>
                                <para>
                                    Masks =: <emphasis role="italic">maskConfList1</emphasis>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        For each Mask <emphasis role="italic">mask</emphasis> in <emphasis role="italic">maskConfList1</emphasis> list repeat the following steps:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width="2.5em"?>
                            <listitem>
                                <para>
                                    ONVIF Client invokes <emphasis role="bold">DeleteMask</emphasis> request with parameters
                                    <itemizedlist>
                                        <listitem>
                                            <para>
                                                Token := <emphasis role="italic">mask</emphasis>.@Token
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    DUT responds with <emphasis role="bold">DeleteMaskResponse</emphasis> message 
                                </para>
                            </listitem>
                        </orderedlist>
                    </para>
                </listitem>
            </orderedlist>
        </para>
        <para>
            <emphasis role="bold">Procedure Result:</emphasis>
        </para>
        <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
                <listitem>
                    <para>
                        DUT passes all assertions.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            <emphasis role="bold">FAIL –</emphasis>

            <itemizedlist>
                <listitem>
                    <para>
                        DUT did not send <emphasis role="bold">DeleteMaskResponse</emphasis> message.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        DUT did not send <emphasis role="bold">GetMasksResponse</emphasis> message.
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

  </appendix>
</book>