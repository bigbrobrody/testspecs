<?xml version="1.0" encoding="UTF-8"?>
<!--For PDF version (standard)-->
<!-- <?xml-stylesheet href="docbook/xsl/fo/docbook.xsl" type="text/xsl" ?>-->
<!--For PDF version-->
<!-- <?xml-stylesheet href="ONVIF-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<!--For online version-->
<?xml-stylesheet href="docbook-css/docbook.xsl" type="text/xsl" ?>
<!--For PDF version - New ONVIF-->
<!--<?xml-stylesheet href="../ONVIFNew-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xml="http://www.w3.org/XML/1998/namespace" xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd" version="0.1" xml:id="ONVIF_Profile_Imaging_Client_TS">
  <info>
    <orgname>
      <phrase>
        <trademark class="registered">ONVIF</trademark>
      </phrase>
    </orgname>
    <title>Event Handling Device Test Specification</title>
    <subtitle>Version 20.06</subtitle>
    <date>June 2020</date>
    <copyright>
      <year>2020</year>
      <holder>ONVIF, Inc. All rights reserved.</holder>
    </copyright>
    <address>
      <uri>www.onvif.org</uri>
    </address>
    <legalnotice role="notices">
      <para>
        Recipients of this document may copy, distribute, publish, or display this
        document so long as this copyright notice, license and disclaimer are retained with
        all copies of the document. No license is granted to modify this document.
      </para>
      <para>
        THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR
        AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
        NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
        NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY
        PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS,
        COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
      </para>
      <para>
        IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR
        ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES,
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR
        NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE
        POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT. THE
        FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR
        LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE
        AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE
        CORPORATION.
      </para>
    </legalnotice>
    <revhistory>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Jun 15, 2017</date>
        <revdescription>
          <para>
            First issue. Was created by splitting Base Test Specification.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Sept 19, 2017</date>
        <revdescription>
          <para>
            The following test cases were added according to #1480:
          </para>
          <para>
            EVENT-2-1-28 BASIC NOTIFICATION INTERFACE - UNSUBSCRIBE
          </para>
          <para>
            EVENT-3-1-36 REALTIME PULLPOINT SUBSCRIPTION - UNSUBSCRIBE
          </para>
          <para>
            The following test cases were changed according to #1480:
          </para>
          <para>
            EVENT-2-1-21 renamed from BASIC NOTIFICATION INTERFACE - UNSUBSCRIBE to BASIC NOTIFICATION INTERFACE - UNSUBSCRIBE (NEGATIVE TEST)
          </para>
          <para>
            EVENT-3-1-19 renamed from REALTIME PULLPOINT SUBSCRIPTION - UNSUBSCRIBE to REALTIME PULLPOINT SUBSCRIPTION - UNSUBSCRIBE (NEGATIVE TEST)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Oct 30, 2017</date>
        <revdescription>
          <para>
            The following test case was added according to #1478:
          </para>
          <para>
            EVENT-3-1-37 REALTIME PULLPOINT SUBSCRIPTION – MAXIMUM SUPPORTED NUMBER OF NOTIFICATION PULL POINTS
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Oct 31, 2017</date>
        <revdescription>
          <para>
            The following test case was updated according to #1401:
          </para>
          <para>
            EVENT-3-1-12 REALTIME PULLPOINT SUBSCRIPTION – RENEW
          </para>
          <para>
            EVENT-3-1-19 REALTIME PULLPOINT SUBSCRIPTION – UNSUBSCRIBE
          </para>
          <para>
            EVENT-3-1-20 REALTIME PULLPOINT SUBSCRIPTION – TIMEOUT
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Apr 17, 2018</date>
        <revdescription>
          <para>
            The following test cases were added according to #1340:
          </para>
          <para>
            EVENT-2-1-29 BASIC NOTIFICATION INTERFACE - MESSAGE CONTENT FILTER
          </para>
          <para>
            EVENT-3-1-38 REALTIME PULLPOINT SUBSCRIPTION - MESSAGE CONTENT FILTER
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jun 21, 2018</date>
        <revdescription>
          <para>Reformatting document using new template</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>Feb 25, 2020</date>
        <revdescription>
          <para>The following were changed according to #1995:</para>
          <para>EVENT-5-1-1 EVENT SERVICE CAPABILITIES (steps 5, and 6 added)</para>
          <para>EVENT-5-1-2 GET SERVICES AND EVENT SERVICE CAPABILITIES CONSISTENCY (Note added)</para>
          <para>EVENT-7-1-1 ADD EVENT BROKER CONFIGURATION (new)</para>
          <para>EVENT-7-1-2 MODIFY EVENT BROKER CONFIGURATION (new)</para>
          <para>EVENT-7-1-3 DELETE EVENT BROKER CONFIGURATION (new)</para>
          <para>EVENT-7-2-1 MQTT EVENTS PUBLISHING (MQTT, QoS=0) (new)</para>
          <para>EVENT-7-2-2 MQTT EVENTS PUBLISHING (MQTT TLS, QoS=0) (new)</para>
          <para>EVENT-7-2-3 MQTT EVENTS PUBLISHING (MQTT OVER WEBSOCKET, QoS=0) (new)</para>
          <para>EVENT-7-2-4 MQTT EVENTS PUBLISHING (MQTT TLS OVER WEBSOCKET, QoS=0) (new)</para>
          <para>EVENT-7-2-5 MQTT EVENTS PUBLISHING (MQTT, QoS=1) (new)</para>
          <para>EVENT-7-2-6 MQTT EVENTS PUBLISHING (MQTT, QoS=2) (new)</para>
          <para>EVENT-7-2-7 MQTT EVENTS PUBLISHING - PUBLISH FILTER (MQTT, QoS=0) (new)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>May 13, 2020</date>
        <revdescription>
          <para>Pre-Requisite of all test cases updated with adding of Event Service according to #1999.</para>       
        </revdescription>
      </revision>
    <revision>
        <revnumber>20.06</revnumber>
        <date>May 13, 2020</date>
        <revdescription>
          <para>Pre-Requisite of the following test cases updated with adding of Pull-Point Notification feature according to #1999:</para>
        <para>EVENT-3-1-9	REALTIME PULLPOINT SUBSCRIPTION - CREATE PULL POINT SUBSCRIPTION</para>
<para>EVENT-3-1-12	REALTIME PULLPOINT SUBSCRIPTION - RENEW</para>
<para>EVENT-3-1-15	REALTIME PULLPOINT SUBSCRIPTION - PULLMESSAGES</para>
<para>EVENT-3-1-16	REALTIME PULLPOINT SUBSCRIPTION - PULLMESSAGES FILTER</para>
<para>EVENT-3-1-17	REALTIME PULLPOINT SUBSCRIPTION - INVALID MESSAGE CONTENT FILTER</para>
<para>EVENT-3-1-19	REALTIME PULLPOINT SUBSCRIPTION - UNSUBSCRIBE (NEGATIVE TEST)</para>
<para>EVENT-3-1-20	REALTIME PULLPOINT SUBSCRIPTION - TIMEOUT</para>
<para>EVENT-3-1-22	REALTIME PULLPOINT SUBSCRIPTION - INVALID TOPIC EXPRESSION</para>
<para>EVENT-3-1-24	REALTIME PULLPOINT SUBSCRIPTION – PULLMESSAGES  AS KEEP-ALIVE</para>
<para>EVENT-3-1-25	REALTIME PULLPOINT SUBSCRIPTION - SET SYNCHRONIZATION POINT</para>
<para>EVENT-3-1-32	REALTIME PULLPOINT SUBSCRIPTION – PULLMESSAGES TIMEOUT</para>
<para>EVENT-3-1-33	REALTIME PULLPOINT SUBSCRIPTION – CONJUNCTION IN PULLMESSAGES FILTER (OR OPERATION)</para>
<para>EVENT-3-1-34	REALTIME PULLPOINT SUBSCRIPTION – TOPIC SUB-TREE IN PULLMESSAGES FILTER</para>
<para>EVENT-3-1-35	REALTIME PULLPOINT SUBSCRIPTION – CONJUNCTION IN NOTIFY FILTER (TOPIC SUB-TREE AND OR OPERATION)</para>
<para>EVENT-3-1-36	REALTIME PULLPOINT SUBSCRIPTION - UNSUBSCRIBE</para>
<para>EVENT-3-1-37	REALTIME PULLPOINT SUBSCRIPTION – MAXIMUM SUPPORTED NUMBER OF NOTIFICATION PULL POINTS</para>
<para>EVENT-3-1-38	REALTIME PULLPOINT SUBSCRIPTION - MESSAGE CONTENT FILTER</para>
        </revdescription>
      </revision>
    </revhistory>
  </info>
  <chapter xml:id="s.intro">
    <title>Introduction</title>
    <para>
      The goal of the ONVIF test specification set is to make it possible to realize fully interoperable IP physical security implementations from different vendors. The set of ONVIF test specifications describes the test cases need to verify the [ONVIF Network Interface Specs] and [ONVIF Conformance] requirements. Also the test cases are to be basic inputs for some Profile specification requirements. It also describes the test framework, test setup, pre-requisites, test policies needed for the execution of the described test cases.
    </para>
    <para>
      This ONVIF Event Handling Specification acts as a supplementary document to the [ONVIF Network Interface Specs], illustrating test cases that need to be executed and passed. And also this specification also acts as an input document to the development of test tool which will be used to test the ONVIF device implementation conformance towards ONVIF standard. As the test tool performs as a Client during testing, this test tool is referred as ONVIF Client hereafter.
    </para>
    <section xml:id="s.intro.scope">
      <title>Scope</title>
      <para>
        This ONVIF Event Handling Test Specification defines and regulates the conformance testing procedure for the ONVIF conformance devices. Conformance testing is meant to be functional black-box testing. The objective of this specification is to provide the test cases to test individual requirements of ONVIF devices according to ONVIF core services which are defined in [ONVIF Network Interface Specs].
      </para>
      <para>
        The principal intended purposes are:<itemizedlist>
          <listitem>
            <para>Provide self-assessment tool for implementations.</para>
          </listitem>
          <listitem>
            <para>
              Provide comprehensive test suite coverage for [ONVIF Network Interface Specs].
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        This specification does not address the following:
        <itemizedlist>
          <listitem>
            <para>
              Product use cases and non-functional (performance and regression) testing.
            </para>
          </listitem>
          <listitem>
            <para>
              SOAP Implementation Interoperability test i.e. Web Service Interoperability Basic Profile version 2.0 (WS-I BP 2.0).
            </para>
          </listitem>
          <listitem>
            <para>
              Network protocol implementation Conformance test for HTTP, HTTPS, RTP and RTSP protocol.
            </para>
          </listitem>
          <listitem>
            <para>
              Wi-Fi Conformance test
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        The set of ONVIF Test Specification will not cover the complete set of requirements as defined in [ONVIF Network Interface Specs]; instead it would cover subset of it.
      </para>
      <para>
        This ONVIF Event Handling Test Specification covers core parts of functional blocks in [ONVIF Network Interface Specs]. The following sections describe the brief overview and scope of each functional block.
      </para>

      <section xml:id="s.intro.event_handling">
        <title>Events</title>
        <para>
          Event handling covers the test cases for the verification of the Event service as mentioned in [ONVIF Network Interface Specs] and [ONVIF Event WSDL].
        </para>
        <para>
          The event handling test cases cover the following mandatory interfaces:
          <itemizedlist>
            <listitem>
              <para>
                Basic Notification Interface
                <itemizedlist>
                  <listitem>
                    <para>
                      This test specification provides test cases to verify the implementation of the Basic Notification Interface of a device. The mechanisms to subscribe and unsubscribe to an event are covered as well as the mechanism to renew a subscription manager and receive events via <emphasis role="bold">Notify</emphasis> messages. The correct use of the message content filter is also tested.
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Real Time Pull Point Notification Interface
                <itemizedlist>
                  <listitem>
                    <para>
                      Test cases to verify the implementation of the Realtime PullPoint Interface are provided by this test specification. The CreatePullPointSubscription command is tested as well as the PullMessages command in combination with message content filtering to retrieve the events.
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Seek
                <itemizedlist>
                  <listitem>
                    <para>
                      Test cases to verify the implementation of the Seek Interface are provided by this test specification. The Seek command is tested as well as the PullMessages command to retrieve the events from persistent notification storage.
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                MQTT Notification Interface
                <itemizedlist>
                  <listitem>
                    <para>
                      Test cases to verify the implementation of the MQTT functionality. The scope of this specification section is to cover the following functions:
                      <itemizedlist>
                        <listitem>
                          <para>
                            Get Event Brokers
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Add Event Broker
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Delete Event Broker
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Publishing of events as MQTT events via protocols mqtt, mqtts, ws and wss to event broker server.
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
  </chapter>
  <chapter xml:id="s.docbook">
    <title>Normative references</title>
    <itemizedlist>
      <listitem>
        <para>[ONVIF Conformance] ONVIF Conformance Process Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/conformance/">https://www.onvif.org/profiles/conformance/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Profile Policy] ONVIF Profile Policy:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/">https://www.onvif.org/profiles/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Network Interface Specs] ONVIF Network Interface Specification documents:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Core Specs] ONVIF Core Specifications:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ISO/IEC Directives, Part 2] ISO/IEC Directives, Part 2, Annex H:</para>
        <para>
          <link xlink:href="http://www.iso.org/directives">http://www.iso.org/directives</link>
        </para>
      </listitem>
      <listitem>
        <para>[ISO 16484-5] ISO 16484-5:2014-09 Annex P:</para>
        <para>
          <link xlink:href="https://www.iso.org/obp/ui/#!iso:std:63753:en">https://www.iso.org/obp/ui/#!iso:std:63753:en</link>
        </para>
      </listitem>
      <listitem>
        <para>[SOAP 1.2, Part 1] W3C SOAP 1.2, Part 1, Messaging Framework:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/soap12-part1/">http://www.w3.org/TR/soap12-part1/</link>
        </para>
      </listitem>
      <listitem>
        <para>[XML-Schema, Part 1] W3C XML Schema Part 1: Structures Second Edition:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/xmlschema-1/">http://www.w3.org/TR/xmlschema-1/</link>
        </para>
      </listitem>
      <listitem>
        <para>[XML-Schema, Part 2] W3C XML Schema Part 2: Datatypes Second Edition:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/xmlschema-2/">http://www.w3.org/TR/xmlschema-2/</link>
        </para>
      </listitem>
      <listitem>
        <para>[WS-Security] "Web Services Security: SOAP Message Security 1.1 (WS-Security 2004)", OASIS Standard, February 2006.:</para>
        <para>
          <link xlink:href="http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf">http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf</link>
        </para>
      </listitem>
      <listitem>
        <para>[RFC 3986] "Uniform Resource Identifier (URI): Generic Syntax", T. Berners-Lee et. al., January 2005.:</para>
        <para>
          <link xlink:href="http://www.ietf.org/rfc/rfc3986">http://www.ietf.org/rfc/rfc3986</link>
        </para>
      </listitem>
      <listitem>
        <para>MQTT Version 3.1.1 Plus Errata 01, OASIS Standard Incorporating Approved Errata 01, 10 December2015:</para>
        <para>
          <link xlink:href="http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/mqtt-v3.1.1.pdf">http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/mqtt-v3.1.1.pdf</link>
        </para>
      </listitem>
    </itemizedlist>
  </chapter>
  <chapter xml:id="additions">
    <title>Terms and Definitions</title>
    <section xml:id="additions.conventions">
      <title>Conventions</title>
      <para>
        The key words "shall", "shall not", "should", "should not", "may", "need not",
        "can", "cannot" in this specification are to be interpreted as described in [ISO/IEC
        Directives Part 2].
      </para>
    </section>
    <section xml:id="additions.definitions">
      <title>Definitions</title>
      <para>This section describes terms and definitions used in this document.</para>
      <variablelist>
        <varlistentry>
          <term>Profile</term>
          <listitem>
            <para>See ONVIF Profile Policy.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ONVIF Device</term>
          <listitem>
            <para>
              Computer appliance or software program that exposes one or multiple
              ONVIF Web Services.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ONVIF Client</term>
          <listitem>
            <para>
              Computer appliance or software program that uses ONVIF Web
              Services.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>SOAP</term>
          <listitem>
            <para>
              SOAP is a lightweight protocol intended for exchanging structured
              information in a decentralized, distributed environment. It uses XML
              technologies to define an extensible messaging framework providing a
              message construct that can be exchanged over a variety of underlying
              protocols.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Device Test Tool</term>
          <listitem>
            <para>
              ONVIF Device Test Tool that tests ONVIF Device implementation towards
              the ONVIF Test Specification set.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Address</term>
          <listitem>
            <para>An address refers to a URI</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Capability</term>
          <listitem>
            <para>
              The capability commands allow a client to ask for the services provided by an ONVIF device.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Network</term>
          <listitem>
            <para>
              A network is an interconnected group of devices communicating using the Internet protocol.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Proxy Server</term>
          <listitem>
            <para>
              A server that services the requests of its clients by forwarding requests to other servers. A Proxy provides indirect network connections to its clients.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Switching Hub</term>
          <listitem>
            <para>
              A device for connecting multiple Ethernet devices together, making them act as a single network segment.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Target Service</term>
          <listitem>
            <para>
              An endpoint that makes itself available for discovery.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:id="additions.abbreviations">
      <title>Abbreviations</title>
      <para>This section describes abbreviations used in this document.</para>
      <variablelist>

        <varlistentry>
          <term>DUT</term>
          <listitem>
            <para>
              Device Under Test
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DP</term>
          <listitem>
            <para>
              Discovery Proxy
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DNS</term>
          <listitem>
            <para>
              Domain Name System
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DHCP</term>
          <listitem>
            <para>
              Dynamic Host Configuration Protocol
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>HTTP</term>
          <listitem>
            <para>
              Hyper Text Transport Protocol
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>HTTPS</term>
          <listitem>
            <para>
              Hyper Text Transport Protocol over Secure Socket Layer
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>IP</term>
          <listitem>
            <para>
              Internet Protocol
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>IPv4</term>
          <listitem>
            <para>
              Internet Protocol version 4
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>IPv6</term>
          <listitem>
            <para>
              Internet Protocol version 6
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NTP</term>
          <listitem>
            <para>
              Network Time Protocol
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>POSIX</term>
          <listitem>
            <para>
              Portable Operating System Interface
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>RTSP</term>
          <listitem>
            <para>
              Real Time Streaming Protocol
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>RTP</term>
          <listitem>
            <para>
              Real-time Transport Protocol
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>UTC</term>
          <listitem>
            <para>
              Coordinated Universal Time
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>URI</term>
          <listitem>
            <para>
              Uniform Resource Identifier
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>WSDL</term>
          <listitem>
            <para>
              Web Services Description Language
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>WS-I BP 2.0</term>
          <listitem>
            <para>
              Web Services Interoperability Basic Profile version 2.0
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>XML</term>
          <listitem>
            <para>eXtensible Markup Language</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>
  <chapter xml:id="overview">
    <title>Test Overview</title>
    <para>
      This section describes the test setup procedure and prerequisites needed, and the test policies that should be followed for test case execution.
    </para>
    <section xml:id="overview.test_setup">
      <title>Test Setup</title>
      <section xml:id="overview.test_setup.network_configuration">
        <title>Network Configuration for DUT</title>
        <para>
          The generic test configuration for the execution of test cases defined in this document is as shown below (Figure 4.1).
        </para>
        <para>
          Based on the individual test case requirements, some of the entities in the below setup may not be needed for the execution of those corresponding test cases.
        </para>
        <figure>
          <title>Test Configuration for DUT</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="test_network.png" format="PNG" scalefit="0"/>
            </imageobject>
            <textobject>
              <phrase>Test Configuration for DUT</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <para>
          <emphasis role="bold">DUT:</emphasis> ONVIF device to be tested. Hereafter, this is referred to as DUT (Device Under Test).
        </para>
        <para>
          <emphasis role="bold">ONVIF Client (Test Tool):</emphasis> Tests are executed by this system and it controls the behavior of the DUT. It handles both expected and unexpected behavior.
        </para>
        <para>
          <emphasis role="bold">HTTP Proxy:</emphasis> provides facilitation in case of RTP and RTSP tunneling over HTTP.
        </para>
        <para>
          <emphasis role="bold">Wireless Access Point:</emphasis> provides wireless connectivity to the devices that support wireless connection.
        </para>
        <para>
          <emphasis role="bold">DNS Server:</emphasis> provides DNS related information to the connected devices.
        </para>
        <para>
          <emphasis role="bold">DHCP Server:</emphasis> provides IPv4 Address to the connected devices.
        </para>
        <para>
          <emphasis role="bold">NTP Server:</emphasis> provides time synchronization between ONVIF Client and DUT.
        </para>
        <para>
          <emphasis role="bold">Switching Hub:</emphasis> provides network connectivity among all the test equipments in the test environment. All devices should be connected to the Switching Hub. When running multiple test instances in parallel on the same network, the Switching Hub should be configured to use filtering in order to avoid multicast traffic being flooded to all ports, because this may affect test stability.
        </para>
        <para>
          <emphasis role="bold">Router:</emphasis> provides router advertisements for IPv6 configuration.
        </para>
      </section>
    </section>
    <section xml:id="overview.prerequisites">
      <title>Prerequisites</title>
      <para>
        The pre-requisites for executing the test cases described in this Test Specification are
        <itemizedlist>
          <listitem>
            <para>
              The DUT shall be configured with an IPv4 address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be IP reachable [in the test configuration].
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be able to be discovered by the Test Tool.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be configured with the time i.e. manual configuration of UTC time and if NTP is supported by DUT, then NTP time shall be synchronized with NTP Server.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT time and ONVIF Client Test tool time shall be synchronized with each other either manually or by common NTP server
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <section xml:id="overview.test_policy">
      <title>Test Policy</title>
      <para>
        This section describes the test policies specific to the test case execution of each functional block.
      </para>
      <para>
        The DUT shall adhere to the test policies defined in this section.
      </para>
      <section xml:id="overview.test_policy.event_handling">
        <title>Event Handling</title>
        <para>
          Prior to the execution of Event handling test cases, DUT shall be discovered by the ONVIF Client and it shall demonstrate event capabilities to ONVIF Client using the device management service.
        </para>
        <para>
          If the DUT supports "property events" the ONVIF Client uses the SetSynchronizationPoint method from the event service to trigger events for testing Basic Notification Interface, Realtime PullPoint Interface; the ONVIF Client uses the SetSynchronizationPoint from the Media service to trigger events for testing metadata streaming.
        </para>
        <para>
          If the DUT does not support "property events", the event should be triggered manually.
        </para>
        <para>
          The time of the ONVIF Client and the DUT should be synchronized.
        </para>
        <para>
          In certain test cases the Test Tool may create a Subscription Manager representing the subscription. In such cases the procedure will make sure that all newly created Subscription Managers are deleted at the end of the test procedure.
        </para>
        <para>
          In certain test cases the Test Tool may create or change media entities (e.g. add a MetadataConfiguration to a profile). In such cases the procedure will delete those modifications at the end of the test procedure.
        </para>
        <para>
          Refer to <link linkend="tc.event_handling">Section 5</link> for Event handling Test Cases.
        </para>
        <section xml:id="overview.test_policy.event_handling.mqtt_notification_interface">
          <title>MQTT Notification Interface</title>
          <para>
            The test policies specific to the test case execution of MQTT functional block:
            <itemizedlist>
              <listitem>
                <para>DUT shall give the MaxEventBrokers event service capability &gt; 0, if DUT supports MQTT functionality. Otherwise, these test cases will be skipped.</para>
              </listitem>
              <listitem>
                <para>
                  The following tests are performed about MQTT Notification Interface
                  <itemizedlist>
                    <listitem>
                      <para>
                        The DUT provides existing event broker configurations via <emphasis role="bold">GetEventBrokers</emphasis> command.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT adds new event broker configuration via <emphasis role="bold">AddEventBroker</emphasis> command.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT modifies an event broker configuration via <emphasis role="bold">AddEventBroker</emphasis> command.
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        The DUT deletes an event broker configuration via <emphasis role="bold">DeleteEventBroker</emphasis> command.
                      </para>
                    </listitem>
                    <listitem>
                      <para>If DUT supports mqtt protocol:</para>
                      <itemizedlist>
                        <listitem>
                          <para>
                            The DUT publishes MQTT events to event broker server via MQTT protocol.
                          </para>
                        </listitem>
                      </itemizedlist>
                    </listitem>
                    <listitem>
                      <para>If DUT supports mqtts protocol:</para>
                      <itemizedlist>
                        <listitem>
                          <para>
                            The DUT publishes MQTT events to event broker server via MQTT over TLS protocol.
                          </para>
                        </listitem>
                      </itemizedlist>
                    </listitem>
                    <listitem>
                      <para>If DUT supports ws protocol:</para>
                      <itemizedlist>
                        <listitem>
                          <para>
                            The DUT publishes MQTT events to event broker server via websocket protocol.
                          </para>
                        </listitem>
                      </itemizedlist>
                    </listitem>
                    <listitem>
                      <para>If DUT supports wss protocol:</para>
                      <itemizedlist>
                        <listitem>
                          <para>
                            The DUT publishes MQTT events to event broker server via websocket protocol over TLS.
                          </para>
                        </listitem>
                      </itemizedlist>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            Please, refer to <xref linkend="tc.event_handling.mqtt_notification_interface"/> for MQTT Notification Interface Test Cases.
          </para>
        </section>
      </section>
    </section>
  </chapter>
  <!--Event Handling Test Cases-->
  <chapter xml:id="tc.event_handling">
    <title>Event Handling Test Cases</title>
    <!--Event Properties-->
    <section xml:id="tc.event_handling.event_properties">
      <title>Event Properties</title>
      <!--EVENT-1-1-2-->
      <section xml:id="tc.EVENT-1-1-2">
        <title>GET EVENT PROPERTIES</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-1-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetEventProperties
        </para>
        <para>
          <emphasis role="bold">Feature under test:</emphasis> GetEventProperties
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify DUT GetEventProperties command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve information about the FilterDialects, schema files and supported topics of the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that DUT sends <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Validate that the mandatory TopicExpressionDialects are supported by the DUT (http://docs.oasis-open.org/wsn/t-1/TopicExpression/Concrete and http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet).
              </para>
            </listitem>
            <listitem>
              <para>
                Validate that the mandatory MessageContentFilterDialects is supported by the DUT (http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT returns a valid topic namespace.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT supports at least one TopicSet, validate that the TopicSet is well formed.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not support the mandatory TopicExpressionDialects.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not support the mandatory MessageContentFilterDialects.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not support a valid topic namespace.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not support at least one TopicSet or the TopicSet is invalid.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">GetEventPropertiesResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Basic Notification Interface-->
    <section xml:id="tc.event_handling.basic_notification_interface">
      <title>Basic Notification Interface</title>
      <!--EVENT-2-1-9-->
      <section xml:id="tc.EVENT-2-1-9">
        <title>BASIC NOTIFICATION INTERFACE - SUBSCRIBE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Basic Notification Interface
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Subscribe
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Subscribe command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request to instantiate a Subscription Manager. The <emphasis role="bold">Subscribe</emphasis> request does not contain a TopicExpression or a Message Content Filter. The Message contains an InitialTerminationTime of 10s to ensure that the Subscription is terminated after end of this test.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">SubscribeResponse</emphasis> message. Verify that a valid SubscriptionReference is returned (valid EndpointReference); verify that valid values for CurrentTime and TerminationTime are returned (TerminationTime >= CurrentTime + InitialTerminationTime).
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid values for CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the Subscribe request with MinimumTime value included in UnacceptableInitialTerminationTimeFault.
        </para>
      </section>
      <!--EVENT-2-1-12-->
      <section xml:id="tc.EVENT-2-1-12">
        <title>BASIC NOTIFICATION INTERFACE - RENEW</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Basic Notification Interface
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Subscribe, Renew
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Renew command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request with an InitialTerminationTime of 10s.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">SubscribeResponse</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                Validate CurrentTime and TerminationTime (TerminationTime >= CurrentTime + InitialTerminationTime).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Renew</emphasis> request with a TerminationTime of 10s to ensure that the Subscription times out after 10s.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">RenewResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify CurrentTime and TerminationTime (TerminationTime >= CurrentTime + TerminationTime).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Renew</emphasis> request with a TerminationTime in xs:dateTime format. The TerminationTime shall be current time + 10s.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">RenewResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify CurrentTime and TerminationTime (TerminationTime(Response) >= TerminationTime(Request) and CurrentTime(Response) &lt;= TerminationTime(Response)).
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid values for CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">RenewResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid values for CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">RenewResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the Subscribe request with MinimumTime value which is contained in UnacceptableInitialTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value included in UnacceptableTerminationTimeFault.
        </para>
      </section>
      <!--EVENT-2-1-17-->
      <section xml:id="tc.EVENT-2-1-17">
        <title>BASIC NOTIFICATION INTERFACE - NOTIFY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-17
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Basic Notification Interface, SetSynchronizationPoint
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Subscribe, Unsubscribe, SetSynchronizationPoint, Notify
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify <emphasis role="bold">Notify</emphasis> message
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. The DUT shall provide at least one event. 
          The test operator has to ensure that the event is triggered and sent out. ONVIF Client will invoke a SetSynchronizationPoint request. If the DUT does not support property events or if it is not possible to invoke a SetSynchronizationPoint, the test operator has to trigger the event manually.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request with an InitialTerminationTime of 60s to ensure that the SubscriptionManager is deleted after one minute.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">SubscribeResponse</emphasis> with valid values for SubscriptionReference, TerminationTime and CurrentTime TerminationTime >= CurrentTime + InitialTerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                Invoke <emphasis role="bold">SetSynchronizationPoint</emphasis> request to trigger a property event.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that DUT sends <emphasis role="bold">SetSynchronizationPointResponse</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                If the DUT does not support property events, the test operator has to trigger an event manually.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that DUT sends <emphasis role="bold">Notify</emphasis> message(s).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received <emphasis role="bold">Notify</emphasis> messages (correct value for UTC time, TopicExpression and wsnt:Message).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not a <emphasis role="bold">Notify</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sends an invalid <emphasis role="bold">Notify</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">Notify</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send WS-Addressing MessageID SOAP Header if WS-Addressing ReplyTo is included in <emphasis role="bold">Notify</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT sent invalid WS-Addressing MessageID.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT use wrong HTTP address for <emphasis role="bold">Notify</emphasis> message.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <link linkend="Annex_subscribe_example">Annex A.1</link> for instructions on how to construct Subscribe when it is required for the ONVIF Client to receive all events supported by the DUT.
        </para>
      </section>
      <!--EVENT-2-1-18-->
      <section xml:id="tc.EVENT-2-1-18">
        <title>BASIC NOTIFICATION INTERFACE - NOTIFY FILTER</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-18
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Basic Notification Interface, SetSynchronizationPoint
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetEventProperties, Subscribe, Unsubscribe, SetSynchronizationPoint, Notify
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the device sends Notification messages; to verify if the DUT handles event filtering in a correct way.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. The DUT shall provide at least one event. The test operator has to ensure that the event is triggered and sent out. ONVIF Client will invoke a SetSynchronizationPoint request. If the DUT does not support property event or if it is not possible to invoke a SetSynchronizationPoint, the test operator has to trigger the event manually.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message, select one Topic.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request with this Topic as Filter and an InitialTerminationTime of 60s to ensure that the SubscriptionManager is deleted after one minute.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">SubscribeResponse</emphasis> message with valid values for SubscriptionReference, TerminationTime and CurrentTime TerminationTime >= CurrentTime + 60S.
              </para>
            </listitem>
            <listitem>
              <para>
                Invoke <emphasis role="bold">SetSynchronizationPoint</emphasis> request to trigger an event.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                If the DUT does not support property events, the operator has to trigger an event manually.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">Notify</emphasis> message(s).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that at least one <emphasis role="bold">Notify</emphasis> message that contains a property event is returned. Verify this <emphasis role="bold">Notify</emphasis> messages (correct value for Utc time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Check if <emphasis role="bold">Notify</emphasis> message(s) are filtered according to the selected Filter.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not a <emphasis role="bold">Notify</emphasis> message that contains a property event
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT send an invalid <emphasis role="bold">Notify</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">GetEventPropertiesResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">Notify</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send WS-Addressing MessageID in SOAP Header if WS-Addressing ReplyTo is included in <emphasis role="bold">Notify</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT sent invalid WS-Addressing MessageID in SOAP Header in <emphasis role="bold">Notify</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT used wrong HTTP address for <emphasis role="bold">Notify</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
      </section>
      <!--EVENT-2-1-19-->
      <section xml:id="tc.EVENT-2-1-19">
        <title>BASIC NOTIFICATION INTERFACE - INVALID MESSAGE CONTENT FILTER</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-19
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Basic Notification Interface
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Subscribe
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that a correct error message "InvalidFilterFault" or "InvalidMessageContentExpressionFault" is returned if a Subscribe Request with an invalid MessageContentFilter is invoked.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request with an invalid Filter (boolean (//tt:SimpleItem[@Name="xyz" and @Value="xyz"])).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT generates an "InvalidFilterFault" or an "InvalidMessageContentExpressionFault" fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                Validate the fault message (valid UTC time, valid description).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send an "InvalidFilterFault" or "InvalidMessageContentExpressionFault" fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for Fault message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--EVENT-2-1-21-->
      <section xml:id="tc.EVENT-2-1-21">
        <title>BASIC NOTIFICATION INTERFACE - UNSUBSCRIBE (NEGATIVE TEST)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-21
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Basic Notification Interface
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Subscribe, Unsubscribe
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Unsubscribe command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request (InitialTerminationTime = PT10S) to instantiate a SubscriptionManager.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">SubscribeResponse</emphasis> message with valid values for SubscriptionManager, CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Unsubscribe</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends an <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke a <emphasis role="bold">Renew</emphasis> request to verify that the SubscriptionManager is deleted.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a Soap 1.2 Fault (e.g. a "ResourceUnknown" fault message).
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid values for CurrentTime and TerminationTime (TerminationTime >= CurrentTime + InitialTerminationTime).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send an <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Soap 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">UnsubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for Fault message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the Subscribe request with MinimumTime value included in UnacceptableInitialTerminationTimeFault.
        </para>
      </section>
      <!--EVENT-2-1-22-->
      <section xml:id="tc.EVENT-2-1-22">
        <title>BASIC NOTIFICATION INTERFACE - RESOURCE UNKNOWN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-22
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Basic Notification Interface
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Subscribe, Unsubscribe
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that a Soap 1.2 Fault Message is returned if an UnsubscribeRequest to a non-existing Subscription is sent.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request with an InitialTerminationTime of 10 s to ensure that the SubscriptionManager will be deleted after testing.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">SubscribeResponse</emphasis> message with valid values for SubscriptionReference and TerminationTime).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Unsubscribe</emphasis> request to delete the SubscriptionManager.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends an <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Send the second Unsubscribe Request to the just deleted SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a Soap 1.2 Fault (e.g. a "ResourceUnknown" or a "UnableToDestroySubscription" Fault).
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send an <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not delete the SubscriptionManager.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Soap 1.2 Fault.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">UnsubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for Fault message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the Subscribe request with MinimumTime value included in UnacceptableInitialTerminationTimeFault.
        </para>
      </section>
      <!--EVENT-2-1-23-->
      <section xml:id="tc.EVENT-2-1-23">
        <title>BASIC NOTIFICATION INTERFACE - INVALID TOPIC EXPRESSION</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-23
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Basic Notification Interface
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Subscribe
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that a correct error message "InvalidFilterFault" or "TopicNotSupported" or "InvalidTopicExpressionFault" is returned if a Subscribe Request with an invalid Topic Expression is invoked.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request with an invalid Topic Expression (boolean(//tt:SimpleItem[@Name="xyz" and @Value="xyz"])).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT generates an "InvalidFilterFault" or "TopicNotSupported" or "InvalidTopicExpressionFault" fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                Validate the fault message (valid UTC time, valid description).
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send an "InvalidFilterFault" or "TopicNotSupported" or "InvalidTopicExpressionFault" fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for Fault message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--EVENT-2-1-24-->
      <section xml:id="tc.EVENT-2-1-24">
        <title>BASIC NOTIFICATION INTERFACE - SET SYNCHRONIZATION POINT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-24
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Basic Notification Interface, SetSynchronizationPoint
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Subscribe, SetSynchronizationPoint, Notify
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT sends properties to the Client when SetSynchronizationPoint operation is invoked.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain topic with MessageDescription with IsProperty = true, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sets the following
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic</emphasis> := the Event topic provided on Management Tab
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">Subscribe</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      ConsumerReference := NotificationConsumer interface of the ONVIF Client
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression := <emphasis role="italic">topic</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      InitialTerminationTime := PT60S
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SubscribeResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem xml:id="tc.EVENT-2-1-24.9.1">
                    <para>
                      The DUT sends <emphasis role="bold">Notify</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            NotificationMessage list := <emphasis role="italic">notificationList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">notificationList</emphasis> contains NotificationMessage (<emphasis role="italic">notification</emphasis>) with Message.Message.@PropertyOperation = Initialized, ONVIF Client sets the following and goes to step <link linkend="tc.EVENT-2-1-24.10">10</link>:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">notificationList</emphasis>[0].NotificationMessage = <emphasis role="italic">notification</emphasis>, where NotificationMessage is the first NotificationMessage with Message.Message.@PropertyOperation = Initialized
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step <link linkend="tc.EVENT-2-1-24.9.1">9.1</link> without <emphasis role="bold">Notify</emphasis> message that contains NotificationMessage with Message.Message.@PropertyOperation = Initialized, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-2-1-24.10">
              <para>
                If <emphasis role="italic">notification</emphasis>.Topic value is not equal to <emphasis role="italic">topic</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">SetSynchronizationPoint</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem xml:id="tc.EVENT-2-1-24.13.1">
                    <para>
                      The DUT sends <emphasis role="bold">Notify</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            NotificationMessage list := <emphasis role="italic">notificationList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem xml:id="tc.EVENT-2-1-24.13.2">
                    <para>
                      If <emphasis role="italic">notificationList</emphasis> contains the following NotificationMessage (<emphasis role="italic">repeatedNotification</emphasis>), go to step <link linkend="tc.EVENT-2-1-24.14">14</link>:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">repeatedNotification</emphasis>.Message.Message.@PropertyOperation = Initialized
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            <emphasis role="italic">repeatedNotification</emphasis>.Topic = <emphasis role="italic">topic</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            <emphasis role="italic">repeatedNotification</emphasis>.Message.Message.Source item is equal to <emphasis role="italic">notification</emphasis>.Message.Message.Source item if <emphasis role="italic">notificationMessage</emphasis>.Message.Message contains not empty Source element
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            <emphasis role="italic">repeatedNotification</emphasis>.Message.Message.Key item is equal to <emphasis role="italic">notification</emphasis>.Message.Message.Key item If <emphasis role="italic">notificationMessage</emphasis>.Message.Message contains not empty Key element
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step <link linkend="tc.EVENT-2-1-24.13.1">13.1</link> without <emphasis role="bold">Notify</emphasis> message that is corresponding to step <link linkend="tc.EVENT-2-1-24.13.2">13.2</link>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-2-1-24.14">
              <para>
                If subscription timeout is not expired, ONVIF Client invokes <emphasis role="bold">Unsubscribe</emphasis> request to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetEventPropertiesResponse</emphasis> without topic with IsProperty = true.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse message</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client shall use Renew request in order to postpone the termination time.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the Subscribe request with MinimumTime value included in UnacceptableInitialTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--EVENT-2-1-25-->
      <section xml:id="tc.EVENT-2-1-25">
        <title>BASIC NOTIFICATION INTERFACE – CONJUNCTION IN NOTIFY FILTER (OR OPERATION)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-25
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Topic Filter (ONVIF Core Specification), Basic Notification Interface (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Topic Filter, http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet TopicExpression Dialect, Subscribe
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT supports "or" operation in conjunction of topics in the Topic Expressions.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. If the DUT does not support at least two property events, the test operator has to provide two topics for test on the Management tab and trigger the events manually.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> contains less than 2 topics, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sets the following
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic1</emphasis> := the first Event topic provided on Management Tab
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic2</emphasis> := the second Event topic provided on Management Tab
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">Subscribe</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      ConsumerReference := NotificationConsumer interface of the ONVIF Client
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression := <emphasis role="italic">topic1</emphasis>|<emphasis role="italic">topic2</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression.@Dialect := http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      InitialTerminationTime := PT60S
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SubscribeResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-2-1-25.9">
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      The DUT sends <emphasis role="bold">Notify</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            NotificationMessage list := <emphasis role="italic">notificationList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem xml:id="tc.EVENT-2-1-25.9.2">
                    <para>
                      For each NotificationMessage (<emphasis role="italic">notification</emphasis>) in <emphasis role="italic">notificationList</emphasis>
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">notification</emphasis>.Topic value is not equal to <emphasis role="italic">topic1</emphasis> or <emphasis role="italic">topic2</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If NotificationMessage with topic value is equal to <emphasis role="italic">topic1</emphasis> and NotificationMessage with topic value is equal to <emphasis role="italic">topic2</emphasis> were received, go to step <link linkend="tc.EVENT-2-1-25.10">10</link>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step <link linkend="tc.EVENT-2-1-25.9.2">9.2</link> without NotificationMessage with topic value equals to <emphasis role="italic">topic1</emphasis> or without NotificationMessage with topic value equals to <emphasis role="italic">topic2</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-2-1-25.10">
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> request to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test Operator has to select property enents if supported by the Device on the Management tab in Event section.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> if <emphasis role="italic">topicSet</emphasis> does not contain at least 2 topics with IsPropery = true, ONVIF Client provides user interaction window at step <link linkend="tc.EVENT-2-1-25.9">9</link> and Test Operator has to generate events manually.
        </para>

      </section>
      <!--EVENT-2-1-26-->
      <section xml:id="tc.EVENT-2-1-26">
        <title>BASIC NOTIFICATION INTERFACE – TOPIC SUB-TREE IN PULLMESSAGES FILTER</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-26
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Topic Filter (ONVIF Core Specification), Basic Notification Interface (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Topic Filter, http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet TopicExpression Dialect, Subscribe
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT supports "//." operation in topic filter in the Topic Expressions.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. If the DUT does not support property event, the test operator has to provide topic for test on the Management tab and trigger the events manually.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sets the following
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic</emphasis> := the first Event topic provided on Management Tab
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="italic">root</emphasis> := root element of <emphasis role="italic">topic</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">Subscribe</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      ConsumerReference := NotificationConsumer interface of the ONVIF Client
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression := <emphasis role="italic">root</emphasis>//.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression.@Dialect := http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      InitialTerminationTime := PT60S
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SubscribeResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      The DUT sends <emphasis role="bold">Notify</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            NotificationMessage list := <emphasis role="italic">notificationList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem xml:id="tc.EVENT-2-1-26.8.2">
                    <para>
                      For each NotificationMessage (<emphasis role="italic">notification</emphasis>) in <emphasis role="italic">notificationList</emphasis>
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If root element of <emphasis role="italic">notification</emphasis>.Topic is not equal to <emphasis role="italic">root</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If NotificationMessage with topic value is equal to <emphasis role="italic">topic</emphasis> was received, go to step <link linkend="tc.EVENT-2-1-26.9">9</link>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step <link linkend="tc.EVENT-2-1-26.8.2">8.2</link> without NotificationMessage with topic value equals to <emphasis role="italic">topic</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-2-1-26.9">
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> request to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test Operator has to select property event if supported by the Device on the Management tab in Event section.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> if <emphasis role="italic">topicSet</emphasis> does not contain at least one topic with IsPropery = true, ONVIF Client provides user interaction window and Test Operator has to generate events manually.
        </para>

      </section>
      <!--EVENT-2-1-27-->
      <section xml:id="tc.EVENT-2-1-27">
        <title>BASIC NOTIFICATION INTERFACE – CONJUNCTION IN NOTIFY FILTER (TOPIC SUB-TREE AND OR OPERATION)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-27
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Topic Filter (ONVIF Core Specification), Basic Notification Interface (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis>Topic Filter, http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet TopicExpression Dialect, Subscribe
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT supports combination of "or" operation and "//." operation in topic filter in the Topic Expressions.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. If the DUT does not support at least two property events, the test operator has to provide two topics for test on the Management tab and trigger the events manually.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> contains less than 2 topics, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sets the following
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic1</emphasis> := the first Event topic provided on Management Tab
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic2</emphasis> := the second Event topic provided on Management Tab
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="italic">root1</emphasis> := root element of <emphasis role="italic">topic1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">Subscribe</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      ConsumerReference := NotificationConsumer interface of the ONVIF Client
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression := <emphasis role="italic">root1</emphasis>//|<emphasis role="italic">topic2</emphasis>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SubscribeResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      The DUT sends <emphasis role="bold">Notify</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            NotificationMessage list := <emphasis role="italic">notificationList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each NotificationMessage (<emphasis role="italic">notification</emphasis>) in <emphasis role="italic">notificationList</emphasis>
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If root element of <emphasis role="italic">notification</emphasis>.Topic is not equal to <emphasis role="italic">root1</emphasis> or if <emphasis role="italic">notification</emphasis>.Topic is not equal to <emphasis role="italic">topic2</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If NotificationMessage with topic value is equal to <emphasis role="italic">topic1</emphasis> and NotificationMessage with topic value is equal to <emphasis role="italic">topic2</emphasis> were received, go to step 10.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step 9.2 without NotificationMessage with topic value equals to <emphasis role="italic">topic1</emphasis> or without NotificationMessage with topic value equals to <emphasis role="italic">topic2</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> request to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.




              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test Operator has to select property events if supported by the Device on the Management tab in Event section.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> if <emphasis role="italic">topicSet</emphasis> does not contain at least 2 topics with IsPropery = true, ONVIF Client provides user interaction window at step 9 and Test Operator has to generate events manually.
        </para>
      </section>
      <!--EVENT-2-1-28-->
      <section xml:id="tc.EVENT-2-1-28">
        <title>BASIC NOTIFICATION INTERFACE - UNSUBSCRIBE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-28
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Basic Notification Interface
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Unsubscribe
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Unsubscribe command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invokes <emphasis role="bold">Subscribe</emphasis>  with parameters:
                <itemizedlist>
                  <listitem>
                    <para>
                      InitialTerminationTime = 60 second
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SubscribeResponse</emphasis> messagewith parameters:
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">timeout1</emphasis> := "PT1S"
              </para>
            </listitem>
            <listitem>
              <para>
                Wait until <emphasis role="italic">timeout1</emphasis> Timeout expires.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--EVENT-2-1-29-->
      <section xml:id="tc.EVENT-2-1-29">
        <title>BASIC NOTIFICATION INTERFACE - MESSAGE CONTENT FILTER</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-2-1-29
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Subscribe, Message Content Filter
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Subscribe
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT supports message content filter.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Message Content Filter is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list := <emphasis role="italic">messageContentFilterDialectList</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain at least one topic with MessageDescription.@IsProperty = "true", skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">messageContentFilterDialectList</emphasis> does not contain at least one item with non empty value, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">messageContentFilterDialectList</emphasis> does not contain item with value is equal to "http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter", skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sets the following
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic</emphasis> := the Event topic provided on Management Tab
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <!--subscription with topic filter-->
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">Subscribe</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      ConsumerReference := NotificationConsumer interface of the ONVIF Client
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression := <emphasis role="italic">topic</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      InitialTerminationTime := PT60S
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SubscribeResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para xml:id="tc.EVENT-2-1-29.9" xreflabel="11">
                Until <emphasis role="italic">timeout1</emphasis> timeout expires:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      The DUT sends <emphasis role="bold">Notify</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            NotificationMessage list := <emphasis role="italic">notificationMessageList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      If <emphasis role="italic">notificationMessageList</emphasis> contains NotificationMessage with Message.Message.@PropertyOperation = Initialized:
                      <itemizedlist>
                        <listitem>
                          <para>
                            set <emphasis role="italic">notification1</emphasis> := the first NotificationMessage in <emphasis role="italic">notificationMessageList</emphasis> with Message.Message.@PropertyOperation = Initialized
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Go to <xref linkend="tc.EVENT-2-1-29.10"/> step.
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step <xref linkend="tc.EVENT-2-1-29.9"/> without NotificationMessage message with Message.Message.@PropertyOperation = Initialized, FAIL the test and skip other steps.
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>




            <listitem>
              <para  xml:id="tc.EVENT-2-1-29.10" xreflabel="12">
                If <emphasis role="italic">notification1</emphasis>.Topic value is not equal to <emphasis role="italic">topic</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <!--subscription with message content filter-->
            <listitem>
              <para>
                ONVIF Client generates message content filter by following the procedure mentioned in <xref linkend="Annex_HelperGenerateMessageContentFilter"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">notification1</emphasis> - Notification message
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">messageContentFilter</emphasis> - message content filter
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">name</emphasis> - SimpleItem Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">value</emphasis> - SimpleItem Value
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">Subscribe</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      ConsumerReference := NotificationConsumer interface of the ONVIF Client
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.MessageContent := <emphasis role="italic">messageContentFilter</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.MessageContent.@Dialect := "http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      InitialTerminationTime := PT60S
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SubscribeResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-2-1-29.16" xreflabel="18">
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>

                  <listitem>
                    <para>
                      The DUT sends <emphasis role="bold">Notify</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            NotificationMessage list := <emphasis role="italic">notificationMessageList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each notification message (<emphasis role="italic">notificationMessage</emphasis>) in <emphasis role="italic">notificationMessageList</emphasis>:
                      <itemizedlist>
                        <listitem>
                          <para>
                            If <emphasis role="italic">notificationMessage</emphasis>.Message.Message does not contain SimpleItem with Name = <emphasis role="italic">name</emphasis> and with Value = <emphasis role="italic">value</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If notificationMessageList contains notification with Topic = <emphasis role="italic">topic</emphasis> and with Message.Message.PropertyOperation="Initialized", go to <xref linkend="tc.EVENT-2-1-29.17"/> step.
                    </para>
                  </listitem>



                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step <xref linkend="tc.EVENT-2-1-29.16"/> without NotificationMessage message with Topic = <emphasis role="italic">topic</emphasis> with Message.Message.@PropertyOperation = Initialized, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>


            <listitem>
              <para xml:id="tc.EVENT-2-1-29.17" xreflabel="19">
                ONVIF Client invokes <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with empty TopicSet.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>

          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>


    </section>
    <!--Real-Time Pull-Point Notification Interface-->
    <section xml:id="tc.event_handling.real_time_pullpoint_notification_interface">
      <title>Real-Time Pull-Point Notification Interface</title>
      <!--EVENT-3-1-9-->
      <section xml:id="tc.EVENT-3-1-9">
        <title>REALTIME PULLPOINT SUBSCRIPTION - CREATE PULL POINT SUBSCRIPTION</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreatePullPointSubscription
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreatePullPointSubscription
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the DUT CreatePullPointSubscription command
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request to instantiate a Subscription Manager. The <emphasis role="bold">CreatePullPointSubscription</emphasis> request does not contain a TopicExpression or Message Content Filter. The Message contains an InitialTerminationTime of 10s to ensure that the SubscriptionManager is terminated after end of this test.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Validate that valid values for SubscriptionReference CurrentTime and TerminationTime are returned (TerminationTime >= CurrentTime + InitialTerminationTime).
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid values for CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the CreatePullPointSubscription request with MinimumTime value included in UnacceptableInitialTerminationTime fault.
        </para>
      </section>
      <!--EVENT-3-1-12-->
      <section xml:id="tc.EVENT-3-1-12">
        <title>REALTIME PULLPOINT SUBSCRIPTION - RENEW</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Basic Notification Interface, CreatePullPointSubscription
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreatePullPointSubscription, Renew
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Renew command
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature. Profile A or Profile C or Profile Q or Profile S or Profile G is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with an InitialTerminationTime of 10s.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Validate CurrentTime and TerminationTime (TerminationTime >= CurrentTime + 10s).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Renew</emphasis> request with a TerminationTime of 10s to ensure that the Subscription times out after the test.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">RenewResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify CurrentTime and TerminationTime (TerminationTime >= CurrentTime + 10s).
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid values for CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">RenewResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid values for CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">RenewResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the CreatePullPointSubscription request with MinimumTime value included in UnacceptableInitialTerminationTime fault.
        </para>
      </section>
      <!--EVENT-3-1-15-->
      <section xml:id="tc.EVENT-3-1-15">
        <title>REALTIME PULLPOINT SUBSCRIPTION - PULLMESSAGES</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-15
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreatePullPointSubscription, SetSynchronizationPoint, PullMessages
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreatePullPointSubscription, SetSynchronizationPoint, PullMessages
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify PullMessages command
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature. The DUT shall provide at least one event. The test operator has to ensure that the event is triggered and sent out. ONVIF Client will invoke a SetSynchronizationPoint request. If the device does not support property events or if it is not possible to invoke a SetSynchronizationPoint, the test operator has to trigger event manually.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with a suggested timeout of PT60S.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message. Validate that correct values for CurrentTime and TerminationTime and SubscriptionReference are returned.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 2.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetSynchronizationPoint</emphasis> request to trigger an event.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                If the DUT does not support property events, the operator has to trigger an event manually.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains at least one NotificationMessage that represents a property.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify NotificationMessage (a maximum number of 2 Notification Messages is included in the <emphasis role="bold">PullMessagesResponse</emphasis> message; well formed and valid values for CurrentTime and TerminationTime (TerminationTime > CurrentTime).

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid values for CurrentTime and TerminationTime (TerminationTime > CurrentTime).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message does not contain a NotificationMessage.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message contains more than 2 NotificationMessages.
              </para>
            </listitem>
            <listitem>
              <para>
                The NotificationMessages are not well formed.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message contains invalid values for Current or TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesFaultResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">PullMessagesResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> It may be possible that some other events than the event which is being verified will be sent as PullMessages response during this test case. In such case, ONVIF Client should simply discard such response and they retry PullMessages request for the very event for verification.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> During test case execution, it should be guaranteed that the DUT should not delete the property event which is being used for verification.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in <emphasis role="bold">PullMessagesFaultResponse</emphasis> message.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> See <link linkend="Annex_subscribe_example">Annex A.1</link> for instructions on how to construct Subscribe when it is required for the ONVIF Client to receive all events supported by the DUT.
        </para>
      </section>
      <!--EVENT-3-1-16-->
      <section xml:id="tc.EVENT-3-1-16">
        <title>REALTIME PULLPOINT SUBSCRIPTION - PULLMESSAGES FILTER</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-16
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreatePullPointSubscription, SetSynchronizationPoint, PullMessages, MessageFilter
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetEventProperties, CreatePullPointSubscription, SetSynchronizationPoint, PullMessages
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify PullMessages command
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature. The DUT shall provide at least one event. The test operator has to ensure that the event is triggered and sent out. ONVIF Client will invoke a SetSynchronizationPoint request. If the DUT does not support property events of if it is not possible to invoke a SynchronizationPoint, the test operator has to trigger an event manually.
        </para>

        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes GetEventProperties command to retrieve the supported Topics.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">GetEventPropertiesResponse</emphasis>; select one Topic
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with a suggested timeout of PT60S and a Filter including the selected Topic.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Validate CurrentTime and TerminationTime and SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 2.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">SetSynchronizationPoint</emphasis> request to trigger a property event.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                If the DUT does not support property events, the operator has to trigger an event manually.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains at least one NotificationMessage.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that that a maximum number of 2 Notification Messages is included in the PullMessages Response.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that at least one property event is returned.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that this NotificationMessage is well formed; Verify CurrentTime and TerminationTime (TerminationTime > CurrentTime).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the Topic of the NotificationMessage matches the filter.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid <emphasis role="bold">GetEventPropertiesResponse</emphasis> (containing at least one Topic).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid values for CurrentTime and TerminationTime (TerminationTime > CurrentTime).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message does not contain a NotificationMessage.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message contains more than 2 NotificationMessages.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message does not contain at least one event.
              </para>
            </listitem>
            <listitem>
              <para>
                The NotificationMessages are not well formed.
              </para>
            </listitem>
            <listitem>
              <para>
                The NotificationMessage contains to a topic that was not requested.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message contains invalid values for Current or TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">GetEventPropertiesResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">PullMessagesResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> It may be possible that some other events than the event which is being verified will be sent as PullMessages response during this test case. In such case, ONVIF Client should simply discard such response and they retry PullMessages request for the very event for verification.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> During test case execution, it should be guaranteed that the DUT should not delete the property event which is being used for verification.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit included in <emphasis role="bold">PullMessagesFaultResponse</emphasis> message.
        </para>
      </section>
      <!--EVENT-3-1-17-->
      <section xml:id="tc.EVENT-3-1-17">
        <title>REALTIME PULLPOINT SUBSCRIPTION - INVALID MESSAGE CONTENT FILTER</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-17
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreatePullPointSubscription
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreatePullPointSubscription
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature. To verify that a correct error message "InvalidFilterFault" or "InvalidMessageContentExpressionFault" is returned if a CreatePullPointSubscription command with an invalid MessageContentFilter is invoked.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with an invalid Filter boolean((//tt:SimpleItem[@Name="xyz" and @Value="xyz"]).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT generates an "InvalidFilterFault" or an "InvalidMessageContentExpressionFault" fault message. Validate that Utc time and description are correct.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send an "InvalidFilterFault" or "InvalidMessageContentExpressionFault" fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for Fault message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
      <!--EVENT-3-1-19-->
      <section xml:id="tc.EVENT-3-1-19">
        <title>REALTIME PULLPOINT SUBSCRIPTION - UNSUBSCRIBE (NEGATIVE TEST)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-19
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Basic Notification Interface, CreatePullPointSubscription
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreatePullPointSubscription, Unsubscribe, Renew
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Unsubscribe command
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request (InitialTerminationTime=PT10S) to instantiate a SubscriptionManager.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message. Validate CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Unsubscribe</emphasis> request to terminate the SubscriptionManager.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends an <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke a <emphasis role="bold">Unsubscribe</emphasis> request to verify that the SubscriptionManager is deleted.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a Soap 1.2 Fault (e.g. a "ResourceUnknown" fault message).

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid values for CurrentTime and TerminationTime (TerminationTime=CurrentTime + 10s).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send an <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Soap 1.2 Fault.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">UnsubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for Fault message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the CreatePullPointSubscription request with MinimumTime value included in UnacceptableInitialTerminationTime fault.
        </para>
      </section>
      <!--EVENT-3-1-20-->
      <section xml:id="tc.EVENT-3-1-20">
        <title>REALTIME PULLPOINT SUBSCRIPTION - TIMEOUT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-20
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreatePullPointSubscription, Basic Notification Interface
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreatePullPointSubscription
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify if a SubscriptionManager times out correctly.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with a suggested timeout of PT20S.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Validate CurrentTime and TerminationTime and SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                Wait for 20 s (SubscriptionManager timeout).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Unsubscribe</emphasis> request to check if the SubscriptionManager is timed out.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a Soap 1.2 fault (e.g. a "ResourceUnknown" fault).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid values for CurrentTime and TerminationTime (TerminationTime >= CurrentTime + 10s).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Soap 1.2 fault.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for Fault message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the CreatePullPointSubscription request with MinimumTime value included in UnacceptableInitialTerminationTime fault.
        </para>
      </section>
      <!--EVENT-3-1-22-->
      <section xml:id="tc.EVENT-3-1-22">
        <title>REALTIME PULLPOINT SUBSCRIPTION - INVALID TOPIC EXPRESSION</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-22
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreatePullPointSubscription
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreatePullPointSubscription
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that a correct error message "InvalidFilterFault" or "TopicNotSupported" or "InvalidTopicExpressionFault" is returned if a CreatePullPointSubscription command with an invalid TopicExpression is invoked.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with an invalid Topic Expression "xyz".
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT generates an "InvalidFilterFault" or "TopicNotSupported" or "InvalidTopicExpressionFault" fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                Validate valid the fault message (valid Utc time, valid description).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send an "InvalidFilterFault" or "TopicNotSupported" or "InvalidTopicExpressionFault" fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a valid fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for Fault message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
      <!--EVENT-3-1-24-->
      <section xml:id="tc.EVENT-3-1-24">
        <title>REALTIME PULLPOINT SUBSCRIPTION – PULLMESSAGES AS KEEP-ALIVE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-24
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Realtime PullPoint Notification Interface, CreatePullPointSubscription, PullMessages
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreatePullPointSubscription, PullMessages
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify PullMessages command as the one being kept alive.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request to retrieve the supported Topics.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> message (no filter, no InitialTerminationTime).
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-24.6">
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message. Validate CurrentTime and TerminationTime. Mark Termination Time as T1. Mark Current Time as C1.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client waits for 1s.
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-24.8">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessages Timeout of [T1 – C1 + 20s] and a MessageLimit of 1 to update termination time of subscription.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">PullMessagesResponse</emphasis> message or <emphasis role="bold">PullMessagesFaultResponse</emphasis> from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="bold">PullMessagesResponse</emphasis> is received from the DUT then ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessages Timeout equal to MaxTimeout from <emphasis role="bold">PullMessagesFaultResponse</emphasis> message and a MessageLimit of 1 to update termination time of subscription. Otherwise, go to step <link linkend="tc.EVENT-3-1-24.11">11</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-24.11">
              <para>
                Verify <emphasis role="bold">PullMessagesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Validate Current Time and Termination Time. Check that TerminationTime > CurrentTime. Check that TerminationTime > T1.

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid values for CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message or <emphasis role="bold">PullMessagesFaultResponse</emphasis> message at step <link linkend="tc.EVENT-3-1-24.6">6</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message at step <link linkend="tc.EVENT-3-1-24.8">8</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message contained invalid values for Current or TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message to the <emphasis role="bold">PullMessages</emphasis> request with a PullMessages Timeout of [T1 – C1 + 20s] contained TerminationTime value less or equal to T1.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not update termination time after PullMessagesRequest, then the ONVIF Client passes the test with a warning.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not support property events, then test operator will send event manually (user interaction window will be used).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> To avoid long time of test execution, the test tool waits PullMessagesResponse during Operation delay timeout time. If the DUT does not send PullMessagesResponse during Operation delay timeout time, the test tool terminates subscription and fails the test.
        </para>
      </section>
      <!--EVENT-3-1-25-->
      <section xml:id="tc.EVENT-3-1-25">
        <title>REALTIME PULLPOINT SUBSCRIPTION - SET SYNCHRONIZATION POINT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-25
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreatePullPointSubscription, SetSynchronizationPoint, PullMessages
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreatePullPointSubscription, SetSynchronizationPoint, PullMessages
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT sends properties to the Client when SetSynchronizationPoint operation is invoked.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain topic with MessageDescription with IsProperty = true, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sets the following
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic</emphasis> := the Event topic provided on Management Tab
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Filter.TopicExpression := <emphasis role="italic">topic</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-25.9">
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Timeout := PT60S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            MessageLimit := 1
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">notificationMessageList</emphasis> contains NotificationMessage with Message.Message.@PropertyOperation = Initialized set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">notification</emphasis> := the first NotificationMessage in <emphasis role="italic">notificationMessageList</emphasis> with Message.Message.@PropertyOperation = Initialized
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step <link linkend="tc.EVENT-3-1-25.9">9</link> without NotificationMessage message with Message.Message.@PropertyOperation = Initialized, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">notification</emphasis>.Topic value is not equal to topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">SetSynchronizationPoint</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-25.13">
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Timeout := PT60S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            MessageLimit := 1
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">notificationMessageList</emphasis> contains the following NotificationMessage (<emphasis role="italic">repeatedNotification</emphasis>), go to step <link linkend="tc.EVENT-3-1-25.14">14</link>:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">repeatedNotification</emphasis>.Message.Message.@PropertyOperation = Initialized
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            <emphasis role="italic">repeatedNotification</emphasis>.Topic = <emphasis role="italic">topic</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            <emphasis role="italic">repeatedNotification</emphasis>.Message.Message.Source item is equal to <emphasis role="italic">notification</emphasis>.Message.Message.Source item if <emphasis role="italic">notificationMessage</emphasis>.Message.Message contains not empty Source element
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            <emphasis role="italic">repeatedNotification</emphasis>.Message.Message.Key item is equal to <emphasis role="italic">notification</emphasis>.Message.Message.Key item If <emphasis role="italic">notificationMessage</emphasis>.Message.Message contains not empty Key element
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step <link linkend="tc.EVENT-3-1-25.13">13</link> without <emphasis role="italic">repeatedNotification</emphasis> Notification, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-25.14">
              <para>
                If subscription timeout is not expired, ONVIF Client invokes <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with empty TopicSet.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message.




              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--EVENT-3-1-32-->
      <section xml:id="tc.EVENT-3-1-32">
        <title>REALTIME PULLPOINT SUBSCRIPTION – PULLMESSAGES TIMEOUT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-32
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> PullMessages
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> PullMessages
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT accepts 60s timeout value in PullMessages request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Filter skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Timeout := PT60S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageLimit := 1
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters:
                <itemizedlist>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      NotificationMessage list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                If <emphasis role="italic">tt</emphasis> is not more than <emphasis role="italic">ct</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> request to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.

              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
      <!--EVENT-3-1-33-->
      <section xml:id="tc.EVENT-3-1-33">
        <title>REALTIME PULLPOINT SUBSCRIPTION – CONJUNCTION IN PULLMESSAGES FILTER (OR OPERATION)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-33
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Topic Filter (ONVIF Core Specification), Create pull point subscription (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Topic Filter, http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet TopicExpression Dialect, CreatePullPointSubscription
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT supports "or" operation in conjunction of topics in the Topic Expressions.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature. If the DUT does not support at least two property events, the test operator has to provide two topics for test on the Management tab and trigger the events manually.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> contains less than 2 topics, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sets the following
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic1</emphasis> := the first Event topic provided on Management Tab
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic2</emphasis> := the second Event topic provided on Management Tab
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Filter.TopicExpression := <emphasis role="italic">topic1</emphasis>|<emphasis role="italic">topic2</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-33.9">
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Timeout := PT60S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            MessageLimit := 1
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each NotificationMessage (<emphasis role="italic">notification</emphasis>) in <emphasis role="italic">notificationMessageList</emphasis>
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">notification</emphasis>.Topic value is not equal to <emphasis role="italic">topic1</emphasis> or <emphasis role="italic">topic2</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If NotificationMessage with topic value is equal to <emphasis role="italic">topic1</emphasis> and NotificationMessage with topic value is equal to <emphasis role="italic">topic2</emphasis> were received, go to step <link linkend="tc.EVENT-3-1-33.10">10</link>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step <link linkend="tc.EVENT-3-1-33.9">9</link> without NotificationMessage with topic value equals to <emphasis role="italic">topic1</emphasis> or without NotificationMessage with topic value equals to <emphasis role="italic">topic2</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-33.10">
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> request to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">UnsubscribeResponse</emphasis>.




              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test Operator has to select property enents if supported by the Device on the Management tab in Event section.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> if <emphasis role="italic">topicSet</emphasis> does not contain at least 2 topics with IsPropery = true, ONVIF Client provides user interaction window at step <link linkend="tc.EVENT-3-1-33.10">10</link> and Test Operator has to generate events manually.
        </para>
      </section>
      <!--EVENT-3-1-34-->
      <section xml:id="tc.EVENT-3-1-34">
        <title>REALTIME PULLPOINT SUBSCRIPTION – TOPIC SUB-TREE IN PULLMESSAGES FILTER</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-34
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Topic Filter (ONVIF Core Specification), Create pull point subscription (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Topic Filter, http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet TopicExpression Dialect, CreatePullPointSubscription
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT supports "//." operation in topic filter in the Topic Expressions.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature. 
          If the DUT does not support property event, the test operator has to provide topic for test on the Management tab and trigger the events manually.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sets the following
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic</emphasis> := the Event topic provided on Management Tab
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="italic">root</emphasis> := root element of <emphasis role="italic">topic</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Filter.TopicExpression := <emphasis role="italic">root</emphasis>//.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-34.8">
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Timeout := PT60S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            MessageLimit := 1
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each NotificationMessage (<emphasis role="italic">notification</emphasis>) in <emphasis role="italic">notificationMessageList</emphasis>
                      <orderedlist>
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If root element of <emphasis role="italic">notification</emphasis>.Topic is not equal to <emphasis role="italic">root</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If NotificationMessage with topic value is equal to <emphasis role="italic">topic</emphasis> was received, go to step <link linkend="tc.EVENT-3-1-34.9">9</link>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step <link linkend="tc.EVENT-3-1-34.8">8</link> without NotificationMessage with topic value equals to <emphasis role="italic">topic</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-34.9">
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> request to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.



              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test Operator has to select property event if supported by the Device on the Management tab in Event section.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> if <emphasis role="italic">topicSet</emphasis> does not contain at least one topic with IsPropery = true, ONVIF Client provides user interaction window and Test Operator has to generate events manually.
        </para>

      </section>
      <!--EVENT-3-1-35-->
      <section xml:id="tc.EVENT-3-1-35">
        <title>REALTIME PULLPOINT SUBSCRIPTION – CONJUNCTION IN NOTIFY FILTER (TOPIC SUB-TREE AND OR OPERATION)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-35
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Topic Filter (ONVIF Core Specification), Create pull point subscription (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Topic Filter, http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet TopicExpression Dialect, CreatePullPointSubscription
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT supports combination of "or" operation and "//." operation in topic filter in the Topic Expressions.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature. 
          If the DUT does not support at least two property events, the test operator has to provide two topics for test on the Management tab and trigger the events manually.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> contains less than 2 topics, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sets the following
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic1</emphasis> := the first Event topic provided on Management Tab
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic2</emphasis> := the second Event topic provided on Management Tab
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      <emphasis role="italic">root1</emphasis> := root element of <emphasis role="italic">topic1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Filter.TopicExpression := <emphasis role="italic">root</emphasis>//.|<emphasis role="italic">topic2</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-35.9">
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Timeout := PT60S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            MessageLimit := 1
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each NotificationMessage (<emphasis role="italic">notification</emphasis>) in <emphasis role="italic">notificationMessageList</emphasis>
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If root element of <emphasis role="italic">notification</emphasis>.Topic is not equal to <emphasis role="italic">root1</emphasis> or if <emphasis role="italic">notification</emphasis>.Topic is not equal to <emphasis role="italic">topic2</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If NotificationMessage with topic value is equal to <emphasis role="italic">topic1</emphasis> and NotificationMessage with topic value is equal to <emphasis role="italic">topic2</emphasis> were received, go to step <link linkend="tc.EVENT-3-1-35.10">10</link>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step <link linkend="tc.EVENT-3-1-35.9">9</link> without NotificationMessage with topic value equals to <emphasis role="italic">topic1</emphasis> or without NotificationMessage with topic value equals to <emphasis role="italic">topic2</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-35.10">
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> request to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.



              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test Operator has to select property event if supported by the Device on the Management tab in Event section.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> if <emphasis role="italic">topicSet</emphasis> does not contain at least 2 topics with IsPropery = true, ONVIF Client provides user interaction window at step <link linkend="tc.EVENT-3-1-35.9">9</link> and Test Operator has to generate events manually.
        </para>
      </section>
      <!--EVENT-3-1-36-->
      <section xml:id="tc.EVENT-3-1-36">
        <title>REALTIME PULLPOINT SUBSCRIPTION - UNSUBSCRIBE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-36
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Unsubscribe
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Unsubscribe
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the DUT Unsubscribe command
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">timeout1</emphasis> := "PT1S"
              </para>
            </listitem>
            <listitem>
              <para>
                Wait until <emphasis role="italic">timeout1</emphasis> Timeout expires.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--EVENT-3-1-37-->
      <section xml:id="tc.EVENT-3-1-37">
        <title>REALTIME PULLPOINT SUBSCRIPTION – MAXIMUM SUPPORTED NUMBER OF NOTIFICATION PULL POINTS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-37
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Pull Point Lifecycle (ONVIF Core Specification), Create pull point subscription (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreatePullPointSubscription
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT creates a new pull point on each CreatePullPointSubscription command as long as the number of instantiated pull points does not exceed the capability MaxPullPoints.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature. DUT supports MaxPullPoints capability feature as indicated by Capabilities.MaxPullPoints.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Event Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - Event Service Capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis> does not contain MaxPullPoints, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxPullPoints &#60; 2, skip other steps.
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain at least one topic with MessageDescription with IsProperty = true, ONVIF Client will provide an User Interaction window on step <link linkend="tc.EVENT-3-1-37.9.4.3">10.4.3</link>. Test Operator shall provide any property event manually.

              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">countPullPoints</emphasis> := 1.
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-37.9">
              <para>
                Until <emphasis role="italic">countPullPoints</emphasis> &#60; = <emphasis role="italic">cap</emphasis>.MaxPullPoints, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Filter skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            InitialTerminationTime skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SubscriptionReference =: <emphasis role="italic">s&#60;n&#62;</emphasis>, where n is an index that is equal to <emphasis role="italic">countPullPoints</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">s&#60;n&#62;</emphasis> = <emphasis role="italic">s&#60;n-1&#62;</emphasis>, close all subscriptions and FAIL the test.
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="tc.EVENT-3-1-37.9.4">
                      Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s&#60;n&#62;</emphasis> with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  Timeout := PT60S
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  MessageLimit := 1
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem xml:id="tc.EVENT-3-1-37.9.4.3">
                          <para>
                            The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters:
                            <itemizedlist>
                              <listitem>
                                <para>
                                  CurrentTime =: <emphasis role="italic">ct</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  TerminationTime =: <emphasis role="italic">tt</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">notificationMessageList</emphasis> is empty, go to step <link linkend="tc.EVENT-3-1-37.9.4">10.4</link>.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">timeout1</emphasis> expires for step <link linkend="tc.EVENT-3-1-37.9">10</link> without NotificationMessage in <emphasis role="italic">notificationMessageList</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>

                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set <emphasis role="italic">countPullPoints</emphasis> := <emphasis role="italic">countPullPoints</emphasis> + 1.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                For each subscription endpoint <emphasis role="italic">s&#60;n&#62;</emphasis>
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem xml:id="tc.EVENT-3-1-37.10">
                    <para>
                      ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> request to the subscription endpoint <emphasis role="italic">s&#60;n&#62;</emphasis>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>




          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">UnsubscribeResponse</emphasis>.




              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--EVENT-3-1-38-->
      <section xml:id="tc.EVENT-3-1-38">
        <title>REALTIME PULLPOINT SUBSCRIPTION - MESSAGE CONTENT FILTER</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-3-1-38
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreatePullPointSubscription, PullMessages, Message Content Filter
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreatePullPointSubscription, PullMessages
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT supports message content filter.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Device supports Pull-Point Notification feature. Message Content Filter is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list := <emphasis role="italic">messageContentFilterDialectList</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain at least one topic with MessageDescription.@IsProperty = "true", skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">messageContentFilterDialectList</emphasis> does not contain at least one item with non empty value, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">messageContentFilterDialectList</emphasis> does not contain item with value is equal to "http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter", skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sets the following
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">topic</emphasis> := the Event topic provided on Management Tab
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <!--subscription with topic filter-->
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Filter.TopicExpression := <emphasis role="italic">topic</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-38.9" xreflabel="11">
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Timeout := PT60S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            MessageLimit := 1
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">notificationMessageList</emphasis> contains NotificationMessage with Message.Message.@PropertyOperation = Initialized:
                      <itemizedlist>
                        <listitem>
                          <para>
                            set <emphasis role="italic">notification1</emphasis> := the first NotificationMessage in <emphasis role="italic">notificationMessageList</emphasis> with Message.Message.@PropertyOperation = Initialized
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Go to <xref linkend="tc.EVENT-3-1-38.10"/> step.
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step <xref linkend="tc.EVENT-3-1-38.9"/> without NotificationMessage message with Message.Message.@PropertyOperation = Initialized, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-38.10" xreflabel="12">
              <para>
                If <emphasis role="italic">notification1</emphasis>.Topic value is not equal to <emphasis role="italic">topic</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <!--subscription with message content filter-->
            <listitem>
              <para>
                ONVIF Client generates message content filter by following the procedure mentioned in <xref linkend="Annex_HelperGenerateMessageContentFilter"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">notification1</emphasis> - Notification message
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">messageContentFilter</emphasis> - message content filter
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">name</emphasis> - SimpleItem Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">value</emphasis> - SimpleItem Value
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Filter.TopicExpression skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.MessageContent := <emphasis role="italic">messageContentFilter</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.MessageContent.@Dialect := "http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.EVENT-3-1-38.16" xreflabel="18">
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Timeout := PT60S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            MessageLimit := 1
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">notificationMessageList</emphasis> is not empty:
                      <itemizedlist>
                        <listitem>
                          <para>
                            If <emphasis role="italic">notificationMessageList</emphasis> contains more than one notification item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">notificationMessageList</emphasis>[0].Message.Message does not contain SimpleItem with Name = <emphasis role="italic">name</emphasis> and with Value = <emphasis role="italic">value</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">notificationMessageList</emphasis>[0].Topic = <emphasis role="italic">topic</emphasis> and <emphasis role="italic">notificationMessageList</emphasis>[0].Message.Message.PropertyOperation="Initialized", go to <xref linkend="tc.EVENT-3-1-38.17"/> step.
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> expires for step <xref linkend="tc.EVENT-3-1-38.16"/> without NotificationMessage message with Topic = <emphasis role="italic">topic</emphasis> with Message.Message.@PropertyOperation = Initialized, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>


            <listitem>
              <para xml:id="tc.EVENT-3-1-38.17" xreflabel="19">
                ONVIF Client invokes <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with empty TopicSet.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>

            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message.




              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>

    </section>
    <!--Namespace Handling-->
    <section xml:id="tc.event_handling.namespace_handling">
      <title>Namespace Handling</title>
      <!--EVENT-4-1-6-->
      <section xml:id="tc.EVENT-4-1-6">
        <title>EVENT - NAMESPACES (DEFAULT NAMESPACES FOR EACH TAG) </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-4-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT accepts requests for Event Service with different namespaces definition.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. 
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request to instantiate a Subscription Manager. The <emphasis role="bold">Subscribe</emphasis> request does not contain a TopicExpression or a Message Content Filter. The Message contains an InitialTerminationTime of 10s to ensure that the Subscription is terminated after end of this test.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the device sends <emphasis role="bold">SubscribeResponse</emphasis> message. Validate that a valid SubscriptionReference is returned (valid EndpointReference); verify that valid values for CurrentTime and TerminationTime are returned (TerminationTime >= CurrentTime + InitialTerminationTime).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request to instantiate a Subscription Manager. The <emphasis role="bold">Subscribe</emphasis> request does not contain a TopicExpression or a Message Content Filter. The Message contains an InitialTerminationTime of 10s to ensure that the Subscription is terminated after end of this test.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">SubscribeResponse</emphasis> message. Validate that a valid SubscriptionReference is returned (valid EndpointReference); verify that valid values for CurrentTime and TerminationTime are returned (TerminationTime >= CurrentTime + InitialTerminationTime).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid values for CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned different results at step 4 and step 6 (EndpointReference, TerminationTime, CurrentTime fields could be different, only types of response shall be the same).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the Subscribe request with MinimumTime value included in UnacceptableInitialTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Everything that happens at step 4 shall happen at step 6 as well. Otherwise, it indicates that the DUT processes namespaces in a wrong way and the test shall be failed.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> All requests for steps 5-6 to the DUT shall have default namespaces definition in each tag (see examples in <link linkend="Annex_namespaces_examples">Annex A.2</link>).
        </para>
      </section>
      <!--EVENT-4-1-7-->
      <section xml:id="tc.EVENT-4-1-7">
        <title>EVENT - NAMESPACES (DEFAULT NAMESPACES FOR PARENT TAG) </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-4-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT accepts requests for Event Service with different namespaces definition.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. 
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request to instantiate a Subscription Manager. The <emphasis role="bold">Subscribe</emphasis> request does not contain a TopicExpression or a Message Content Filter. The Message contains an InitialTerminationTime of 10s to ensure that the Subscription is terminated after end of this test.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">SubscribeResponse</emphasis> message. Validate that a valid SubscriptionReference is returned (valid EndpointReference); verify that valid values for CurrentTime and TerminationTime are returned (TerminationTime >= CurrentTime + InitialTerminationTime).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request to instantiate a Subscription Manager. The <emphasis role="bold">Subscribe</emphasis> request does not contain a TopicExpression or a Message Content Filter. The Message contains an InitialTerminationTime of 10s to ensure that the Subscription is terminated after end of this test.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">SubscribeResponse</emphasis> message. Validate that a valid SubscriptionReference is returned (valid EndpointReference); verify that valid values for CurrentTime and TerminationTime are returned (TerminationTime >= CurrentTime + InitialTerminationTime).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return a valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid values for CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned different results at step 4 and step 6 (EndpointReference, TerminationTime, CurrentTime fields could be different, only type of response shall be the same).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the Subscribe request with MinimumTime value included in UnacceptableInitialTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Everything that happens at step 4 shall happen at step 6 as well. Otherwise, it indicates that the DUT processes namespaces in a wrong way and the test shall be failed.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> All requests for steps 5-6 to the DUT shall have default namespaces definition in parent tag (see examples in <link linkend="Annex_namespaces_examples">Annex A.2</link>).
        </para>
      </section>
      <!--EVENT-4-1-8-->
      <section xml:id="tc.EVENT-4-1-8">
        <title>EVENT - NAMESPACES (NOT STANDARD PREFIXES) </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-4-1-8
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT accepts requests for Event Service with different namespaces definition.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. 
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request to instantiate a Subscription Manager. The <emphasis role="bold">Subscribe</emphasis> request does not contain a TopicExpression or a Message Content Filter. The Message contains an InitialTerminationTime of 10s to ensure that the Subscription is terminated after end of this test.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">SubscribeResponse</emphasis> message. Validate that a valid SubscriptionReference is returned (valid EndpointReference); verify that valid values for CurrentTime and TerminationTime are returned (TerminationTime >= CurrentTime + InitialTerminationTime).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request to instantiate a Subscription Manager. The <emphasis role="bold">Subscribe</emphasis> request does not contain a TopicExpression or a Message Content Filter. The Message contains an InitialTerminationTime of 10s to ensure that the Subscription is terminated after end of this test.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">SubscribeResponse</emphasis> message. Validate that a valid SubscriptionReference is returned (valid EndpointReference); verify that valid values for CurrentTime and TerminationTime are returned (TerminationTime >= CurrentTime + InitialTerminationTime).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return a valid SubscriptionReference
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid values for CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned different results at step 4 and step 6 (EndpointReference, TerminationTime, CurrentTime fields could be different, only type of response shall be the same).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the Subscribe request with MinimumTime value included in UnacceptableInitialTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Everything that happens at step 4 shall happen at step 6 as well. Otherwise, it indicates that the DUT processes namespaces in a wrong way and the test shall be failed.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> All requests for steps 5-6 to the DUT shall have namespaces definition with not standard prefixes (see examples in <link linkend="Annex_namespaces_examples">Annex A.2</link>).
        </para>
      </section>
      <!--EVENT-4-1-9-->
      <section xml:id="tc.EVENT-4-1-9">
        <title>EVENT - NAMESPACES (DIFFERENT PREFIXES FOR THE SAME NAMESPACE) </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-4-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT accepts requests for Event Service with different namespaces definition.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. 
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request to instantiate a Subscription Manager. The <emphasis role="bold">Subscribe</emphasis> request does not contain a TopicExpression or a Message Content Filter. The Message contains an InitialTerminationTime of 10s to ensure that the Subscription is terminated after end of this test.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that ONVIF Client sends <emphasis role="bold">SubscribeResponse</emphasis> message. Validate that a valid SubscriptionReference is returned (valid EndpointReference); verify that valid values for CurrentTime and TerminationTime are returned (TerminationTime >= CurrentTime + InitialTerminationTime).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request to instantiate a Subscription Manager. The <emphasis role="bold">Subscribe</emphasis> request does not contain a TopicExpression or a Message Content Filter. The Message contains an InitialTerminationTime of 10s to ensure that the Subscription is terminated after end of this test.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">SubscribeResponse</emphasis> message. Validate that a valid SubscriptionReference is returned (valid EndpointReference); verify that valid values for CurrentTime and TerminationTime are returned (TerminationTime >= CurrentTime + InitialTerminationTime).

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return a valid SubscriptionReference
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid values for CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned different results at step 4 and step 6 (EndpointReference, TerminationTime, CurrentTime fields could be different, only types of response shall be the same).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the Subscribe request with MinimumTime value which is contained in UnacceptableInitialTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Everything that happens at step 4 shall happen at step 6 as well. Otherwise, it indicates that the DUT processes namespaces in a wrong way and the test shall be failed.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> All requests for steps 5-6 to the DUT shall have namespaces definition with different prefixes for the same namespace (see examples in <link linkend="Annex_namespaces_examples">Annex A.2</link>).
        </para>
      </section>
      <!--EVENT-4-1-10-->
      <section xml:id="tc.EVENT-4-1-10">
        <title>EVENT - NAMESPACES (THE SAME PREFIX FOR DIFFERENT NAMESPACES) </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-4-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that the DUT accepts requests for Event Service with different namespaces definition.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. 
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request to instantiate a Subscription Manager. The <emphasis role="bold">Subscribe</emphasis> request does not contain a TopicExpression or a Message Content Filter. The Message contains an InitialTerminationTime of 10s to ensure that the Subscription is terminated after end of this test.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">SubscribeResponse</emphasis> message. Verify that a valid SubscriptionReference is returned (valid EndpointReference); verify that valid values for CurrentTime and TerminationTime are returned (TerminationTime >= CurrentTime + InitialTerminationTime).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Subscribe</emphasis> request to instantiate a Subscription Manager. The <emphasis role="bold">Subscribe</emphasis> request does not contain a TopicExpression or a Message Content Filter. The Message contains an InitialTerminationTime of 10s to ensure that the Subscription is terminated after end of this test.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">SubscribeResponse</emphasis> message. Validate that a valid SubscriptionReference is returned (valid EndpointReference); verify that valid values for CurrentTime and TerminationTime are returned (TerminationTime >= CurrentTime + InitialTerminationTime).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SubscribeResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return a valid SubscriptionReference
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid values for CurrentTime and TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned different results at step 4 and step 6 (EndpointReference, TerminationTime, CurrentTime fields could be different, only type of response shall be the same).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SubscribeResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT cannot accept the set value to an InitialTerminationTime, ONVIF Client retries to send the Subscribe request with MinimumTime value included in UnacceptableInitialTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Everything that happens at step 4 shall happen at step 6 as well. Otherwise, it indicates that the DUT processes namespaces in a wrong way and the test shall be failed.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> All requests for steps 5-6 to the DUT shall have namespaces definition with the same prefixes for different namespaces (see examples in <link linkend="Annex_namespaces_examples">Annex A.2</link>).
        </para>
      </section>
    </section>
    <!--Capabilities-->
    <section xml:id="tc.event_handling.capabilities">
      <title>Capabilities</title>
      <!--EVENT-5-1-1-->
      <section xml:id="tc.EVENT-5-1-1">
        <title>EVENT SERVICE CAPABILITIES</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-5-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Capability exchange
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServiceCapabilities (for Event Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> events.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Event Service Capabilities of the DUT.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. 
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve event service capabilities of the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Capabilities :=  <emphasis role="italic">cap</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis> contains non-empty @EventBrokerProtocols list and at least one item does not correspond to requirements for schema name, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.@MaxEventBrokers &gt; 0 and <emphasis role="italic">cap</emphasis> does not contain non-empty @EventBrokerProtocols list, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis> contains non-empty @EventBrokerProtocols list and @MaxEventBrokers is skipped or @MaxEventBrokers &lt; 1, FAIL the test and skip other steps.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
      <!--EVENT-5-1-2-->
      <section xml:id="tc.EVENT-5-1-2">
        <title>GET SERVICES AND EVENT SERVICE CAPABILITIES CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-5-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Capability exchange
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServices, GetServiceCapabilities (for Event Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> devicemgmt.wsdl, events.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Services and Events Service Capabilities consistency.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServices</emphasis> request (IncludeCapability = true) to retrieve all services of the DUT with service capabilities.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServicesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve Event service capabilities of the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="EVENT-5-1-2.CapCompare" xreflabel="7">
              <para>
                If the DUT sent different Capabilities in <emphasis role="bold">GetServicesResponse</emphasis> message and in <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message, FAIL the test.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServicesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent different Capabilities in <emphasis role="bold">GetServicesResponse</emphasis> message and in <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Service will be defined as Event service if it has Namespace element that is equal to "http://www.onvif.org/ver10/events/wsdl".
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields will be compared at step <xref linkend="EVENT-5-1-2.CapCompare"/>:
          <itemizedlist>
            <listitem>
              <para>
                @WSSubscriptionPolicySupport
              </para>
            </listitem>
            <listitem>
              <para>
                @WSPullPointSupport
              </para>
            </listitem>
            <listitem>
              <para>
                @WSPausableSubscriptionManagerInterfaceSupport
              </para>
            </listitem>
            <listitem>
              <para>
                @MaxNotificationProducers
              </para>
            </listitem>
            <listitem>
              <para>
                @MaxPullPoints
              </para>
            </listitem>           
            <listitem>
              <para>
                @PersistentNotificationStorage
              </para>
            </listitem>
            <listitem>
              <para>
                @EventBrokerProtocols
              </para>
            </listitem>
            <listitem>
              <para>
                @MaxEventBrokers
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

    </section>
    <!--Seek-->
    <section xml:id="tc.event_handling.seek">
      <title>Seek</title>
      <!--EVENT-6-1-3-->
      <section xml:id="tc.EVENT-6-1-3">
        <title>SEEK EVENTS – BEGIN OF BUFFER</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-6-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> BeginOfBuffer (ONVIF Core Specification), Real-time Pull-Point Notification Interface (ONVIF Core Specification), Seek (ONVIF Core Specification), Persistent notification storage (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Seek
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Seek function and that events are received from persistent notification storage when pull point was set before beginning of buffer. Verify tns1:EventBuffer/Begin event.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Persistent notification storage is supported by the DUT. Persistent notification storage contains notifications.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:EventBuffer/Begin. If there is no event with such Topic, skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = false).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with TopicFilter = tns1:EventBuffer/Begin.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message. Validate that correct values for CurrentTime and TerminationTime and SubscriptionReference are returned.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Seek</emphasis> request (UtcTime = [Current UTC Time], Reverse = true) to start reverse seek.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">SeekResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify NotificationMessage (a maximum number of 1 Notification Messages is included in the <emphasis role="bold">PullMessagesResponse</emphasis> message; well formed and valid values for CurrentTime and TerminationTime (TerminationTime > CurrentTime).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that received event is event with Topic = tns1:EventBuffer/Begin.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains no NotificationMessages.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Seek</emphasis> request (UtcTime = Message.UtcTime of tns1:EventBuffer/Begin message from step 12, Reverse = false) to put pull point in the past.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">SeekResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify NotificationMessage (a maximum number of 1 Notification Messages is included in the <emphasis role="bold">PullMessagesResponse</emphasis> message; well formed and valid values for CurrentTime and TerminationTime (TerminationTime > CurrentTime).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that received event is event with Topic = tns1:EventBuffer/Begin.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains no NotificationMessages.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that there was <emphasis role="bold">PullMessagesResponse</emphasis> without messages.

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid values for CurrentTime and TerminationTime (TerminationTime > CurrentTime).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventsPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message does not contain a NotificationMessage.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message contains more than 1 NotificationMessages.
              </para>
            </listitem>
            <listitem>
              <para>
                The NotificationMessages are not well formed.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message contains invalid values for Current or TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send event with Topic = tns1:EventBuffer/Begin from persistent notification storage for step 12 and 20.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent event for step 16 and 24.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return correct event with Topic = tns1:EventBuffer/Begin in GetEventsPropertiesResponse.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SetSynchronizationPointResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">PullMessagesResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit included in PullMessagesFaultResponse message.
        </para>
      </section>
      <!--EVENT-6-1-4-->
      <section xml:id="tc.EVENT-6-1-4">
        <title>SEEK EVENTS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-6-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Real-time Pull-Point Notification Interface (ONVIF Core Specification), Seek (ONVIF Core Specification), Persistent notification storage (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Seek
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Seek function and those events are received from persistent notification storage.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Persistent notification storage is supported by the DUT. Persistent notification storage contains notifications.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Find the beginning of buffer time BeginОfBufferTime1 (see <link linkend="Annex_FindBeginOfBufferTime">Annex A.4</link>)
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message. Validate that correct values for CurrentTime and TerminationTime and SubscriptionReference are returned.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Seek</emphasis> request (UtcTime = BeginОfBufferTime1 – 1s, no Reverse) to put pull point in the past.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">SeekResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify NotificationMessage (a maximum number of 1 Notification Messages is included in the <emphasis role="bold">PullMessagesResponse</emphasis> message; well formed and valid values for CurrentTime and TerminationTime (TerminationTime > CurrentTime).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that Message.UtcTime is greater or equal to BeginОfBufferTime1.
              </para>
            </listitem>
            <listitem>
              <para>
                Repeat steps 8-11 until Message.UtcTime is equal or greater than time of Pullpoint Subscrbtion creation (CurrentTime from step 5) or there are <emphasis role="bold">PullMessagesResponse</emphasis> without Notifications to get all messages from persistent notification storage.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the first notification has Topic = tns1:EventBuffer/Begin.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that all events across <emphasis role="bold">PullMessagesResponse</emphasis> messages are ordered by increasing Message.UtcTime and if events occur in the incorrect order that they are only misplaced by a maximum of 5 seconds.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that there is at least one message from persistent notification storage.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that all Messages have Message.UtcTime that is greater or equal to BeginОfBufferTime1.

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid values for CurrentTime and TerminationTime (TerminationTime > CurrentTime).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">SeekResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message does not contain a NotificationMessage.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message contains more than 1 NotificationMessages.
              </para>
            </listitem>
            <listitem>
              <para>
                The NotificationMessages are not well formed.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message contains invalid values for Current or TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one NotificationMessage from persistent notification storage.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return NotificationMessages from persistent notification storage ordered by increasing Message.UtcTime and events that occurred in the incorrect order were misplaced by more than 5 seconds.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned NotificationMessages from persistent notification storage that has Message.UtcTime &lt; BeginОfBufferTime1.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned the first Notification with Topic which differs from tns1:EventBuffer/Begin.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SeekResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">PullMessagesResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit included in PullMessagesFaultResponse message.
        </para>
      </section>
      <!--EVENT-6-1-5-->
      <section xml:id="tc.EVENT-6-1-5">
        <title>SEEK EVENTS – REVERSE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> EVENT-6-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> BeginOfBuffer (ONVIF Core Specification), Real-time Pull-Point Notification Interface (ONVIF Core Specification), Seek (ONVIF Core Specification), Persistent notification storage (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Seek
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Seek function and those events are received from persistent notification storage in reverse order. Verify tns1:EventBuffer/Begin event.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Persistent notification storage is supported by the DUT. Persistent notification storage contains notifications.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Find beginning of buffer time BeginОfBufferTime1 (see <link linkend="Annex_FindBeginOfBufferTime">Annex A.4</link>)
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message. Validate that correct values for CurrentTime and TerminationTime and SubscriptionReference are returned.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">Seek</emphasis> request (UtcTime = [Current UTC Time], Reverse = «true») to start reverse seek.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">SeekResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify NotificationMessage (a maximum number of 1 Notification Messages is included in the <emphasis role="bold">PullMessagesResponse</emphasis> message; well formed and valid values for CurrentTime and TerminationTime (TerminationTime > CurrentTime).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that Message.UtcTime is greater or equal to BeginОfBufferTime1.
              </para>
            </listitem>
            <listitem>
              <para>
                Repeat steps 8-11 until Notification with Topic tns1:EventBuffer/Begin is received or there is <emphasis role="bold">PullMessagesResponse</emphasis> message without Notifications to get all messages from persistent notification storage.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the last notification has Topic = tns1:EventBuffer/Begin.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that all events across <emphasis role="bold">PullMessagesResponse</emphasis> messages are ordered by decreasing Message.UtcTime and if events occur in the incorrect order that they are only misplaced by a maximum of 5 seconds.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that there is at least one message from persistent notification storage.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that all Messages have Message.UtcTime that is greater or equal to BeginОfBufferTime1.

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid values for CurrentTime and TerminationTime (TerminationTime > CurrentTime).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">SeekResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message does not contain a NotificationMessage.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message contains more than 1 NotificationMessages.
              </para>
            </listitem>
            <listitem>
              <para>
                The NotificationMessages are not well formed.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">PullMessagesResponse</emphasis> message contains invalid values for Current or TerminationTime.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one NotificationMessage from persistent notification storage.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return NotificationMessages from persistent notification storage ordered by decreasing Message.UtcTime and events that occurred in the incorrect order were misplaced by more than 5 seconds.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned NotificationMessages from persistent notification storage that has Message.UtcTime &lt; BeginОfBufferTime1.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned the last Notification with Topic which differs from tns1:EventBuffer/Begin.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">SeekResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid WS-Addressing Action URI in SOAP Header for <emphasis role="bold">PullMessagesResponse</emphasis> message (see <link linkend="Annex_ActionURIsForEventServiceMessages">Annex A.3</link>).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit included in PullMessagesFaultResponse message.
        </para>
      </section>

    </section>
    <!--MQTT Notification Interface-->
    <section xml:id="tc.event_handling.mqtt_notification_interface" xreflabel="Section 5.7">
      <title>MQTT Notification Interface</title>
      <section xml:id="tc.event_handling.mqtt_notification_interface.configuration">
        <title>Event Broker Configuration</title>
        <!--EVENT-7-1-1 GET EVENT BROKER CONFIGURATIONS-->
        <section xml:id="tc.EVENT-7-1-1">
          <title>GET EVENT BROKER CONFIGURATIONS</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> EVENT-7-1-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Event Broker, Get Event Brokers (ONVIF Core Specification),
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> GetEventBrokers (Event Service)
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify getting of an event broker configurations from the device.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.  Event Broker feature is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Event Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap</emphasis> - Event Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">GetEventBrokers</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Address skipped
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">GetEventBrokersResponse</emphasis> message with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        EventBroker list =: <emphasis role="italic">eventBrokerConfigList</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If amount of items in <emphasis role="italic">eventBrokerConfigList</emphasis> &gt; <emphasis role="italic">cap</emphasis>.MaxEventBrokers, FAIL the test and skip other steps.
                </para>
              </listitem>
               <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList</emphasis> contains at least two items with equal Address fields, FAIL the test and skip other steps.
                </para>
              </listitem>
              <listitem>
                <para>
                  For each Event Broker Configuration  (<emphasis role="italic">eventBrokerConfig</emphasis>) in <emphasis role="italic">eventBrokerConfigList</emphasis>:
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client invokes <emphasis role="bold">GetEventBrokers</emphasis> request with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              Address := <emphasis role="italic">eventBrokerConfig</emphasis>.Address
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        DUT responds with <emphasis role="bold">GetEventBrokersResponse</emphasis> message with parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              EventBroker list =: <emphasis role="italic">eventBrokerConfigList2</emphasis>
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        If <emphasis role="italic">eventBrokerConfigList2</emphasis> does not have exactly one item, FAIL the test and restore DUT settings.
                      </para>
                    </listitem>  
                     <listitem>
                      <para>
                        If <emphasis role="italic">eventBrokerConfigList2</emphasis>[0].Address != <emphasis role="italic">eventBrokerConfig</emphasis>.Address, FAIL the test and restore DUT settings.
                      </para>
                    </listitem> 
                     <listitem>
                      <para>
                        If <emphasis role="italic">eventBrokerConfigList2</emphasis>[0] contains Password field, FAIL the test and restore DUT settings. 
                      </para>
                    </listitem> 
                     <listitem xml:id="tc.EVENT-7-1-1.CompareBrokers" xreflabel="8.6">
                      <para>
                        If fields of <emphasis role="italic">eventBrokerConfigList2</emphasis>[0] does not equal to corresponding fields of <emphasis role="italic">eventBrokerConfig</emphasis>, FAIL the test and restore DUT settings.
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>

            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  The DUT did not send <emphasis role="bold">GetEventBrokersResponse</emphasis> message.
                </para>
              </listitem>           
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.EVENT-7-1-1.CompareBrokers"/>:
            <itemizedlist>
              <listitem>
                <para>
                  TopicPrefix
                </para>
              </listitem>
              <listitem>
                <para>
                  UserName
                </para>
              </listitem>
              <listitem>
                <para>
                  CertificateID
                </para>
              </listitem>
              <listitem>
                <para>
                  PublishFilter
                </para>
              </listitem>
              <listitem>
                <para>
                  QoS
                </para>
              </listitem>
            </itemizedlist>
          </para>

        </section>
        <!--EVENT-7-1-2 ADD EVENT BROKER CONFIGURATION-->
        <section xml:id="tc.EVENT-7-1-2">
          <title>ADD EVENT BROKER CONFIGURATION</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> EVENT-7-1-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Event Broker, Add Event Broker, Get Event Brokers (ONVIF Core Specification),
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> AddEventBroker, GetEventBrokers (Event Service)
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify adding of an event broker configuration to the device.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Event Broker feature is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Event Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap</emphasis> - Event Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">cap</emphasis>.@MaxEventBrokers is not greater than 0, FAIL the test.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set  <emphasis role="italic">eventBrokerAddress</emphasis> := ONVIF Client event broker address where scheme = <emphasis role="italic">cap</emphasis>.EventBrokerProtocols[0]
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures the DUT to have free space for adding at least one event broker by following the procedure mentioned in <xref linkend="Annex_HelperFreeSpaceConfigurationForEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">cap</emphasis>.@MaxEventBrokers - Maxiumum number of event broker configurations that can be added to the device
                      </para>
                    </listitem>
                    <!--<listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - ONVIF Client event broker address
                      </para>
                    </listitem>-->
                    <listitem>
                      <para>
                        out (Optional) <emphasis role="italic">eventBrokerConfigToRestore</emphasis> - deleted event broker configuration to restore
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">AddEventBroker</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        EventBroker.Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.TopicPrefix := "TestDevice"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.UserName := "TestUserName"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.Password := "TestPassword"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.CertificateID skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.PublishFilter skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.QoS := 0
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves event broker configuration by following the procedure mentioned in <xref linkend="Annex_HelperGetEventBroker"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - created Event Broker Configuration address
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">eventBrokerConfigList1</emphasis> - Event Broker Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>

              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0].Address != <emphasis role="italic">eventBrokerAddress</emphasis>, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0].TopicPrefix != "TestDevice", FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0].UserName != "TestUserName", FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0] contains Password field, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0] contains CertificateID field, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0] contains PublishFilter field, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0].QoS != 0, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves event broker configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetEventBrokers"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">eventBrokerConfigList2</emphasis> - Event Broker Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList2</emphasis> does not contain configuration with Address = <emphasis role="italic">eventBrokerAddress</emphasis>, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If event broker configuration with Address = <emphasis role="italic">eventBrokerAddress</emphasis> from <emphasis role="italic">eventBrokerConfigList2</emphasis> contains Password field, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem xml:id="tc.EVENT-7-1-2.CompareBrokers" xreflabel="20">
                <para>
                  If event broker configuration with Address = <emphasis role="italic">eventBrokerAddress</emphasis> from <emphasis role="italic">eventBrokerConfigList2</emphasis> is not equal to <emphasis role="italic">eventBrokerConfigList1</emphasis>[0], FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client deletes created event broker configuration from the DUT by following the procedure mentioned in <xref linkend="Annex_HelperDeleteEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - event broker address
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores <emphasis role="italic">eventBrokerConfigToRestore</emphasis> if any.
                </para>
              </listitem>


            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>

              <listitem>
                <para>
                  The DUT did not send <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>


            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.EVENT-7-1-2.CompareBrokers"/>:
            <itemizedlist>
              <listitem>
                <para>
                  TopicPrefix
                </para>
              </listitem>
              <listitem>
                <para>
                  UserName
                </para>
              </listitem>
              <listitem>
                <para>
                  CertificateID
                </para>
              </listitem>
              <listitem>
                <para>
                  PublishFilter
                </para>
              </listitem>
              <listitem>
                <para>
                  QoS
                </para>
              </listitem>
            </itemizedlist>
          </para>

        </section>
        <!--EVENT-7-1-3 MODIFY EVENT BROKER CONFIGURATION-->
        <section xml:id="tc.EVENT-7-1-3">
          <title>MODIFY EVENT BROKER CONFIGURATION</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> EVENT-7-1-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Event Broker, Add Event Broker, Get Event Brokers (ONVIF Core Specification),
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> AddEventBroker, GetEventBrokers (Event Service)
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify modifying of an existing event broker configuration on the device.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Event Broker feature is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Event Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap</emphasis> - Event Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">cap</emphasis>.@MaxEventBrokers is not greater than 0, FAIL the test.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set  <emphasis role="italic">eventBrokerAddress</emphasis> := ONVIF Client event broker address where scheme = <emphasis role="italic">cap</emphasis>.EventBrokerProtocols[0]
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures the DUT to have free space for adding at least one event broker by following the procedure mentioned in <xref linkend="Annex_HelperFreeSpaceConfigurationForEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">cap</emphasis>.@MaxEventBrokers - Maxiumum number of event broker configurations that can be added to the device
                      </para>
                    </listitem>
                    <!--<listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - ONVIF Client event broker address
                      </para>
                    </listitem>-->
                    <listitem>
                      <para>
                        out (Optional) <emphasis role="italic">eventBrokerConfigToRestore</emphasis> - deleted event broker configuration to restore
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">AddEventBroker</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        EventBroker.Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.TopicPrefix := "TestDevice"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.UserName := "TestUserName"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.Password := "TestPassword"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.CertificateID skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.PublishFilter skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.QoS := 0
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topicFilter</emphasis> := value of the 1st topic specifiled on the Device Test Tool UI.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">AddEventBroker</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        EventBroker.Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.TopicPrefix := "TestDevice1"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.UserName := "TestUserName1"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.Password := "TestPassword"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.CertificateID skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.PublishFilter.TopicExpression := <emphasis role="italic">topicFilter</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.PublishFilter.@Dialect = "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.QoS := 1
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client retrieves event broker configuration by following the procedure mentioned in <xref linkend="Annex_HelperGetEventBroker"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - created Event Broker Configuration address
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">eventBrokerConfigList1</emphasis> - Event Broker Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0].Address != <emphasis role="italic">eventBrokerAddress</emphasis>, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0].TopicPrefix != "TestDevice1", FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0].UserName != "TestUserName1", FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0] contains Password field, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0] contains CertificateID field, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0].PublishFilter.TopicExpression != <emphasis role="italic">topicFilter</emphasis>, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0].PublishFilter.@Dialect != "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet", FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList1</emphasis>[0].QoS != 1, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves event broker configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetEventBrokers"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">eventBrokerConfigList2</emphasis> - Event Broker Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList2</emphasis> does not contain configuration with Address = <emphasis role="italic">eventBrokerAddress</emphasis>, FAIL the test and restore DUT settings.
                </para>
              </listitem>
               <listitem>
                <para>
                  If event broker configuration with Address = <emphasis role="italic">eventBrokerAddress</emphasis> from <emphasis role="italic">eventBrokerConfigList2</emphasis> contains Password field, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem xml:id="tc.EVENT-7-1-3.CompareBrokers" xreflabel="24">
                <para>
                  If event broker configuration with Address = <emphasis role="italic">eventBrokerAddress</emphasis> from <emphasis role="italic">eventBrokerConfigList2</emphasis> is not equal to <emphasis role="italic">eventBrokerConfigList1</emphasis>[0], FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client deletes created event broker configuration from the DUT by following the procedure mentioned in <xref linkend="Annex_HelperDeleteEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - event broker address
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores <emphasis role="italic">eventBrokerConfigToRestore</emphasis> if any.
                </para>
              </listitem>


            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>

              <listitem>
                <para>
                  The DUT did not send <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>


            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.EVENT-7-1-3.CompareBrokers"/>:
            <itemizedlist>
              <listitem>
                <para>
                  TopicPrefix
                </para>
              </listitem>
              <listitem>
                <para>
                  UserName
                </para>
              </listitem>
              <listitem>
                <para>
                  CertificateID
                </para>
              </listitem>
              <listitem>
                <para>
                  PublishFilter
                </para>
              </listitem>
              <listitem>
                <para>
                  QoS
                </para>
              </listitem>
            </itemizedlist>
          </para>

        </section>
        <!--EVENT-7-1-4 DELETE EVENT BROKER CONFIGURATION-->
        <section xml:id="tc.EVENT-7-1-4">
          <title>DELETE EVENT BROKER CONFIGURATION</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> EVENT-7-1-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Event Broker, Delete Event Broker, Get Event Brokers (ONVIF Core Specification),
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> DeleteEventBroker, GetEventBrokers (Event Service)
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify deleting of an event broker configuration from the device.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Event Broker feature is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Event Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap</emphasis> - Event Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">cap</emphasis>.@MaxEventBrokers is not greater than 0, FAIL the test.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set  <emphasis role="italic">eventBrokerAddress</emphasis> := ONVIF Client event broker address where scheme = <emphasis role="italic">cap</emphasis>.EventBrokerProtocols[0]
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures the DUT to have free space for adding at least one event broker by following the procedure mentioned in <xref linkend="Annex_HelperFreeSpaceConfigurationForEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">cap</emphasis>.@MaxEventBrokers - Maxiumum number of event broker configurations that can be added to the device
                      </para>
                    </listitem>
                    <!--<listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - ONVIF Client event broker address
                      </para>
                    </listitem>-->
                    <listitem>
                      <para>
                        out (Optional) <emphasis role="italic">eventBrokerConfigToRestore</emphasis> - deleted event broker configuration to restore
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">AddEventBroker</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        EventBroker.Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.TopicPrefix := "TestDevice"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.UserName := "TestUserName"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.Password := "TestPassword"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.CertificateID skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.PublishFilter skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.QoS := 0
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">DeleteEventBroker</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">DeleteEventBrokerResponse</emphasis> message.
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client retrieves event broker configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetEventBrokers"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">eventBrokerConfigList</emphasis> - Event Broker Configurations list
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">eventBrokerConfigList</emphasis> contains configuration with Address = <emphasis role="italic">eventBrokerAddress</emphasis>, FAIL the test and restore DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores <emphasis role="italic">eventBrokerConfigToRestore</emphasis> if any.
                </para>
              </listitem>


            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  The DUT did not send <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  The DUT did not send <emphasis role="bold">DeleteEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>

        </section>
      </section>
      <section xml:id="tc.event_handling.mqtt_notification_interface.MQTTnotification">
        <title>MQTT Notification</title>
        <!--EVENT-7-2-1 MQTT EVENTS PUBLISHING (MQTT, QoS=0)-->
        <section xml:id="tc.EVENT-7-2-1">
          <title>MQTT EVENTS PUBLISHING (MQTT, QoS=0)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> EVENT-7-2-1
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Event Broker, Topic Structure, JSON Event Payload, Property events (ONVIF Core Specification),
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> AddEventBroker (Event Service), Topic Structure, JSON Event Payload.
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify publishing of events to event broker server via mqtt protocol.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT. Event Broker feature is supported by the DUT. MQTT protocol is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client, DUT, MQTT Event Broker Server
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Event Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap</emphasis> - Event Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">cap</emphasis>.@MaxEventBrokers is not greater than 0, FAIL the test.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set  <emphasis role="italic">eventBrokerAddress</emphasis> := ONVIF Client event broker address where scheme = "mqtt"
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures the DUT to have free space for adding at least one event broker by following the procedure mentioned in <xref linkend="Annex_HelperFreeSpaceConfigurationForEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">cap</emphasis>.@MaxEventBrokers - Maxiumum number of event broker configurations that can be added to the device
                      </para>
                    </listitem>
                    <!--<listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - ONVIF Client event broker address
                      </para>
                    </listitem>-->
                    <listitem>
                      <para>
                        out (Optional) <emphasis role="italic">eventBrokerConfigToRestore</emphasis> - deleted event broker configuration to restore
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topic</emphasis> := value of the 1st topic specifiled on the Device Test Tool UI.
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client retrieves supported topic set by following the procedure mentioned in <xref linkend="Annex_HelperGetEventProperties"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">topicSet</emphasis> - topic set from GetEventPropertiesResponse
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">topicSet</emphasis> does not contain <emphasis role="italic">topic</emphasis>, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topicDescription</emphasis> := <emphasis role="italic">topicSet</emphasis>[0], where <emphasis role="italic">topicSet</emphasis>[0] has topic = <emphasis role="italic">topic</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">AddEventBroker</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        EventBroker.Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.TopicPrefix := "TestDevice"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.UserName := "TestUserName"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.Password := "TestPassword"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.CertificateID skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.PublishFilter skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.QoS := 0
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT CONNECT</emphasis> message via mqtt protocol to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain User Name Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain Password Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain User Name = "TestUserName", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain Password = "TestPassword", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  MQTT Event Broker Server responds with <emphasis role="bold">MQTT CONNACK</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves MQTT Event coresponds to <emphasis role="italic">topic</emphasis> by following the procedure mentioned in <xref linkend="Annex_HelperRetrieveMQTTEventNoFilter"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in 0 - expected QoS value
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in "TestDevice" - expected Topic Prefix
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topic</emphasis> - expected ONVIF topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topicDescription</emphasis>.MessageDescription.@IsProperty value - property flag
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttEvent</emphasis> - MQTT event
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttTopicName</emphasis> - MQTT topic name of event
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client deletes created event broker configuration from the DUT by following the procedure mentioned in <xref linkend="Annex_HelperDeleteEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - event broker address
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT DISCONNECT</emphasis> message via mqtt protocol to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores <emphasis role="italic">eventBrokerConfigToRestore</emphasis> if any.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>

              <listitem>
                <para>
                  The DUT did not send <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--EVENT-7-2-2 MQTT EVENTS PUBLISHING (MQTT TLS, QoS=0)-->
        <section xml:id="tc.EVENT-7-2-2">
          <title>MQTT EVENTS PUBLISHING (MQTT TLS, QoS=0)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> EVENT-7-2-2
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Event Broker, Topic Structure, JSON Event Payload, Property events (ONVIF Core Specification),
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> AddEventBroker (Event Service), Topic Structure, JSON Event Payload.
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify publishing of events to event broker server via MQTT over TLS protocol.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.  Event Broker feature is supported by the DUT. MQTTS protocol is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client, DUT, MQTT Event Broker Server supporting TLS with SSL Certificates for authentication support.
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Event Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap</emphasis> - Event Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">cap</emphasis>.@MaxEventBrokers is not greater than 0, FAIL the test.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set  <emphasis role="italic">eventBrokerAddress</emphasis> := address of ONVIF Client event broker with TLS security where scheme = "mqtts"
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures the DUT to have free space for adding at least one event broker by following the procedure mentioned in <xref linkend="Annex_HelperFreeSpaceConfigurationForEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">cap</emphasis>.@MaxEventBrokers - Maxiumum number of event broker configurations that can be added to the device
                      </para>
                    </listitem>
                    <!--<listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - ONVIF Client event broker address
                      </para>
                    </listitem>-->
                    <listitem>
                      <para>
                        out (Optional) <emphasis role="italic">eventBrokerConfigToRestore</emphasis> - deleted event broker configuration to restore
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topic</emphasis> := value of the 1st topic specifiled on the Device Test Tool UI.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves supported topic set by following the procedure mentioned in <xref linkend="Annex_HelperGetEventProperties"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">topicSet</emphasis> - topic set from GetEventPropertiesResponse
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">topicSet</emphasis> does not contain <emphasis role="italic">topic</emphasis>, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topicDescription</emphasis> := <emphasis role="italic">topicSet</emphasis>[0], where <emphasis role="italic">topicSet</emphasis>[0] has topic = <emphasis role="italic">topic</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  If Security Configuration Service is supported by the DUT :
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client gets the Security Configuration service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetSecurityConfigurationServiceCapabilities"/> with the following input and output parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              out <emphasis role="italic">cap</emphasis> - Security Configuration Service Capabilities
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        <!--<emphasis role="bold">TODO: Condition can be changed after clarification in #2007</emphasis>-->
                        If <emphasis role="italic">cap</emphasis>.KeystoreCapabilities.MaximumNumberOfCertificates > 0:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem xml:id = "EVENT-7-2-2.GetCertificateID" xreflabel ="11.2.1">
                            <para>
                              ONVIF Client uploads a certificate to the DUT keystore by following the procedure mentioned in <xref linkend="Annex_HelperCertificateUpload"/> with the following input and output parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">cap</emphasis> - Security Configuration Service Capabilities
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    out <emphasis role="italic">certificateID</emphasis> - Certificate ID
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">AddEventBroker</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        EventBroker.Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.TopicPrefix := "TestDevice"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.UserName skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.Password skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.CertificateID := <emphasis role="italic">certificateID</emphasis> if it was received at step <xref linkend="EVENT-7-2-2.GetCertificateID"/>, otherwise skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.PublishFilter skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.QoS := 0
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT CONNECT</emphasis> message over MQTT TLS protocol to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain User Name Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain Password Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain User Name = "TestUserName", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain Password = "TestPassword", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  MQTT Event Broker Server responds with <emphasis role="bold">MQTT CONNACK</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves MQTT Event coresponds to <emphasis role="italic">topic</emphasis> by following the procedure mentioned in <xref linkend="Annex_HelperRetrieveMQTTEventNoFilter"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in 0 - expected QoS value
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in "TestDevice" - expected Topic Prefix
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topic</emphasis> - expected ONVIF topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topicDescription</emphasis>.MessageDescription.@IsProperty value - property flag
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttEvent</emphasis> - MQTT event
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttTopicName</emphasis> - MQTT topic name of event
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client deletes created event broker configuration from the DUT by following the procedure mentioned in <xref linkend="Annex_HelperDeleteEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - event broker address
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT DISCONNECT</emphasis> message over MQTT TLS protocol to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores <emphasis role="italic">eventBrokerConfigToRestore</emphasis> if any.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>

              <listitem>
                <para>
                  The DUT did not send <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  SSL Certificate authentication of the DUT on the Broker Server was failed.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--EVENT-7-2-3 MQTT EVENTS PUBLISHING (MQTT OVER WEBSOCKET, QoS=0)-->
        <section xml:id="tc.EVENT-7-2-3">
          <title>MQTT EVENTS PUBLISHING (MQTT OVER WEBSOCKET, QoS=0)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> EVENT-7-2-3
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Event Broker, Topic Structure, JSON Event Payload, Property events (ONVIF Core Specification),
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> AddEventBroker (Event Service), Topic Structure, JSON Event Payload.
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify publishing of events to event broker server via WebSocket protocol.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.  Event Broker feature is supported by the DUT. WS protocol is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client, DUT, MQTT Event Broker Server with WebSocket supporting.
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Event Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap</emphasis> - Event Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">cap</emphasis>.@MaxEventBrokers is not greater than 0, FAIL the test.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set  <emphasis role="italic">eventBrokerAddress</emphasis> := ONVIF Client event broker WebSocket address where scheme = "ws"
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures the DUT to have free space for adding at least one event broker by following the procedure mentioned in <xref linkend="Annex_HelperFreeSpaceConfigurationForEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">cap</emphasis>.@MaxEventBrokers - Maxiumum number of event broker configurations that can be added to the device
                      </para>
                    </listitem>
                    <!--<listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - ONVIF Client event broker address
                      </para>
                    </listitem>-->
                    <listitem>
                      <para>
                        out (Optional) <emphasis role="italic">eventBrokerConfigToRestore</emphasis> - deleted event broker configuration to restore
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topic</emphasis> := value of the 1st topic specifiled on the Device Test Tool UI.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves supported topic set by following the procedure mentioned in <xref linkend="Annex_HelperGetEventProperties"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">topicSet</emphasis> - topic set from GetEventPropertiesResponse
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">topicSet</emphasis> does not contain <emphasis role="italic">topic</emphasis>, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topicDescription</emphasis> := <emphasis role="italic">topicSet</emphasis>[0], where <emphasis role="italic">topicSet</emphasis>[0] has topic = <emphasis role="italic">topic</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">AddEventBroker</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        EventBroker.Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.TopicPrefix := "TestDevice"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.UserName := "TestUserName"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.Password := "TestPassword"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.CertificateID skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.PublishFilter skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.QoS := 0
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT CONNECT</emphasis> message over websocket protocol to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain User Name Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain Password Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain User Name = "TestUserName", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain Password = "TestPassword", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  MQTT Event Broker Server responds with <emphasis role="bold">MQTT CONNACK</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves MQTT Event coresponds to <emphasis role="italic">topic</emphasis> by following the procedure mentioned in <xref linkend="Annex_HelperRetrieveMQTTEventNoFilter"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in 0 - expected QoS value
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in "TestDevice" - expected Topic Prefix
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topic</emphasis> - expected ONVIF topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topicDescription</emphasis>.MessageDescription.@IsProperty value - property flag
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttEvent</emphasis> - MQTT event
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttTopicName</emphasis> - MQTT topic name of event
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client deletes created event broker configuration from the DUT by following the procedure mentioned in <xref linkend="Annex_HelperDeleteEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - event broker address
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT DISCONNECT</emphasis> message over websocket protocol to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores <emphasis role="italic">eventBrokerConfigToRestore</emphasis> if any.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>

              <listitem>
                <para>
                  The DUT did not send <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--EVENT-7-2-4 MQTT EVENTS PUBLISHING (MQTT TLS OVER WEBSOCKET, QoS=0)-->
        <section xml:id="tc.EVENT-7-2-4">
          <title>MQTT EVENTS PUBLISHING (MQTT TLS OVER WEBSOCKET, QoS=0)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> EVENT-7-2-4
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Event Broker, Topic Structure, JSON Event Payload, Property events (ONVIF Core Specification),
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> AddEventBroker (Event Service), Topic Structure, JSON Event Payload.
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify publishing of events to event broker server via websocket over TLS protocol.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.  Event Broker feature is supported by the DUT. MQTTS protocol is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client, DUT, MQTT Event Broker Server supporting TLS with SSL Certificates for authentication support.
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Event Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap</emphasis> - Event Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">cap</emphasis>.@MaxEventBrokers is not greater than 0, FAIL the test.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set  <emphasis role="italic">eventBrokerAddress</emphasis> := address of ONVIF Client event broker with TLS security where scheme = "wss"
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures the DUT to have free space for adding at least one event broker by following the procedure mentioned in <xref linkend="Annex_HelperFreeSpaceConfigurationForEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">cap</emphasis>.@MaxEventBrokers - Maxiumum number of event broker configurations that can be added to the device
                      </para>
                    </listitem>
                    <!--<listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - ONVIF Client event broker address
                      </para>
                    </listitem>-->
                    <listitem>
                      <para>
                        out (Optional) <emphasis role="italic">eventBrokerConfigToRestore</emphasis> - deleted event broker configuration to restore
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topic</emphasis> := value of the 1st topic specifiled on the Device Test Tool UI.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves supported topic set by following the procedure mentioned in <xref linkend="Annex_HelperGetEventProperties"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">topicSet</emphasis> - topic set from GetEventPropertiesResponse
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">topicSet</emphasis> does not contain <emphasis role="italic">topic</emphasis>, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topicDescription</emphasis> := <emphasis role="italic">topicSet</emphasis>[0], where <emphasis role="italic">topicSet</emphasis>[0] has topic = <emphasis role="italic">topic</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  If Security Configuration Service is supported by the DUT :
                  <orderedlist numeration="arabic" inheritnum="inherit">
                    <?dbfo label-width="2.5em"?>
                    <listitem>
                      <para>
                        ONVIF Client gets the Security Configuration service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetSecurityConfigurationServiceCapabilities"/> with the following input and output parameters
                        <itemizedlist>
                          <listitem>
                            <para>
                              out <emphasis role="italic">cap</emphasis> - Security Configuration Service Capabilities
                            </para>
                          </listitem>
                        </itemizedlist>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        <!--<emphasis role="bold">TODO: Condition can be changed after clarification in #2007</emphasis>-->
                        If <emphasis role="italic">cap</emphasis>.KeystoreCapabilities.MaximumNumberOfCertificates > 0:
                        <orderedlist numeration="arabic" inheritnum="inherit">
                          <?dbfo label-width="3.5em"?>
                          <listitem xml:id = "EVENT-7-2-4.GetCertificateID" xreflabel ="11.2.1">
                            <para>
                              ONVIF Client uploads a certificate to the DUT keystore by following the procedure mentioned in <xref linkend="Annex_HelperCertificateUpload"/> with the following input and output parameters
                              <itemizedlist>
                                <listitem>
                                  <para>
                                    in <emphasis role="italic">cap</emphasis> - Security Configuration Service Capabilities
                                  </para>
                                </listitem>
                                <listitem>
                                  <para>
                                    out <emphasis role="italic">certificateID</emphasis> - Certificate ID
                                  </para>
                                </listitem>
                              </itemizedlist>
                            </para>
                          </listitem>
                        </orderedlist>
                      </para>
                    </listitem>
                  </orderedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">AddEventBroker</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        EventBroker.Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.TopicPrefix := "TestDevice"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.UserName skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.Password skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.CertificateID := <emphasis role="italic">certificateID</emphasis> if it was received at step <xref linkend="EVENT-7-2-4.GetCertificateID"/>, otherwise skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.PublishFilter skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.QoS := 0
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT CONNECT</emphasis> message over websocket protocol with TLS to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain User Name Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain Password Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain User Name = "TestUserName", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain Password = "TestPassword", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  MQTT Event Broker Server responds with <emphasis role="bold">MQTT CONNACK</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves MQTT Event coresponds to <emphasis role="italic">topic</emphasis> by following the procedure mentioned in <xref linkend="Annex_HelperRetrieveMQTTEventNoFilter"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in 0 - expected QoS value
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in "TestDevice" - expected Topic Prefix
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topic</emphasis> - expected ONVIF topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topicDescription</emphasis>.MessageDescription.@IsProperty value - property flag
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttEvent</emphasis> - MQTT event
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttTopicName</emphasis> - MQTT topic name of event
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client deletes created event broker configuration from the DUT by following the procedure mentioned in <xref linkend="Annex_HelperDeleteEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - event broker address
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT DISCONNECT</emphasis> message over websocket protocol with TLS to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores <emphasis role="italic">eventBrokerConfigToRestore</emphasis> if any.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>

              <listitem>
                <para>
                  The DUT did not send <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  SSL Certificate authentication of the DUT on the Broker Server was failed.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--EVENT-7-2-5 MQTT EVENTS PUBLISHING (MQTT, QoS=1)-->
        <section xml:id="tc.EVENT-7-2-5">
          <title>MQTT EVENTS PUBLISHING (MQTT, QoS=1)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> EVENT-7-2-5
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Event Broker, Topic Structure, JSON Event Payload, Property events (ONVIF Core Specification),
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> AddEventBroker (Event Service), Topic Structure, JSON Event Payload.
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify publishing of events to event broker server via mqtt protocol.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.  Event Broker feature is supported by the DUT. MQTT protocol is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client, DUT, MQTT Event Broker Server
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Event Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap</emphasis> - Event Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">cap</emphasis>.@MaxEventBrokers is not greater than 0, FAIL the test.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set  <emphasis role="italic">eventBrokerAddress</emphasis> := ONVIF Client event broker address where scheme = "mqtt"
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures the DUT to have free space for adding at least one event broker by following the procedure mentioned in <xref linkend="Annex_HelperFreeSpaceConfigurationForEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">cap</emphasis>.@MaxEventBrokers - Maxiumum number of event broker configurations that can be added to the device
                      </para>
                    </listitem>
                    <!--<listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - ONVIF Client event broker address
                      </para>
                    </listitem>-->
                    <listitem>
                      <para>
                        out (Optional) <emphasis role="italic">eventBrokerConfigToRestore</emphasis> - deleted event broker configuration to restore
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topic</emphasis> := value of the 1st topic specifiled on the Device Test Tool UI.
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client retrieves supported topic set by following the procedure mentioned in <xref linkend="Annex_HelperGetEventProperties"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">topicSet</emphasis> - topic set from GetEventPropertiesResponse
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">topicSet</emphasis> does not contain <emphasis role="italic">topic</emphasis>, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topicDescription</emphasis> := <emphasis role="italic">topicSet</emphasis>[0], where <emphasis role="italic">topicSet</emphasis>[0] has topic = <emphasis role="italic">topic</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">AddEventBroker</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        EventBroker.Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.TopicPrefix := "TestDevice"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.UserName := "TestUserName"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.Password := "TestPassword"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.CertificateID skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.PublishFilter skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.QoS := 1
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT CONNECT</emphasis> message via mqtt protocol to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain User Name Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain Password Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain User Name = "TestUserName", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain Password = "TestPassword", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  MQTT Event Broker Server responds with <emphasis role="bold">MQTT CONNACK</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves MQTT Event coresponds to <emphasis role="italic">topic</emphasis> by following the procedure mentioned in <xref linkend="Annex_HelperRetrieveMQTTEventNoFilter"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in 1 - expected QoS value
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in "TestDevice" - expected Topic Prefix
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topic</emphasis> - expected ONVIF topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topicDescription</emphasis>.MessageDescription.@IsProperty value - property flag
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttEvent</emphasis> - MQTT event
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttTopicName</emphasis> - MQTT topic name of event
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client deletes created event broker configuration from the DUT by following the procedure mentioned in <xref linkend="Annex_HelperDeleteEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - event broker address
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT DISCONNECT</emphasis> message via mqtt protocol to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores <emphasis role="italic">eventBrokerConfigToRestore</emphasis> if any.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>

              <listitem>
                <para>
                  The DUT did not send <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--EVENT-7-2-6 MQTT EVENTS PUBLISHING (MQTT, QoS=2)-->
        <section xml:id="tc.EVENT-7-2-6">
          <title>MQTT EVENTS PUBLISHING (MQTT, QoS=2)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> EVENT-7-2-6
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Event Broker, Topic Structure, JSON Event Payload, Property events (ONVIF Core Specification),
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> AddEventBroker (Event Service), Topic Structure, JSON Event Payload.
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify publishing of events to event broker server via mqtt protocol.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.  Event Broker feature is supported by the DUT. MQTT protocol is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client, DUT, MQTT Event Broker Server
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Event Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap</emphasis> - Event Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">cap</emphasis>.@MaxEventBrokers is not greater than 0, FAIL the test.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set  <emphasis role="italic">eventBrokerAddress</emphasis> := ONVIF Client event broker address where scheme = "mqtt"
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures the DUT to have free space for adding at least one event broker by following the procedure mentioned in <xref linkend="Annex_HelperFreeSpaceConfigurationForEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">cap</emphasis>.@MaxEventBrokers - Maxiumum number of event broker configurations that can be added to the device
                      </para>
                    </listitem>
                    <!--<listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - ONVIF Client event broker address
                      </para>
                    </listitem>-->
                    <listitem>
                      <para>
                        out (Optional) <emphasis role="italic">eventBrokerConfigToRestore</emphasis> - deleted event broker configuration to restore
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topic</emphasis> := value of the 1st topic specifiled on the Device Test Tool UI.
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client retrieves supported topic set by following the procedure mentioned in <xref linkend="Annex_HelperGetEventProperties"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">topicSet</emphasis> - topic set from GetEventPropertiesResponse
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">topicSet</emphasis> does not contain <emphasis role="italic">topic</emphasis>, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topicDescription</emphasis> := <emphasis role="italic">topicSet</emphasis>[0], where <emphasis role="italic">topicSet</emphasis>[0] has topic = <emphasis role="italic">topic</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">AddEventBroker</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        EventBroker.Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.TopicPrefix := "TestDevice"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.UserName := "TestUserName"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.Password := "TestPassword"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.CertificateID skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.PublishFilter skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.QoS := 2
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT CONNECT</emphasis> message via mqtt protocol to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain User Name Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain Password Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain User Name = "TestUserName", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain Password = "TestPassword", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  MQTT Event Broker Server responds with <emphasis role="bold">MQTT CONNACK</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves MQTT Event coresponds to <emphasis role="italic">topic</emphasis> by following the procedure mentioned in <xref linkend="Annex_HelperRetrieveMQTTEventNoFilter"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in 2 - expected QoS value
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in "TestDevice" - expected Topic Prefix
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topic</emphasis> - expected ONVIF topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topicDescription</emphasis>.MessageDescription.@IsProperty value - property flag
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttEvent</emphasis> - MQTT event
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttTopicName</emphasis> - MQTT topic name of event
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client deletes created event broker configuration from the DUT by following the procedure mentioned in <xref linkend="Annex_HelperDeleteEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - event broker address
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT DISCONNECT</emphasis> message via mqtt protocol to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores <emphasis role="italic">eventBrokerConfigToRestore</emphasis> if any.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>

              <listitem>
                <para>
                  The DUT did not send <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>
        <!--EVENT-7-2-7 MQTT EVENTS PUBLISHING - PUBLISH FILTER (MQTT, QoS=0)-->
        <section xml:id="tc.EVENT-7-2-7">
          <title>MQTT EVENTS PUBLISHING - PUBLISH FILTER (MQTT, QoS=0)</title>
          <para>
            <emphasis role="bold">Test Case ID:</emphasis> EVENT-7-2-7
          </para>
          <para>
            <emphasis role="bold">Specification Coverage:</emphasis> Event Broker, Topic Structure, JSON Event Payload, Property events (ONVIF Core Specification),
          </para>
          <para>
            <emphasis role="bold">Feature Under Test:</emphasis> AddEventBroker (Event Service), Topic Structure, JSON Event Payload.
          </para>
          <para>
            <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
          </para>
          <para>
            <emphasis role="bold">Test Purpose:</emphasis> To verify publishing of events to event broker server via mqtt protocol. To verify if the DUT handles event filtering in a correct way.
          </para>
          <para>
            <emphasis role="bold">Pre-Requisite:</emphasis> Event Service is supported by the DUT.  Event Broker feature is supported by the DUT. MQTT protocol is supported by the DUT.
          </para>
          <para>
            <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client, DUT, MQTT Event Broker Server
          </para>
          <para>
            <emphasis role="bold">Test Procedure:</emphasis>
          </para>
          <para>
            <orderedlist>
              <?dbfo label-width="1.5em"?>
              <listitem>
                <para>
                  Start an ONVIF Client.
                </para>
              </listitem>
              <listitem>
                <para>
                  Start the DUT.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves Event Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">cap</emphasis> - Event Service Capabilities
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">cap</emphasis>.@MaxEventBrokers is not greater than 0, FAIL the test.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set  <emphasis role="italic">eventBrokerAddress</emphasis> := ONVIF Client event broker address where scheme = "mqtt"
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client configures the DUT to have free space for adding at least one event broker by following the procedure mentioned in <xref linkend="Annex_HelperFreeSpaceConfigurationForEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">cap</emphasis>.@MaxEventBrokers - Maxiumum number of event broker configurations that can be added to the device
                      </para>
                    </listitem>
                    <!--<listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - ONVIF Client event broker address
                      </para>
                    </listitem>-->
                    <listitem>
                      <para>
                        out (Optional) <emphasis role="italic">eventBrokerConfigToRestore</emphasis> - deleted event broker configuration to restore
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topic</emphasis> := value of the 1st topic specifiled on the Device Test Tool UI.
                </para>
              </listitem>

              <listitem>
                <para>
                  ONVIF Client retrieves supported topic set by following the procedure mentioned in <xref linkend="Annex_HelperGetEventProperties"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        out <emphasis role="italic">topicSet</emphasis> - topic set from GetEventPropertiesResponse
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="italic">topicSet</emphasis> does not contain <emphasis role="italic">topic</emphasis>, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  Set <emphasis role="italic">topicDescription</emphasis> := <emphasis role="italic">topicSet</emphasis>[0], where <emphasis role="italic">topicSet</emphasis>[0] has topic = <emphasis role="italic">topic</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client invokes <emphasis role="bold">AddEventBroker</emphasis> request with parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        EventBroker.Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.TopicPrefix := "TestDevice"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.UserName := "TestUserName"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.Password := "TestPassword"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.CertificateID skipped
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.PublishFilter.TopicExpression := <emphasis role="italic">topic</emphasis>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.PublishFilter.@Dialect = "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        EventBroker.QoS := 0
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT responds with <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT CONNECT</emphasis> message via mqtt protocol to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain User Name Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> header does not contain Password Flag = 1, FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain User Name = "TestUserName", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  If <emphasis role="bold">MQTT CONNECT</emphasis> Payload does not contain Password = "TestPassword", FAIL the test and restore the DUT settings.
                </para>
              </listitem>
              <listitem>
                <para>
                  MQTT Event Broker Server responds with <emphasis role="bold">MQTT CONNACK</emphasis> message.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client retrieves MQTT Event coresponds to <emphasis role="italic">topic</emphasis> by following the procedure mentioned in <xref linkend="Annex_HelperRetrieveMQTTEventWithFilter"/> with the following input and output parameters
                  <itemizedlist>
                    <listitem>
                      <para>
                        in 0 - expected QoS value
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in "TestDevice" - expected Topic Prefix
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topic</emphasis> - expected ONVIF topic
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        in <emphasis role="italic">topicDescription</emphasis>.MessageDescription.@IsProperty value - property flag
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttEvent</emphasis> - MQTT event
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        out <emphasis role="italic">mqttTopicName</emphasis> - MQTT topic name of event
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client deletes created event broker configuration from the DUT by following the procedure mentioned in <xref linkend="Annex_HelperDeleteEventBroker"/> with the following input parameter
                  <itemizedlist>
                    <listitem>
                      <para>
                        in <emphasis role="italic">eventBrokerAddress</emphasis> - event broker address
                      </para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
              <listitem>
                <para>
                  DUT sends <emphasis role="bold">MQTT DISCONNECT</emphasis> message via mqtt protocol to <emphasis role="italic">eventBrokerAddress</emphasis>.
                </para>
              </listitem>
              <listitem>
                <para>
                  ONVIF Client restores <emphasis role="italic">eventBrokerConfigToRestore</emphasis> if any.
                </para>
              </listitem>
            </orderedlist>
          </para>
          <para>
            <emphasis role="bold">Test Result:</emphasis>
          </para>
          <para>
            <emphasis role="bold">PASS –</emphasis>
            <itemizedlist>
              <listitem>
                <para>
                  DUT passes all assertions.
                </para>
              </listitem>
            </itemizedlist>
          </para>
          <para>
            <emphasis role="bold">FAIL –</emphasis>
            <itemizedlist>

              <listitem>
                <para>
                  The DUT did not send <emphasis role="bold">AddEventBrokerResponse</emphasis> message.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </section>

      </section>
    </section>
  </chapter>
  <appendix>
    <title>Helper Procedures and Additional Notes</title>
    <!--A.9-->
    <section xml:id="Annex_subscribe_example">
      <title>Subscribe and CreatePullPointSubscription for Receiving All Events</title>
      <para>
        When subscribing for events an ONVIF Client might be interested in receiving all or some of the Events produced by the DUT.
      </para>
      <para>
        If an ONVIF Client is interested in receiving some events it includes a filter tag in the CreatePullPointSubscription or Subscribe requests describing the events which the ONVIF Client is interested in (see examples in the [ONVIF Core Specs]).
      </para>
      <para>
        If an ONVIF Client is interested in receiving all events from a device it does not include the Filter sub tag in the Subscribe or CreatePullPointSubscription request.
      </para>
      <para>
        <emphasis role="bold">Example:</emphasis>
      </para>
      <para>
        The following Subscribe and CreatePullPointSubscription requests can be used if an ONVIF Client is interested in receiving all events.
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Subscribe request:
            </para>
            <programlisting>
              <![CDATA[
<m:Subscribe xmlns:m="http://docs.oasis-open.org/wsn/b-2" 
 xmlns:m0="http://www.w3.org/2005/08/addressing">
 <m:ConsumerReference>
 <m0:Address>
  http://192.168.0.1/events
 </m0:Address>
 </m:ConsumerReference>
</m:Subscribe>]]>
            </programlisting>
          </listitem>
          <listitem>
            <para>
              CreatePullPointSubscription request
            </para>
            <programlisting>
              <![CDATA[
<m:CreatePullPointSubscription 
 xmlns:m="http://www.onvif.org/ver10/events/wsdl"/>]]>
            </programlisting>
          </listitem>
        </orderedlist>
      </para>
    </section>
    <!--A.11-->
    <section xml:id="Annex_namespaces_examples">
      <title>Example of Requests for Namespaces Test Cases</title>
      <para>
        For the execution of namespaces test cases, ONVIF Client shall send a request with specific namespaces definition. Examples of how this request shall look like are the following.
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Defaults Namespaces Definition in Each Tag Examples
            </para>
            <para>
              Subscribe request example:
              <programlisting>
                <![CDATA[
<Envelope xmlns="http://www.w3.org/2003/05/soap-envelope">
 <Header xmlns="http://www.w3.org/2003/05/soap-envelope">
 <Action u:shallUnderstand="1" xmlns:u="http://www.w3.org/2003/
  05/soap-envelope" xmlns="http://www.w3.org/2005/08/
  addressing">
  http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/
  SubscribeRequest</Action>
 <MessageID xmlns="http://www.w3.org/2005/08/addressing">
  urn:uuid:9f2a12de-3a76-461b-a421-e472517bcc7e</MessageID>
 <ReplyTo xmlns="http://www.w3.org/2005/08/addressing">
  <Address xmlns="http://www.w3.org/2005/08/addressing">
  http://www.w3.org/2005/08/addressing/anonymous</Address>
 </ReplyTo>
 <Security xmlns="http://docs.oasis-open.org/wss/2004/
	01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
  <UsernameToken xmlns="http://docs.oasis-open.org/wss/2004/01/
  oasis-200401-wss-wssecurity-secext-1.0.xsd">
  <Username xmlns="http://docs.oasis-open.org/wss/2004/01/
   oasis-200401-wss-wssecurity-secext-1.0.xsd">
   user</Username>
  <Password xmlns="http://docs.oasis-open.org/wss/2004/01/
   oasis-200401-wss-wssecurity-secext-1.0.xsd" Type=
   "http://docs.oasis-open.org/wss/2004/01/oasis-200401-
   wss-username-token-profile-1.0#PasswordDigest">
   5zjIbmvWxVevGlpqg6Qnt9h8Fmo=</Password>
  <Nonce xmlns="http://docs.oasis-open.org/wss/2004/01/
   oasis-200401-wss-wssecurity-secext-1.0.xsd">
   ikcoiK+AmJvA5UpfxTzG8Q==</Nonce>
  <Created xmlns="http://docs.oasis-open.org/wss/2004/01/
   oasis-200401-wss-wssecurity-utility-1.0.xsd">
   2011-04-25T09:27:48Z</Created>
  </UsernameToken>
 </Security>
 <To t:shallUnderstand="1" 
  xmlns:t="http://www.w3.org/2003/05/soap-envelope" 
  xmlns="http://www.w3.org/2005/08/addressing">
  http://169.254.141.200/onvif/services</To>
 </Header>
 <Body xmlns="http://www.w3.org/2003/05/soap-envelope">
 <Subscribe xmlns="http://docs.oasis-open.org/wsn/b-2">
  <ConsumerReference 
  xmlns="http://docs.oasis-open.org/wsn/b-2">
  <Address xmlns="http://www.w3.org/2005/08/addressing">
   http://192.168.10.66/onvif_notify_server</Address>
  </ConsumerReference>
  <InitialTerminationTime>PT10S</InitialTerminationTime>
 </Subscribe>
 </Body>
</Envelope>]]>
              </programlisting>
            </para>
          </listitem>
          <listitem>
            <para>
              Defaults Namespaces Definition in Parent Tag Examples
            </para>
            <para>
              Subscribe request example:
              <programlisting>
                <![CDATA[
<Envelope xmlns="http://www.w3.org/2003/05/soap-envelope">
 <Header>
 <Action u:shallUnderstand="1" xmlns:u="http://www.w3.org/2003/
  05/soap-envelope" 
  xmlns="http://www.w3.org/2005/08/addressing">
  http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/
  SubscribeRequest</Action>
 <MessageID xmlns="http://www.w3.org/2005/08/addressing">
  urn:uuid:9f2a12de-3a76-461b-a421-e472517bcc7e</MessageID>
 <ReplyTo xmlns="http://www.w3.org/2005/08/addressing">
  <Address>http://www.w3.org/2005/08/addressing/
  anonymous</Address>
 </ReplyTo>
 <Security xmlns="http://docs.oasis-open.org/wss/2004/
	 01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
  <UsernameToken>
  <Username>user</Username>
  <Password Type="http://docs.oasis-open.org/wss/2004/01/
   oasis-200401-wss-username-token-profile-1.0
   #PasswordDigest">5zjIbmvWxVevGlpqg6Qnt9h8Fmo=</Password>
  <Nonce>ikcoiK+AmJvA5UpfxTzG8Q==</Nonce>
  <Created xmlns="http://docs.oasis-open.org/wss/2004/01/
   oasis-200401-wss-wssecurity-utility-1.0.xsd">
   2011-04-25T09:27:48Z</Created>
  </UsernameToken>
 </Security>
 <To t:shallUnderstand="1" 
  xmlns:t="http://www.w3.org/2003/05/soap-envelope" 
  xmlns="http://www.w3.org/2005/08/addressing">
  http://169.254.141.200/onvif/services</To>
 </Header>
 <Body>
 <Subscribe xmlns="http://docs.oasis-open.org/wsn/b-2">
  <ConsumerReference 
  xmlns="http://docs.oasis-open.org/wsn/b-2">
  <Address xmlns="http://www.w3.org/2005/08/addressing">
   http://192.168.10.66/onvif_notify_server</Address>
  </ConsumerReference>
  <InitialTerminationTime xmlns="http://docs.oasis-open.org/
  wsn/b-2">PT10S</InitialTerminationTime>
 </Subscribe>
 </Body>
</Envelope>]]>
              </programlisting>
            </para>
          </listitem>
          <listitem>
            <para>
              Namespaces Definition with non-Standard Prefixes Examples
            </para>
            <para>
              Subscribe request example:
              <programlisting>
                <![CDATA[
<prefix0:Envelope
 xmlns:prefix0="http://www.w3.org/2003/05/soap-envelope"
 xmlns:prefix1="http://www.w3.org/2003/05/soap-envelope"
 xmlns:prefix2="http://www.w3.org/2005/08/addressing"
 xmlns:prefix3="http://docs.oasis-open.org/wss/2004/01/
 oasis-200401-wss-wssecurity-utility-1.0.xsd"
 xmlns:prefix4="http://docs.oasis-open.org/wss/2004/01/
 oasis-200401-wss-wssecurity-secext-1.0.xsd"
 xmlns:prefix5="http://docs.oasis-open.org/wsn/b-2">
 <prefix0:Header>
 <prefix2:Action prefix1:shallUnderstand="1">
  http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/
  SubscribeRequest</prefix2:Action>
 <prefix2:MessageID>urn:uuid:9f2a12de-3a76-461b-a421-
  e472517bcc7e</prefix2:MessageID>
 <prefix2:ReplyTo>
  <prefix2:Address>http://www.w3.org/2005/08/addressing/
  anonymous</prefix2:Address>
 </prefix2:ReplyTo>
 <prefix4:Security>
  <prefix4:UsernameToken>
  <prefix4:Username>service</prefix4:Username>
  <prefix4:Password Type="http://docs.oasis-open.org/wss/
   2004/01/oasis-200401-wss-username-token-profile-1.0
   #PasswordDigest">tg6EnHtyMWW8eUfntHO6XpPjOsg=
   </prefix4:Password>
  <prefix4:Nonce>iBIGpSuHtNPbdSWGzG48ng==</prefix4:Nonce>
  <prefix3:Created>2011-04-25T10:54:34Z</prefix3:Created>
  </prefix4:UsernameToken>
 </prefix4:Security>
 <prefix2:To prefix1:shallUnderstand="1">
  http://169.254.141.200/onvif/services</prefix2:To>
 </prefix0:Header>
 <prefix0:Body>
 <prefix5:Subscribe>
  <prefix5:ConsumerReference>
  <prefix2:Address xmlns="http://www.w3.org/2005/08/
   addressing">http://192.168.10.66/onvif_notify_server
   </prefix2:Address>
  </prefix5:ConsumerReference>
  <prefix5:InitialTerminationTime>PT10S
  </prefix5:InitialTerminationTime>
 </prefix5:Subscribe>
 </prefix0:Body>
</prefix0:Envelope>]]>
              </programlisting>
            </para>
          </listitem>
          <listitem>
            <para>
              Namespaces Definition with Different Prefixes for the Same Namespace Examples
            </para>
            <para>
              Subscribe request example:
              <programlisting>
                <![CDATA[
<e1:Envelope xmlns:e1="http://www.w3.org/2003/05/soap-envelope">
 <e2:Header xmlns:e2="http://www.w3.org/2003/05/soap-envelope">
 <e3:Action u:shallUnderstand="1" xmlns:u="http://www.w3.org/
  2003/05/soap-envelope" xmlns:e3="http://www.w3.org/2005/08/
  addressing">http://docs.oasis-open.org/wsn/bw-2/
  NotificationProducer/SubscribeRequest</e3:Action>
 <e4:MessageID xmlns:e4="http://www.w3.org/2005/08/addressing">
  urn:uuid:9f2a12de-3a76-461b-a421-e472517bcc7e</e4:MessageID>
 <e5:ReplyTo xmlns:e5="http://www.w3.org/2005/08/addressing">
  <e6:Address xmlns:e6="http://www.w3.org/2005/08/addressing">
  http://www.w3.org/2005/08/addressing/anonymous</e6:Address>
 </e5:ReplyTo>
 <e7:Security xmlns:e7="http://docs.oasis-open.org/wss/2004/
	 01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
  <e8:UsernameToken xmlns:e8="http://docs.oasis-open.org/wss/
  2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
  <e9:Username xmlns:e9="http://docs.oasis-open.org/wss/
   2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
   user</e9:Username>
  <e10:Password xmlns:e10="http://docs.oasis-open.org/wss/
   2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" Type
   ="http://docs.oasis-open.org/wss/2004/01/oasis-200401-
   wss-username-token-profile-1.0#PasswordDigest">
   5zjIbmvWxVevGlpqg6Qnt9h8Fmo=</e10:Password>
  <e11:Nonce xmlns:e11="http://docs.oasis-open.org/wss/
   2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
   ikcoiK+AmJvA5UpfxTzG8Q==</e11:Nonce>
  <e12:Created xmlns:e12="http://docs.oasis-open.org/wss/
   2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
   2011-04-25T09:27:48Z</e12:Created>
  </e8:UsernameToken>
 </e7:Security>
 <e13:To t:shallUnderstand="1" 
  xmlns:t="http://www.w3.org/2003/05/soap-envelope" 
  xmlns:e13="http://www.w3.org/2005/08/addressing">
  http://169.254.141.200/onvif/services</e13:To>
 </e2:Header>
 <e1:Body>
 <e14:Subscribe 
  xmlns:e14="http://docs.oasis-open.org/wsn/b-2">
  <e15:ConsumerReference 
  xmlns:e15="http://docs.oasis-open.org/wsn/b-2">
  <e16:Address 
   xmlns:e16="http://www.w3.org/2005/08/addressing">
   http://192.168.10.66/onvif_notify_server</e16:Address>
  </e15:ConsumerReference>
  <e14:InitialTerminationTime>PT10S
  </e14:InitialTerminationTime>
 </e14:Subscribe>
 </e1:Body>
</e1:Envelope>]]>
              </programlisting>
            </para>
          </listitem>
          <listitem>
            <para>
              Namespaces Definition with the Same Prefixes for Different Namespaces Examples
            </para>
            <para>
              Subscribe request example:
              <programlisting>
                <![CDATA[
<p1:Envelope xmlns:p1="http://www.w3.org/2003/05/soap-envelope">
 <p1:Header>
 <p1:Action u:shallUnderstand="1" xmlns:u="http://www.w3.org/
  2003/05/soap-envelope" xmlns:p1="http://www.w3.org/2005/08/
  addressing">http://docs.oasis-open.org/wsn/bw-2/
  NotificationProducer/SubscribeRequest</p1:Action>
 <p1:MessageID xmlns:p1="http://www.w3.org/2005/08/addressing">
  urn:uuid:9f2a12de-3a76-461b-a421-e472517bcc7e</p1:MessageID>
 <p1:ReplyTo xmlns:p1="http://www.w3.org/2005/08/addressing">
  <p1:Address>http://www.w3.org/2005/08/addressing/anonymous
  </p1:Address>
 </p1:ReplyTo>
 <p1:Security xmlns:p1="http://docs.oasis-open.org/wss/2004/
	 01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
  <p1:UsernameToken>
  <p1:Username>user</p1:Username>
  <p1:Password Type="http://docs.oasis-open.org/wss/
   2004/01/oasis-200401-wss-username-token-profile-1.0
   #PasswordDigest">5zjIbmvWxVevGlpqg6Qnt9h8Fmo=
   </p1:Password>
  <p1:Nonce>ikcoiK+AmJvA5UpfxTzG8Q==</p1:Nonce>
  <p1:Created xmlns:p1="http://docs.oasis-open.org/wss/
   2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
   2011-04-25T09:27:48Z</p1:Created>
  </p1:UsernameToken>
 </p1:Security>
 <p1:To t:shallUnderstand="1" 
  xmlns:t="http://www.w3.org/2003/05/soap-envelope" 
  xmlns:p1="http://www.w3.org/2005/08/addressing">
  http://169.254.141.200/onvif/services</p1:To>
 </p1:Header>
 <p1:Body>
 <p1:Subscribe xmlns:p1="http://docs.oasis-open.org/wsn/b-2">
  <p1:ConsumerReference 
  xmlns:p1="http://docs.oasis-open.org/wsn/b-2">
  <p1:Address 
   xmlns:p1="http://www.w3.org/2005/08/addressing">
   http://192.168.10.66/onvif_notify_server</p1:Address>
  </p1:ConsumerReference>
  <p1:InitialTerminationTime xmlns:p1=
  "http://docs.oasis-open.org/wsn/b-2">PT10S
  </p1:InitialTerminationTime>
 </p1:Subscribe>
 </p1:Body>
</p1:Envelope>]]>
              </programlisting>
            </para>
          </listitem>
        </orderedlist>
      </para>
    </section>
    <!--A.17-->
    <section xml:id="Annex_ActionURIsForEventServiceMessages">
      <title>Action URI"s for Event Service Messages </title>
      <para>
        The following Action URI"s shall be used for Event Service:
      </para>
      <para>
        <table>
          <title>Action URI"s for Event Service Messages</title>
          <tgroup cols="2">
            <colspec colwidth="500*" />
            <colspec colwidth="500*" />
            <thead>
              <row>
                <entry>Message</entry>
                <entry>Action URI of WS-Addressing</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Notify</entry>
                <entry>http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify</entry>
              </row>
              <row>
                <entry>SubscribeRequest</entry>
                <entry>http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest</entry>
              </row>
              <row>
                <entry>SubscribeResponse</entry>
                <entry>
                  http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeResponse
                </entry>
              </row>
              <row>
                <entry>RenewRequest</entry>
                <entry>http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest</entry>
              </row>
              <row>
                <entry>RenewResponse</entry>
                <entry>http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewResponse</entry>
              </row>
              <row>
                <entry>UnsubscribeRequest</entry>
                <entry>http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest</entry>
              </row>
              <row>
                <entry>UnsubscribeResponse</entry>
                <entry>http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeResponse</entry>
              </row>
              <row>
                <entry>GetEventPropertiesRequest</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest</entry>
              </row>
              <row>
                <entry>GetEventPropertiesResponse</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesResponse</entry>
              </row>
              <row>
                <entry>CreatePullPointSubscriptionRequest</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest</entry>
              </row>
              <row>
                <entry>CreatePullPointSubscriptionResponse</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionResponse</entry>
              </row>
              <row>
                <entry>PullMessagesRequest</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest</entry>
              </row>
              <row>
                <entry>PullMessagesResponse</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesResponse</entry>
              </row>
              <row>
                <entry>SetSynchronizationPointRequest</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest</entry>
              </row>
              <row>
                <entry>SetSynchronizationPointResponse</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointResponse</entry>
              </row>
              <row>
                <entry>GetServiceCapabilitiesResponse</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilities</entry>
              </row>
              <row>
                <entry>GetServiceCapabilitiesRequest</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest</entry>
              </row>
              <row>
                <entry>SeekRequest</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest</entry>
              </row>
              <row>
                <entry>SeekResponse</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekResponse</entry>
              </row>
              <row>
                <entry>All faults</entry>
                <entry>http://www.w3.org/2005/08/addressing/soap/fault</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </para>
    </section>
    <!--A.19-->
    <section xml:id="Annex_FindBeginOfBufferTime">
      <title>Find begin of buffer time</title>
      <para>
        The following algorithm will be used to get a current begin of buffer time:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with TopicFilter = tns1:EventBuffer/Begin.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message. Validate that correct values for CurrentTime and TerminationTime and SubscriptionReference are returned.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">Seek</emphasis> request (UtcTime = [Current UTC Time], Reverse = true) to start a reverse seek.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify that the DUT sends a <emphasis role="bold">SeekResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify that the received event is event with Topic = tns1:EventBuffer/Begin.

            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> Message.UtcTime from Notification message with Topic = tns1:EventBuffer/Begin will be used as BeginOfBufferTime1.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> if PullMessagesResponse will be empty or there will be no Notification message with Topic = tns1:EventBuffer/Begin, test cases shall be failed.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
      </para>
    </section>
    <!--A.5-->
    <section xml:id="Annex_HelperGetServiceCapabilities" xreflabel="Annex A.5">
      <title>Get Event Service Capabilities</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetServiceCapabilities
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get Event Service Capabilities from the DUT.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is supported by the DUT. 
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The service capabilities (<emphasis role="italic">cap</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis> request.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Capabilities =: <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.6-->
    <section xml:id="Annex_HelperGenerateMessageContentFilter" xreflabel="Annex A.6">
      <title>Generate Message Content Filter</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGenerateMessageContentFilter
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to generate message content filter for subscription.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is supported by the DUT. 
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Notification message (<emphasis role="italic">notificationMessage</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Message content filter (<emphasis role="italic">messageContentFilter</emphasis>), SimpleItem Name <emphasis role="italic">name</emphasis>, SimpleItem Value <emphasis role="italic">value</emphasis>.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              If <emphasis role="italic">notificationMessage</emphasis> does not contain Message.Message.Source item, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">name</emphasis> := <emphasis role="italic">notificationMessage</emphasis>.Message.Message.Source.SimpleItem[0].Name
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">value</emphasis> := <emphasis role="italic">notificationMessage</emphasis>.Message.Message.Source.SimpleItem[0].Value
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">messageContentFilter</emphasis> := "boolean(//tt:SimpleItem[@Name="{0}"and @Value="{1}"])", whre {0} = <emphasis role="italic">name</emphasis> and {1} = <emphasis role="italic">value</emphasis>.
            </para>
          </listitem>


        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.7 Get Event Brokers List-->
    <section xml:id="Annex_HelperGetEventBrokers" xreflabel="Annex A.7">
      <title>Get Event Brokers List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetEventBrokers
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve full list of event broker configurations from the DUT.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is supported by the DUT.  Event Broker feature is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Event Broker Configurations list (<emphasis role="italic">eventBrokerConfigList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetEventBrokers</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Address skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              DUT responds with <emphasis role="bold">GetEventBrokersResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    EventBroker list =: <emphasis role="italic">eventBrokerConfigList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetEventBrokersResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.8 Get Event Broker-->
    <section xml:id="Annex_HelperGetEventBroker" xreflabel="Annex A.8">
      <title>Get Event Broker</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetEventBroker
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve requested event broker configurations from the DUT.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is supported by the DUT.  Event Broker feature is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Event broker address <emphasis role="italic">eventBrokerAddress</emphasis>.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Event Broker Configurations list (<emphasis role="italic">eventBrokerConfigList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetEventBrokers</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              DUT responds with <emphasis role="bold">GetEventBrokersResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    EventBroker list =: <emphasis role="italic">eventBrokerConfigList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">eventBrokerConfigList</emphasis> does not have exactly one item, FAIL the test and restore DUT settings.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetEventBrokersResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.9 Free Space Configuration for Adding of Event Broker-->
    <section xml:id="Annex_HelperFreeSpaceConfigurationForEventBroker" xreflabel="Annex A.9">
      <title>Free Space Configuration for Adding of Event Broker</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperFreeSpaceConfigurationForEventBroker
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to configure the DUT to have free space for adding at least one event broker.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is supported by the DUT.  Event Broker feature is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Max Event Brokers (<emphasis role="italic">maxEventBrokers</emphasis>).<!--, Event broker address <emphasis role="italic">eventBrokerAddress</emphasis>.-->
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Event Broker Config to restore (optional) (<emphasis role="italic">eventBrokerConfigToRestore</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client retrieves event broker configurations list by following the procedure mentioned in <xref linkend="Annex_HelperGetEventBrokers"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">eventBrokerConfigList</emphasis> - Event Broker Configurations list
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <!--<listitem>
            <para>
              If <emphasis role="italic">eventBrokerConfigList</emphasis> contains Event Broker Configuration with Address = <emphasis role="italic">eventBrokerAddress</emphasis>
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client deletes event broker configuration from the DUT to make this address unique by following the procedure mentioned in <xref linkend="Annex_HelperDeleteEventBroker"/> with the following input parameter
                    <itemizedlist>
                      <listitem>
                        <para>
                          in <emphasis role="italic">eventBrokerAddress</emphasis> - Event Broker Address
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set <emphasis role="italic">eventBrokerConfigList</emphasis> := <emphasis role="italic">eventBrokerConfigList</emphasis> - config with <emphasis role="italic">eventBrokerAddress</emphasis>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>-->
          <listitem>
            <para>
              If amount of items in <emphasis role="italic">eventBrokerConfigList</emphasis> &gt;= <emphasis role="italic">maxEventBrokers</emphasis>
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client deletes event broker configuration from the DUT by following the procedure mentioned in <xref linkend="Annex_HelperDeleteEventBroker"/> with the following input parameter
                    <itemizedlist>
                      <listitem>
                        <para>
                          in <emphasis role="italic">eventBrokerConfigList</emphasis>[0].Address - Event Broker Address
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set <emphasis role="italic">eventBrokerConfigToRestore</emphasis> := <emphasis role="italic">eventBrokerConfigList</emphasis>[0]
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.10 Get Event Properties-->
    <section xml:id="Annex_HelperGetEventProperties" xreflabel="Annex A.10">
      <title>Get Event Properties</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetEventProperties
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get event properties from the DUT.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is supported by the DUT. 
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Topic set (<emphasis role="italic">topicSet</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    TopicNamespaceLocation
                  </para>
                </listitem>
                <listitem>
                  <para>
                    FixedTopicSet
                  </para>
                </listitem>
                <listitem>
                  <para>
                    TopicSet =: <emphasis role="italic">topicSet</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    TopicExpressionDialect
                  </para>
                </listitem>
                <listitem>
                  <para>
                    MessageContentFilterDialect
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ProducerPropertiesFilterDialect
                  </para>
                </listitem>
                <listitem>
                  <para>
                    MessageContentSchemaLocation
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.11-->
    <section xml:id="Annex_HelperRetrieveMQTTEventNoFilter" xreflabel="Annex A.11">
      <title>Retrieve MQTT Event (No Filter)</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperRetrieveMQTTEventNoFilter
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to check MQTT PUBLISH sent by the DUT during MQTT subscription without filter and to find event corresponds to requested topic.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Expected QoS value <emphasis role="italic">QoS</emphasis>, expected Topic Prefix <emphasis role="italic">topicPrefix</emphasis>, expected ONVIF topic (<emphasis role="italic">topic</emphasis>), property flag (<emphasis role="italic">isProperty</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Set <emphasis role="italic">localTopic</emphasis> := (<emphasis role="italic">topic</emphasis> - XML namespace prefix for ONVIF topic)
            </para>
          </listitem>
          <listitem xml:id="A.11.WhaitEvent" xreflabel="2">
            <para>
              Until <emphasis role="italic">timeout1</emphasis> timeout expires:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    DUT sends <emphasis role="bold">MQTT PUBLISH</emphasis> message to <emphasis role="italic">eventBrokerAddress</emphasis>.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set <emphasis role="italic">publishMessage</emphasis> := <emphasis role="bold">MQTT PUBLISH</emphasis> message.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client validates <emphasis role="bold">MQTT PUBLISH</emphasis> message by following the procedure mentioned in <xref linkend="Annex_HelperPublishMessageValidation"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          in (<emphasis role="italic">publishMessage</emphasis>) - MQTT PUBLISH message
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in (<emphasis role="italic">QoS</emphasis>) - expected QoS value
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in (<emphasis role="italic">topicPrefix</emphasis>) - expected Topic Prefix value
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          out  (optional) <emphasis role="italic">packetIdentifier</emphasis> Packet Identifier.
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">QoS</emphasis> &gt; 0 MQTT Event Broker Server responds with MQTT messages correspond to QoS value by following the procedure mentioned in <xref linkend="Annex_HelperPublishPacketResponse"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          in <emphasis role="italic">QoS</emphasis> - QoS value
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in <emphasis role="italic">packetIdentifier</emphasis> - PacketIdentifier field value of <emphasis role="bold">MQTT PUBLISH</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>

                <listitem>
                  <para>
                    If PayloadPrefix part of Topic Name in <emphasis role="italic">publishMessage</emphasis> = "onvif-ej" and  LocalTopic part of Topic Name in <emphasis role="italic">publishMessage</emphasis> = <emphasis role="italic">localTopic</emphasis>:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          If <emphasis role="italic">isProperty</emphasis> = "true" and RETAIN flag in the header != 1, FAIL the test and restore the DUT settings.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">mqttEvent</emphasis> := Payload of <emphasis role="bold">MQTT PUBLISH</emphasis>.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">mqttTopicName</emphasis> := value of Topic Name header field.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Go to step <xref linkend="A.11.ValidateEvent"/>.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">timeout1</emphasis> timeout expires, FAIL the test and restore DUT settings.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem xml:id="A.11.ValidateEvent" xreflabel="3">
            <para>
              ONVIF Client validates <emphasis role="italic">mqttEvent</emphasis> by following the procedure mentioned in <xref linkend="Annex_HelperValidateMQTTEvent"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">mqttEvent</emphasis> - MQTT event
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">mqttTopicName</emphasis> - MQTT topic name of event
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">topicPrefix</emphasis> - MQTT Topic prefix
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">topicDescription</emphasis> - topic description
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_TopicNameStructure"/> for instructions on publish topic structure.
      </para>
    </section>
    <!--A.12-->
    <section xml:id="Annex_HelperRetrieveMQTTEventWithFilter" xreflabel="Annex A.12">
      <title>Retrieve MQTT Event (With Filter)</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperRetrieveMQTTEventWithFilter
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to check MQTT PUBLISH sent by the DUT during MQTT subscription with filter and to find event corresponds to requested topic.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Expected QoS value <emphasis role="italic">QoS</emphasis>, expected Topic Prefix <emphasis role="italic">topicPrefix</emphasis>, expected ONVIF topic (<emphasis role="italic">topic</emphasis>), property flag (<emphasis role="italic">isProperty</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Set <emphasis role="italic">localTopic</emphasis> := (<emphasis role="italic">topic</emphasis> - XML namespace prefix for ONVIF topic)
            </para>
          </listitem>
          <listitem xml:id="A.12.WhaitEvent" xreflabel="2">
            <para>
              Until <emphasis role="italic">timeout1</emphasis> timeout expires:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    DUT sends <emphasis role="bold">MQTT PUBLISH</emphasis> message to MQTT Event Broker Address.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set <emphasis role="italic">publishMessage</emphasis> := <emphasis role="bold">MQTT PUBLISH</emphasis> message.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client validates <emphasis role="bold">MQTT PUBLISH</emphasis> message by following the procedure mentioned in <xref linkend="Annex_HelperPublishMessageValidation"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          in (<emphasis role="italic">publishMessage</emphasis>) - MQTT PUBLISH message
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in (<emphasis role="italic">QoS</emphasis>) - expected QoS value
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in (<emphasis role="italic">topicPrefix</emphasis>) - expected Topic Prefix value
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          out  (optional) <emphasis role="italic">packetIdentifier</emphasis> Packet Identifier.
                        </para>
                      </listitem>
                    </itemizedlist>

                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">QoS</emphasis> &gt; 0, MQTT Event Broker Server responds with MQTT messages correspond to QoS value by following the procedure mentioned in <xref linkend="Annex_HelperPublishPacketResponse"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          in <emphasis role="italic">QoS</emphasis> - QoS value
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in <emphasis role="italic">packetIdentifier</emphasis> - PacketIdentifier field value
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>

                <listitem>
                  <para>
                    ONVIF Client checks that <emphasis role="italic">publishMessage</emphasis> corresponds to filter:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="2.5em"?>
                      <listitem>
                        <para>
                          If PayloadPrefix part of Topic Name != "onvif-ej", FAIL the test and restore the DUT settings.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If LocalTopic part of Topic Name != <emphasis role="italic">localTopic</emphasis>, FAIL the test and restore the DUT settings.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">isProperty</emphasis> = "true" and RETAIN flag in the header != 1, FAIL the test and restore the DUT settings.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">mqttEvent</emphasis> := Payload of <emphasis role="italic">publishMessage</emphasis>.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">mqttTopicName</emphasis> := value of Topic Name header field of <emphasis role="italic">publishMessage</emphasis>.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Go to step <xref linkend="A.12.ValidateEvent"/>.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">timeout1</emphasis> timeout expires, FAIL the test and restore DUT settings.
                  </para>
                </listitem>

              </orderedlist>
            </para>
          </listitem>
          <listitem xml:id="A.12.ValidateEvent" xreflabel="3">
            <para>
              ONVIF Client validates <emphasis role="italic">mqttEvent</emphasis> by following the procedure mentioned in <xref linkend="Annex_HelperValidateMQTTEvent"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">mqttEvent</emphasis> - MQTT event
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">mqttTopicName</emphasis> - MQTT topic name of event
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">topicPrefix</emphasis> - MQTT Topic prefix
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">topicDescription</emphasis> - topic description
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send any <emphasis role="bold">MQTT PUBLISH</emphasis> during <emphasis role="italic">timeout1</emphasis> timeout.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> See <xref linkend="Annex_TopicNameStructure"/> for instructions on publish topic structure.
      </para>
    </section>
    <!--A.13 MQTT Event Validation-->
    <section xml:id="Annex_HelperValidateMQTTEvent" xreflabel="Annex A.13">
      <title>MQTT Event Validation</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperValidateMQTTEvent
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to validate MQTT event.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis>
        MQTT event (<emphasis role="italic">mqttEvent</emphasis>),
        MQTT Topic Name of event <emphasis role="italic">mqttTopicName</emphasis>,
        MQTT Topic prefix <emphasis role="italic">topicPrefix</emphasis>,
        topic description <emphasis role="italic">topicDescription</emphasis>.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              If <emphasis role="italic">mqttEvent</emphasis> does not contain UtcTime element with value type corrsponds to xs:dateTime, FAIL the test and restore DUT settings.
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">expectedMQTTtopic</emphasis> := <emphasis role="italic">topicPrefix</emphasis> + "onvif-ej" + (topic of <emphasis role="italic">topicDescription</emphasis> - XML namespace prefix for ONVIF topic)
            </para>
          </listitem>
          <listitem>
            <para>
              For each Source.SimpleItemDescription (<emphasis role="italic">sourceSimpleItemDescription</emphasis>) in <emphasis role="italic">topicDescription</emphasis>:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">mqttEvent</emphasis> does not contain element with name = <emphasis role="italic">sourceSimpleItemDescription</emphasis>.@Name under Source (save its value as <emphasis role="italic">sourceSimpleItemValue</emphasis>), FAIL the test and restore DUT settings.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set <emphasis role="italic">expectedMQTTtopic</emphasis> := <emphasis role="italic">expectedMQTTtopic</emphasis> + <emphasis role="italic">sourceSimpleItemValue</emphasis>.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For each Key.SimpleItemDescription (<emphasis role="italic">keySimpleItemDescription</emphasis>) in <emphasis role="italic">topicDescription</emphasis>:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    If <emphasis role="italic">mqttEvent</emphasis> does not contain element with name = <emphasis role="italic">keySimpleItemDescription</emphasis>.@Name under Key (save its value as <emphasis role="italic">keySimpleItemValue</emphasis>), FAIL the test and restore DUT settings.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set <emphasis role="italic">expectedMQTTtopic</emphasis> := <emphasis role="italic">expectedMQTTtopic</emphasis> + <emphasis role="italic">keySimpleItemValue</emphasis>.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <!--<para>
              <emphasis role="bold">TODO: Will be updated when requirement is changed (see #2006)</emphasis>
            </para>-->
            <para>
              If <emphasis role="italic">mqttTopicName</emphasis> != <emphasis role="italic">expectedMQTTtopic</emphasis>, FAIL test test and restore DUT settings.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.14-->
    <section xml:id="Annex_HelperCertificateUpload" xreflabel="Annex A.14">
      <title>Certificate Upload</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCertificateUpload
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to upload a certificate to the DUT keystore.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Security Configuration Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Security Configuration Service capabilities (<emphasis role="italic">cap</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Certificate ID<emphasis role="italic">certificateID</emphasis>.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>

          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.KeystoreCapabilities.RSAKeyPairGeneration = true AND <emphasis role="italic">cap</emphasis>.KeystoreCapabilities.PKCS10ExternalCertificationWithRSA = true:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client uploads CA sertificate to the DUT keystore by following the procedure mentioned in <xref linkend="Annex_HelperAddServerCertAssign_CACertificate"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          out (<emphasis role="italic">certID</emphasis>) - certificate
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>

              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ELSE If <emphasis role="italic">cap</emphasis>.KeystoreCapabilities.PKCS8RSAKeyPairUpload = true:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client uploads CA sertificate to the DUT keystore by following the procedure mentioned in <xref linkend="Annex_HelperAddCACertificateWithUploadKeyPairInPKCS8"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          out (<emphasis role="italic">certID</emphasis>) - certificate
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>

              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ELSE If <emphasis role="italic">cap</emphasis>.KeystoreCapabilities.PKCS12CertificateWithRSAPrivateKeyUpload = true:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client uploads CA sertificate to the DUT keystore by following the procedure mentioned in <xref linkend="Annex_HelperUploadCertificateWithPrivateKeyInPKCS12"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          out (<emphasis role="italic">certID</emphasis>) - certificate
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>

              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If no <emphasis role="italic">certID</emphasis> was received, FAIL the test and restore the DUT settings.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.15 = A.10 in Security test spec-->
    <section xml:id="Annex_HelperGetSecurityConfigurationServiceCapabilities" xreflabel="Annex A.15">
      <title>Get Security Configuration Service Capabilities</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetSecurityConfigurationServiceCapabilities
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get service capabilities.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Security Configuration Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The security configuration service capabilities (<emphasis role="italic">cap</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Capabilities =: <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>


        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
            </para>
          </listitem>

        </itemizedlist>
      </para>
    </section>
    <!--A.16 = begining of Annex A.17 from RTSS Using Media2 test spec-->
    <section xml:id="Annex_HelperAddServerCertAssign_CACertificate" xreflabel="Annex A.16">
      <title>Add CA certificate and RSA key pair</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperAddServerCertAssign_CACertificate
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper Procedure to configure HTTPS using Security Configuration Service.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Security Configuration Service is received from the DUT. TLS Server is supported by the DUT.
        Create PCKS#10 supported by the DUT. RSA key pair generation is supported by the DUT.
        The DUT shall have enough free storage capacity for one additional RSA key pair.
        The DUT shall have enough free storage capacity for one additional certificate.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> certificate (<emphasis role="italic">certID</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client creates an RSA key pair by following the procedure mentioned in <xref linkend="Annex_HelperCreateRSAKeyPair"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">keyID</emphasis> - RSA key pair
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreatePKCS10CSR</emphasis> with parameter
              <itemizedlist>
                <listitem>
                  <para>
                    Subject := subject (see <xref linkend="Annex_HelperSubjectForServerCertificate"/>)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    KeyID := <emphasis role="italic">keyID</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    CSRAttribute skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SignatureAlgorithm.algorithm := 1.2.840.113549.1.1.5 (OID of SHA-1 with RSA Encryption algorithm)
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreatePKCS10CSRResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    PKCS10CSR =: <emphasis role="italic">pkcs10</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client creates an CA certificate by following the procedure mentioned in <xref linkend="Annex_HelperCreateCACertificate"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">CAcert</emphasis> - CA certificate
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">privateKey</emphasis> - private key for the CA certificate
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">publicKey</emphasis> - public key for the CA certificate
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Create an [RFC5280] compliant X.509 certificate (<emphasis role="italic">cert</emphasis>) from the PKCS#10 request (<emphasis role="italic">pkcs10</emphasis>) with the following properties:
              <itemizedlist>
                <listitem>
                  <para>
                    version:= v3
                  </para>
                </listitem>
                <listitem>
                  <para>
                    signature := sha1-WithRSAEncryption
                  </para>
                </listitem>
                <listitem>
                  <para>
                    subject := subject from the PKCS#10 request (<emphasis role="italic">pkcs10</emphasis>)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    subject public key := subject public key in the PKCS#10 request (<emphasis role="italic">pkcs10</emphasis>)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    validity := not before 19700101000000Z and not after 99991231235959Z
                  </para>
                </listitem>
                <listitem>
                  <para>
                    certificate signature is generated with the private key (<emphasis role="italic">privateKey</emphasis>) in the CA certificate (<emphasis role="italic">CAcert</emphasis>)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    certificate extensions := the X.509v3 extensions from the PKCS#10 request (<emphasis role="italic">pkcs10</emphasis>)
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">UploadCertificate</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Certificate := <emphasis role="italic">cert</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Alias := "ONVIF_Test1"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    PrivateKeyRequired := true
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with an <emphasis role="bold">UploadCertificateResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertificateID =: <emphasis role="italic">certID</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    KeyID =: <emphasis role="italic">keyID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreatePKCS10CSRResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">UploadCertificateResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.17 = Annex A.19 from RTSS Using Media2 test spec -->
    <section xml:id="Annex_HelperSubjectForServerCertificate" xreflabel="Annex A.17">
      <title>Subject for a server certificate</title>
      <para>
        Use the following subject for test cases:
        <itemizedlist>
          <listitem>
            <para>
              Subject.Country := "US"
            </para>
          </listitem>
          <listitem>
            <para>
              Subject.CommonName := DUT IP-address
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.18 = A.4 from Security test spec-->
    <section xml:id="Annex_HelperCreateCACertificate" xreflabel="Annex A.18">
      <title>Provide CA certificate</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreateCACertificate
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create an X.509 CA certificate.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> The subject (<emphasis role="italic">subject</emphasis>) of certificate(optional input parameter, could be skipped).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> An X.509 CA certificate (<emphasis role="italic">CAcert</emphasis>) that is compliant to [RFC5280] and a corresponding private key (<emphasis role="italic">privateKey</emphasis>) and public key (<emphasis role="italic">publicKey</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client determines the length of the key to generate by following the procedure mentioned in <xref linkend="Annex_HelperDetermineRSAKeyLength"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">length</emphasis> -the length of the key to generate
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">subject</emphasis> is skipped set:
              <itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="italic">subject</emphasis> := "CN=ONVIF TT,C=US"

                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client creates an X.509 self-signed CA certificate that is compliant to [RFC5280] and has the following properties:
              <itemizedlist>
                <listitem>
                  <para>
                    version := v3
                  </para>
                </listitem>
                <listitem>
                  <para>
                    signature := sha1-WithRSAEncryption
                  </para>
                </listitem>
                <listitem>
                  <para>
                    validity := not before 19700101000000Z and not after 99991231235959Z
                  </para>
                </listitem>
                <listitem>
                  <para>
                    subject := <emphasis role="italic">subject</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    length of the key to be used := <emphasis role="italic">length</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> ONVIF Client may return the same CA certificate in subsequent invocations of this procedure for the same subject.
      </para>
    </section>
    <!--A.19 = Annex A.6 from Security test spec -->
    <section xml:id="Annex_HelperDetermineRSAKeyLength" xreflabel="Annex A.19">
      <title>Determine RSA key length</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDetermineRSAKeyLength
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to determine the RSA key length to use during testing.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Security Configuration Service is received from the DUT. On-board RSA key pair generation is supported by the DUT as indicated by the RSAKeyPairGeneration capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The smallest supported RSA key length (<emphasis role="italic">keyLength</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client gets the Security Configuration service capabilities by the following the procedure mentioned in <xref linkend="Annex_HelperGetSecurityConfigurationServiceCapabilities"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client loops through the supported Key length list (<emphasis role="italic">cap</emphasis>.RSAKeyLengths) and selects the smallest supported key length (<emphasis role="italic">keyLength</emphasis>).
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              No supported key length was found at step 2.
            </para>
          </listitem>

        </itemizedlist>
      </para>
    </section>
    <!--A.20 = Annex A.7 from Security test spec -->
    <section xml:id="Annex_HelperCreateRSAKeyPair" xreflabel="Annex A.20">
      <title>Create an RSA key pair</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreateRSAKeyPair
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create an RSA key pair.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Security Configuration Service is received from the DUT. RSA key pair generation is supported by the DUT.
        The DUT shall have enough free storage capacity for one additional RSA key pair.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The identifier of the new and RSA key pair (<emphasis role="italic">keyID</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>

          <listitem>
            <para>
              ONVIF Client gets the Security Configuration service capabilities by the following the procedure mentioned in <xref linkend="Annex_HelperGetSecurityConfigurationServiceCapabilities"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">keyLength</emphasis> := the smallest supported key length at <emphasis role="italic">cap</emphasis>.RSAKeyLengths.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreateRSAKeyPair</emphasis> with parameter
              <itemizedlist>
                <listitem>
                  <para>
                    KeyLength := <emphasis role="italic">length</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreateRSAKeyPairResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    KeyID =: <emphasis role="italic">keyID</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    EstimatedCreationTime =: <emphasis role="italic">duration</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperCreateRSAKeyPair.6">
            <para>
              Until <emphasis role="italic">duration</emphasis> + <emphasis role="italic">operationDelay</emphasis> expires repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for 5 seconds.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">GetKeyStatus</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          KeyID := <emphasis role="italic">keyID</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetKeyStatusResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          KeyStatus =: <emphasis role="italic">keyStatus</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">keyStatus</emphasis> is equal to "ok", skip other steps of the procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">keyStatus</emphasis> is equal to "corrupt", FAIL the test and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">duration</emphasis> + <emphasis role="italic">operationDelay</emphasis> expires for step <xref linkend="Annex_HelperCreateRSAKeyPair.6"/> and the last <emphasis role="italic">keyStatus</emphasis> is other than "ok", FAIL the test and skip other steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetKeyStatusResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreateRSAKeyPairResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.21-->
    <section xml:id="Annex_HelperAddCACertificateWithUploadKeyPairInPKCS8" xreflabel="Annex A.21">
      <title>Add CA certificate and RSA key pair</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperAddCACertificateWithUploadKeyPairInPKCS8
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper Procedure to upload key pair in PKCS8 and upload sertificate.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Security Configuration Service is received from the DUT. TLS Server is supported by the DUT.
        Create PCKS#10 supported by the DUT.
        The DUT shall have enough free storage capacity for one additional RSA key pair.
        The DUT shall have enough free storage capacity for one additional certificate.
        Current time of the DUT shall be at least Jan 01, 1970.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> certificate (<emphasis role="italic">certID</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client on the Broker Server generates a PKCS#8 data structure with new RSA key pair by following the procedure mentioned in <xref linkend="Annex_HelperCreatePKCS8WithNewKeyPair"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">keyPairInPKCS8</emphasis> - PKCS#8 data structure with new RSA key pair
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">publicKey</emphasis> - pubic key
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">privateKey</emphasis> - private key
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">UploadKeyPairInPKCS8</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    KeyPair := <emphasis role="italic">keyPairInPKCS8</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Alias := "ONVIF_Test"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    EncryptionPassphraseID skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">UploadKeyPairInPKCS8Response</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    KeyID =: <emphasis role="italic">keyID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>

          <listitem>
            <para>
              ONVIF Client on the Broker Server creates an CA certificate by following the procedure mentioned in <xref linkend="Annex_HelperCreateCACertificate"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">CAcert</emphasis> - CA certificate
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">privateKey</emphasis> - private key for the CA certificate
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">publicKey</emphasis> - public key for the CA certificate
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Create an [RFC5280] compliant X.509 certificate (<emphasis role="italic">cert</emphasis>) from the PKCS#10 request (<emphasis role="italic">pkcs10</emphasis>) with the following properties:
              <itemizedlist>
                <listitem>
                  <para>
                    version:= v3
                  </para>
                </listitem>
                <listitem>
                  <para>
                    signature := sha1-WithRSAEncryption
                  </para>
                </listitem>
                <listitem>
                  <para>
                    subject := subject from the PKCS#10 request (<emphasis role="italic">pkcs10</emphasis>)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    subject public key := subject public key in the PKCS#10 request (<emphasis role="italic">pkcs10</emphasis>)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    validity := not before 19700101000000Z and not after 99991231235959Z
                  </para>
                </listitem>
                <listitem>
                  <para>
                    certificate signature is generated with the private key (<emphasis role="italic">privateKey</emphasis>) in the CA certificate (<emphasis role="italic">CAcert</emphasis>)
                  </para>
                </listitem>
                <listitem>
                  <para>
                    certificate extensions := the X.509v3 extensions from the PKCS#10 request (<emphasis role="italic">pkcs10</emphasis>)
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">UploadCertificate</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Certificate := <emphasis role="italic">cert</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Alias := "ONVIF_Test1"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    PrivateKeyRequired := true
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with an <emphasis role="bold">UploadCertificateResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertificateID =: <emphasis role="italic">certID</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    KeyID =: <emphasis role="italic">keyID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreatePKCS10CSRResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">UploadCertificateResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.22 = Annex A.25 from Security test spec -->
    <section xml:id="Annex_HelperCreatePKCS8WithNewKeyPair" xreflabel="Annex A.22">
      <title>Creating a PKCS#8 data structure with new public key and private key without passphrase</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreatePKCS8WithNewKeyPair
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create a PKCS#8 data structure with new public key and private key without passphrase.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> A [RFC 5958, RFC 5959] compliant PKCS#8 data structure (<emphasis role="italic">keyPairInPKCS8</emphasis>) with new public key (<emphasis role="italic">publicKey</emphasis>) and private key (<emphasis role="italic">privateKey</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client on the Broker Server generates RSA key pair with public key and private key by following the procedure mentioned in <xref linkend="Annex_HelperGenerateRSAKeyPair"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">publicKey</emphasis> - public key
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">privateKey</emphasis> - private key
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client generates a PKCS#8 data structure with existing pubic key and private key by following the procedure mentioned in <xref linkend="Annex_HelperCreatePKCS8WithExistingKeyPair"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">publicKey</emphasis> - public key
                  </para>
                </listitem>
                <listitem>
                  <para>
                    in <emphasis role="italic">privateKey</emphasis> - private key
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">keyPairInPKCS8</emphasis> - PKCS#8 data structure
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>

    </section>
    <!--A.23 = Annex A.27 from Security test spec -->
    <section xml:id="Annex_HelperCreatePKCS8WithExistingKeyPair" xreflabel="Annex A.23">
      <title>Creating a PKCS#8 data structure with existing public key and private key without passphrase</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreatePKCS8WithExistingKeyPair
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create a PKCS#8 data structure with existing public key and private key without passphrase.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> A [RFC 3447] compliant RSA key pair with public key (<emphasis role="italic">publicKey</emphasis>) and private key (<emphasis role="italic">privateKey</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> A [RFC 5958, RFC 5959] compliant PKCS#8 data structure (<emphasis role="italic">keyPairInPKCS8</emphasis>) for provided RSA key pair.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Create an [RFC 5958, RFC 5959] compliant PKCS#8 data structure (<emphasis role="italic">keyPairInPKCS8</emphasis>) with the following properties:
              <itemizedlist>
                <listitem>
                  <para>
                    PrivateKeyInfo
                    <itemizedlist>
                      <listitem>
                        <para>
                          version:= v2
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          privateKeyAlgorithm := rsaEncryption
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          privateKey := <emphasis role="italic">privateKey</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          attributes
                          <itemizedlist>
                            <listitem>
                              <para>
                                publicKey := <emphasis role="italic">publicKey</emphasis>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>

        </orderedlist>

      </para>

    </section>
    <!--A.24 = Annex A.26 from Security test spec -->
    <section xml:id="Annex_HelperGenerateRSAKeyPair" xreflabel="Annex A.24">
      <title>Generating an RSA key pair</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGenerateRSAKeyPair
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to generate an RSA key pair.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> A [RFC 3447] compliant RSA key pair with new public key (<emphasis role="italic">publicKey</emphasis>) and private key (<emphasis role="italic">privateKey</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client determines the length of the key to generate by following the procedure mentioned in <xref linkend="Annex_HelperDetermineRSAKeyLength"/> with the following input and output parameters
              <itemizedlist>
                <listitem>
                  <para>
                    out <emphasis role="italic">length</emphasis> - the length of the key to generate
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Create an [RFC 3447] compliant RSA key pair with new public key with the following properties:
              <itemizedlist>
                <listitem>
                  <para>
                    KeyLength := <emphasis role="italic">length</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">publicKey</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">privateKey</emphasis>
                  </para>
                </listitem>
              </itemizedlist>

            </para>
          </listitem>
        </orderedlist>
      </para>
    </section>
    <!--A.25-->
    <section xml:id="Annex_HelperUploadCertificateWithPrivateKeyInPKCS12" xreflabel="Annex A.25">
      <title>Upload Certificate With Private Key In PKCS12</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperUploadCertificateWithPrivateKeyInPKCS12
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to generate an certificate on Event Broker and upload it on the DUT.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Certificate <emphasis role="italic">certID</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client creates a CA certificate (out <emphasis role="italic">CAcert</emphasis>) and a corresponding public key (out <emphasis role="italic">publicKey</emphasis>) in the certificate along with the corresponding private key (out <emphasis role="italic">privateKey</emphasis>) in the form of a PKCS#12 file (out <emphasis role="italic">PKCS12data</emphasis>) and uploads it with certification path ID (out <emphasis role="italic">certificationPathID</emphasis>) and key pair ID (out <emphasis role="italic">keyID</emphasis>) by following the procedure described in <xref linkend="Annex_HelperUploadPKCS12"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetCertificationPath</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertificationPathID =: <emphasis role="italic">certificationPathID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">GetCertificationPathResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertificationPath.CertificateID[0] =: <emphasis role="italic">certID</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    CertificationPath.Alias
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
    </section>
    <!--A.26 = Annex A.30 from Security test spec-->
    <section xml:id="Annex_HelperCreatePKCS12WithNewCACert" xreflabel="Annex A.26">
      <title>Creating a PKCS#12 data structure with new CA-signed certificate signed by new public key and private key without passphrase</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreatePKCS12WithNewCACert
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create CA certificate and a corresponding public key in the certificate along with the corresponding private key in the form of a PKCS#12 file.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> The subject (<emphasis role="italic">subject</emphasis>) of certificate (optional input parameter, could be skipped).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> A [PKCS#12] compliant PKCS#12 data structure (<emphasis role="italic">PKCS12data</emphasis>) with CA certificate (<emphasis role="italic">CAcert</emphasis>) and a corresponding public key (<emphasis role="italic">publicKey</emphasis>) in the certificate along with the corresponding private key (<emphasis role="italic">privateKey</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              If <emphasis role="italic">subject</emphasis> is skipped, set:
              <itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="italic">subject</emphasis> := "CN=ONVIF TT,C=US"
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client on the Event Broker Server creates a CA certificate (out <emphasis role="italic">CAcert</emphasis>) with subject (in <emphasis role="italic">subject</emphasis>) and a corresponding public key (out <emphasis role="italic">publicKey</emphasis>) in the certificate along with the corresponding private key (out <emphasis role="italic">privateKey</emphasis>) by following the procedure described in <xref linkend="Annex_HelperCreateCACertificate"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client on the Event Broker Server creates a CA certificate (in <emphasis role="italic">CAcert</emphasis>) and a corresponding public key (in <emphasis role="italic">publicKey</emphasis>) in the certificate along with the corresponding private key (in <emphasis role="italic">privateKey</emphasis>) in the form of a PKCS#12 file (out <emphasis role="italic">PKCS12data</emphasis>) by following the procedure described in <xref linkend="Annex_HelperCreatePKCS12WithExistingCACert"/>.
            </para>
          </listitem>
        </orderedlist>
      </para>
    </section>
    <!--A.27 = Annex A.32 from Security test spec-->
    <section xml:id="Annex_HelperCreatePKCS12WithExistingCACert" xreflabel="Annex A.27">
      <title>Creating a PKCS#12 data structure with existing CA-signed certificate and a corresponding public key and private key without passphrase</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreatePKCS12WithExistingCACert
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create a PKCS#12 data structure with existing CA-signed certificate and a corresponding public key and private key without passphrase.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> An X.509 CA certificate (<emphasis role="italic">CAcert</emphasis>) that is compliant to [RFC 5280] and a corresponding private key (<emphasis role="italic">privateKey</emphasis>) and public key (<emphasis role="italic">publicKey</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> A [PKCS#12] compliant PKCS#12 data structure (<emphasis role="italic">PKCS12data</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Use the current PrivateKeyInfo data:
              <itemizedlist>
                <listitem>
                  <para>
                    PrivateKeyInfo
                    <itemizedlist>
                      <listitem>
                        <para>
                          version := v2
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          privateKeyAlgorithm := rsaEncryption
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          privateKey := <emphasis role="italic">privateKey</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          publicKey := <emphasis role="italic">publicKey</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Create an [PKCS#12] compliant PKCS#12 data structure <emphasis role="italic">PKCS12data</emphasis>) with the following properties:
              <itemizedlist>
                <listitem>
                  <para>
                    EncryptedPrivateKeyInfo
                    <itemizedlist>
                      <listitem>
                        <para>
                          PrivateKeyInfo
                          <itemizedlist>
                            <listitem>
                              <para>
                                version := v3
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                authSafe
                                <itemizedlist>
                                  <listitem>
                                    <para>
                                      SafeBag
                                      <itemizedlist>
                                        <listitem>
                                          <para>
                                            Pkcs-12-KeyBag := PrivateKeyInfo
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            PKCS12AttrSet
                                            <itemizedlist>
                                              <listitem>
                                                <para>
                                                  friendlyName := "testAlias"
                                                </para>
                                              </listitem>
                                            </itemizedlist>
                                          </para>
                                        </listitem>
                                      </itemizedlist>
                                    </para>
                                  </listitem>
                                  <listitem>
                                    <para>
                                      SafeBag
                                      <itemizedlist>
                                        <listitem>
                                          <para>
                                            Pkcs-12-CertBag := <emphasis role="italic">CAcert</emphasis>
                                          </para>
                                        </listitem>
                                        <listitem>
                                          <para>
                                            PKCS12AttrSet
                                            <itemizedlist>
                                              <listitem>
                                                <para>
                                                  friendlyName := "testAlias"
                                                </para>
                                              </listitem>
                                            </itemizedlist>
                                          </para>
                                        </listitem>
                                      </itemizedlist>
                                    </para>
                                  </listitem>
                                </itemizedlist>
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
    </section>
    <!--A.28 = Annex A.36 from Security test spec-->
    <section xml:id="Annex_HelperUploadPKCS12" xreflabel="Annex A.28">
      <title>Upload PKCS#12 – no key pair exists</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperUploadPKCS12
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create and upload PKCS#12 data structure with new public key and private key.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Security Configuration Service is received from the DUT. Certificate along with an RSA private key in a PKCS#12 data structure upload is supported by the DUT as indicated by the PKCS12CertificateWithRSAPrivateKeyUpload capability. The DUT shall have enough free storage capacity for one additional RSA key pair. The DUT shall have enough free storage capacity for one additional certificate. The DUT shall have enough free storage capacity for one additional certification path.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> A [PKCS#12] compliant PKCS#12 data structure (<emphasis role="italic">PKCS12data</emphasis>) with CA certificate (<emphasis role="italic">CAcert</emphasis>) and a corresponding public key (<emphasis role="italic">publicKey</emphasis>) in the certificate along with the corresponding private key (<emphasis role="italic">privateKey</emphasis>) and certification path ID (<emphasis role="italic">certificationPathID</emphasis>) with corresponding key pair ID (<emphasis role="italic">keyID</emphasis>) for uploaded PKCS#12 data structure.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client creates a CA certificate (out <emphasis role="italic">CAcert</emphasis>) and a corresponding public key (out <emphasis role="italic">publicKey</emphasis>) in the certificate along with the corresponding private key (out <emphasis role="italic">privateKey</emphasis>) in the form of a PKCS#12 file (out <emphasis role="italic">PKCS12data</emphasis>) by following the procedure described in <xref linkend="Annex_HelperCreatePKCS12WithNewCACert"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">UploadCertificateWithPrivateKeyInPKCS12</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertWithPrivateKey := <emphasis role="italic">PKCS12data</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    CertificationPathAlias := "ONVIF_Certification_Path_Test"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    KeyAlias := "ONVIF_Key_Test"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    IgnoreAdditionalCertificates := false
                  </para>
                </listitem>
                <listitem>
                  <para>
                    IntegrityPassphraseID skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    EncryptionPassphraseID skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">UploadCertificateWithPrivateKeyInPKCS12Response</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    CertificationPathID =: <emphasis role="italic">certificationPathID</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    KeyID =: <emphasis role="italic">keyID</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">UploadCertificateWithPrivateKeyInPKCS12Response</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.29-->
    <section xml:id="Annex_HelperPublishPacketResponse" xreflabel="Annex A.29">
      <title>Publish Packet Response</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPublishPacketResponse
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to finalize publish procedure on the Broker Server.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> QoS value (<emphasis role="italic">QoS</emphasis>), PacketIdentifier field value  (<emphasis role="italic">packetIdentifier</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              If <emphasis role="italic">QoS</emphasis> = 1:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    MQTT Event Broker Server responds with <emphasis role="bold">MQTT PUBACK</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          PacketIdentifier header := <emphasis role="italic">packetIdentifier</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>


              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">QoS</emphasis> = 2:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    MQTT Event Broker Server sends <emphasis role="bold">MQTT PUBREC</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          PacketIdentifier header := <emphasis role="italic">packetIdentifier</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">MQTT PUBREL</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          PacketIdentifier header := <emphasis role="italic">packetIdentifier</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    MQTT Event Broker Server sends <emphasis role="bold">MQTT PUBCOMP</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          PacketIdentifier header := <emphasis role="italic">packetIdentifier</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>

              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">MQTT PUBREL</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.30-->
    <section xml:id="Annex_HelperPublishMessageValidation" xreflabel="Annex A.30">
      <title>Publish Message Validation</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPublishMessageValidation
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure validate MQTT PUBLISH sent by the DUT on the Event Broker Server.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> MQTT PUBLISH message  (<emphasis role="italic">publishMessage</emphasis>), expected QoS value (<emphasis role="italic">QoS</emphasis>), expected Topic Prefix (<emphasis role="italic">topicPrefix</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Packet Identifier (optional) (<emphasis role="italic">packetIdentifier</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              If QoS header of <emphasis role="bold">publishMessage</emphasis> != <emphasis role="italic">QoS</emphasis>, FAIL the test and restore the DUT settings.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">QoS</emphasis> = 0 and <emphasis role="bold">publishMessage</emphasis> header contains PacketIdentifier field, FAIL the test and restore the DUT settings.
            </para>
          </listitem>
          <listitem>
            <para>
              If (<emphasis role="italic">QoS</emphasis> = 1 or <emphasis role="italic">QoS</emphasis>= 2) and <emphasis role="bold">publishMessage</emphasis> header does not contain PacketIdentifier field (<emphasis role="italic">packetIdentifier</emphasis>), FAIL the test and restore the DUT settings.
            </para>
          </listitem>
          <listitem>
            <para>
              If TopicPrefix part of Topic Name in <emphasis role="italic">publishMessage</emphasis> != <emphasis role="italic">topicPrefix</emphasis>, FAIL the test and restore the DUT settings.
            </para>
          </listitem>
          <listitem>
            <para>
              Return <emphasis role="italic">packetIdentifier</emphasis> if any.
            </para>
          </listitem>


        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.31-->
    <section xml:id="Annex_TopicNameStructure" xreflabel="Annex A.31">
      <title>Topic Name Structure</title>
      <para>Published Topic Name of ONVIF event has the following structure: </para>
      <itemizedlist>
        <listitem>
          <para>&lt;TopicPrefix&gt;/&lt;PayloadPrefix&gt;/&lt;LocalTopic&gt;[/&lt;Source&gt;[/&lt;Key&gt;]], where:</para>
          <itemizedlist>
            <listitem>
              <para>
                TopicPrefix - value configured through the AddEventBroker command
              </para>
            </listitem>
            <listitem>
              <para>
                PayloadPrefix = "onvif-ej"
              </para>
            </listitem>
            <listitem>
              <para>
                LocalTopic = ONVIF topic with namespace prefix excluded
              </para>
            </listitem>
            <listitem>
              <para>
                Source = value of Source.SimpleItem taken from the payload
              </para>
            </listitem>
            <listitem>
              <para>
                Key = value of Key.SimpleItem taken from the payload
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>Example of topic transformation from ONVIF topic format to MQTT ONVIF topic format:</para>
          <itemizedlist>
            <listitem>
              <para>
                Original ONVIF Topic:
                <itemizedlist>
                  <listitem>
                    <para>
                      tns1:/RuleEngine/Recognition/Face
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Reformatted MQTT ONVIF topic:
                <itemizedlist>
                  <listitem>
                    <para>
                      TestPrefix/onvif-ej/RuleEngine/Recognition/Face/0/1
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </section>
    <!--A.32-->
    <section xml:id="Annex_HelperDeleteEventBroker" xreflabel="Annex A.32">
      <title>Delete Event Broker</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteEventBroker
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete event broker configuration from the DUT.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is supported by the DUT.  Event Broker feature is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Event broker address <emphasis role="italic">eventBrokerAddress</emphasis>.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">DeleteEventBroker</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Address := <emphasis role="italic">eventBrokerAddress</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              DUT responds with <emphasis role="bold">DeleteEventBrokerResponse</emphasis> message.
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">DeleteEventBrokerResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>

  </appendix>
</book>