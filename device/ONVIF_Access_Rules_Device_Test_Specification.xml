<?xml version="1.0" encoding="UTF-8"?>
<!--For PDF version (standard)-->
<!-- <?xml-stylesheet href="docbook/xsl/fo/docbook.xsl" type="text/xsl" ?>-->
<!--For PDF version-->
<!-- <?xml-stylesheet href="ONVIF-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<!--For online version-->
<?xml-stylesheet href="docbook-css/docbook.xsl" type="text/xsl" ?>
<!--For PDF version - New ONVIF-->
<!--<?xml-stylesheet href="../ONVIFNew-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xml="http://www.w3.org/XML/1998/namespace" xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd" version="0.1" xml:id="ONVIF_Profile_Imaging_Client_TS">
  <info>
    <orgname>
      <phrase>
        <trademark class="registered">ONVIF</trademark>
      </phrase>
    </orgname>
    <title>Access Rules Device Test Specification</title>
    <subtitle>Version 20.06</subtitle>
    <date>June 2020</date>
    <copyright>
      <year>2020</year>
      <holder>ONVIF, Inc. All rights reserved.</holder>
    </copyright>
    <address>
      <uri>www.onvif.org</uri>
    </address>
    <legalnotice role="notices">
      <para>
        Recipients of this document may copy, distribute, publish, or display this
        document so long as this copyright notice, license and disclaimer are retained with
        all copies of the document. No license is granted to modify this document.
      </para>
      <para>
        THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR
        AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
        NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
        NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY
        PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS,
        COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
      </para>
      <para>
        IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR
        ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES,
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR
        NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE
        POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT. THE
        FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR
        LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE
        AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE
        CORPORATION.
      </para>
    </legalnotice>
    <revhistory>
      <revision>
        <revnumber>15.06</revnumber>
        <date></date>
        <revdescription>
          <para>
            First issue of Access Rules Test Specification
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Jan, 2017</date>
        <revdescription>
          <para>
            ACCESS_RULES-3-1-11 CREATE ACCESS PROFILE - NOT EMPTY ACCESS PROFILE TOKEN was updated according ticket #1124.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Jul 14, 2017</date>
        <revdescription>
          <para>
            ACCESS_RULES-3-1-5 CREATE ACCESS PROFILE was updated according ticket # 1365.
          </para>
          <para>
            The following annexes were added according to #1365:
          </para>
          <para>
            A.12 Get service capabilities (Schedule)
          </para>
          <para>
            A.13 Generate UID value for iCalendar
          </para>
          <para>
            A.14 Generate iCalendar value for Schedule
          </para>
          <para>
            A.15 Create special day group
          </para>
          <para>
            A.16 Create Schedule
          </para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Jul 20, 2017</date>
        <revdescription>
          <para>
            ACCESS_RULES-3-1-5 CREATE ACCESS PROFILE was updated according ticket # 1365.
          </para>
          <para>
            The following annexes were added according to #1365:
          </para>
          <para>
            A.17 Delete schedule
          </para>
          <para>
            A.18 Delete special day group

          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Aug 16, 2017</date>
        <revdescription>
          <para>
            Current document name was changed from Access Rules Test
            Specification to Access Rules Device Test Specification.
          </para>
          <para>
            The document formatting was updated.
          </para>


        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jun 21, 2018</date>
        <revdescription>
          <para>Reformatting document using new template</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.12</revnumber>
        <date>Oct 16, 2018</date>
        <revdescription>
          <para>
            The following were updated in the scope of #1671:
          </para>
          <para>
            Scope\Access Profile (updated with SetAccessProfile)
          </para>
          <para>
            Test Policy\Access Profile (updated with SetAccessProfile)
          </para>
          <para>
            ACCESS_RULES-3-1-15 SET NEW ACCESS PROFILE (added)
          </para>
          <para>
            ACCESS_RULES-3-1-16 SET ACCESS PROFILE (added)
          </para>
          <para>
            Annex A.19 Create Pull Point Subscription (added)
          </para>
          <para>
            Annex A.20 Delete Subscription (added)
          </para>
          <para>
            Annex A.21 Retrieve Credential Changed Event by PullPoint (added)
          </para>
        </revdescription>
      </revision>
      <revision>
				<revnumber>18.12</revnumber>
				<date>Dec 21, 2018</date>
				<revdescription>
          <para>Switching Hub description in 'Network Configuration for DUT' section was updated according to #1737</para>				
				</revdescription>
			</revision>
     <revision>
        <revnumber>20.06</revnumber>
        <date>May 13, 2020</date>
        <revdescription>
          <para>Pre-Requisite of the following test cases updated with adding of Pull-Point Notification feature according to #1999:</para>
        <para>ACCESS_RULES-3-1-5	CREATE ACCESS PROFILE</para>
<para>ACCESS_RULES-3-1-7	MODIFY ACCESS PROFILE</para>
<para>ACCESS_RULES-3-1-8	DELETE ACCESS PROFILE</para>
<para>ACCESS_RULES-3-1-15	SET NEW ACCESS PROFILE</para>
<para>ACCESS_RULES-3-1-16	SET ACCESS PROFILE</para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>May 18, 2020</date>
        <revdescription>
          <para>Pre-Requisite of the following test cases updated with adding of Event Service according to #1999:</para>       
<para>ACCESS_RULES-5-1-1	ACCESS PROFILE CHANGED EVENT</para>
<para>ACCESS_RULES-5-1-2	ACCESS PROFILE REMOVED EVENT</para>
        </revdescription>
      </revision>
    </revhistory>
  </info>
  <chapter xml:id="s.intro">
    <title>Introduction</title>
    <para>
      The goal of the ONVIF test specification set is to make it possible to realize fully interoperable IP physical security implementation from different vendors. The set of ONVIF test specification describes the test cases need to verify the [ONVIF Network Interface Specs] and [ONVIF Conformance] requirements. In addition, the test cases are to be basic inputs for some Profile specification requirements. It also describes the test framework, test setup, pre-requisites, test policies needed for the execution of the described test cases.
    </para>
    <para>
      This ONVIF Access Rules Test Specification acts as a supplementary document to the [ONVIF Network Interface Specs], illustrating test cases need to be executed and passed. In addition, this specification acts as an input document to the development of test tool that will be used to test the ONVIF device implementation conformance towards ONVIF standard. This test tool is referred as ONVIF Client hereafter.
    </para>
    <section xml:id="s.intro.scope">
      <title>Scope</title>
      <para>
        This ONVIF Access Rules Test Specification defines and regulates the conformance testing procedure for the ONVIF conformant devices. Conformance testing is meant to be functional black-box testing. The objective of this specification is to provide test cases to test individual requirements of ONVIF devices according to the ONVIF Access Rules Service, which is defined in [ONVIF Access Rules Service].
      </para>
      <para>
        The principal intended purposes are:<itemizedlist>
          <listitem>
            <para>Provide self-assessment tool for implementations.</para>
          </listitem>
          <listitem>
            <para>
              Provide comprehensive test suite coverage for [ONVIF Network Interface Specs].
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        This specification <emphasis role="bold">does not</emphasis> address the following:
        <itemizedlist>
          <listitem>
            <para>
              Product use cases and non-functional (performance and regression) testing.
            </para>
          </listitem>
          <listitem>
            <para>
              SOAP Implementation Interoperability test i.e. Web Service Interoperability Basic Profile version 2.0 (WS-I BP 2.0).
            </para>
          </listitem>
          <listitem>
            <para>
              Network protocol implementation Conformance test for HTTP, HTTPS, RTP and RTSP protocol.
            </para>
          </listitem>
          <listitem>
            <para>
              Wi-Fi Conformance test
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        The set of ONVIF Test Specification will not cover the complete set of requirements as defined in [ONVIF Network Interface Specs]; instead it will cover its subset.
      </para>
      <para>
        This ONVIF Access Rules Test Specification covers the ONVIF Access Rules Service, which is a functional block of [ONVIF Network Interface Specs]. The following section gives a brief overview of each functional block and its scope.
      </para>

      <section xml:id="s.intro.scope.capabilities">
        <title>Capabilities</title>
        <para>
          The Capabilities section covers the test cases needed for getting capabilities from an ONVIF device.
        </para>
        <para>
          The scope of this specification section is to cover the following functions:
          <itemizedlist>
            <listitem>
              <para>
                Getting capabilities with GetServiceCapabilities command
              </para>
            </listitem>
            <listitem>
              <para>
                Getting capabilities with GetServices command via Device service
              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
      <section xml:id="s.intro.scope.access_profile_info">
        <title>Access Profile Info</title>
        <para>
          The Access Profile Info section covers the test cases needed for getting access profile list and information from an ONVIF device.
        </para>
        <para>
          The scope of this specification section is to cover the following functions:
          <itemizedlist>
            <listitem>
              <para>
                Getting access profile information with GetAccessProfileInfo command
              </para>
            </listitem>
            <listitem>
              <para>
                Getting access profile information list with GetAccessProfileInfoList command
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <section xml:id="s.intro.scope.access_profile">
        <title>Access Profile</title>
        <para>
          The Access Profile section covers the test cases needed for getting access profile from an ONVIF device.
        </para>
        <para>
          The scope of this specification section is to cover the following functions:
          <itemizedlist>
            <listitem>
              <para>
                Getting access profile with GetAccessProfiles command
              </para>
            </listitem>
            <listitem>
              <para>
                Getting access profile list with GetAccessProfileList command
              </para>
            </listitem>
            <listitem>
              <para>
                Creating access profile with CreateAccessProfile command
              </para>
            </listitem>
            <listitem>
              <para>
                Modifying access profile with ModifyAccessProfile command
              </para>
            </listitem>
            <listitem>
              <para>
                Deleting access profile with DeleteAccessProfile command
              </para>
            </listitem>
            <listitem>
              <para>Creating and modifying access profile with SetAccessProfile command</para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <section xml:id="s.intro.scope.events">
        <title>Events</title>
        <para>
          The Events section covers the test cases needed for checking specified events format.
        </para>
        <para>
          The scope of this specification section is to cover the following functions:
          <itemizedlist>
            <listitem>
              <para>
                Getting event properties with GetEventProperties command
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <section xml:id="s.intro.scope.consistency">
        <title>Consistency</title>
        <para>
          Consistency test cases cover verification of consistency between different entities and commands.
        </para>
        <para>
          Consistency between the following entities is covered by the following test case:
          <itemizedlist>
            <listitem>
              <para>
                Access Policies and Access Point
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

    </section>

  </chapter>
  <chapter xml:id="additions">
    <title>Terms and Definitions</title>

    <section xml:id="additions.definitions">
      <title>Definitions</title>
      <para>This section describes terms and definitions used in this document.</para>
      <variablelist>

        <varlistentry>
          <term>Access Policy</term>
          <listitem>
            <para>An association of an access point and a schedule. It defines when an access point can be accessed using an access profile which contains this access policy. Several access policies specifying different schedules for the same access point will result in a union of the schedule.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Access Profile</term>
          <listitem>
            <para>A collection of access policies, used to define role based access. Two types of access profile can be defined for example: standard access profile and temporary access profile. The difference between the two, is that temporary access profile have optional validity from / to dates, and standard access profile do not.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Access Point</term>
          <listitem>
            <para>A logical composition of a physical door and ID point(s) controlling access in one direction.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Credentials</term>
          <listitem>
            <para>A physical/tangible object, a piece of knowledge, or a facet of a person's physical being, that enables an individual access to a given physical facility or computer-based information system.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Credential Number</term>
          <listitem>
            <para>A sequence of bytes uniquely identifying a credential at an access point.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Validity Period</term>
          <listitem>
            <para>From a certain point in time, to a later point in time. If a validity period is set on several entities (such as credentials, access profile and the association between them) the resulting validity period is the intersection of the three period.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Schedule</term>
          <listitem>
            <para>A set of time periods, for example: working hours (weekdays from 08:00 AM to 06:00 PM). It may also include one or more special days schedule.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Role based access</term>
          <listitem>
            <para>It is a method of regulating access to resources, for example: premises, building etc.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:id="additions.abbreviations">
      <title>Abbreviations</title>
      <para>This section describes abbreviations used in this document.</para>
      <variablelist>
        <varlistentry>
          <term>DUT</term>
          <listitem>
            <para>Device Under Test</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>HTTP</term>
          <listitem>
            <para>Hypertext Transfer Protocol</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>PACS</term>
          <listitem>
            <para>Physical Access Control System</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>
  <chapter xml:id="overview">
    <title>Test Overview</title>
    <para>
      This section describes about the test setup and prerequisites needed,
      and the test policies that should be followed for test case execution.
    </para>
    <section xml:id="overview.test_setup">
      <title>Test Setup</title>
      <section xml:id="overview.test_setup.network_configuration">
        <title>Network Configuration for DUT</title>
        <para>
          The generic test configuration for the execution of test cases defined in this document is as shown below (Figure 1).
        </para>
        <para>
          Based on the individual test case requirements, some of the entities in the below setup may not be needed for the execution of those corresponding test cases.
        </para>
        <figure>
          <title>Test Configuration for DUT</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="test_network.png" format="PNG" scalefit="0"/>
            </imageobject>
            <textobject>
              <phrase>Test Configuration for DUT</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <para>
          <emphasis role="bold">DUT:</emphasis> ONVIF device to be tested. Hereafter, this is referred to as DUT (Device Under Test).
        </para>
        <para>
          <emphasis role="bold">ONVIF Client (Test Tool):</emphasis> Tests are executed by this system and it controls the behavior of the DUT. It handles both expected and unexpected behavior.
        </para>
        <para>
          <emphasis role="bold">HTTP Proxy:</emphasis> provides facilitation in case of RTP and RTSP tunneling over HTTP.
        </para>
        <para>
          <emphasis role="bold">Wireless Access Point:</emphasis> provides wireless connectivity to the devices that support wireless connection.
        </para>
        <para>
          <emphasis role="bold">DNS Server:</emphasis> provides DNS related information to the connected devices.
        </para>
        <para>
          <emphasis role="bold">DHCP Server:</emphasis> provides IPv4 Address to the connected devices.
        </para>
        <para>
          <emphasis role="bold">NTP Server:</emphasis> provides time synchronization between ONVIF Client and DUT.
        </para>
        <para>
          <emphasis role="bold">Switching Hub:</emphasis> provides network connectivity among all the test equipments in the test environment. All devices should be connected to the Switching Hub.
           When running multiple test instances in parallel on the same network, the Switching Hub should be configured to use filtering in order to avoid multicast traffic being flooded to all ports, because this may affect test stability.
        </para>
        <para>
          <emphasis role="bold">Router:</emphasis> provides router advertisements for IPv6 configuration.
        </para>
      </section>
    </section>
    <section xml:id="overview.prerequisites">
      <title>Prerequisites</title>
      <para>
        The pre-requisites for executing the test cases described in this Test Specification are:
        <itemizedlist>
          <listitem>
            <para>
              The DUT shall be configured with an IPv4 address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be IP reachable [in the test configuration].
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be able to be discovered by the Test Tool.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be configured with the time i.e. manual configuration of UTC time and if NTP is supported by DUT, then NTP time shall be synchronized with NTP Server.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <section xml:id="overview.test_policy">
      <title>Test Policy</title>
      <para>
        This section describes the test policies specific to the test case execution of each functional block.
      </para>
      <para>
        The DUT shall adhere to the test policies defined in this section.
      </para>
      <section xml:id="overview.test_policy.capabilities">
        <title>Capabilities</title>
        <para>
          The test policies specific to the test case execution of Capabilities functional block:
          <itemizedlist>
            <listitem>
              <para>
                DUT shall give the Access Rules Service entry point by GetServices command, if DUT supports this service. If DUT does not support Access Rules Service, these test cases will be skipped.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following commands:
                <itemizedlist>
                  <listitem>
                    <para>
                      GetServices
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetServiceCapabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed
                <itemizedlist>
                  <listitem>
                    <para>
                      Getting capabilities with GetServiceCapabilities command
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting capabilities with GetServices command
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_rules.capabilities"/> for Capabilities Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.access_profile_info">
        <title>Access Profile Info</title>
        <para>
          The test policies specific to the test case execution of Access Profile Info functional block:
          <itemizedlist>
            <listitem>
              <para>
                DUT shall give the Access Rules Service entry point by GetServices command, if DUT supports this service. If DUT does not support Access Rules Service, these test cases will be skipped.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following commands:
                <itemizedlist>
                  <listitem>
                    <para>
                      GetServices
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetServiceCapabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetAccessProfileInfo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetAccessProfileInfoList
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return more items in GetAccessProfileInfo and GetAccessProfileInfoList responses than specified in service capabilities by MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return more items in GetAccessProfileInfoList response than specified by Limit parameter in a request.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return more AccessProfilesInfo items in GetAccessProfileInfoList responses than specified in service capabilities by MaxAccessProfiles.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return items with the same tokens in GetAccessProfileInfoList responses for one access profile info list receiving.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return any fault if GetAccessProfileInfo was invoked for non-exciting AccessProfile token. Such tokens shall be ignored.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return SOAP 1.2 fault message (InvalidArgs/TooManyItems) if more items than MaxLimit was requested by GetAccessProfileInfo command.
              </para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed
                <itemizedlist>
                  <listitem>
                    <para>
                      Getting access profile info with GetAccessProfileInfo command
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting access profile info list with GetAccessProfileInfoList command with using different Limit and NextReference values
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting access profile info with invalid access profile token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting access profile info with number of requested items is greater than MaxLimit
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please refer to <xref linkend="tc.access_rules.access_profile_info"/> for Access Profile Info Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.access_profile">
        <title>Access Profile</title>
        <para>
          The test policies specific to the test case execution of Access Profile functional block:
          <itemizedlist>
            <listitem>
              <para>
                DUT shall give the Access Rules Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following commands:
                <itemizedlist>
                  <listitem>
                    <para>
                      GetServices
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetServiceCapabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetAccessProfiles
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetAccessProfileList
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetAccessProfileInfoList
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CreateAccessProfile
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ModifyAccessProfile
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DeleteAccessProfile
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Client Supplied Token as indicated by Capabilities.ClientSuppliedTokenSupported = true, DUT shall support the following commands:
                <itemizedlist>
                  <listitem>
                    <para>
                      SetAccessProfile
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return only requested items in GetAccessProfiles response that specified in GetAccessProfiles request.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return all requested items in GetAccessProfiles response that specified in GetAccessProfiles request.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return more items in GetAccessProfiles responses than specified in service capabilities by MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return the same information in GetAccessProfiles responses and in GetAccessProfileInfoList responses for the items with the same token.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return more items in GetAccessProfileList response than specified by Limit parameter in a request.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return items with the same tokens in GetAccessProfileList responses for one access profile list receiving.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return the same information in GetAccessProfiles responses and in GetAccessProfilesList responses for the items with the same token.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return the same information in GetAccessProfileList responses and in GetAccessProfileInfoList responses for the items with the same token.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return the access profiles in GetAccessProfileList responses and in GetAccessProfileInfoList responses.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall support creation of access profile.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall support modifying of access profile.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall support deletion of access profile.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Client Supplied Token as indicated by Capabilities.ClientSuppliedTokenSupported = true, creating and modifying of access profile using SetAccessProfile command.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return any fault if GetAccessProfiles was invoked for non-exciting AccessProfile token. Such tokens shall be ignored.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return SOAP 1.2 fault message (InvalidArgs/TooManyItems) if more items than MaxLimit was requested by GetAccessProfiles command.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT shall support creating of access profile.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT shall support modifying of access profile.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT shall support deleting of access profile.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return SOAP 1.2 fault message (InvalidArgs) if access profile token is specified in CreateAccessProfile request.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT should return SOAP 1.2 fault message (CapabilityViolated/MultipleSchedulesPerAccessPointSupported) if multiple schedules for the same access point is sent in the create access profile and MultipleSchedulesPerAccessPointSupported is not supported.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT should return SOAP 1.2 fault message (InvalidArgVal/NotFound) if ModifyAccessProfile or DeleteAccessProfile command was invoked for non-exciting access profile token.
              </para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed
                <itemizedlist>
                  <listitem>
                    <para>
                      Getting access profile with GetAccessProfiles command and test that it includes the same information with GetAccessProfileList command
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting access profile info list with GetAccessProfileList command with using different Limit and NextReference values and test that it includes the same information with GetAccessProfileInfoList command
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Creating access profile with CreateAccessProfile command with empty token and test that corresponding notification message is received
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Modifying access profile with ModifyAccessProfile command and test that corresponding notification message is received
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Deleting access profile with DeleteAccessProfile command and test that corresponding notification message is received
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting access profiles with invalid access profile token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting access profiles with number of requested items is greater than MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Creating access profile with CreateAccessProfile command with specified token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Creating access profile with multiple schedules for the same access point when MultipleSchedulesPerAccessPointSupported is not supported
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Modifying access profile with ModifyAccessProfile command with invalid token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Deleting access profile with DeleteAccessProfile command with invalid token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If DUT supports Client Supplied Token as indicated by Capabilities.ClientSuppliedTokenSupported = true:
                      <itemizedlist>
                        <listitem>
                          <para>
                            Creating access profile with SetAccessProfile command with empty token and test that corresponding notification message is received
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Modifying access profile with SetAccessProfile command and test that corresponding notification message is received
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please refer to <xref linkend="tc.access_rules.access_profile"/> for Access Profile Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.events">
        <title>Events</title>
        <para>
          The test policies specific to the test case execution of Events functional block:
          <itemizedlist>
            <listitem>
              <para>
                DUT shall give the Access Rules Service and Event Service entry points by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following commands:
                <itemizedlist>
                  <listitem>
                    <para>
                      GetServices
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetEventProperties
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall support Pull Point Subscription and Topic Expression filter.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall generate property events with initial state after subscription was done.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall generate property events with current state after corresponding properties were changed.
              </para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed
                <itemizedlist>
                  <listitem>
                    <para>
                      Getting event properties with GetEventProperties command
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please refer to <xref linkend="tc.access_rules.events"/> for Events Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.consistency">
        <title>Consistency</title>
        <para>
          The test policies specific to the test case execution of Consistency functional block:
          <itemizedlist>
            <listitem>
              <para>
                DUT shall give the Access Rules Service and Access Control Service entry points by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following commands:
                <itemizedlist>
                  <listitem>
                    <para>
                      GetServices
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetAccessProfileInfo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetCredentials
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed
                <itemizedlist>
                  <listitem>
                    <para>
                      Access Policies and Access Point consistency
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>


        <para>
          Please refer to <xref linkend="tc.access_rules.consistency"/> for Consistency Test Cases.
        </para>
      </section>
    </section>
  </chapter>
  <!--	Access Rules Test Cases-->
  <chapter xml:id="tc.access_rules">
    <title>Access Rules Test Cases</title>
    <!--Capabilities-->
    <section xml:id="tc.access_rules.capabilities" xreflabel="Section 4.1">
      <title>Capabilities</title>
      <!--ACCESS_RULES-1-1-1-->
      <section xml:id="tc.ACCESS_RULES-1-1-1">
        <title>ACCESS RULES SERVICE CAPABILITIES</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>  ACCESS_RULES-1-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  ServiceCapabilities (ONVIF Access Rules Service Specification), GetServiceCapabilities command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServiceCapabilities (for Access Rules Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Access Rules Service Capabilities.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Capabilities  =: <emphasis role="italic">cap</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-1-1-2-->
      <section xml:id="tc.ACCESS_RULES-1-1-2">
        <title>GET SERVICES AND GET ACCESS RULES SERVICE CAPABILITIES CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>  ACCESS_RULES-1-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Capability exchange (ONVIF Core Specification), ServiceCapabilities (ONVIF Access Rules Service Specification), GetServiceCapabilities command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServices, GetServiceCapabilities (for Access Rules Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> devicemgmt.wsdl, accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Services and Access Rules Service Capabilities consistency.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> None.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServices</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      IncludeCapability := true
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetServicesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Services list  =: <emphasis role="italic">servicesList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client selects Service with Service.Namespace = "http://www.onvif.org/ver10/accessrules/wsdl":
                <itemizedlist>
                  <listitem>
                    <para>
                      Services list [Namespace = "http://www.onvif.org/ver10/accessrules/wsdl"] =:  <emphasis role="italic">accessRulesService</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Capabilities  =: <emphasis role="italic">cap</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-1-1-2.8">
              <para>
                If <emphasis role="italic">cap</emphasis> differs from <emphasis role="italic">accessRulesService</emphasis>.Capabilities.Capabilities, FAIL the test.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetServicesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.ACCESS_RULES-1-1-2.8"/>:
          <itemizedlist>
            <listitem>
              <para>
                MaxLimit
              </para>
            </listitem>
            <listitem>
              <para>
                MaxAccessProfiles
              </para>
            </listitem>
            <listitem>
              <para>
                MaxAccessPoliciesPerAccessProfile
              </para>
            </listitem>
            <listitem>
              <para>
                MultipleSchedulesPerAccessPointSupported
              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
    </section>
    <!--	Access Profile Info-->
    <section xml:id="tc.access_rules.access_profile_info" xreflabel="Section 4.2">
      <title>Access Profile Info</title>
      <!--ACCESS_RULES-2-1-1-->
      <section xml:id="tc.ACCESS_RULES-2-1-1">
        <title>GET ACCESS PROFILE INFO</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>   ACCESS_RULES-2-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  AccessProfileInfo (ONVIF Access Rules Service Specification), GetAccessProfileInfo command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis>  GetAccessProfileInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Profile Info.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profile info (out <emphasis role="italic">accessProfileInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-2-1-1.6">
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">accessProfileInfoCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfileInfo</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfileInfoResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoList1</emphasis> does not contain AccessProfileInfo item for each token from <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoList1</emphasis> contains at least two AccessProfileInfo item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoList1</emphasis> contains other AccessProfileInfo items then listed in <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each AccessProfile.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">accessProfileInfoCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessProfileInfo</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token[0] := <emphasis role="italic">token</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessProfileInfoResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoList2</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileInfoList2</emphasis> does not contain only one AccessProfileInfo item with token equal to <emphasis role="italic">token</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem xml:id="tc.ACCESS_RULES-2-1-1.12.4" xreflabel="12.4">
                    <para>
                      If <emphasis role="italic">accessProfileInfoList2</emphasis>[0] item is not equal to <emphasis role="italic">accessProfileInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessProfileInfoResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If number of items in <emphasis role="italic">accessProfileInfoCompleteList</emphasis>, less than Capabilities =: <emphasis role="italic">cap</emphasis>.MaxLimit, then all <emphasis role="italic">accessProfileInfoCompleteList</emphasis>.Token items shall be used for the step <xref linkend="tc.ACCESS_RULES-2-1-1.6"/>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are comparied at step <xref linkend="tc.ACCESS_RULES-2-1-1.12.4"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessProfileInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-2-1-2-->
      <section xml:id="tc.ACCESS_RULES-2-1-2">
        <title>GET ACCESS PROFILE INFO LIST - LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESS_RULES-2-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessProfileInfo (ONVIF Access Rules Service Specification), GetAccessProfileInfoList command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessProfileInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis>  accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis>  To verify Get Access Profile Info List using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>   Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfileInfoList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := 1
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoList1</emphasis> contains more AccessProfileInfo items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfileInfoList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoList2</emphasis> contains more AccessProfileInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfileInfoList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoList3</emphasis> contains more AccessProfileInfo items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-2-1-3-->
      <section xml:id="tc.ACCESS_RULES-2-1-3">
        <title>GET ACCESS PROFILE INFO LIST - START REFERENCE AND LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>   ACCESS_RULES-2-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessProfileInfo (ONVIF Access Rules Service Specification), GetAccessProfileInfoList command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis>  GetAccessProfileInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Profile Info List using StartReference and Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfileInfoList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoList1</emphasis> contains more AccessProfileInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>

            <listitem>
              <para>

                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessProfileInfoList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileInfoListPart</emphasis> contains more AccessProfileInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">accessProfileInfoCompleteList1</emphasis> := <emphasis role="italic">accessProfileInfoCompleteList1</emphasis> + <emphasis role="italic">accessProfileInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList1</emphasis> contains at least two AccessProfileInfo items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfileInfoList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := 1
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoCompleteList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">caccessProfileInfoCompleteList2</emphasis> contains more AccessProfileInfo items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessProfileInfoList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := 1
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileInfoListPart</emphasis> contains more AccessProfileInfo items than 1, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">accessProfileInfoCompleteList2</emphasis> := <emphasis role="italic">accessProfileInfoCompleteList2</emphasis> + <emphasis role="italic">accessProfileInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList2</emphasis> contains at least two AccessProfileInfo item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList2</emphasis> does not contain all access profiles from <emphasis role="italic">accessProfileInfoCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList2</emphasis> contains access profiles other than access profiles from <emphasis role="italic">accessProfileInfoCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfileInfoList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoCompleteList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList3</emphasis> contains more AccessProfileInfo items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessProfileInfoList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">limit</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileInfoListPart</emphasis> contains more AccessProfileInfo items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">accessProfileInfoCompleteList3</emphasis> := <emphasis role="italic">accessProfileInfoCompleteList3</emphasis> + <emphasis role="italic">accessProfileInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList3</emphasis> contains at least two AccessProfileInfo item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList3</emphasis> does not contain all access profiles from <emphasis role="italic">accessProfileInfoCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList3</emphasis> contains access profiles other than access profiles from <emphasis role="italic">accessProfileInfoCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessProfileInfoListResponse </emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-2-1-4-->
      <section xml:id="tc.ACCESS_RULES-2-1-4">
        <title>GET ACCESS PROFILE INFO LIST - NO LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>   ACCESS_RULES-2-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessProfileInfo (ONVIF Access Rules Service Specification), GetAccessProfileInfoList command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis>  GetAccessProfileInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis>  To verify Get Access Profile Info List without using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>   Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfileInfoList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoCompleteList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList</emphasis> contains more AccessProfileInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>

            <listitem>
              <para>

                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessProfileInfoList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileInfoListPart</emphasis> contains more AccessProfileInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">accessProfileInfoCompleteList </emphasis> := <emphasis role="italic">accessProfileInfoCompleteList</emphasis> + <emphasis role="italic">accessProfileInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList</emphasis> contains at least two AccessProfileInfo items with equal token, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList</emphasis> contains more AccessProfileInfo items than <emphasis role="italic">cap</emphasis>.MaxAccessProfiles, FAIL the test and skip other steps.
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-2-1-5-->
      <section xml:id="tc.ACCESS_RULES-2-1-5">
        <title>GET ACCESS PROFILE INFO WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>   ACCESS_RULES-2-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>   GetAccessProfileInfo command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessProfileInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis>  To verify Get Access Profile Info with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>   Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">accessProfileInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfileInfo</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfileInfoResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoList</emphasis> is not empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is less than 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfileInfo</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token[0]:= <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Token[1]:= <emphasis role="italic">accessProfileInfoCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfileInfoResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoList</emphasis> is empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoList</emphasis> contains more than one item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoList</emphasis>[0].token does not equal <emphasis role="italic">accessProfileInfoCompleteList</emphasis>[0].token, FAIL the test.

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessProfileInfoResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-2-1-6-->
      <section xml:id="tc.ACCESS_RULES-2-1-6">
        <title>GET ACCESS PROFILE INFO - TOO MANY ITEMS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>  ACCESS_RULES-2-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  AccessProfileInfo (ONVIF Access Rules Service Specification), GetAccessProfileInfo command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis>  GetAccessProfileInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Profile Info in case if there a more items than MaxLimit in request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList</emphasis>.token items number is less than <emphasis role="italic">cap</emphasis>.MaxLimit or equal to cap.MaxLimit, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">accessProfileInfoCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit + 1]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfileInfo</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send env:Sender\ter:InvalidArgs\ter:TooManyItems SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--	Access Profile-->
    <section xml:id="tc.access_rules.access_profile" xreflabel="Section 4.3">
      <title>Access Profile</title>
      <!--ACCESS_RULES-3-1-1-->
      <section xml:id="tc.ACCESS_RULES-3-1-1">
        <title>GET ACCESS PROFILES</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>   ACCESS_RULES-3-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  AccessProfileInfo (ONVIF Access Rules Service Specification), AccessProfile (ONVIF Access Rules Service Specification), GetAccessProfiles command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis>  GetAccessProfiles
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Profiles.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>   Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfilesList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-1.6">
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">accessProfileCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfiles</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfile list =: <emphasis role="italic">accessProfileList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileList1</emphasis> does not contain AccessProfile item for each token from <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileList1</emphasis> contains at least two AccessProfile items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileList1</emphasis> contains other AccessProfile items then listed in <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each <emphasis role="italic">AccessProfileInfo</emphasis>.token token from <emphasis role="italic">accessProfileCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessProfiles</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token[0] := <emphasis role="italic">token</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessProfilesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            AccessProfile list =: <emphasis role="italic">accessProfileList2</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileList2</emphasis> does not contain only one AccessProfile item with token equal to <emphasis role="italic">token</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem xml:id="tc.ACCESS_RULES-3-1-1.12.4" xreflabel="12.4">
                    <para>
                      If <emphasis role="italic">accessProfileList2</emphasis>[0] item does not have equal field values to <emphasis role="italic">accessProfileCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessProfilesResponse </emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If number of items in <emphasis role="italic">accessProfileCompleteList</emphasis>, less than <emphasis role="italic">cap</emphasis>.MaxLimit, then all <emphasis role="italic">accessProfileCompleteList</emphasis>.Token items shall be used for the step <xref linkend="tc.ACCESS_RULES-3-1-1.6"/>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are comparied at step <xref linkend="tc.ACCESS_RULES-3-1-1.12.4"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessProfile:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPolicy list (ScheduleToken is used as unique key for comparing)
                      <itemizedlist>
                        <listitem>
                          <para>
                            ScheduleToken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Entity
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            EntityType
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-3-1-2-->
      <section xml:id="tc.ACCESS_RULES-3-1-2">
        <title>GET ACCESS PROFILE LIST - LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESS_RULES-3-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  AccessProfileInfo (ONVIF Access Rules Service Specification), AccessProfile (ONVIF Access Rules Service Specification), GetAccessProfileList command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis>  GetAccessProfileList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis>  accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis>  To verify Get Access Profile List using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfieList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := 1
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfieListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile list =: <emphasis role="italic">accessProfileList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileList1</emphasis> contains more AccessProfile items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfieList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfieListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile list =: <emphasis role="italic">accessProfileList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileList2</emphasis> contains more AccessProfile items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfieList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfieListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile list =: <emphasis role="italic">accessProfileList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileList3</emphasis> contains more AccessProfile items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessProfieListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
      <!--ACCESS_RULES-3-1-3-->
      <section xml:id="tc.ACCESS_RULES-3-1-3">
        <title>GET ACCESS PROFILE LIST - START REFERENCE AND LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>  ACCESS_RULES-3-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  AccessProfileInfo (ONVIF Access Rules Service Specification), AccessProfile (ONVIF Access Rules Service Specification), GetAccessProfileList command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessProfileList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Profile List using StartReference and Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfieList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfieListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile list =: <emphasis role="italic">accessProfileCompleteList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList1</emphasis> contains more AccessProfile items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessProfieList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessProfieListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessProfile list =: <emphasis role="italic">accessProfileListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileListPart</emphasis> contains more AccessProfile items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">accessProfileCompleteList1</emphasis> := <emphasis role="italic">accessProfileCompleteList1</emphasis> + <emphasis role="italic">accessProfileListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList1</emphasis> contains at least two AccessProfile item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, do the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileCompleteList1</emphasis> does not contain all access profiles from <emphasis role="italic">accessProfileInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileCompleteList1</emphasis> contains access profiles other than access profiles from <emphasis role="italic">accessProfileInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each AccessProfileInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">accessProfileInfoCompleteList</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">accessProfileCompleteList1</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">accessProfileInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfieList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := 1
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfieListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile list =: <emphasis role="italic">accessProfileCompleteList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList2</emphasis> contains more AccessProfile items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessProfieList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := 1
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessProfieListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Access Profile list =: <emphasis role="italic">accessProfileListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileListPart</emphasis> contains more AccessProfile items than 1, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">accessProfileCompleteList2</emphasis> := <emphasis role="italic">accessProfileCompleteList2</emphasis> + <emphasis role="italic">accessProfileListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList2</emphasis> contains at least two AccessProfile item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList2</emphasis> does not contain all access profiles from <emphasis role="italic">accessProfileCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList2</emphasis> contains access profiles other than access profiles from <emphasis role="italic">accessProfileCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2, do the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileCompleteList2</emphasis> does not contain all access profiles from <emphasis role="italic">accessProfileInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileCompleteList2</emphasis> contains access profiles other than access profiles from <emphasis role="italic">accessProfileInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each AccessProfileInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">accessProfileInfoCompleteList</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">accessProfileCompleteList2</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">accessProfileInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfieList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfieListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile list =: <emphasis role="italic">accessProfileCompleteList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList3</emphasis> contains more AccessProfile items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessProfieList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">limit</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessProfieListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessProfile list =: <emphasis role="italic">accessProfileListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileListPart</emphasis> contains more AccessProfile items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">accessProfileCompleteList3</emphasis> := <emphasis role="italic">accessProfileCompleteList3</emphasis> + <emphasis role="italic">accessProfileListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList3</emphasis> contains at least two AccessProfile item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList3</emphasis> does not contain all access profiles from <emphasis role="italic">accessProfileCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList3</emphasis> contains access profiles other than access profiles from <emphasis role="italic">accessProfileCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList3</emphasis> does not contain all access profiles from <emphasis role="italic">accessProfileInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList3</emphasis> contains access profiles other than access profiles from <emphasis role="italic">accessProfileInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each AccessProfileInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">accessProfileInfoCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem xml:id="tc.ACCESS_RULES-3-1-3.29.1" xreflabel="29.1">
                    <para>
                      If <emphasis role="italic">accessProfileCompleteList3</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">accessProfileInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessProfieListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are comparied at step <xref linkend="tc.ACCESS_RULES-3-1-3.29.1"/>:
          <itemizedlist>

            <listitem>
              <para>
                AccessProfileInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-3-1-4-->
      <section xml:id="tc.ACCESS_RULES-3-1-4">
        <title>GET ACCESS PROFILE LIST - NO LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>  ACCESS_RULES-3-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessProfileInfo (ONVIF Access Rules Service Specification), AccessProfile (ONVIF Access Rules Service Specification), GetAccessProfileList command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessProfileList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis>  To verify Get Access Profile List without using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfieList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfieListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile list =: <emphasis role="italic">accessProfileCompleteList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList</emphasis> contains more AccessProfile items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null repeat, the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessProfieList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessProfieListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessProfile list =: <emphasis role="italic">accessProfileListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessProfileListPart</emphasis> contains more AccessProfile items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">accessProfileCompleteList</emphasis> := <emphasis role="italic">accessProfileCompleteList</emphasis> + <emphasis role="italic">accessProfileListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList</emphasis> contains at least two AccessProfile item with equal token, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList</emphasis> does not contain all access profiles from <emphasis role="italic">accessProfileInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList</emphasis> contains access profiles other than access profiles from <emphasis role="italic">accessProfileInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each AccessProfileInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">accessProfileInfoCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem xml:id="tc.ACCESS_RULES-3-1-4.12.1" xreflabel="12.1">
                    <para>
                      If <emphasis role="italic">accessProfileCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">accessProfileInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessProfieListResponse </emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are comparied at step <xref linkend="tc.ACCESS_RULES-3-1-4.12.1"/>:
          <itemizedlist>

            <listitem>
              <para>
                AccessProfileInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-3-1-5-->
      <section xml:id="tc.ACCESS_RULES-3-1-5">
        <title>CREATE ACCESS PROFILE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>   ACCESS_RULES-3-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  AccessProfileInfo (ONVIF Access Rules Service Specification), AccessProfile (ONVIF Access Rules Service Specification), CreateAccessProfile command (ONVIF Access Rules Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateAccessProfile
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Create Access Profiles with empty token and to verify tns1:Configuration/AccessProfile/Changed event generation.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT. Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. The DUT shall have enough free storage capacity for one additional Access Profile.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileCompleteList1</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfilesList"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-5.4">
              <para>
                ONVIF Client checks free storage for additional Access Profile (in <emphasis role="italic">accessProfileCompleteList1</emphasis>, out <emphasis role="italic">accessProfileToRestore</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessProfile"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If Access Control service is supported by the DUT, ONVIF Client retrieves a complete list of access point information (out <emphasis role="italic">accessPointInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> is not empty:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of schedules (out <emphasis role="italic">scheduleCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleCompleteList</emphasis> is not empty:


                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            Set <emphasis role="italic">scheduleToken</emphasis>:= <emphasis role="italic">scheduleCompleteList</emphasis>[0].token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Go to step <xref linkend="tc.ACCESS_RULES-3-1-5.7"/>.
                          </para>
                        </listitem>
                      </orderedlist>


                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilitiesSchedule"/>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/>.
                    </para>
                  </listitem>
                  <listitem xml:id="tc.ACCESS_RULES-3-1-5.6.5" xreflabel="6.5">
                    <para>
                      If <emphasis role="italic">cap</emphasis>.SpecialDaysSupported is equal to true, ONVIF Client creates SpecialDayGroup (out <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCreateSpecialDayGroup"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client creates Schedule with Schedule token (out <emphasis role="italic">scheduleToken</emphasis>), with iCalendar value of the Schedule.Standard field (in <emphasis role="italic">scheduleiCalendarValue</emphasis>) and with SpecialDayGroupToken (in <emphasis role="italic">specialDayGroupToken</emphasis>) if Special Days is supported by the DUT by following the procedure mentioned in <xref linkend="Annex_HelperCreateSchedule"/>.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-5.7">
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Filter.TopicExpression := "tns1:Configuration/AccessProfile/Changed"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-5.9">
              <para>
                ONVIF client invokes <emphasis role="bold">CreateAccessProfile</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfile.token := ""
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Name := "Test Access Profile"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy is skipped if <emphasis role="italic">accessPointInfoCompleteList</emphasis> is empty
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[0].ScheduleToken := <emphasis role="italic">scheduleToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[0].Entity := <emphasis role="italic">accessPointInfoCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[0].EntityType skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[0].Extension skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Extension skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreateAccessProfileResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">accessProfileToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList1</emphasis> contains item with token equal to <emphasis role="italic">accessProfileToken</emphasis>, FAIL the test and go to Step <xref linkend="tc.ACCESS_RULES-3-1-5.24"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-5.12">
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint s with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Timeout := PT60S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            MessageLimit := 1
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage =: <emphasis role="italic">m</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the TopicExpression item in <emphasis role="italic">m</emphasis> is not equal to "tns1:Configuration/AccessProfile/Changed", FAIL the test and go to the step <xref linkend="tc.ACCESS_RULES-3-1-5.24"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the AccessProfileToken source simple item in <emphasis role="italic">m</emphasis> is not equal to <emphasis role="italic">accessProfileToken</emphasis>, go to the step <xref linkend="tc.ACCESS_RULES-3-1-5.24"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the AccessProfileToken source simple item in <emphasis role="italic">m</emphasis> is equal to <emphasis role="italic">accessProfileToken</emphasis>, go to the step <xref linkend="tc.ACCESS_RULES-3-1-5.14"/>.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">timeout1</emphasis> timeout expires for step <xref linkend="tc.ACCESS_RULES-3-1-5.12"/> without Notification with AccessProfileToken source simple item equal to <emphasis role="italic">accessProfileToken</emphasis>, FAIL the test and go to the step <xref linkend="tc.ACCESS_RULES-3-1-5.24"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-5.14">
              <para>
                ONVIF Client retrieves an access profile (in <emphasis role="italic">accessProfileToken</emphasis>, out <emphasis role="italic">accessProfileList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfile"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-5.15">
              <para>
                If <emphasis role="italic">accessProfileList</emphasis> contains more or less than one <emphasis role="italic">AccessProfile</emphasis> item, FAIL the test and go to step <xref linkend="tc.ACCESS_RULES-3-1-5.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESS_RULES-3-1-5.9"/>, FAIL the test and go Step <xref linkend="tc.ACCESS_RULES-3-1-5.24"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-5.17">
              <para>
                ONVIF Client retrieves an access profile info (in <emphasis role="italic">accessProfileToken</emphasis>, out <emphasis role="italic">accessProfileInfoList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfo"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoList</emphasis> contains more or less than one <emphasis role="italic">AccessProfile</emphasis> item, FAIL the test and go to step <xref linkend="tc.ACCESS_RULES-3-1-5.24"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-5.19">
              <para>
                If <emphasis role="italic">accessProfileInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESS_RULES-3-1-5.9"/>, FAIL the test and go Step <xref linkend="tc.ACCESS_RULES-3-1-5.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-5.21">
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList</emphasis> does not have <emphasis role="italic">accessProfileInfo</emphasis>.[token:= <emphasis role="italic">accessProfileToken</emphasis>] item equal field values to values from step <xref linkend="tc.ACCESS_RULES-3-1-5.9"/>, FAIL the test and go Step <xref linkend="tc.ACCESS_RULES-3-1-5.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileCompleteList2</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfilesList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList2</emphasis> does not have <emphasis role="italic">accessProfile</emphasis>.[token:= <emphasis role="italic">accessProfileToken</emphasis>] item equal field values to values from step <xref linkend="tc.ACCESS_RULES-3-1-5.9"/>, FAIL the test and go to Step <xref linkend="tc.ACCESS_RULES-3-1-5.24"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-5.24">
              <para>
                ONVIF Client deletes the Access Profile (in <emphasis role="italic">accessProfileToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteAccessProfile"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                If there was access profile deleted at Step <xref linkend="tc.ACCESS_RULES-3-1-5.4"/>, restore it (in <emphasis role="italic">accessProfileToRestore</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperRestoreAccessProfile"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the Schedule (in <emphasis role="italic">scheduleToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSchedule"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                If SpecialDayGroup was created at step <xref linkend="tc.ACCESS_RULES-3-1-5.6.5"/>, ONVIF Client deletes the SpecialDayGroup (in <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSpecialDayGroup"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateAccessProfilesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullpointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client skips whole AccessProfile.AccessPolicy field at step <xref linkend="tc.ACCESS_RULES-3-1-5.9"/>, if AccessProfile.AccessPolicy[0].ScheduleToken  and AccessProfile.AccessPolicy[0].Entity field are skipped.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are comparied at steps <xref linkend="tc.ACCESS_RULES-3-1-5.15"/>, <xref linkend="tc.ACCESS_RULES-3-1-5.21"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessProfile:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPolicy
                      <itemizedlist>
                        <listitem>
                          <para>
                            ScheduleToken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Entity
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            EntityType
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are comparied at steps <xref linkend="tc.ACCESS_RULES-3-1-5.17"/>, <xref linkend="tc.ACCESS_RULES-3-1-5.19"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessProfileInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>

                </itemizedlist>
              </para>
            </listitem>

          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-3-1-7-->
      <section xml:id="tc.ACCESS_RULES-3-1-7">
        <title>MODIFY ACCESS PROFILE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>  ACCESS_RULES-3-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  AccessProfileInfo (ONVIF Access Rules Service Specification), AccessProfile (ONVIF Access Rules Service Specification), ModifyAccessProfile command (ONVIF Access Rules Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis>  ModifyAccessProfile
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis>  accessrules.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis>  To verify Modify Access Profile and to verify tns1:Configuration/AccessProfile/Changed event generation.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>   Access Rules Service is received from the DUT. Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. The DUT shall have enough free storage capacity for one additional Access Profile.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileCompleteList1</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfilesList"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-7.4">
              <para>
                ONVIF Client checks free storage for additional Access Profile (in <emphasis role="italic">accessProfileCompleteList1</emphasis>, out <emphasis role="italic">accessProfileToRestore</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessProfile"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedules (out <emphasis role="italic">scheduleCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If Access Control service is supported by the DUT, ONVIF Client retrieves a complete list of access point information (out <emphasis role="italic">accessPointInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client creates access profile (in <emphasis role="italic">scheduleCompleteList</emphasis>, <emphasis role="italic">accessPointInfoCompleteList</emphasis>, out <emphasis role="italic">accessProfileToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCreateAccessProfile"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Filter.TopicExpression := "tns1:Configuration/AccessProfile/Changed"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-7.10">
              <para>
                ONVIF client invokes <emphasis role="bold">ModifyAccessProfile</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfile.token := <emphasis role="italic">accessProfileToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Name := "Test Access Profile 2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Description := "Test Description 2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy is skipped if <emphasis role="italic">scheduleCompleteList</emphasis> or <emphasis role="italic">accessPointInfoCompleteList</emphasis> is empty
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[0].ScheduleToken := <emphasis role="italic">scheduleCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[0].Entity := <emphasis role="italic">accessPointInfoCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[0].EntityType skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[0].Extension skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Extension skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with empty <emphasis role="bold">ModifyAccessProfileResponse </emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-7.12">
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint s with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Timeout := PT60S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            MessageLimit := 1
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage =: <emphasis role="italic">m</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the TopicExpression item in <emphasis role="italic">m</emphasis> is not equal to "tns1:Configuration/AccessProfile/Changed", FAIL the test and go to the step <xref linkend="tc.ACCESS_RULES-3-1-7.17"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the AccessProfileToken source simple item in <emphasis role="italic">m</emphasis> is not equal to <emphasis role="italic">accessProfileToken</emphasis>, go to the step <xref linkend="tc.ACCESS_RULES-3-1-7.17"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the AccessProfileToken source simple item in <emphasis role="italic">m</emphasis> is equal to <emphasis role="italic">accessProfileToken</emphasis>, go to the step <xref linkend="tc.ACCESS_RULES-3-1-7.17"/>.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">timeout1</emphasis> timeout expires for step <xref linkend="tc.ACCESS_RULES-3-1-7.12"/> without Notification with AccessProfileToken source simple item equal to <emphasis role="italic">accessProfileToken</emphasis>, FAIL the test and go to the step <xref linkend="tc.ACCESS_RULES-3-1-7.17"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an access profile (in <emphasis role="italic">accessProfileToken</emphasis>, out <emphasis role="italic">accessProfileList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfile"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileList</emphasis> contains more or less than one <emphasis role="italic">AccessProfile</emphasis> item, FAIL the test and go to step <xref linkend="tc.ACCESS_RULES-3-1-7.17"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-7.16">
              <para>
                If <emphasis role="italic">accessProfileList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESS_RULES-3-1-7.10"/>, FAIL the test and go Step <xref linkend="tc.ACCESS_RULES-3-1-7.17"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-7.17">
              <para>
                ONVIF Client deletes the Access Profile (in <emphasis role="italic">accessProfileToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteAccessProfile"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                If there was access profile deleted at Step <xref linkend="tc.ACCESS_RULES-3-1-7.4"/>, restore it (in <emphasis role="italic">accessProfileToRestore</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperRestoreAccessProfile"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ModifyAccessProfilesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullpointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.

              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are comparied at step <xref linkend="tc.ACCESS_RULES-3-1-7.16"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessProfile:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPolicy
                      <itemizedlist>
                        <listitem>
                          <para>
                            ScheduleToken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Entity
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            EntityType (skipped and "tac:AccessPointInfo" means the same, where tac is the namespace of the access control service: "http://www.onvif.org/ver10/accesscontrol/wsdl")
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-3-1-8-->
      <section xml:id="tc.ACCESS_RULES-3-1-8">
        <title>DELETE ACCESS PROFILE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>  ACCESS_RULES-3-1-8
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>   AccessProfileInfo (ONVIF Access Rules Service Specification), AccessProfile (ONVIF Access Rules Service Specification), DeleteAccessProfile command (ONVIF Access Rules Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteAccessProfile
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis>  accessrules.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Delete Access Profile and to verify tns1:Configuration/AccessProfile/ Removed event generation.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT. Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature.  The DUT shall have enough free storage capacity for one additional Access Profile.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileCompleteList1</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfilesList"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-8.4">
              <para>
                ONVIF Client checks free storage for additional Access Profile (in <emphasis role="italic">accessProfileCompleteList1</emphasis>, out <emphasis role="italic">accessProfileToRestore</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessProfile"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedules (out <emphasis role="italic">scheduleCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If Access Control service is supported by the DUT, ONVIF Client retrieves a complete list of access point information (out <emphasis role="italic">accessPointInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client creates access profile (in <emphasis role="italic">scheduleCompleteList</emphasis>, <emphasis role="italic">accessPointInfoCompleteList</emphasis>, out <emphasis role="italic">accessProfileToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCreateAccessProfile"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Filter.TopicExpression := "tns1:Configuration/AccessProfile/Removed"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">DeleteAccessProfile </emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">accessProfileToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with empty <emphasis role="bold">DeleteAccessProfileResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-8.12">
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint s with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Timeout := PT60S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            MessageLimit := 1
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage =: <emphasis role="italic">m</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the TopicExpression item in <emphasis role="italic">m</emphasis> is not equal to "tns1:Configuration/AccessProfile/Removed", FAIL the test and go to the step <xref linkend="tc.ACCESS_RULES-3-1-8.25"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the AccessProfileToken source simple item in <emphasis role="italic">m</emphasis> is not equal to <emphasis role="italic">accessProfileToken</emphasis>, go to the step <xref linkend="tc.ACCESS_RULES-3-1-8.23"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the AccessProfileToken source simple item in <emphasis role="italic">m</emphasis> is equal to <emphasis role="italic">accessProfileToken</emphasis>, go to the step <xref linkend="tc.ACCESS_RULES-3-1-8.14"/>.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">timeout1</emphasis> timeout expires for step <xref linkend="tc.ACCESS_RULES-3-1-8.12"/> without Notification with AccessProfileToken source simple item equal to <emphasis role="italic">accessProfileToken</emphasis>, FAIL the test and go to the step <xref linkend="tc.ACCESS_RULES-3-1-8.23"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-8.14">
              <para>
                ONVIF Client retrieves an access profile (in <emphasis role="italic">accessProfileToken</emphasis>, out <emphasis role="italic">accessProfileList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfile"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileList</emphasis> is not empty, FAIL the test and go Step <xref linkend="tc.ACCESS_RULES-3-1-8.23"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an access profile info (in <emphasis role="italic">accessProfileToken</emphasis>, out <emphasis role="italic">accessProfileInfo</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfo"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfo</emphasis> is not empty, FAIL the test and go Step <xref linkend="tc.ACCESS_RULES-3-1-8.23"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles info (out <emphasis role="italic">accessProfileInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList</emphasis> have <emphasis role="italic">accessProfileInfo</emphasis> item with token equal to <emphasis role="italic">accessProfileToken</emphasis>, FAIL the test and go step <xref linkend="tc.ACCESS_RULES-3-1-8.23"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileCompleteList2</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfilesList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If there was access profile deleted at step <xref linkend="tc.ACCESS_RULES-3-1-8.4"/>:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">accessProfileCompleteList1</emphasis> := <emphasis role="italic">accessProfileCompleteList1</emphasis> without  <emphasis role="italic">accessProfileToRestore</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList2</emphasis> is not equal to <emphasis role="italic">accessProfileCompleteList1</emphasis>, FAIL the test and go to step <xref linkend="tc.ACCESS_RULES-3-1-8.23"/>.

              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-8.23">
              <para>
                If there was access profile deleted at Step <xref linkend="tc.ACCESS_RULES-3-1-8.4"/>, restore it (in <emphasis role="italic">accessProfileToRestore</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperRestoreAccessProfile"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-8.25">
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">DeleteAccessProfilesResponse </emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullpointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.

              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--ACCESS_RULES-3-1-9-->
      <section xml:id="tc.ACCESS_RULES-3-1-9">
        <title>GET ACCESS PROFILES WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESS_RULES-3-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  AccessProfileInfo (ONVIF Access Rules Service Specification), AccessProfile (ONVIF Access Rules Service Specification), GetAccessProfiles command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessProfiles
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis>  accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis>  To verify Get Access Profiles with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">accessProfileInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfiles</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfile list =: <emphasis role="italic">accessProfilesList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfilesList</emphasis> is not empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is less than 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfiles</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token[0]:= <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Token[1]:= <emphasis role="italic">accessProfileInfoCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessProfilesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfileInfo list =: <emphasis role="italic">accessProfilesList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfilesList</emphasis> is empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfilesList</emphasis> contains more than one item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfilesList</emphasis>[0].token does not equal to <emphasis role="italic">accessProfileInfoCompleteList</emphasis>[0].token, FAIL the test.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessProfilesResponse </emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-3-1-10-->
      <section xml:id="tc.ACCESS_RULES-3-1-10">
        <title>GET ACCESS PROFILES - TOO MANY ITEMS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>  ACCESS_RULES-3-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  AccessProfile (ONVIF Access Rules Service Specification), GetAccessProfiles command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis>  GetAccessProfiles
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis>  To verify Get Access Profiles in case if there a more items than MaxLimit in request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfilesList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessProfileCompleteList</emphasis>.token items number is less than <emphasis role="italic">cap</emphasis>.MaxLimit or equal to <emphasis role="italic">cap</emphasis>.MaxLimit, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">accessProfileInfoCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit + 1]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessProfiles</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send env:Sender\ter:InvalidArgs\ter:TooManyItems SOAP 1.2 fault.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-3-1-11-->
      <section xml:id="tc.ACCESS_RULES-3-1-11">
        <title>CREATE ACCESS PROFILE - NOT EMPTY ACCESS PROFILE TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>   ACCESS_RULES-3-1-11
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  AccessProfile (ONVIF Access Rules Service Specification), CreateAccessProfile command (ONVIF Access Rules Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis>  CreateAccessProfile
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis>  accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis>  To verify Create Access Profiles with not empty token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT. The DUT shall have enough free storage capacity for one additional Access Profile.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">CreateAccessProfile</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfile.token := "AccessProfileToken"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Name := "Test Access Profile"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy is skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgs</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send env:Sender\ter:InvalidArgs SOAP 1.2 fault.
              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
      <!--ACCESS_RULES-3-1-12-->
      <section xml:id="tc.ACCESS_RULES-3-1-12">
        <title>CREATE ACCESS PROFILE - MULTIPLE SCHEDULES NOT SUPPORTED</title>

        <para>
          <emphasis role="bold">Test Case ID:</emphasis>  ACCESS_RULES-3-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  AccessProfileInfo (ONVIF Access Rules Service Specification), AccessProfile (ONVIF Access Rules Service Specification), CreateAccessProfile command (ONVIF Access Rules Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateAccessProfile
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis>  accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis>  To verify Create Access Profiles with several access policies specifying different schedules for the same access point when MultipleSchedulesPerAccessPointSupported is not Supported.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>   Access Rules Service is received from the DUT. Schedule Service is received from the DUT. The DUT shall have enough free storage capacity for one additional Access Profile.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MultipleSchedulesPerAccessPointSupported is equal to true, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedules (out <emphasis role="italic">scheduleCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList</emphasis> contains less than two schedules, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If Access Control service is supported by the DUT, ONVIF Client retrieves a complete list of access point information (out <emphasis role="italic">accessPointInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">CreateAccessProfile</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfile.token := ""
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Name := "Test Access Profile"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[0].ScheduleToken := <emphasis role="italic">scheduleCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[0].Entity := <emphasis role="italic">accessPointInfoCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[0].EntityType skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[0].Extension skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[1].ScheduleToken := <emphasis role="italic">scheduleCompleteList</emphasis>[1].token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[1].Entity := <emphasis role="italic">accessPointInfoCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[1].EntityType skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy[1].Extension skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Extension skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:CapabilityViolated\ter:MultipleSchedulesPerAccessPointSupported</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:CapabilityViolated\ter:MultipleSchedulesPerAccessPointSupported</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends other SOAP 1.2 fault message than specified, log WARNING message, and PASS the test.
        </para>
      </section>
      <!--ACCESS_RULES-3-1-13-->
      <section xml:id="tc.ACCESS_RULES-3-1-13">
        <title>MODIFY ACCESS PROFILE WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>  ACCESS_RULES-3-1-13
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ModifyAccessProfile command (ONVIF Access Rules Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ModifyAccessProfile
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis>To verify Modify Access Profile with invalid Access Profile token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profile info (out <emphasis role="italic">accessProfileInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">accessProfileInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ModifyAccessProfile</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfile.token := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Name := "Test Access Profile"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.AccessPolicy is skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends other SOAP 1.2 fault message than specified, log WARNING message, and PASS the test.
        </para>
      </section>
      <!--ACCESS_RULES-3-1-14-->
      <section xml:id="tc.ACCESS_RULES-3-1-14">
        <title>DELETE ACCESS PROFILE WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>   ACCESS_RULES-3-1-14
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DeleteAccessProfile command (ONVIF Access Rules Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteAccessProfile
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis>  accessrules.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis>  To verify Delete Access Profile with invalid Access Profile token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profile info (out <emphasis role="italic">accessProfileInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">accessProfileInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">DeleteAccessProfile </emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">accessProfileToken</emphasis>
                    </para>
                  </listitem>

                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>


          </orderedlist>

        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends other SOAP 1.2 fault message than specified, log WARNING message, and PASS the test.
        </para>
      </section>
      <!--ACCESS_RULES-3-1-15-->
      <section xml:id="tc.ACCESS_RULES-3-1-15">
        <title>SET NEW ACCESS PROFILE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>   ACCESS_RULES-3-1-15
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  AccessProfileInfo (ONVIF Access Rules Service Specification), AccessProfile (ONVIF Access Rules Service Specification), SetAccessProfile command (ONVIF Access Rules Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetAccessProfile, tns1:Configuration/AccessProfile/Changed
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Create Access Profiles using SetAccessProfile command and to verify tns1:Configuration/AccessProfile/Changed event generation.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Rules Service is received from the DUT. Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. Client Supplied Token is supported by the DUT. The DUT shall have enough free storage capacity for one additional Access Profile.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access profiles by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfilesList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">initialAccessProfileCompleteList</emphasis> - access profile complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem  xml:id="tc.ACCESS_RULES-3-1-15.RemoveAccessProfile">
              <para>
                ONVIF Client checks free storage for additional access profile by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessProfile"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">initialAccessProfileCompleteList</emphasis> - access profile complete list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessProfileToRestore</emphasis> - removed access profile
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If Access Control service is supported by the DUT:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves complete list of access point information by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfoList"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - access point info complete list
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> is not empty:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves complete list of schedules by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">initialScheduleCompleteList</emphasis> - schedule complete list
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleCompleteList</emphasis> is not empty:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            Set <emphasis role="italic">scheduleToken</emphasis>:= <emphasis role="italic">scheduleCompleteList</emphasis>[0].token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Go to step <xref linkend="tc.ACCESS_RULES-3-1-15.PreparationCompleted"/>.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client retrieves Schedule Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilitiesSchedule"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">cap</emphasis> - Schedule Service capabilities
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">cap</emphasis> - Schedule Service capabilities
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            out <emphasis role="italic">scheduleiCalendarValue</emphasis> - iCalendar value for the Schedule.Standard field
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">cap</emphasis>.SpecialDaysSupported = true:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="2.5em"?>
                        <listitem>
                          <para>
                            ONVIF Client creates special day group by following the procedure mentioned in <xref linkend="Annex_HelperCreateSpecialDayGroup"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  out <emphasis role="italic">specialDayGroupToken</emphasis> - token of new special day group
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client creates schedule by following the procedure mentioned in <xref linkend="Annex_HelperCreateSchedule"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">scheduleToken</emphasis> - token of new schedule
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">scheduleiCalendarValue</emphasis> - iCalendar value for the Schedule.Standard field
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">specialDayGroupToken</emphasis> - special day group token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-15.PreparationCompleted">
              <para>
                Set <emphasis role="italic">accessProfileToken</emphasis> := token that differs from tokens listed in <emphasis role="italic">initialAccessProfileCompleteList</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/AccessProfile/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">accessProfile</emphasis> :=
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfile.token := <emphasis role="italic">accessProfileToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Name := "Test Access Profile"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointInfoCompleteList</emphasis> contains at least one item:
                      <itemizedlist>
                        <listitem>
                          <para>
                            AccessProfile.AccessPolicy[0].ScheduleToken := <emphasis role="italic">scheduleToken</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessProfile.AccessPolicy[0].Entity := <emphasis role="italic">accessPointInfoCompleteList</emphasis>[0].token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessProfile.AccessPolicy[0].EntityType is skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessProfile.AccessPolicy[0].Extension is skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                    <para>
                      otherwise:
                      <itemizedlist>
                        <listitem>
                          <para>
                            AccessProfile.AccessPolicy is skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Extension is skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">SetAccessProfile</emphasis> requiest with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfile := <emphasis role="italic">accessProfile</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetAccessProfileResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/AccessProfile/Changed</emphasis> event for the specified Schedule token by following the procedure mentioned in <xref linkend="Annex_HelperPullAccessProfileChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessProfileToken</emphasis> - access profile token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a access profile by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfile"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessProfileToken</emphasis> - access profile token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessProfileList</emphasis> - the list of access profiles
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-15.CompareAccessProfile1">
              <para>
                If <emphasis role="italic">accessProfileList</emphasis>[0] item does not have equal to <emphasis role="italic">accessProfile</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a access profile info by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessProfileToken</emphasis> - access profile token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessProfileInfoList</emphasis> - the list of access profiles info
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-15.CompareAccessProfileInfo1">
              <para>
                If <emphasis role="italic">accessProfileInfoList</emphasis>[0] item does not have equal fields with <emphasis role="italic">accessProfile</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access profiles info by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessProfileInfoCompleteList</emphasis> - access profile info complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-15.CompareAccessProfileInfo2">
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList</emphasis> does not have AccessProfileInfo[token = <emphasis role="italic">accessProfileToken</emphasis>] item with equal fields with <emphasis role="italic">accessProfile</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access profiles by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfilesList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessProfileCompleteList</emphasis> - access profile complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-15.CompareAccessProfile2">
              <para>
                If <emphasis role="italic">accessProfileCompleteList</emphasis> does not have AccessProfile[token = <emphasis role="italic">accessProfileToken</emphasis>] item with equal fields with <emphasis role="italic">accessProfile</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the Access Profile by following the procedure mentioned in <xref linkend="Annex_HelperDeleteAccessProfile"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessProfileToken</emphasis> - access profile token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If there was access profile deleted at step <xref linkend="tc.ACCESS_RULES-3-1-15.RemoveAccessProfile"/>:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client restores access profile by following the procedure mentioned in <xref linkend="Annex_HelperRestoreAccessProfile"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">accessProfileToRestore</emphasis> - removed access profile
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the Schedule by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSchedule"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">scheduleToken</emphasis> - schedule token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.SpecialDaysSupported = true:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client deletes special day group by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSpecialDayGroup"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">specialDayGroupToken</emphasis> - special day group token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetAccessProfilesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are comparied at steps <xref linkend="tc.ACCESS_RULES-3-1-15.CompareAccessProfile1"/> and <xref linkend="tc.ACCESS_RULES-3-1-15.CompareAccessProfile2"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessProfile:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPolicy
                      <itemizedlist>
                        <listitem>
                          <para>
                            ScheduleToken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Entity
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            EntityType
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are comparied at steps <xref linkend="tc.ACCESS_RULES-3-1-15.CompareAccessProfileInfo1"/> and <xref linkend="tc.ACCESS_RULES-3-1-15.CompareAccessProfileInfo2"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessProfileInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>

                </itemizedlist>
              </para>
            </listitem>

          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-3-1-16-->
      <section xml:id="tc.ACCESS_RULES-3-1-16">
        <title>SET ACCESS PROFILE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>  ACCESS_RULES-3-1-16
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessProfileInfo (ONVIF Access Rules Service Specification), AccessProfile (ONVIF Access Rules Service Specification), SetAccessProfile command (ONVIF Access Rules Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetAccessProfile
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify access profile modification using SetAccessProfile command and to verify tns1:Configuration/AccessProfile/Changed event generation.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Rules Service is received from the DUT. Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. Client Supplied Token is supported by the DUT. The DUT shall have enough free storage capacity for one additional Access Profile.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access profiles by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfilesList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">initialAccessProfileCompleteList</emphasis> - access profile complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem  xml:id="tc.ACCESS_RULES-3-1-16.RemoveAccessProfile">
              <para>
                ONVIF Client checks free storage for additional access profile by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessProfile"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">initialAccessProfileCompleteList</emphasis> - access profile complete list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessProfileToRestore</emphasis> - removed access profile
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of schedules by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">initialScheduleCompleteList</emphasis> - schedule complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If Access Control service is supported by the DUT:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves complete list of access point information by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfoList"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - access point info complete list
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates access profile by following the procedure mentioned in <xref linkend="Annex_HelperCreateAccessProfile"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">scheduleCompleteList</emphasis> - schedule complete list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointInfoCompleteList</emphasis> - access point info complete list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessProfileToken</emphasis> - token of new access profile
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/AccessProfile/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">accessProfile</emphasis> :=
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfile.token := <emphasis role="italic">accessProfileToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Name := "Test Access Profile 2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Description := "Test Description 2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointInfoCompleteList</emphasis> contains at least one item:
                      <itemizedlist>
                        <listitem>
                          <para>
                            AccessProfile.AccessPolicy[0].ScheduleToken := <emphasis role="italic">scheduleToken</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessProfile.AccessPolicy[0].Entity := <emphasis role="italic">accessPointInfoCompleteList</emphasis>[0].token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessProfile.AccessPolicy[0].EntityType is skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessProfile.AccessPolicy[0].Extension is skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                    <para>
                      otherwise:
                      <itemizedlist>
                        <listitem>
                          <para>
                            AccessProfile.AccessPolicy is skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessProfile.Extension is skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">SetAccessProfile</emphasis> requiest with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessProfile := <emphasis role="italic">accessProfile</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetAccessProfileResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/AccessProfile/Changed</emphasis> event for the specified Schedule token by following the procedure mentioned in <xref linkend="Annex_HelperPullAccessProfileChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessProfileToken</emphasis> - access profile token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a access profile by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfile"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessProfileToken</emphasis> - access profile token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessProfileList</emphasis> - the list of access profiles
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-16.CompareAccessProfile1">
              <para>
                If <emphasis role="italic">accessProfileList</emphasis>[0] item does not have equal to <emphasis role="italic">accessProfile</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a access profile info by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessProfileToken</emphasis> - access profile token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessProfileInfoList</emphasis> - the list of access profiles info
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-16.CompareAccessProfileInfo1">
              <para>
                If <emphasis role="italic">accessProfileInfoList</emphasis>[0] item does not have equal fields with <emphasis role="italic">accessProfile</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access profiles info by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfileInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessProfileInfoCompleteList</emphasis> - access profile info complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-16.CompareAccessProfileInfo2">
              <para>
                If <emphasis role="italic">accessProfileInfoCompleteList</emphasis> does not have AccessProfileInfo[token = <emphasis role="italic">accessProfileToken</emphasis>] item with equal fields with <emphasis role="italic">accessProfile</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access profiles by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfilesList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessProfileCompleteList</emphasis> - access profile complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESS_RULES-3-1-16.CompareAccessProfile2">
              <para>
                If <emphasis role="italic">accessProfileCompleteList</emphasis> does not have AccessProfile[token = <emphasis role="italic">accessProfileToken</emphasis>] item with equal fields with <emphasis role="italic">accessProfile</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the Access Profile by following the procedure mentioned in <xref linkend="Annex_HelperDeleteAccessProfile"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessProfileToken</emphasis> - access profile token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If there was access profile deleted at step <xref linkend="tc.ACCESS_RULES-3-1-16.RemoveAccessProfile"/>:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client restores access profile by following the procedure mentioned in <xref linkend="Annex_HelperRestoreAccessProfile"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">accessProfileToRestore</emphasis> - removed access profile
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetAccessProfilesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are comparied at steps <xref linkend="tc.ACCESS_RULES-3-1-16.CompareAccessProfile1"/> and <xref linkend="tc.ACCESS_RULES-3-1-16.CompareAccessProfile2"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessProfile:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPolicy
                      <itemizedlist>
                        <listitem>
                          <para>
                            ScheduleToken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Entity
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            EntityType
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are comparied at steps <xref linkend="tc.ACCESS_RULES-3-1-16.CompareAccessProfileInfo1"/> and <xref linkend="tc.ACCESS_RULES-3-1-16.CompareAccessProfileInfo2"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessProfileInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>

                </itemizedlist>
              </para>
            </listitem>

          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Events-->
    <section xml:id="tc.access_rules.events" xreflabel="Section 4.4">
      <title>Events</title>
      <!--ACCESS_RULES-5-1-1-->
      <section xml:id="tc.ACCESS_RULES-5-1-1">
        <title>ACCESS PROFILE CHANGED EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESS_RULES-5-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  Event Changed (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetEventProperties
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Configuration/AccessProfile/Changed event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>   Access Rules Service is supported by the DUT. Event Service is supported by the DUT. 
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:Configuration/AccessProfile/Changed topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:Configuration/AccessProfile/Changed topic (<emphasis role="italic">ChangedTopic</emphasis>) from <emphasis role="italic">topicSet</emphasis>:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">ChangedTopic</emphasis>.MessageDescription.IsProperty equals to true, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">ChangedTopic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name = "AccessProfileToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">ChangedTopic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name = "AccessProfileToken" does not have Type = "pt:ReferenceToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetEventPropertiesResponse </emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESS_RULES-5-1-2-->
      <section xml:id="tc.ACCESS_RULES-5-1-2">
        <title>ACCESS PROFILE REMOVED EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESS_RULES-5-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  Event Changed (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetEventProperties
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Configuration/AccessProfile/Removed event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is supported by the DUT. Event Service is supported by the DUT. 
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:Configuration/AccessProfile/Removed topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:Configuration/AccessProfile/Removed topic (<emphasis role="italic">RemovedTopic</emphasis>) from <emphasis role="italic">topicSet</emphasis>:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">RemovedTopic</emphasis>.MessageDescription.IsProperty equals to true, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">RemovedTopic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name = "AccessProfileToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">RemovedTopic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name = "AccessProfileToken" does not have Type = "pt:ReferenceToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetEventPropertiesResponse </emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--	Consistency-->
    <section xml:id="tc.access_rules.consistency" xreflabel="Section 4.5">
      <title>Consistency</title>
      <!--ACCESS_RULES-6-1-1-->
      <section xml:id="tc.ACCESS_RULES-6-1-1">
        <title>ACCESS POLICIES AND AСCESS POINT CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis>  ACCESS_RULES-6-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>  AccessPolicy (ONVIF Access Rules Service Specification), AccessPoint (ONVIF Access Control Service Specification)
          ServiceCapabilities (ONVIF Access Rules Service Specification), GetServiceCapabilities command (ONVIF Access Rules Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessProfileList, GetAccessPointInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accessrules.wsdl and accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis>  To verify that Access Policies List contains only Access Points from Access Point Info List.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Rules Service is received from the DUT. Access Control Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access profiles (out <emphasis role="italic">accessProfileCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessProfilesList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access point information (out <emphasis role="italic">accessPointInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                For each access profile (<emphasis role="italic">accessProfile</emphasis>) from <emphasis role="italic">accessProfileCompleteList</emphasis> do the following:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      For each <emphasis role="italic">accessProfile</emphasis>.AccessPolicy with skipped EntityType or EntityType equal to tac:AccessPoint repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not contain Access Point token equal to  <emphasis role="italic">accessProfile</emphasis>.AccessPolicy.Entity item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
  </chapter>
  <appendix>
    <title>Helper Procedures and Additional Notes</title>
    <!--A.1-->
    <section xml:id="Annex_HelperGetAccessProfileInfoList" xreflabel="Annex A.1">
      <title>Get access profiles information list</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAccessProfileInfoList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get complete access profiles information list.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Rules Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The complete list of access profiles information (<emphasis role="italic">accessProfileInfoCompleteList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">GetAccessProfileInfoList</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Limit skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    StartReference skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoCompleteList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF client invokes <emphasis role="bold">GetAccessProfileInfoList</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Limit skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          StartReference := <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          AccessProfileInfo list =: <emphasis role="italic">accessProfileInfoListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set the following:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">accessProfileInfoCompleteList</emphasis> := <emphasis role="italic">accessProfileInfoCompleteList</emphasis> + <emphasis role="italic">accessProfileInfoListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAccessProfileInfoListResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.2-->
    <section xml:id="Annex_HelperGetServiceCapabilities" xreflabel="Annex A.2">
      <title>Get service capabilities</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetServiceCapabilities
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get service capabilities.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Rules Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The service capabilities (<emphasis role="italic">cap</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes  <emphasis role="bold">GetServiceCapabilities</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Capabilities =: <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.3-->
    <section xml:id="Annex_HelperGetAccessProfilesList" xreflabel="Annex A.3">
      <title>Get access profiles list</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAccessProfilesList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get complete access profiless list with.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Rules Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The complete list of access profiles (<emphasis role="italic">accessProfileCompleteList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">GetAccessProfileList</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Limit skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    StartReference skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAccessProfileListResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessProfile list =: <emphasis role="italic">accessProfileCompleteList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF client invokes <emphasis role="bold">GetAccessProfileList</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Limit skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          StartReference := <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetAccessProfileListResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          AccessProfile list =: <emphasis role="italic">accessProfileListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set the following:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">accessProfileCompleteList</emphasis> := <emphasis role="italic">accessProfileCompleteList</emphasis> + <emphasis role="italic">accessProfileListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>

            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAccessProfileListResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.4-->
    <section xml:id="Annex_HelperGetScheduleList" xreflabel="Annex A.4">
      <title>Get schedule list</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetScheduleList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get complete schedule list.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The complete list of schedules (<emphasis role="italic">scheduleCompleteList</emphasis>).

      </para>

      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetScheduleList </emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Limit skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    StartReference skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetScheduleListResponse </emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Schedule list =: <emphasis role="italic">scheduleCompleteList</emphasis>

                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF client invokes <emphasis role="bold">GetScheduleList</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Limit skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          StartReference := <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Schedule list =: <emphasis role="italic">scheduleListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set the following:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">scheduleCompleteList</emphasis> := <emphasis role="italic">scheduleCompleteList</emphasis> + <emphasis role="italic">scheduleListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>

            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetScheduleListResponse </emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.5-->
    <section xml:id="Annex_HelperGetAccessPointInfoList" xreflabel="Annex A.5">
      <title>Get access point information list</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAccessPointInfoList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get complete access point information list.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The complete list of access point information (<emphasis role="italic">accessPointInfoCompleteList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAccessPointInfoList</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Limit skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    StartReference skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Schedule list =: <emphasis role="italic">accessPointInfoCompleteList</emphasis>

                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF client invokes <emphasis role="bold">GetAccessPointInfoList</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Limit skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          StartReference := <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          AccessPointInfo list =: <emphasis role="italic">accessPointInfoListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set the following:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">accessPointInfoCompleteList</emphasis> := <emphasis role="italic">accessPointInfoCompleteList</emphasis> + <emphasis role="italic">accessPointInfoListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>

            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.6-->
    <section xml:id="Annex_HelperDeleteAccessProfile" xreflabel="Annex A.6">
      <title>Delete access profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteAccessProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete access profile.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Rules Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Access Profile Token (<emphasis role="italic">accessProfileToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">DeleteAccessProfile </emphasis> request.
              <itemizedlist>
                <listitem>
                  <para>
                    Token  =: <emphasis role="italic">accessProfileToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with empty <emphasis role="bold">DeleteAccessProfileResponse</emphasis> message.

            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">DeleteAccessProfileResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.7-->
    <section xml:id="Annex_HelperCheckFreeStorageForAccessProfile" xreflabel="Annex A.7">
      <title>Free storage for additional access profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCheckFreeStorageForAccessProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to check free storage for additional access profile.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Rules Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> The complete list of access profiles (<emphasis role="italic">accessProfileCompleteList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Access Profile to restore (<emphasis role="italic">accessProfileToRestore</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF client compares <emphasis role="italic">cap</emphasis>.MaxAccessProfiles with number of items at <emphasis role="italic">accessProfileCompleteList</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              If number of items at <emphasis role="italic">accessProfileCompleteList</emphasis> less than <emphasis role="italic">cap</emphasis>.MaxAccessProfiles, skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If number of items at <emphasis role="italic">accessProfileCompleteList</emphasis> equal to <emphasis role="italic">cap</emphasis>.MaxAccessProfiles, execute the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF client invokes <emphasis role="bold">GetAccessProfiles</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Token list := <emphasis role="italic">accessProfileCompleteList</emphasis>[0].token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetAccessProfilesResponse </emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          AccessProfile list =: <emphasis role="italic">accessProfileToRestore</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client deletes the Access Profile (in <emphasis role="italic">accessProfileCompleteList</emphasis>[0].token) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteAccessProfile"/>.
                  </para>
                </listitem>
              </orderedlist>

            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The number of items at <emphasis role="italic">accessProfileCompleteList</emphasis> more than <emphasis role="italic">cap</emphasis>.MaxAccessProfiles.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.8-->
    <section xml:id="Annex_HelperGetAccessProfile" xreflabel="Annex A.8">
      <title>Get access profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAccessProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get access profile.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Rules Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Access Profile Token (<emphasis role="italic">accessProfileToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Access Profile List (<emphasis role="italic">accessProfileList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAccessProfiles</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token[0] := <emphasis role="italic">accessProfileToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAccessProfilesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    AccessProfile list =: <emphasis role="italic">accessProfileList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAccessProfilesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.9-->
    <section xml:id="Annex_HelperGetAccessProfileInfo" xreflabel="Annex A.9">
      <title>Get access profile info</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAccessProfileInfo
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get access profile info.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Rules Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Access Profile Token (<emphasis role="italic">accessProfileToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Access Profile Info List (<emphasis role="italic">accessProfileInfoList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAccessProfileInfo</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token := <emphasis role="italic">accessProfileToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAccessProfileInfoResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    AccessProfileInfo =: <emphasis role="italic">accessProfileInfoList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetAccessProfilesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.10-->
    <section xml:id="Annex_HelperRestoreAccessProfile" xreflabel="Annex A.10">
      <title>Restore access profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperRestoreAccessProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to restore access profile.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Rules Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Access Profile (<emphasis role="italic">accessProfile</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreateAccessProfile</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    AccessProfile := <emphasis role="italic">accessProfile</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreateAccessProfileResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">accessProfileToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreateAccessProfileResponse </emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.11-->
    <section xml:id="Annex_HelperCreateAccessProfile" xreflabel="Annex A.11">
      <title>Create access profile</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreateAccessProfile
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to Create access profile.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Rules Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Complete list of scedules (<emphasis role="italic">scheduleCompleteList</emphasis>), complete list of accesss point info (<emphasis role="italic">accessPointInfoCompleteList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Access Profile Token (<emphasis role="italic">accessProfileToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">CreateAccessProfile</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    AccessProfile.token := ""
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessProfile.Name := "Test Access Profile"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessProfile.Description := "Test Description"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessProfile.AccessPolicy is skipped if <emphasis role="italic">scheduleCompleteList</emphasis>  or <emphasis role="italic">accessPointInfoCompleteList</emphasis> is empty
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessProfile.AccessPolicy[0].ScheduleToken := <emphasis role="italic">scheduleCompleteList</emphasis>[0].token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessProfile.AccessPolicy[0].Entity := <emphasis role="italic">accessPointInfoCompleteList</emphasis>[0].token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessProfile.AccessPolicy[0].EntityType skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessProfile.AccessPolicy[0].Extension skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessProfile.Extension skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreateAccessProfileResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">accessProfileToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreateAccessProfileResponse </emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.12-->
    <section xml:id="Annex_HelperGetServiceCapabilitiesSchedule" xreflabel="Annex A.12">
      <title>Get service capabilities (Schedule)</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetServiceCapabilitiesSchedule
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get service capabilities for Schedule Service.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The service capabilities (<emphasis role="italic">cap</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes  <emphasis role="bold">GetServiceCapabilities</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    Capabilities =: <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.13-->
    <section xml:id="Annex_HelperUIDiCalendarGeneration" xreflabel="Annex A.13">
      <title>Generate UID value for iCalendar</title>
      <para>
        <emphasis role="bold">Name: </emphasis>HelperUIDiCalendarGeneration
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to generate Unique Identifier value for UID field in iCalendar.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Unique Identifier value for UID field in iCalendar (<emphasis role="italic">uid</emphasis>) that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>ONVIF Client generates Globally Unique Identifier value.</para>
          </listitem>
        </orderedlist>

      </para>
    </section>
    <!--A.14-->
    <section xml:id="Annex_HelperScheduleiCalendarGeneration" xreflabel="Annex A.14">
      <title>Generate iCalendar value for Schedule</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperScheduleiCalendarGeneration
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to generate iCalendar value for Schedule.Standard field.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> The Schedule service capabilities (<emphasis role="italic">cap</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> iCalendar value for Standard field (<emphasis role="italic">scheduleiCalendarValue</emphasis>) that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client generates Unique Identifier value for UID field in iCalendar (out <emphasis role="italic">uid</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperUIDiCalendarGeneration"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.ExtendedRecurrenceSupported is equal to true, set the following:<itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="italic">scheduleiCalendarValue</emphasis> := &quot;BEGIN:VCALENDAR
                  </para>
                  <para>BEGIN:VEVENT</para>
                  <para>SUMMARY:Access from 9 AM to 6 PM</para>
                  <para>DTSTART:&lt;current year&gt;&lt; current month&gt;&lt; current day&gt;T090000</para>
                  <para>DTEND:&lt;year of (current day + one week)&gt;&lt;month of (current day + one week)&gt;&lt;day of (current day + one week)&gt;T180000</para>
                  <para>RRULE:FREQ=DAILY</para>
                  <para>
                    UID:<emphasis role="italic">uid</emphasis>
                  </para>
                  <para>END:VEVENT</para>
                  <para>
                    END:VCALENDAR&quot;
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.ExtendedRecurrenceSupported is equal to false, set the following:<itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="italic">scheduleiCalendarValue</emphasis> := &quot;BEGIN:VCALENDAR
                  </para>
                  <para>BEGIN:VEVENT</para>
                  <para>SUMMARY:Access on weekdays from 9 AM to 6 PM for employees</para>
                  <para>DTSTART:1970&lt;current month&gt;&lt;current day&gt;T090000</para>
                  <para>DTEND:1970&lt;current month&gt;&lt;current day&gt;T180000</para>
                  <para>RRULE:FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR</para>
                  <para>
                    UID:<emphasis role="italic">uid</emphasis>
                  </para>
                  <para>END:VEVENT</para>
                  <para>
                    END:VCALENDAR&quot;
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>

      </para>
    </section>
    <!--A.15-->
    <section xml:id="Annex_HelperCreateSpecialDayGroup" xreflabel="Annex A.15">
      <title>Create special day group</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperCreateSpecialDayGroup
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create SpecialDayGroup with Days field value that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported. The DUT shall have enough free storage capacity for one additional SpecialDayGroup.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> iCalendar value of the SpecialDayGroup.Days field (<emphasis role="italic">days</emphasis>) that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Returns: Special day group token (<emphasis role="italic">specialDayGroupToken</emphasis>), iCalendar value of Days field (<emphasis role="italic">days</emphasis>) that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client generates Unique Identifier value for UID field in iCalendar (out <emphasis role="italic">uid</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperUIDiCalendarGeneration"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">days</emphasis> is empty, set the following:<itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="italic">days </emphasis> := &quot;BEGIN:VCALENDAR
                  </para>
                  <para>BEGIN:VEVENT</para>
                  <para>SUMMARY:Test special days</para>
                  <para>DTSTART:&lt;current year&gt;&lt;current month&gt;&lt;current day&gt;T000000</para>
                  <para>DTEND:&lt;year of the next day&gt;&lt;month of the next day&gt;&lt;day of the next day&gt;T000000</para>
                  <para>
                    UID:<emphasis role="italic">uid</emphasis>
                  </para>
                  <para>END:VEVENT</para>
                  <para>
                    END:VCALENDAR&quot;
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">CreateSpecialDayGroup</emphasis> with parameters<itemizedlist>
                <listitem>
                  <para>SpecialDayGroup.token := &quot;&quot;</para>
                </listitem>
                <listitem>
                  <para>SpecialDayGroup.Name := &quot;Test SpecialDayGroup Name&quot;</para>
                </listitem>
                <listitem>
                  <para>SpecialDayGroup.Description := &quot;Test SpecialDayGroup Description&quot;</para>
                </listitem>
                <listitem>
                  <para>
                    SpecialDayGroup.Days := <emphasis role="italic">days</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreateSpecialDayGroupResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">specialDayGroupToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">CreateSpecialDayGroupResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.16-->
    <section xml:id="Annex_HelperCreateSchedule" xreflabel="Annex A.16">
      <title>Create Schedule</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperCreateSchedule
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create Schedule with Standard field value that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT. The DUT shall have enough free storage capacity for one additional Schedule.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> iCalendar value of the Schedule.Standard field (<emphasis role="italic">scheduleiCalendarValue</emphasis>), SpecialDayGroupToken (<emphasis role="italic">specialDayGroupToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Schedule token (<emphasis role="italic">scheduleToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">CreateSchedule</emphasis> with parameters<itemizedlist>
                <listitem>
                  <para>Schedule.token := &quot;&quot;</para>
                </listitem>
                <listitem>
                  <para>Schedule.Description := &quot;Test Description&quot;</para>
                </listitem>
                <listitem>
                  <para>Schedule.Name := &quot;Test Name&quot;</para>
                </listitem>
                <listitem>
                  <para>
                    Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Schedule.SpecialDays skipped if  <emphasis role="italic">specialDayGroupToken</emphasis> is empty
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Schedule.SpecialDays.GroupToken := <emphasis role="italic">specialDayGroupToken</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>Schedule.SpecialDays.TimeRange.From := &quot;22:00:00&quot;</para>
                </listitem>
                <listitem>
                  <para>Schedule.SpecialDays.TimeRange.Until := &quot;23:00:00&quot;</para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreateScheduleResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">scheduleToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">CreateScheduleResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.17-->
    <section xml:id="Annex_HelperDeleteSchedule" xreflabel="Annex A.17">
      <title>Delete schedule</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperDeleteSchedule
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete schedule.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Schedule Token (<emphasis role="italic">scheduleToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">DeleteSchedule</emphasis> with parameters<itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">scheduleToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with empty  <emphasis role="bold">DeleteScheduleResponse</emphasis> message
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">DeleteScheduleResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.18-->
    <section xml:id="Annex_HelperDeleteSpecialDayGroup" xreflabel="Annex A.18">
      <title>Delete special day group</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperDeleteSpecialDayGroup
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete SpecialDayGroup.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> SpecialDayGroup Token (<emphasis role="italic">specialDayGroupToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">DeleteSpecialDayGroup</emphasis> with parameters<itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">specialDayGroupToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with empty  <emphasis role="bold">DeleteSpecialDayGroupResponse</emphasis> message
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">DeleteSpecialDayGroupResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.19-->
    <section xml:id="Annex_HelperCreatePullPointSubscription" xreflabel="Annex A.19">
      <title>Create Pull Point Subscription</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreatePullPointSubscription
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create PullPoint Subscription with specified Topic.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT. Device supports Pull-Point Notification feature.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Notification Topic (<emphasis role="italic">topic</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>), subscription termination time (<emphasis role="italic">tt</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Filter.TopicExpression := <emphasis role="italic">topic</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    SubscriptionReference =: <emphasis role="italic">s</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    CurrentTime =: <emphasis role="italic">ct</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    TerminationTime =: <emphasis role="italic">tt</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.20-->
    <section xml:id="Annex_HelperDeleteSubscription" xreflabel="Annex A.20">
      <title>Delete Subscription</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteSubscription
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete supscribtion.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT. Device supports Pull-Point Notification feature.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint s.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.21-->
    <section xml:id="Annex_HelperPullAccessProfileChanged" xreflabel="Annex A.21">
      <title>Retrieve Access Profile Changed Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullAccessProfileChanged
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:Configuration/AccessProfile/Changed event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT. Device supports Pull-Point Notification feature.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>),
        Subscription termination time (<emphasis role="italic">tt</emphasis>) and access profile token (<emphasis role="italic">accessProfileToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullAccessProfileChanged.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty and the AccessProfileToken source simple item in <emphasis role="italic">notificationMessageList</emphasis> is equal
                    to <emphasis role="italic">accessProfileToken</emphasis>, skip other steps and finish the procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <xref linkend="Annex_HelperPullAccessProfileChanged.1"/> without
                    Notification with AccessProfileToken source simple item equal to <emphasis role="italic">accessProfileToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
  </appendix>
</book>