<?xml version="1.0" encoding="UTF-8"?>
<!--For PDF version (standard)-->
<!-- <?xml-stylesheet href="docbook/xsl/fo/docbook.xsl" type="text/xsl" ?>-->
<!--For PDF version-->
<!-- <?xml-stylesheet href="ONVIF-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<!--For online version-->
<?xml-stylesheet href="docbook-css/docbook.xsl" type="text/xsl" ?>
<!--For PDF version - New ONVIF-->
<!--<?xml-stylesheet href="../ONVIFNew-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xml="http://www.w3.org/XML/1998/namespace" xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd" version="0.1" xml:id="ONVIF_Profile_Imaging_Client_TS">
  <info>
    <orgname>
      <phrase>
        <trademark class="registered">ONVIF</trademark>
      </phrase>
    </orgname>
    <title>Door Control Device Test Specification</title>
    <subtitle>Version 21.06</subtitle>
    <date>June 2021</date>
    <copyright>
      <year>2021</year>
      <holder>ONVIF, Inc. All rights reserved.</holder>
    </copyright>
    <address>
      <uri>www.onvif.org</uri>
    </address>
    <legalnotice role="notices">
      <para>
        Recipients of this document may copy, distribute, publish, or display this
        document so long as this copyright notice, license and disclaimer are retained with
        all copies of the document. No license is granted to modify this document.
      </para>
      <para>
        THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR
        AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
        NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
        NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY
        PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS,
        COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
      </para>
      <para>
        IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR
        ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES,
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR
        NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE
        POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT. THE
        FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR
        LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE
        AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE
        CORPORATION.
      </para>
    </legalnotice>
    <revhistory>

      <revision>
        <revnumber>13.06</revnumber>
        <date>Jun, 2013</date>
        <revdescription>
          <para>
            First issue
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>13.12</revnumber>
        <date>Dec, 2013</date>
        <revdescription>
          <para>
            Minor updates
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>14.06</revnumber>
        <date>Jun, 2014</date>
        <revdescription>
          <para>
            The following tests were updated with Test Case ID change:
          </para>
          <para>
            ACCESS DOOR
          </para>
          <para>
            BLOCK DOOR
          </para>
          <para>
            DOUBLE LOCK DOOR
          </para>
          <para>
            LOCK DOOR
          </para>
          <para>
            UNLOCK DOOR
          </para>
          <para>
            LOCK DOWN DOOR
          </para>
          <para>
            LOCK DOWN RELEASE DOOR
          </para>
          <para>
            LOCK OPEN DOOR
          </para>
          <para>
            LOCK OPEN RELEASE DOOR
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Aug 16, 2017</date>
        <revdescription>
          <para>
            Current document name was changed from Door Control Test Specification to Door Control Device Test Specification.
          </para>
          <para>
            The document formatting was updated.
          </para>


        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jun 21, 2018</date>
        <revdescription>
          <para>Reformatting document using new template</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.12</revnumber>
        <date>Aug 05, 2019</date>
        <revdescription>
          <para>The following test cases and annexes are added according to #1675:</para>
          <para>DOORCONTROL-8-1-1 GET DOORS</para>
          <para>DOORCONTROL-8-1-2 GET DOOR LIST - LIMIT</para>
          <para>DOORCONTROL-8-1-3 GET DOOR LIST - START REFERENCE AND LIMIT</para>
          <para>DOORCONTROL-8-1-4 GET DOOR LIST - NO LIMIT</para>
          <para>DOORCONTROL-8-1-5 CREATE DOOR (DOOR CAPABILITIES TRUE)</para>
          <para>DOORCONTROL-8-1-6 CREATE DOOR (DOOR CAPABILITIES FALSE)</para>
          <para>DOORCONTROL-8-1-7 MODIFY DOOR</para>
          <para>DOORCONTROL-8-1-8 DELETE DOOR</para>
          <para>DOORCONTROL-8-1-9 GET DOORS WITH INVALID TOKEN</para>
          <para>DOORCONTROL-8-1-10 GET DOORS - TOO MANY ITEMS</para>
          <para>DOORCONTROL-8-1-11 CREATE DOOR - NOT EMPTY DOOR TOKEN</para>
          <para>DOORCONTROL-8-1-12 MODIFY DOOR WITH INVALID TOKEN</para>
          <para>DOORCONTROL-8-1-13 DELETE DOOR WITH INVALID TOKEN</para>
          <para>A.6 Get Door List</para>
          <para>A.7 Get Service Capabilities</para>
          <para>A.8 Free Storage for Additional Door</para>
          <para>A.9 Delete Door</para>
          <para>A.10 Get Door</para>
          <para>A.11 Get Door Info</para>
          <para>A.12 Create Door</para>
          <para>A.13 Create Pull Point Subscription</para>
          <para>A.14 Delete Subscription</para>
          <para>A.15 Retrieve Door Changed Event by PullPoint</para>
          <para>A.16 Retrieve Door Removed Event by PullPoint</para>
          <para>Test Policy updated with new Door Management section</para>
          <para>Scope updated with new Door Management section</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>19.12</revnumber>
        <date>Aug 06, 2019</date>
        <revdescription>
          <para>The following test cases and annexes are added according to #1668:</para>
          <para>DOORCONTROL-8-1-14 CREATE NEW DOOR WITH SET DOOR (DOOR CAPABILITIES TRUE)</para>
          <para>DOORCONTROL-8-1-15 CREATE NEW DOOR WITH SET DOOR (DOOR CAPABILITIES FALSE)</para>
          <para>DOORCONTROL-8-1-16 MODIFY DOOR WITH SET DOOR</para>
          <para>DOORCONTROL-8-1-17 SET DOOR - EMPTY DOOR TOKEN</para>
        </revdescription>
      </revision>
      <!--<revision>
        <revnumber>20.06</revnumber>
        <date>Mar 05, 2020</date>
        <revdescription>
          <para>The following test cases were updated according to #1949:</para>
          <para>DOORCONTROL-7-1-1 DOOR CONTROL – ADD OR CHANGE DOOR EVENT (step 8 added)</para>
          <para>DOORCONTROL-7-1-2 DOOR CONTROL – REMOVE DOOR EVENT (step 8 added)</para>
        </revdescription>
      </revision>-->
      <revision>
        <revnumber>20.06</revnumber>
        <date>Mar 05, 2020</date>
        <revdescription>
          <para>The following test cases were updated in the scope of #1954:</para>
          <para>DOORCONTROL-1-1-1 DOOR CONTROL SERVICE CAPABILITIES (reformatted, step 6 added)</para>       
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>May 13, 2020</date>
        <revdescription>
          <para>Pre-Requisite of the following test cases updated with adding of Pull-Point Notification feature according to #1999:</para>
        <para>DOORCONTROL-6-1-1	DOOR CONTROL – DOOR MODE EVENT</para>
<para>DOORCONTROL-6-1-2	DOOR CONTROL – DOOR PHYSICAL STATE EVENT</para>
<para>DOORCONTROL-6-1-3	DOOR CONTROL – DOOR PHYSICAL STATE EVENT STATE CHANGE</para>
<para>DOORCONTROL-6-1-4	DOOR CONTROL – DOUBLE LOCK PHYSICAL STATE EVENT</para>
<para>DOORCONTROL-6-1-5	DOOR CONTROL – DOUBLE LOCK PHYSICAL STATE EVENT STATE CHANGE</para>
<para>DOORCONTROL-6-1-6	DOOR CONTROL – LOCK PHYSICAL STATE EVENT</para>
<para>DOORCONTROL-6-1-7	DOOR CONTROL – LOCK PHYSICAL STATE EVENT STATE CHANGE</para>
<para>DOORCONTROL-6-1-8	DOOR CONTROL – DOOR TAMPER EVENT</para>
<para>DOORCONTROL-6-1-9	DOOR CONTROL – DOOR TAMPER EVENT STATE CHANGE</para>
<para>DOORCONTROL-6-1-10	DOOR CONTROL – DOOR ALARM EVENT</para>
<para>DOORCONTROL-6-1-11	DOOR CONTROL – DOOR ALARM EVENT STATE CHANGE</para>
<para>DOORCONTROL-6-1-12	DOOR CONTROL – DOOR FAULT EVENT</para>
<para>DOORCONTROL-6-1-13	DOOR CONTROL – DOOR FAULT EVENT STATE CHANGE</para>
<para>DOORCONTROL-7-1-1	DOOR CONTROL – ADD OR CHANGE  DOOR EVENT</para>
<para>DOORCONTROL-7-1-2	DOOR CONTROL – REMOVE  DOOR EVENT</para>
<para>DOORCONTROL-8-1-14	CREATE NEW DOOR WITH SET DOOR (DOOR CAPABILITIES TRUE)</para>
<para>DOORCONTROL-8-1-15	CREATE NEW DOOR WITH SET DOOR (DOOR CAPABILITIES FALSE)</para>
<para>DOORCONTROL-8-1-16	MODIFY DOOR WITH SET DOOR</para>
<para>DOORCONTROL-8-1-17	SET DOOR - EMPTY DOOR TOKEN</para>
<para>DOORCONTROL-3-1-28	ACCESS DOOR</para>
<para>DOORCONTROL-3-1-29	BLOCK DOOR</para>
<para>DOORCONTROL-3-1-30	DOUBLE LOCK DOOR</para>
<para>DOORCONTROL-3-1-31	LOCK DOOR</para>
<para>DOORCONTROL-3-1-32	UNLOCK DOOR</para>
<para>DOORCONTROL-3-1-33	LOCK OPEN DOOR</para>
<para>DOORCONTROL-3-1-34	LOCK OPEN RELEASE DOOR</para>
<para>DOORCONTROL-3-1-35	LOCK DOWN DOOR</para>
<para>DOORCONTROL-3-1-36	LOCK DOWN RELEASE DOOR</para>
        </revdescription>
      </revision>
    <revision>
        <revnumber>20.12</revnumber>
        <date>Oct 26, 2020</date>
        <revdescription>
          <para>Access Point Entity added into Pre-Requisite of the following test cases in the scope of #1866:</para>
          <para>DOORCONTROL-5-1-1 GET ACCESS POINT INFO LIST AND GET DOOR INFO LIST CONSISTENCY</para>         
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Oct 26, 2020</date>
        <revdescription>
          <para>Door Entity added into Pre-Requisite of the following test cases in the scope of #1866:</para>
             <para>DOORCONTROL-2-1-1 GET DOOR STATE</para>
<para>DOORCONTROL-2-1-2 GET DOOR STATE WITH INVALID TOKEN</para>
<para>DOORCONTROL-2-1-3 GET DOOR INFO</para>
<para>DOORCONTROL-2-1-7 GET DOOR INFO LIST – START REFERENCE AND LIMIT</para>
<para>DOORCONTROL-2-1-10 GET DOOR INFO – TOO MANY ITEMS</para>
<para>DOORCONTROL-3-1-10	ACCESS DOOR WITH INVALID TOKEN</para>
<para>DOORCONTROL-3-1-11	BLOCK DOOR WITH INVALID TOKEN</para>
<para>DOORCONTROL-3-1-12	DOUBLE LOCK DOOR WITH INVALID TOKEN</para>
<para>DOORCONTROL-3-1-13	LOCK DOOR WITH INVALID TOKEN</para>
<para>DOORCONTROL-3-1-14	UNLOCK DOOR WITH INVALID TOKEN</para>
<para>DOORCONTROL-3-1-15	LOCK DOWN DOOR WITH INVALID TOKEN</para>
<para>DOORCONTROL-3-1-16	LOCK DOWN RELEASE DOOR WITH INVALID TOKEN</para>
<para>DOORCONTROL-3-1-17	LOCK OPEN DOOR WITH INVALID TOKEN</para>
<para>DOORCONTROL-3-1-18	LOCK OPEN RELEASE DOOR WITH INVALID TOKEN</para>
<para>DOORCONTROL-3-1-19	ACCESS DOOR – COMMAND NOT SUPPORTED</para>
<para>DOORCONTROL-3-1-20	BLOCK DOOR – COMMAND NOT SUPPORTED</para>
<para>DOORCONTROL-3-1-21	DOUBLE LOCK DOOR – COMMAND NOT SUPPORTED</para>
<para>DOORCONTROL-3-1-22	LOCK DOOR – COMMAND NOT SUPPORTED</para>
<para>DOORCONTROL-3-1-23	UNLOCK DOOR – COMMAND NOT SUPPORTED</para>
<para>DOORCONTROL-3-1-24	LOCK DOWN DOOR – COMMAND NOT SUPPORTED</para>
<para>DOORCONTROL-3-1-25	LOCK DOWN RELEASE DOOR – COMMAND NOT SUPPORTED</para>
<para>DOORCONTROL-3-1-26	LOCK OPEN DOOR – COMMAND NOT SUPPORTED</para>
<para>DOORCONTROL-3-1-27	LOCK OPEN RELEASE DOOR – COMMAND NOT SUPPORTED</para>
<para>DOORCONTROL-3-1-28	ACCESS DOOR</para>
<para>DOORCONTROL-3-1-29	BLOCK DOOR</para>
<para>DOORCONTROL-3-1-30	DOUBLE LOCK DOOR</para>
<para>DOORCONTROL-3-1-31	LOCK DOOR</para>
<para>DOORCONTROL-3-1-32	UNLOCK DOOR</para>
<para>DOORCONTROL-3-1-33	LOCK OPEN DOOR</para>
<para>DOORCONTROL-3-1-34	LOCK OPEN RELEASE DOOR</para>
<para>DOORCONTROL-3-1-35	LOCK DOWN DOOR</para>
<para>DOORCONTROL-3-1-36	LOCK DOWN RELEASE DOOR</para>
<para>DOORCONTROL-6-1-1	DOOR CONTROL – DOOR MODE EVENT</para>
<para>DOORCONTROL-6-1-2	DOOR CONTROL – DOOR PHYSICAL STATE EVENT</para>
<para>DOORCONTROL-6-1-3	DOOR CONTROL – DOOR PHYSICAL STATE EVENT STATE CHANGE</para>
<para>DOORCONTROL-6-1-4	DOOR CONTROL – DOUBLE LOCK PHYSICAL STATE EVENT</para>
<para>DOORCONTROL-6-1-5	DOOR CONTROL – DOUBLE LOCK PHYSICAL STATE EVENT STATE CHANGE</para>
<para>DOORCONTROL-6-1-6	DOOR CONTROL – LOCK PHYSICAL STATE EVENT</para>
<para>DOORCONTROL-6-1-7	DOOR CONTROL – LOCK PHYSICAL STATE EVENT STATE CHANGE</para>
<para>DOORCONTROL-6-1-8	DOOR CONTROL – DOOR TAMPER EVENT</para>
<para>DOORCONTROL-6-1-9	DOOR CONTROL – DOOR TAMPER EVENT STATE CHANGE</para>
<para>DOORCONTROL-6-1-10	DOOR CONTROL – DOOR ALARM EVENT</para>
<para>DOORCONTROL-6-1-11	DOOR CONTROL – DOOR ALARM EVENT STATE CHANGE</para>
<para>DOORCONTROL-6-1-12	DOOR CONTROL – DOOR FAULT EVENT</para>
<para>DOORCONTROL-6-1-13	DOOR CONTROL – DOOR FAULT EVENT STATE CHANGE</para>     
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Oct 26, 2020</date>
        <revdescription>
          <para>The following test cases were updated in the scope of #1866:</para>
          <para>DOORCONTROL-2-1-4 GET DOOR INFO WITH INVALID TOKEN (step 8 updated)</para>
	<para>DOORCONTROL-2-1-6 GET DOOR INFO LIST – LIMIT (steps 4, 5, 8.4, 12, 13.3 added, step 8 and 13: condition added)</para>
	<para>DOORCONTROL-2-1-8 GET DOOR INFO LIST – NO LIMIT (step 7 added)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Nov 12, 2020</date>
        <revdescription>
          <para>The following test cases were updated in the scope of #2095:</para>
          <para>DOORCONTROL-5-1-1 GET ACCESS POINT INFO LIST AND GET DOOR INFO LIST CONSISTENCY (Pre-Requisite updated)</para>	
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>Dec 22, 2020</date>
        <revdescription>
          <para>The following test cases was added in the scope of #2033:</para>
          <para>DOORCONTROL-5-1-2 DOOR CAPABILITIES CONSISTENCY</para>	
        </revdescription>
      </revision>
    </revhistory>
  </info>
  <chapter xml:id="s.intro">
    <title>Introduction</title>
    <para>
      The goal of the ONVIF test specification set is to make it possible to realize fully interoperable IP physical security implementation from different vendors. The set of ONVIF test specification describes the test cases need to verify the [ONVIF Network Interface Specs] and [ONVIF Conformance] requirements. And also the test cases are to be basic inputs for some Profile specification requirements. It also describes the test framework, test setup, pre-requisites, test policies needed for the execution of the described test cases.
    </para>
    <para>
      This ONVIF Door Control Test Specification acts as a supplementary document to the [ONVIF Network Interface Specs], illustrating test cases need to be executed and passed. And also this specification acts as an input document to the development of test tool which will be used to test the ONVIF device implementation conformance towards ONVIF standard. This test tool is referred as ONVIF Client hereafter.
    </para>
    <section xml:id="s.intro.scope">
      <title>Scope</title>
      <para>
        This ONVIF Door Control Test Specification defines and regulates the conformance testing procedure for the ONVIF conformant devices. Conformance testing is meant to be functional black-box testing. The objective of this specification is to provide the test cases to test individual requirements of ONVIF devices according to ONVIF Door Control service which is defined in [ONVIF Network Interface Specs].
      </para>
      <para>
        The principal intended purposes are:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>Provide self-assessment tool for implementations.</para>
          </listitem>
          <listitem>
            <para>
              Provide comprehensive test suite coverage for [ONVIF Network Interface Specs].
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        This specification does not address the following:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Product use cases and non-functional (performance and regression) testing.
            </para>
          </listitem>
          <listitem>
            <para>
              SOAP Implementation Interoperability test i.e. Web Service Interoperability Basic Profile version 2.0 (WS-I BP 2.0).
            </para>
          </listitem>
          <listitem>
            <para>
              Network protocol implementation Conformance test for HTTP, HTTPS, RTP protocol.
            </para>
          </listitem>
          <listitem>
            <para>
              Wi-Fi Conformance test
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        The set of ONVIF Test Specification will not cover the complete set of requirements as defined in [ONVIF Network Interface Specs]; instead it would cover its subset.
      </para>
      <para>
        This ONVIF Door Control Test Specification covers ONVIF Door Control service and Door Control Events which are a functional block of [ONVIF Network Interface Specs]. The following sections give a brief overview and scope of each functional block.
      </para>

      <section xml:id="s.intro.scope.capabilities">
        <title>Capabilities</title>
        <para>
          Capabilities test cases cover verification to get Door Control Service capabilities. It means that the following commands are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                GetServices (Device Management Service);
              </para>
            </listitem>
            <listitem>
              <para>
                GetServiceCapabilities.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.general">
        <title>General</title>
        <para>
          General test cases cover verification to get Door list, information and state. It means that the following commands are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                GetDoorInfo;
              </para>
            </listitem>
            <listitem>
              <para>
                GetDoorInfoList;
              </para>
            </listitem>
            <listitem>
              <para>
                GetDoorState.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.door_control">
        <title>Door Control</title>
        <para>
          Door Control test cases cover verification of door control commands and door state change. It means that the following commands and events are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Door/State/DoorMode;
              </para>
            </listitem>
            <listitem>
              <para>
                AccessDoor;
              </para>
            </listitem>
            <listitem>
              <para>
                BlockDoor;
              </para>
            </listitem>
            <listitem>
              <para>
                DoubleLockDoor;
              </para>
            </listitem>
            <listitem>
              <para>
                LockDoor;
              </para>
            </listitem>
            <listitem>
              <para>
                UnlockDoor;
              </para>
            </listitem>
            <listitem>
              <para>
                LockDownDoor;
              </para>
            </listitem>
            <listitem>
              <para>
                LockDownReleaseDoor;
              </para>
            </listitem>
            <listitem>
              <para>
                LockOpenDoor;
              </para>
            </listitem>
            <listitem>
              <para>
                LockOpenReleaseDoor.

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.consistency">
        <title>Consistency</title>
        <para>
          Consistency test cases cover verification of consistency between different entities and commands. It means that consistency between the following entities is covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                Access Point Info and Door Info.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.property_events">
        <title>Property Events</title>
        <para>
          Property events test cases cover verification of property events provided by Door Control Service. It means that the following events are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Door/State/DoorMode;
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:Door/State/DoorPhysicalState;
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:Door/State/LockPhysicalState;
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:Door/State/DoubleLockPhysicalState;
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:Door/State/DoorAlarm;
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:Door/State/DoorTamper;
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:Door/State/DoorFault.

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.door_change_events">
        <title>Door Change Events</title>
        <para>
          Door change events test cases cover verification of door change events provided by Door Control Service. It means that the following events are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Configuration/Door/Change;
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:Configuration/Door/Removed.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.door_management">
        <title>Door Management</title>
        <para>
          Door Management test cases cover verification of getting of door list by GetDoors and GetDoorList commands, creation and modifying of door by CreateDoor, SetDoor, and ModifyDoor commands, and deleting of door by  DeleteDoor command.

        </para>
      </section>
    </section>
  </chapter>
  <chapter xml:id="additions">
    <title>Terms and Definitions</title>
    <section xml:id="additions.definitions">
      <title>Definitions</title>
      <para>This section defines terms that are specific to the ONVIF Door Control Service and tests. For a list of applicable general terms and definitions, please see [ONVIF Base Test].</para>
      <variablelist>
        <varlistentry>
          <term>Credential</term>
          <listitem>
            <para>
              A physical/tangible object, a piece of knowledge, or a facet of a person's physical being, that enables an individual access to a given physical facility or computer-based information system.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Credential (Number)</term>
          <listitem>
            <para>
              A sequence of bytes uniquely identifying a credential at an access point.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Door</term>
          <listitem>
            <para>
              A physical door, barrier, turnstile, etc which can be controlled remotely and restricts access between two areas. A door is usually equipped with an electronic lock and a sensor.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Door Alarm</term>
          <listitem>
            <para>
              An abnormal state of the door where door is forced open or held open beyond the permitted time duration
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Door Lock</term>
          <listitem>
            <para>
              A device that secures a door to prevent access, except when explicitly allowed by the access control system. Lock types include electromagnet, electric strike, etc.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Door Mode</term>
          <listitem>
            <para>
              Logical state of the door indicating whether the door is locked, unlocked, blocked, locked down or locked open etc.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Door Monitor</term>
          <listitem>
            <para>
              Also known as a Door Contact Sensor
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Lock</term>
          <listitem>
            <para>
              An operation after which a door is locked and alarm is unmasked.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Momentary Access</term>
          <listitem>
            <para>
              An operation which invokes the same logic as upon normal access being granted to a credential.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Tamper Detector</term>
          <listitem>
            <para>
              Mechanism commonly available for doors, access points and controllers to detect physical tamper
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Unlock</term>
          <listitem>
            <para>
              An operation to allow a door to be freely used for passage without any door alarms being triggered.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>
  <chapter xml:id="overview">
    <title>Test Overview</title>
    <para>
      This section provides information the test setup procedure and required prerequisites, and the test policies that should be followed for test case execution.
    </para>
    <section xml:id="overview.test_setup">
      <title>Test Setup</title>
      <section xml:id="overview.test_setup.network_configuration">
        <title>Network Configuration for DUT</title>
        <para>
          The generic test configuration for the execution of test cases defined in this document is as shown below (Figure 4.1).
        </para>
        <para>
          Based on the individual test case requirements, some of the entities in the below setup may not be needed for the execution of those corresponding test cases.
        </para>
        <figure>
          <title>Test Configuration for DUT</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="test_network.png" format="PNG" scalefit="0"/>
            </imageobject>
            <textobject>
              <phrase>Test Configuration for DUT</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <para>
          <emphasis role="bold">DUT:</emphasis> ONVIF device to be tested. Hereafter, this is referred to as DUT (Device Under Test).
        </para>
        <para>
          <emphasis role="bold">ONVIF Client (Test Tool):</emphasis> Tests are executed by this system and it controls the behavior of the DUT. It handles both expected and unexpected behavior.
        </para>
        <para>
          <emphasis role="bold">HTTP Proxy:</emphasis> provides facilitation in case of RTP and RTSP tunneling over HTTP.
        </para>
        <para>
          <emphasis role="bold">Wireless Access Point:</emphasis> provides wireless connectivity to the devices that support wireless connection.
        </para>
        <para>
          <emphasis role="bold">DNS Server:</emphasis> provides DNS related information to the connected devices.
        </para>
        <para>
          <emphasis role="bold">DHCP Server:</emphasis> provides IPv4 Address to the connected devices.
        </para>
        <para>
          <emphasis role="bold">NTP Server:</emphasis> provides time synchronization between ONVIF Client and DUT.
        </para>
        <para>
          <emphasis role="bold">Switching Hub:</emphasis> provides network connectivity among all the test equipments in the test environment. All devices should be connected to the Switching Hub.
          When running multiple test instances in parallel on the same network, the Switching Hub should be configured to use filtering in order to avoid multicast traffic being flooded to all ports, because this may affect test stability.
        </para>
        <para>
          <emphasis role="bold">Router:</emphasis> provides router advertisements for IPv6 configuration.
        </para>
      </section>
    </section>
    <section xml:id="overview.prerequisites">
      <title>Prerequisites</title>
      <para>
        The pre-requisites for executing the test cases described in this Test Specification are:
        <itemizedlist>
          <listitem>
            <para>
              The DUT shall be configured with an IPv4 address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be IP reachable [in the test configuration].
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be able to be discovered by the Test Tool.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be configured with the time, i.e. manual configuration of UTC time and if NTP is supported by the DUT then NTP time shall be synchronized with NTP Server.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT time and Test tool time shall be synchronized with each other either manually or by a common NTP server.
            </para>
          </listitem>
          <listitem>
            <para>
              Test Operator shall configure Operation Delay properly so that it would have enough time to receive Notification messages for the following test cases for ONVIF Device Test Tool (see test description for more details):
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-3-1-28">4.3.19 ACCESS DOOR</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-3-1-29">4.3.20 BLOCK DOOR</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-3-1-30">4.3.21 DOUBLE LOCK DOOR</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-3-1-31">4.3.22 LOCK DOOR</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-3-1-32">4.3.23 UNLOCK DOOR</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-3-1-33">4.3.24 LOCK OPEN DOOR</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-3-1-34">4.3.25 LOCK OPEN RELEASE DOOR</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-3-1-35">4.3.26 LOCK DOWN DOOR</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-3-1-36">4.3.27 LOCK DOWN RELEASE DOOR</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-6-1-1">4.5.1 DOOR CONTROL – DOOR MODE EVENT</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-6-1-2">4.5.2 DOOR CONTROL – DOOR PHYSICAL STATE EVENT</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-6-1-3">4.5.3 DOOR CONTROL – DOOR PHYSICAL STATE EVENT STATE CHANGE</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-6-1-4">4.5.4 DOOR CONTROL – DOUBLE LOCK PHYSICAL STATE EVENT</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-6-1-5">4.5.5 DOOR CONTROL – DOUBLE LOCK PHYSICAL STATE EVENT STATE CHANGE</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-6-1-6">4.5.6 DOOR CONTROL – LOCK PHYSICAL STATE EVENT</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-6-1-7">4.5.7 DOOR CONTROL – LOCK PHYSICAL STATE EVENT STATE CHANGE</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-6-1-8">4.5.8 DOOR CONTROL – DOOR TAMPER EVENT</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-6-1-9">4.5.9 DOOR CONTROL – DOOR TAMPER EVENT STATE CHANGE</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-6-1-10">4.5.10 DOOR CONTROL – DOOR ALARM EVENT</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-6-1-11">4.5.11 DOOR CONTROL – DOOR ALARM EVENT STATE CHANGE</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-6-1-12">4.5.12 DOOR CONTROL – DOOR FAULT EVENT</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-6-1-13">4.5.13 DOOR CONTROL – DOOR FAULT EVENT STATE CHANGE</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-7-1-1">4.6.1 DOOR CONTROL – ADD OR CHANGE DOOR EVENT</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="tc.DOORCONTROL-7-1-2">4.6.2 DOOR CONTROL – REMOVE DOOR EVENT</link>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door is configured and added to the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door with Access capability is configured and added to the DUT, if Access capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door with Block capability is configured and added to the DUT, if Block capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door with Double Lock capability is configured and added to the DUT, if Double Lock capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door with Lock capability is configured and added to the DUT, if Lock capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door with Unlock capability is configured and added to the DUT, if Unlock capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door with Lock Down capability is configured and added to the DUT, if Lock Down capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door with Lock Open capability is configured and added to the DUT, if Lock Open capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door with Door Monitor capability is configured and added to the DUT, if Door Monitor capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door with Lock Monitor capability is configured and added to the DUT, if Lock Monitor capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door with Double Lock Monitor capability is configured and added to the DUT, if Double Lock Monitor capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door with Tamper capability is configured and added to the DUT, if Tamper capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door with Alarm capability is configured and added to the DUT, if Alarm capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Door with Fault capability is configured and added to the DUT, if Fault capability is supported by the DUT.

            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <section xml:id="overview.test_policy">
      <title>Test Policy</title>
      <para>
        This section describes the test policies specific to the test case execution of each functional block.
      </para>
      <para>
        The DUT shall adhere to the test policies defined in this section.
      </para>
      <section xml:id="overview.test_policy.capabilities">
        <title>Capabilities</title>
        <para>
          DUT shall give the Door Control Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServices and GetServiceCapabilities command.
        </para>
        <para>
          Please, refer to <link linkend="tc.door_control.capabilities">Section 4.1</link> for Capabilities Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.general">
        <title>General</title>
        <para>
          DUT shall give the Door Control Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServices and GetServiceCapabilities command.
        </para>
        <para>
          DUT shall support at least one Door. And also at least one Door shall be added and configured on device.
        </para>
        <para>
          DUT shall support the following commands:
          <itemizedlist>
            <listitem>
              <para>
                GetDoorInfo
              </para>
            </listitem>
            <listitem>
              <para>
                GetDoorInfoList
              </para>
            </listitem>
            <listitem>
              <para>
                GetDoorState
              </para>
            </listitem>
          </itemizedlist>
          DUT shall not return any fault, if GetDoorInfo was invoked for non-exciting Door token. Such tokens shall be ignored.
        </para>
        <para>
          DUT shall not return more items in GetDoorInfo and GetDoorInfoList responses than specified in service capabilities by MaxLimit.
        </para>
        <para>
          DUT shall not return more items in GetDoorInfoList response than specified by Limit parameter in a request.
        </para>
        <para>
          DUT shall return SOAP 1.2 fault message (InvalidArgs/TooManyItems), if more items than MaxLimit was requested by GetDoorInfo command.
        </para>
        <para>
          DUT should return SOAP 1.2 fault message (InvalidArgVal/NotFound), if GetDoorState command was invoked for non-exciting Door token.
        </para>
        <para>
          Please, refer to <link linkend="tc.door_control.general">Section 4.2</link> for General Test Cases.

        </para>
      </section>
      <section xml:id="overview.test_policy.door_control">
        <title>Door Control</title>
        <para>
          DUT shall give the Door Control Service entry point and Event Service entry point by GetServices command, if DUT supports Door Control service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServiceCapabilities command.
        </para>
        <para>
          DUT shall support following property events:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Door/State/DoorMode
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          DUT shall return capabilities for each specific door.
        </para>
        <para>
          If DUT returns Access capability as supported by door, then DUT shall support AccessDoor command for this door. Otherwise, DUT should return SOAP 1.2 fault message.
        </para>
        <para>
          If DUT returns Block capability as supported by door, then DUT shall support BlockDoor command for this door. Otherwise, DUT should return SOAP 1.2 fault message.
        </para>
        <para>
          If DUT returns DoubleLock capability as supported by door, then DUT shall support DoubleLockDoor command for this door. Otherwise DUT should return SOAP 1.2 fault message.
        </para>
        <para>
          If DUT returns Lock capability as supported by door, then DUT shall support LockDoor command for this door. Otherwise, DUT should return SOAP 1.2 fault message.
        </para>
        <para>
          If DUT returns Unlock capability as supported by door, then DUT shall support UnlockDoor command for this door. Otherwise, DUT should return SOAP 1.2 fault message.
        </para>
        <para>
          If DUT returns LockDown capability as supported by door, then DUT shall support LockDownDoor and LockDownReleaseDoor command for this door. Otherwise, DUT should return SOAP 1.2 fault message.
        </para>
        <para>
          If DUT returns LockOpen capability as supported by door, then DUT shall support LockOpenDoor and LockOpenReleaseDoor command for this door. Otherwise, DUT should return SOAP 1.2 fault message.
        </para>
        <para>
          DUT should return SOAP 1.2 fault message (InvalidArgVal/NotFound), if AccessDoor, BlockDoor, DoubleLockDoor, LockDoor, UnlockDoor, LockDownDoor, LockDownReleaseDoor, LockOpenDoor, or LockOpenReleaseDoor command was invoked for non-exciting Door token.
        </para>
        <para>
          DUT shall support Pull Point Subscription and Topic Expression filter.
        </para>
        <para>
          DUT shall generate property events with initial state after subscription was done.
        </para>
        <para>
          DUT shall generate property events with current state after corresponding properties were changed.
        </para>
        <para>
          Please, refer to <link linkend="tc.door_control.door_control">Section 4.3</link> for Door Control Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.consistency">
        <title>Consistency</title>
        <para>
          DUT shall give the Door Control Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support at least one Access Point. And also at least one Access Point shall be added and configured on a device.
        </para>
        <para>
          DUT shall support at least one Door. And also at least one Door shall be added and configured on a device.
        </para>
        <para>
          DUT shall support the following commands:
          <itemizedlist>
            <listitem>
              <para>
                GetAccessPointInfoList
              </para>
            </listitem>
            <listitem>
              <para>
                GetDoorInfoList
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return other Door tokens, than listed in GetAccessPointInfoList responses, in Entity field of GetAccessPointInfo’s if Type is skipped or equal to tdc:Door.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please, refer to <link linkend="tc.door_control.consistency">Section 4.4</link> for Consistency Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.property_events">
        <title>Property Events</title>
        <para>
          DUT shall give the Door Control Service entry point and Event Service entry point by GetServices command, if DUT supports Door Control service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServiceCapabilities command.
        </para>
        <para>
          DUT shall support following property events:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Door/State/DoorMode
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          DUT shall return capabilities for each specific door.
        </para>
        <para>
          If DUT returns DoorMonitor capability as supported by door, then DUT shall support the following event for this door:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Door/State/DoorPhysicalState
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns DoubleLockMonitor capability as supported by door, then DUT shall support the following event for this door:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Door/State/DoubleLockPhysicalState
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns LockMonitor capability as supported by door, then DUT shall support the following event for this door:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Door/State/LockPhysicalState
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns Tamper capability as supported by door, then DUT shall support the following event for this door:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Door/State/DoorTamper
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns Alarm capability as supported by door, then DUT shall support the following event for this door:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Door/State/DoorAlarm
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns Fault capability as supported by door, then DUT shall support the following event for this door:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Door/State/DoorFault
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          DUT shall support GetEventProperties command and return all supported events in TopicSet.
        </para>
        <para>
          DUT shall support Pull Point Subscription and Topic Expression filter.
        </para>
        <para>
          DUT shall generate property events with initial state after subscription was done.
        </para>
        <para>
          DUT shall generate property events with current state after corresponding properties were changed.
        </para>
        <para>
          A test operator shall manually change the following properties if required:
          <itemizedlist>
            <listitem>
              <para>
                DoorPhysicalState
              </para>
            </listitem>
            <listitem>
              <para>
                LockPhysicalState
              </para>
            </listitem>
            <listitem>
              <para>
                DoubleLockPhysicalState
              </para>
            </listitem>
            <listitem>
              <para>
                Alarm
              </para>
            </listitem>
            <listitem>
              <para>
                Tamper
              </para>
            </listitem>
            <listitem>
              <para>
                Fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please, refer to <link linkend="tc.door_control.property_events">Section 4.5</link> for Property Events Test Cases.
        </para>

      </section>
      <section xml:id="overview.test_policy.door_change_events">
        <title>Door Change Events</title>
        <para>
          DUT shall give the Door Control Service entry point and Event Service entry point by GetServices command, if DUT supports Door Control service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetEventProperties command and return all supported events in TopicSet.
        </para>
        <para>
          DUT shall support Pull Point Subscription and Topic Expression filter.
        </para>
        <para>
          If DUT supports adding or changing doors, then DUT shall support the following events:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Configuration/Door/Change.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns tns1:Configuration/Door/Change topic in GetEventProperties command, then DUT should have possibility to invoke it.
        </para>
        <para>
          If DUT supports removing doors, then DUT shall support the following events:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Configuration/Door/Removed
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns tns1:Configuration/Door/Removed topic in GetEventProperties command, then DUT should have possibility to invoke it.
        </para>
        <para>
          A test operator shall manually invoke following events if required:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Configuration/Door/Change
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:Configuration/Door/Removed
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please, refer to <link linkend="tc.door_control.door_configuration">Section 4.6</link> for Door Change events Test Cases.
        </para>

      </section>
      <section xml:id="overview.test_policy.door_management">
        <title>Door Management</title>

        <para>
          The test policies specific to the test case execution of Door Management functional block:<itemizedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>DUT shall give the Door Control Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.</para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following commands:<itemizedlist>
                  <listitem>
                    <para>
                      GetServices
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetServiceCapabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Door Management as indicated by the Capabilities.DoorManagementSupported, then DUT shall support the following commands:<itemizedlist>
                  <listitem>
                    <para>
                      GetDoors
                    </para>
                  </listitem>
                  <listitem>
                    <para>GetDoorList</para>
                  </listitem>
                  <listitem>
                    <para>CreateDoor</para>
                  </listitem>
                  <listitem>
                    <para>ModifyDoor</para>
                  </listitem>
                  <listitem>
                    <para>DeleteDoor</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Client Supplied Token as indicated by the Capabilities.ClientSuppliedTokenSupported, then DUT shall support the following commands:<itemizedlist>


                  <listitem>
                    <para>SetDoor</para>
                  </listitem>

                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>DUT shall not return more items in GetDoorList responses than specified in service capabilities by MaxLimit.</para>
            </listitem>
            <listitem>
              <para>DUT shall not return more items in GetDoorList response than specified by Limit parameter in a request.</para>
            </listitem>
            <listitem>
              <para>DUT shall not return items with the same tokens in GetDoorList responses.</para>
            </listitem>
            <listitem>
              <para>DUT shall not return any fault if GetDoors was invoked for non-exciting Door token. Such tokens shall be ignored.</para>
            </listitem>
            <listitem>
              <para>DUT shall return SOAP 1.2 fault message (InvalidArgs/TooManyItems) if more items than MaxLimit was requested by GetDoors command.</para>
            </listitem>
            <listitem>
              <para>DUT shall return SOAP 1.2 fault message (InvalidArgVal) if CreateDoor command was invoked with non empty Door token.</para>
            </listitem>
            <listitem>
              <para>DUT shall return SOAP 1.2 fault message (InvalidArgs) if ModifyDoor command was invoked with non-exciting Door token.</para>
            </listitem>
            <listitem>
              <para>DUT shall return SOAP 1.2 fault message (InvalidArgs) if DeleteDoor command was invoked with non-exciting Door token.</para>
            </listitem>
            <listitem>
              <para>DUT shall return SOAP 1.2 fault message (InvalidArgVal) if SetDoor command was invoked with empty Door token.</para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed if DUT supports Door Management:<itemizedlist>
                  <listitem>
                    <para>Getting doors with GetDoors command</para>
                  </listitem>
                  <listitem>
                    <para>Getting door list with GetDoorList command with using different Limit and NextReference values</para>
                  </listitem>
                  <listitem>
                    <para>Create new door with CreateDoor command</para>
                  </listitem>
                  <listitem>
                    <para>Modify door with ModifyDoor command</para>
                  </listitem>
                  <listitem>
                    <para>Delete door with DeleteDoor command</para>
                  </listitem>
                  <listitem>
                    <para>Getting doors with invalid door token</para>
                  </listitem>
                  <listitem>
                    <para>Getting doors with number of requested items is greater than MaxLimit</para>
                  </listitem>
                  <listitem>
                    <para>Create door with non empty door token in CreateDoor request</para>
                  </listitem>
                  <listitem>
                    <para>Modify door with non existing door token in request</para>
                  </listitem>
                  <listitem>
                    <para>Delete door with non existing door token in request</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed if DUT supports Client Supplied Token:<itemizedlist>


                  <listitem>
                    <para>Create new door with SetDoor command</para>
                  </listitem>
                  <listitem>
                    <para>Modify door with SetDoor command</para>
                  </listitem>



                  <listitem>
                    <para>Set door with empty door token in request</para>
                  </listitem>


                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
          Please, refer to <link linkend="tc.door_control.door_management">Section 4.6</link> for Door Management Test Cases.
        </para>

      </section>

    </section>
  </chapter>
  <!--Door Control Test Cases-->
  <chapter xml:id="tc.door_control">
    <title>Door Control Test Cases</title>
    <!--Capabilities-->
    <section xml:id="tc.door_control.capabilities">
      <title>Capabilities</title>
      <!--DOORCONTROL-1-1-1-->
      <section xml:id="tc.DOORCONTROL-1-1-1">
        <title>DOOR CONTROL SERVICE CAPABILITIES</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-1-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Capability exchange (Specification Coverage), GetServiceCapabilities (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServiceCapabilities (for Door Control Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference: </emphasis>doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Door Control Service Capabilities.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT.
        </para>

        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>            
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Capabilities =: <emphasis role="italic">cap</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
             <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.@MaxLimit is not greater than zero, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.@DoorManagementSupported = true and <emphasis role="italic">cap</emphasis>.@MaxDoors = 0, FAIL the test and skip other steps.
              </para>
            </listitem>          
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.
              </para>
            </listitem>           
          </itemizedlist>
        </para>
      </section>
      <!--DOORCONTROL-1-1-2-->
      <section xml:id="tc.DOORCONTROL-1-1-2">
        <title>GET SERVICES AND GET DOOR CONTROL SERVICE CAPABILITIES CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-1-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Capability exchange (Specification Coverage), GetServiceCapabilities (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServices, GetServiceCapabilities (for Door Control Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> devicemgmt.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Services and Door Control Service Capabilities consistency.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> None.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Rules Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServices</emphasis> request (IncludeCapability = true) to retrieve all services of the DUT with service capabilities.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServicesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve Door Control service capabilities of the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServicesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent different Capabilities in <emphasis role="bold">GetServicesResponse</emphasis> message and in <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Service will be defined as Door Controller service if it has Namespace element that is equal to “http://www.onvif.org/ver10/doorcontrol/wsdl”.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Capabilities in GetServicesResponse message and in GetServiceCapabilitiesResponse message will be assumed as different in the following cases:
          <itemizedlist>
            <listitem>
              <para>
                MaxLimit attribute values are different;
              </para>
            </listitem>
            <listitem>
              <para>
                MaxDoors attribute values are different;
              </para>
            </listitem>
            <listitem>
              <para>
                MaxDoors attribute is skipped only for GetServices or onle for GetServiceCapabilities request;
              </para>
            </listitem>
            <listitem>
              <para>
                ClientSuppliedTokenSupported  attribute values are different;
              </para>
            </listitem>
            <listitem>
              <para>
                DoorManagementSupported  attribute values are different.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--General-->
    <section xml:id="tc.door_control.general">
      <title>General</title>
      <!--DOORCONTROL-2-1-1-->
      <section xml:id="tc.DOORCONTROL-2-1-1">
        <title>GET DOOR STATE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-2-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoorState (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Door State.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT.  At least one Door is configured and added to the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-1.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-1.4">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorState</emphasis> request (Token = “Token1”, where Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-2-1-1.3">3</link>) to retrieve current state of the door.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetDoorStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if DoorInfo.Capabilities.DoorMonitor = "true", than DoorState.DoorPhysicalState is present. Otherwise, if DoorInfo.Capabilities.DoorMonitor = "false", then check that DoorState.DoorPhysicalState is skipped.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if DoorInfo.Capabilities.LockMonitor = "true", than DoorState.LockPhysicalState is present. Otherwise, if DoorInfo.Capabilities.LockMonitor = "false", then check that DoorState.LockPhysicalState is skipped.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if DoorInfo.Capabilities.DoubleLockMonitor = "true", than DoorState.DoubleLockPhysicalState is present. Otherwise, if DoorInfo.Capabilities.DoubleLockMonitor = "false", then check that DoorState.DoubleLockPhysicalState is skipped.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if DoorInfo.Capabilities.Alarm = "true", than DoorState.Alarm is present. Otherwise if DoorInfo.Capabilities.Alarm = "false", then check that DoorState.Alarm is skipped.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if DoorInfo.Capabilities.Tamper = "true", than DoorState.Tamper is present. Otherwise, if DoorInfo.Capabilities.Tamper = "false", than check that DoorState.Tamper is skipped.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-1.11">
              <para>
                Check that if DoorInfo.Capabilities.Fault = "true", than DoorState.Fault is present. Otherwise, if DoorInfo.Capabilities.Fault = "false", then check that DoorState.Fault is skipped.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-1.12">
              <para>
                Repeat steps <link linkend="tc.DOORCONTROL-2-1-1.4">4</link>-<link linkend="tc.DOORCONTROL-2-1-1.11">11</link> for all other tokens from the complete list of doors at step <link linkend="tc.DOORCONTROL-2-1-1.3">3</link>.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetDoorStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned DoorState which contains unsupported monitors (DoorPhysicalState, LockPhysicalState, DoubleLockPhysicalState, Alarm, Tamper, and Fault).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned DoorState which does not contain supported monitors (DoorPhysicalState, LockPhysicalState, DoubleLockPhysicalState, Alarm, Tamper, and Fault).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-2-1-1.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any DoorInfo on a complete list of doors at step <link linkend="tc.DOORCONTROL-2-1-1.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-2-1-1.4">4</link>-<link linkend="tc.DOORCONTROL-2-1-1.12">12</link>, fail the test and go to the next test.
        </para>
      </section>
      <!--DOORCONTROL-2-1-2-->
      <section xml:id="tc.DOORCONTROL-2-1-2">
        <title>GET DOOR STATE WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-2-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoorState (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Door State List with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service address was received from the DUT. Door Entity is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorState</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--DOORCONTROL-2-1-3-->
      <section xml:id="tc.DOORCONTROL-2-1-3">
        <title>GET DOOR INFO</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-2-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoorInfo (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Door Info.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door is configured and added to the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-3.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve MaxLimit capability.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorInfo</emphasis> request (Token list with subset of DoorInfo.token values from the complete list of doors at step <link linkend="tc.DOORCONTROL-2-1-3.3">3</link> with token number equal to MaxLimit) to retrieve subset of Door Information from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetDoorInfoResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that all requested DoorInfo items are in <emphasis role="bold">GetDoorInfoResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-3.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorInfo</emphasis> request (Token = Token1, where Token1 is the first token from the complete list of doors at step <link linkend="tc.DOORCONTROL-2-1-3.3">3</link>) to retrieve Door Information for the specified token from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetDoorInfoResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-3.11">
              <para>
                Verify that <emphasis role="bold">GetDoorInfoResponse</emphasis> message contains DoorInfo only for specified token.
              </para>
            </listitem>
            <listitem>
              <para>
                Repeat steps <link linkend="tc.DOORCONTROL-2-1-3.9">9</link>-<link linkend="tc.DOORCONTROL-2-1-3.11">11</link> for all other tokens from the complete list of doors at step <link linkend="tc.DOORCONTROL-2-1-3.3">3</link>.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> these limitations will not be used, if ONVIF Device Test Tool reuses values that were received from the DUT.
        </para>
      </section>
      <!--DOORCONTROL-2-1-4-->
      <section xml:id="tc.DOORCONTROL-2-1-4">
        <title>GET DOOR INFO WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-2-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoorInfo (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Door Info with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service address was received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-4.3">
              <para>
                Get complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve MaxLimit capability.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorInfo</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-4.7">
              <para>
                Verify the <emphasis role="bold">GetDoorInfoResponse</emphasis> message from the DUT. Check that empty list was returned.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-4.8">
	<para>
      Door Entity is supported by the DUT and if MaxLimit &gt; 1
		<orderedlist numeration="arabic" inheritnum="inherit">
			<?dbfo label-width=2.5em"?>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorInfo</emphasis> request (invalid Token, valid Token).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-4.9">
              <para>
                Verify the <emphasis role="bold">GetDoorInfoResponse</emphasis> message from the DUT. Check that list which contains Door for valid Token only was returned.

              </para>
            </listitem>

</orderedlist>
	</para>
</listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetDoorInfoResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetDoorInfoResponse</emphasis> message that contains at least two DoorInfo items with equal tokens.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetDoorInfoResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetDoorInfoResponse</emphasis> message that contains any DoorInfo items for step <link linkend="tc.DOORCONTROL-2-1-4.7">7</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetDoorInfoResponse</emphasis> message that contains any DoorInfo items other than item for valid Token or does not contains DoorInfo item for valid token step <link linkend="tc.DOORCONTROL-2-1-4.9">9</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-2-1-4.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If MaxLimit less than 2, skip steps <link linkend="tc.DOORCONTROL-2-1-4.8">8</link>.
        </para>
      </section>
      <!--DOORCONTROL-2-1-6-->
      <section xml:id="tc.DOORCONTROL-2-1-6">
        <title>GET DOOR INFO LIST – LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-2-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoorInfoList (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Door Info List using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. At least one Door is configured and added to the DUT if Door Entity is supported by the DUT..
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of door info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">doorInfoCompleteList</emphasis> - complete door info list
                          </para>
                        </listitem>
                        <listitem>
                    <para>
                      out <emphasis role="italic">doorsNumber</emphasis> - doors number
                    </para>
                  </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
            <listitem>
              <para>
                If DUT supports Door Entity feature and <emphasis role="italic">doorsNumber</emphasis> &lt; = 0, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT does not support Door Entity feature and <emphasis role="italic">doorsNumber</emphasis> != 0, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-6.4">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve MaxLimit capability.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            
             <listitem>
              <para>
                If MaxLimit &gt; 0
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width=2.5em"?>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetDoorInfoList</emphasis> request (Limit = 1, no StartReference) to retrieve the first item in the list of Door Information from the DUT.
              </para>
            </listitem>
            <listitem>
                    <para>
                      The DUT responds with a <emphasis role="bold">GetDoorInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            List of DoorInfo := <emphasis role="italic">doorInfoList1</emphasis>
                          </para>
                        </listitem>                        
                      </itemizedlist>
                    </para>
                  </listitem>           
            <listitem>
                    <para>
                      If <emphasis role="italic">doorInfoList1</emphasis> contains number of items greater than 1, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If DUT does not support Door Entity and <emphasis role="italic">doorInfoList1</emphasis> is not empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
            </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorInfoList</emphasis> request (Limit = MaxLimit, no StartReference) to retrieve the first part of Door Information list from the DUT and is limited by MaxLimit.
              </para>
            </listitem>
            <listitem>
                    <para>
                      The DUT responds with a <emphasis role="bold">GetDoorInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            List of DoorInfo := <emphasis role="italic">doorInfoList2</emphasis>
                          </para>
                        </listitem>                        
                      </itemizedlist>
                    </para>
                  </listitem>
            <listitem>
                    <para>
                      If <emphasis role="italic">doorInfoList2</emphasis> contains number of items greater than MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
            <listitem>
                    <para>
                      If DUT does not support Door Entity and <emphasis role="italic">doorInfoList2</emphasis> is not empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
             <listitem>
              <para>
                If MaxLimit &gt; 0
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width=2.5em"?>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetDoorInfoList</emphasis> request (Limit = ItemNumber, no StartReference, where ItemNumber is between 1 and minimal value of MaxLimit and the total number of doors) to retrieve Door Information sublist limited by ItemNumber from the DUT.
              </para>
            </listitem>
            <listitem>
                    <para>
                      The DUT responds with a <emphasis role="bold">GetDoorInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            List of DoorInfo := <emphasis role="italic">doorInfoList3</emphasis>
                          </para>
                        </listitem>                        
                      </itemizedlist>
                    </para>
                  </listitem>
            <listitem>
                    <para>
                      If <emphasis role="italic">doorInfoList3</emphasis> contains number of items greater than ItemNumber, FAIL the test and skip other steps.
                    </para>
                  </listitem>
            <listitem>
                    <para>
                      If DUT does not support Door Entity and <emphasis role="italic">doorInfoList3</emphasis> is not empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
</orderedlist>
                </para>
              </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetDoorInfoListResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more DoorInfo items in <emphasis role="bold">GetDoorInfoListResponse</emphasis> message than it was specified in Limit parameter.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more DoorInfo items in <emphasis role="bold">GetDoorInfoListResponse</emphasis> message than MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-2-1-6.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any DoorInfo on complete list of doors at step <link linkend="tc.DOORCONTROL-2-1-6.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-2-1-6.4">4</link>-<link linkend="tc.DOORCONTROL-2-1-6.14">14</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> In case MaxLimit is equal to 0, 1 will be used instead in requests.
        </para>
      </section>
      <!--DOORCONTROL-2-1-7-->
      <section xml:id="tc.DOORCONTROL-2-1-7">
        <title>GET DOOR INFO LIST – START REFERENCE AND LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-2-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoorInfoList (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Door Info List using StartReference and Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door is configured and added to the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-7.3">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve DUT door control service capabilities.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> (MaxLimit) message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-7.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorInfoList</emphasis> request (Limit = MaxLimit, no StartReference) to retrieve the first part of Door Information list from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-7.6">
              <para>
                Verify the <emphasis role="bold">GetDoorInfoListResponse</emphasis> message from the DUT. Verify that <emphasis role="bold">GetDoorInfoListResponse</emphasis> message does not contain number of items greater than Limit. Verify that <emphasis role="bold">GetDoorInfoListResponse</emphasis> message does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-7.7">
              <para>
                If the number of DoorInfo in <emphasis role="bold">GetDoorInfoListResponse</emphasis> message contains NextStartReference, repeat steps <link linkend="tc.DOORCONTROL-2-1-7.5">5</link>-<link linkend="tc.DOORCONTROL-2-1-7.6">6</link> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting complete door list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that <emphasis role="bold">GetDoorInfoListResponse</emphasis> messages at step <link linkend="tc.DOORCONTROL-2-1-7.6">6</link> does not contain DoorInfo items with the same tokens values all over the list, i.e. there shall be no <emphasis role="bold">GetDoorInfoListResponse</emphasis> messages containing the same value for DoorInfo items token.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-7.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorInfoList</emphasis> request (Limit = 1, no StartReference) to retrieve the first part of Door Information list from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-7.10">
              <para>
                Verify the <emphasis role="bold">GetDoorInfoListResponse</emphasis> message from the DUT. Verify that <emphasis role="bold">GetDoorInfoListResponse</emphasis> message does not contain number of items greater than Limit. Verify that <emphasis role="bold">GetDoorInfoListResponse</emphasis> message does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-7.11">
              <para>
                If the number of DoorInfo in <emphasis role="bold">GetDoorInfoListResponse</emphasis> message contains NextStartReference, repeat steps <link linkend="tc.DOORCONTROL-2-1-7.9">9</link>-<link linkend="tc.DOORCONTROL-2-1-7.10">10</link> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting complete door list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that <emphasis role="bold">GetDoorInfoListResponse</emphasis> messages at step <link linkend="tc.DOORCONTROL-2-1-7.10">10</link> does not contain DoorInfo items with the same tokens values all over the list, i.e. there shall be no <emphasis role="bold">GetDoorInfoListResponse</emphasis> messages containing the same value for DoorInfo items token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the total list received during steps <link linkend="tc.DOORCONTROL-2-1-7.5">5</link>-<link linkend="tc.DOORCONTROL-2-1-7.7">7</link> has the same items as the list received during steps <link linkend="tc.DOORCONTROL-2-1-7.9">9</link>-<link linkend="tc.DOORCONTROL-2-1-7.11">11</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-7.14">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorInfoList</emphasis> request (Limit = [limit_value], no StartReference, where limit_value is between 1 and MaxLimit) to retrieve the first part of Door Information list from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-7.15">
              <para>
                Verify the <emphasis role="bold">GetDoorInfoListResponse</emphasis> message from the DUT. Verify that <emphasis role="bold">GetDoorInfoListResponse</emphasis> message does not contain number of items greater than Limit. Verify that <emphasis role="bold">GetDoorInfoListResponse</emphasis> message does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-7.16">
              <para>
                If the number of DoorInfo in <emphasis role="bold">GetDoorInfoListResponse</emphasis> message contains NextStartReference, repeat steps <link linkend="tc.DOORCONTROL-2-1-7.14">14</link>-<link linkend="tc.DOORCONTROL-2-1-7.15">15</link> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting complete door list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that <emphasis role="bold">GetDoorInfoListResponse</emphasis> messages at step <link linkend="tc.DOORCONTROL-2-1-7.15">15</link> does not contain DoorInfo items with the same tokens values all over the list, i.e. there shall be no <emphasis role="bold">GetDoorInfoListResponse</emphasis> messages containing the same value for DoorInfo items token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the total list received during steps <link linkend="tc.DOORCONTROL-2-1-7.5">5</link>-<link linkend="tc.DOORCONTROL-2-1-7.7">7</link> has the same items as the list received during steps <link linkend="tc.DOORCONTROL-2-1-7.14">14</link>-<link linkend="tc.DOORCONTROL-2-1-7.16">16</link>.

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetDoorInfoListResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetDoorInfoListResponse</emphasis> message that contains wrong item list than requested according to StartReference and Limit values.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetDoorInfoListResponse</emphasis> messages for step <link linkend="tc.DOORCONTROL-2-1-7.6">6</link> that contains at least one pair of the same tokens for DoorInfo item all over the messages.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetDoorInfoListResponse</emphasis> messages for step <link linkend="tc.DOORCONTROL-2-1-7.10">10</link> that contains at least one pair of the same tokens for DoorInfo item all over the messages.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetDoorInfoListResponse</emphasis> messages for step <link linkend="tc.DOORCONTROL-2-1-7.15">15</link> that contains at least one pair of the same tokens for DoorInfo item all over the messages.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more DoorInfo items in <emphasis role="bold">GetDoorInfoListResponse</emphasis> message than it was specified in Limit parameter.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more DoorInfo items in <emphasis role="bold">GetDoorInfoListResponse</emphasis> message than MaxLimit.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> In case MaxLimit is equal to 0, 1 will be used instead in requests.
        </para>
      </section>
      <!--DOORCONTROL-2-1-8-->
      <section xml:id="tc.DOORCONTROL-2-1-8">
        <title>GET DOOR INFO LIST – NO LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-2-1-8
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoorInfoList (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Door Info List without using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. At least one Door Point is configured and added to the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve DUT door control service capabilities.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> (MaxLimit) message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-8.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorInfoList</emphasis> request (no Limit, no StartReference) to retrieve the first part of Door Information list from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-8.6">
              <para>
                Verify the <emphasis role="bold">GetDoorInfoListResponse</emphasis> message from the DUT. Verify that <emphasis role="bold">GetDoorInfoListResponse</emphasis> message does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem>
                    <para>
                      If DUT does not support Door Entity and DoorInfoList in <emphasis role="bold">GetDoorInfoListResponse</emphasis> is not empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
            <listitem>
              <para>
                If <emphasis role="bold">GetDoorInfoListResponse</emphasis> message contains NextStartReference, repeat steps <link linkend="tc.DOORCONTROL-2-1-8.5">5</link>-<link linkend="tc.DOORCONTROL-2-1-8.6">6</link> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting the complete door list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that <emphasis role="bold">GetDoorInfoListResponse</emphasis> messages at step <link linkend="tc.DOORCONTROL-2-1-8.6">6</link> does not contain DoorInfo items with the same tokens values all over the list, i.e. there shall be no <emphasis role="bold">GetDoorInfoListResponse</emphasis> messages containing the same value for DoorInfo items token.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid GetDoorInfoListResponse message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned GetDoorInfoListResponse message that contains wrong item list than requested according to StartReference and Limit values.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned GetDoorInfoListResponse messages for step <link linkend="tc.DOORCONTROL-2-1-8.6">6</link> contains at least one pair of the same tokens for DoorInfo item all over the messages.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more DoorInfo items in GetDoorInfoListResponse message than MaxLimit.

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DOORCONTROL-2-1-10-->
      <section xml:id="tc.DOORCONTROL-2-1-10">
        <title>GET DOOR INFO – TOO MANY ITEMS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-2-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoorInfo (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Door Info in case if there are more items than MaxLimit in a request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. At least one Door is configured and added to the DUT. Door Entity is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-10.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-10.4">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve MaxLimit capability.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                If total number of doors is less than MaxLimit, skip other steps and go to the text test.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorInfo</emphasis> request (Token list with subset of DoorInfo.token values from a complete list of doors at step 3 with token number greater than MaxLimit) to retrieve a subset of Door Information from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-2-1-10.8">
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgs/TooManyItems</emphasis>).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid GetServiceCapabilitiesResponse.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-2-1-10.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any DoorInfo on complete list of doors at step <link linkend="tc.DOORCONTROL-2-1-10.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-2-1-10.4">4</link>-<link linkend="tc.DOORCONTROL-2-1-10.8">8</link>, fail test and go to the next test.
        </para>
      </section>



    </section>
    <!--Door Control-->
    <section xml:id="tc.door_control.door_control">
      <title>Door Control</title>
      <!--DOORCONTROL-3-1-10-->
      <section xml:id="tc.DOORCONTROL-3-1-10">
        <title>ACCESS DOOR WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> AccessDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Access Door with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service address was received from the DUT. Door Entity is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">AccessDoor</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--DOORCONTROL-3-1-11-->
      <section xml:id="tc.DOORCONTROL-3-1-11">
        <title>BLOCK DOOR WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-11
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> BlockDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> BlockDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Block Door with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service address was received from the DUT. Door Entity is supported by the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">BlockDoor</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--DOORCONTROL-3-1-12-->
      <section xml:id="tc.DOORCONTROL-3-1-12">
        <title>DOUBLE LOCK DOOR WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DoubleLockDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DoubleLockDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Double Lock Door with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service address was received from the DUT. Door Entity is supported by the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DoubleLockDoor</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--DOORCONTROL-3-1-13-->
      <section xml:id="tc.DOORCONTROL-3-1-13">
        <title>LOCK DOOR WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-13
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Lock Door with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service address was received from the DUT. Door Entity is supported by the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockDoor</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--DOORCONTROL-3-1-14-->
      <section xml:id="tc.DOORCONTROL-3-1-14">
        <title>UNLOCK DOOR WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-14
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> UnlockDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> UnlockDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Unlock Door with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service address was received from the DUT. Door Entity is supported by the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">UnlockDoor</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--DOORCONTROL-3-1-15-->
      <section xml:id="tc.DOORCONTROL-3-1-15">
        <title>LOCK DOWN DOOR WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-15
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockDownDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockDownDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Lock Down Door with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service address was received from the DUT. Door Entity is supported by the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockDownDoor</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--DOORCONTROL-3-1-16-->
      <section xml:id="tc.DOORCONTROL-3-1-16">
        <title>LOCK DOWN RELEASE DOOR WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-16
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockDownReleaseDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockDownReleaseDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Lock Down Release Door with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service address was received from the DUT. Door Entity is supported by the DUT.
          Test Configuration: ONVIF Client and DUT



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockDownReleaseDoor</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--DOORCONTROL-3-1-17-->
      <section xml:id="tc.DOORCONTROL-3-1-17">
        <title>LOCK OPEN DOOR WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-17
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockOpenDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockOpenDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Lock Open Door with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service address was received from the DUT. Door Entity is supported by the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockOpenDoor</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--DOORCONTROL-3-1-18-->
      <section xml:id="tc.DOORCONTROL-3-1-18">
        <title>LOCK OPEN RELEASE DOOR WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-18
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockOpenReleaseDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockOpenReleaseDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Lock Open Release Door with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service address was received from the DUT. Door Entity is supported by the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockOpenReleaseDoor</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--DOORCONTROL-3-1-19-->
      <section xml:id="tc.DOORCONTROL-3-1-19">
        <title>ACCESS DOOR – COMMAND NOT SUPPORTED</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-19
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> AccessDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that fault is returned for Access Door in case Door does not support it.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door is configured and added to the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-19.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-19.4">
              <para>
                If Door with Token1 (Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-19.3">3</link>) has DoorInfo.Capabilities.Access equal to true, then skip steps <link linkend="tc.DOORCONTROL-3-1-19.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-19.6">6</link> and go to the step <link linkend="tc.DOORCONTROL-3-1-19.7">7</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-19.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">AccessDoor</emphasis> request (Token = “Token1”, where Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-19.3">3</link>) to try changing door state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-19.6">
              <para>
                The DUT will generate SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-19.7">
              <para>
                Repeat steps <link linkend="tc.DOORCONTROL-3-1-19.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-19.6">6</link> for all other tokens from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-19.3">3</link>.

              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-19.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-19.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-19.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-19.7">7</link>, fail the test and go to the next test.
        </para>
      </section>
      <!--DOORCONTROL-3-1-20-->
      <section xml:id="tc.DOORCONTROL-3-1-20">
        <title>BLOCK DOOR – COMMAND NOT SUPPORTED</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-20
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> BlockDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> BlockDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that fault is returned for Block Door in case Door does not support it.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door is configured and added to the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-20.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-20.4">
              <para>
                If Door with Token1 (Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-20.3">3</link>) has DoorInfo.Capabilities.Block equal to true, then skip steps <link linkend="tc.DOORCONTROL-3-1-20.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-20.6">6</link> and go to the step <link linkend="tc.DOORCONTROL-3-1-20.7">7</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-20.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">BlockDoor</emphasis> request (Token = “Token1”, where Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-20.3">3</link>) to try changing door state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-20.6">
              <para>
                The DUT will generate SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-20.7">
              <para>
                Repeat steps <link linkend="tc.DOORCONTROL-3-1-20.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-20.7">7</link> for all other tokens from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-20.3">3</link>.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-20.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-20.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-20.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-20.7">7</link>, fail the test and go to the next test.
        </para>
      </section>
      <!--DOORCONTROL-3-1-21-->
      <section xml:id="tc.DOORCONTROL-3-1-21">
        <title>DOUBLE LOCK DOOR – COMMAND NOT SUPPORTED</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-21
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DoubleLockDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DoubleLockDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that fault is returned for Double Lock Door in case Door does not support it.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door is configured and added to the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-21.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-21.4">
              <para>
                If Door with Token1 (Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-21.3">3</link>) has DoorInfo.Capabilities.DoubleLock equal to true, then skip steps <link linkend="tc.DOORCONTROL-3-1-21.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-21.6">6</link> and go to the step <link linkend="tc.DOORCONTROL-3-1-21.7">7</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-21.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">DoubleLockDoor</emphasis> request (Token = “Token1”, where Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-21.3">3</link>) to try changing door state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-21.6">
              <para>
                The DUT will generate SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-21.7">
              <para>
                Repeat steps <link linkend="tc.DOORCONTROL-3-1-21.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-21.7">7</link> for all other tokens from complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-21.3">3</link>.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-21.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-21.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-21.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-21.7">7</link>, fail the test and go to the next test.
        </para>
      </section>
      <!--DOORCONTROL-3-1-22-->
      <section xml:id="tc.DOORCONTROL-3-1-22">
        <title>LOCK DOOR – COMMAND NOT SUPPORTED</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-22
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that fault is returned for Lock Door in case Door does not support it.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door configured and added to the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-22.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-22.4">
              <para>
                If Door with Token1 (Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-22.3">3</link>) has DoorInfo.Capabilities.Lock equal to true, then skip steps <link linkend="tc.DOORCONTROL-3-1-22.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-22.6">6</link> and go to the step <link linkend="tc.DOORCONTROL-3-1-22.7">7</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-22.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockDoor</emphasis> request (Token = “Token1”, where Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-22.3">3</link>) to try changing door state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-22.6">
              <para>
                The DUT will generate SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-22.7">
              <para>
                Repeat steps <link linkend="tc.DOORCONTROL-3-1-22.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-22.7">7</link> for all other tokens from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-22.3">3</link>.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-22.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-22.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-22.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-22.7">7</link>, fail the test and go to the next test.
        </para>
      </section>
      <!--DOORCONTROL-3-1-23-->
      <section xml:id="tc.DOORCONTROL-3-1-23">
        <title>UNLOCK DOOR – COMMAND NOT SUPPORTED</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-23
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> UnlockDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> UnlockDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that fault is returned for Unlock Door in case Door does not support it.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door is configured and added to the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-23.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-23.4">
              <para>
                If Door with Token1 (Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-23.3">3</link>) has DoorInfo.Capabilities.Unlock equal to true, then skip steps <link linkend="tc.DOORCONTROL-3-1-23.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-23.6">6</link> and go to the step <link linkend="tc.DOORCONTROL-3-1-23.7">7</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-23.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">UnlockDoor</emphasis> request (Token = “Token1”, where Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-23.3">3</link>) to try changing door state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-23.6">
              <para>
                The DUT will generate SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-23.7">
              <para>
                Repeat steps <link linkend="tc.DOORCONTROL-3-1-23.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-23.7">7</link> for all other tokens from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-23.3">3</link>.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-23.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-23.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-23.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-23.7">7</link>, fail the test and go to the next test.
        </para>
      </section>
      <!--DOORCONTROL-3-1-24-->
      <section xml:id="tc.DOORCONTROL-3-1-24">
        <title>LOCK DOWN DOOR – COMMAND NOT SUPPORTED</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-24
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockDownDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockDownDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that fault is returned for Lock Down Door in case Door does not support it.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door is configured and added to the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-24.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-24.4">
              <para>
                If Door with Token1 (Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-24.3">3</link>) has DoorInfo.Capabilities.LockDown equal to true, then skip steps <link linkend="tc.DOORCONTROL-3-1-24.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-24.6">6</link> and go to the step <link linkend="tc.DOORCONTROL-3-1-24.7">7</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-24.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockDownDoor</emphasis> request (Token = “Token1”, where Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-24.3">3</link>) to try changing door state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-24.6">
              <para>
                The DUT will generate SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-24.7">
              <para>
                Repeat steps <link linkend="tc.DOORCONTROL-3-1-24.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-24.7">7</link> for all other tokens from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-24.3">3</link>.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-24.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-24.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-24.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-24.7">7</link>, fail the test and go to the next test.
        </para>
      </section>
      <!--DOORCONTROL-3-1-25-->
      <section xml:id="tc.DOORCONTROL-3-1-25">
        <title>LOCK DOWN RELEASE DOOR – COMMAND NOT SUPPORTED</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-25
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockDownReleaseDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockDownReleaseDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that fault is returned for Lock Down Release Door in case Door does not support it.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door is configured and added to the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-25.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-25.4">
              <para>
                If Door with Token1 (Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-25.3">3</link>) has DoorInfo.Capabilities.LockDown equal to true, then skip steps <link linkend="tc.DOORCONTROL-3-1-25.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-25.6">6</link> and go to the step <link linkend="tc.DOORCONTROL-3-1-25.7">7</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-25.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockDownReleaseDoor</emphasis> request (Token = “Token1”, where Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-25.3">3</link>) to try changing door state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-25.6">
              <para>
                The DUT will generate SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-25.7">
              <para>
                Repeat steps <link linkend="tc.DOORCONTROL-3-1-25.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-25.7">7</link> for all other tokens from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-25.3">3</link>.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-25.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-25.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-25.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-25.7">7</link>, fail the test and go to the next test.
        </para>
      </section>
      <!--DOORCONTROL-3-1-26-->
      <section xml:id="tc.DOORCONTROL-3-1-26">
        <title>LOCK OPEN DOOR – COMMAND NOT SUPPORTED</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-26
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockOpenDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockOpenDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that fault is returned for Lock Open Door in case Door does not support it.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door is configured and added to the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-26.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-26.4">
              <para>
                If Door with Token1 (Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-26.3">3</link>) has DoorInfo.Capabilities.LockOpen equal to true, then skip steps <link linkend="tc.DOORCONTROL-3-1-26.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-26.6">6</link> and go to the step <link linkend="tc.DOORCONTROL-3-1-26.7">7</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-26.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockOpenDoor</emphasis> request (Token = “Token1”, where Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-26.3">3</link>) to try changing door state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-26.6">
              <para>
                The DUT will generate SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-26.7">
              <para>
                Repeat steps <link linkend="tc.DOORCONTROL-3-1-26.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-26.7">7</link> for all other tokens from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-26.3">3</link>.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-26.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-26.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-26.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-26.7">7</link>, fail the test and go to the next test.
        </para>
      </section>
      <!--DOORCONTROL-3-1-27-->
      <section xml:id="tc.DOORCONTROL-3-1-27">
        <title>LOCK OPEN RELEASE DOOR – COMMAND NOT SUPPORTED</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-27
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockOpenReleaseDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockOpenReleaseDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that fault is returned for Lock Open Release Door in case Door does not support it.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door is configured and added to the DUT.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-27.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-27.4">
              <para>
                If Door with Token1 (Token1 is the first DoorInfo.token from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-27.3">3</link>) has DoorInfo.Capabilities.LockOpen equal to true, then skip steps <link linkend="tc.DOORCONTROL-3-1-27.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-27.6">6</link> and go to the step <link linkend="tc.DOORCONTROL-3-1-27.7">7</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-27.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockOpenReleaseDoor</emphasis> request (Token = “Token1”, where Token1 is the first DoorInfo.token from complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-27.3">3</link>) to try changing door state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-27.6">
              <para>
                The DUT will generate SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-27.7">
              <para>
                Repeat steps <link linkend="tc.DOORCONTROL-3-1-27.5">5</link>-<link linkend="tc.DOORCONTROL-3-1-27.7">7</link> for all other tokens from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-27.3">3</link>.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-27.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-27.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-27.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-27.7">7</link>, fail the test and go to the next test.
        </para>
      </section>
      <!--DOORCONTROL-3-1-28-->
      <section xml:id="tc.DOORCONTROL-3-1-28">
        <title>ACCESS DOOR</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-28
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessDoor (ONVIF Door Control Service Specification), tns1:Door/State/DoorMode (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> AccessDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Access Door is accepted. To verify Door state change after Access Door command. To verify tns1:Door/State/DoorMode property events.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Access capability is configured and added to the DUT. The doors are closed and there are no schedules.
          Test Configuration: ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-28.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-28.4">
              <para>
                ONVIF Client selects one door from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-28.3">3</link> with DoorInfo.Capabilities.Access equal to true and DoorInfo.Capabilities.Lock equal to true. If there is no Door with DoorInfo.Capabilities.Access equal to true, fail the test and skip other steps. If there is no Door with DoorInfo.Capabilities.Access equal to true and DoorInfo.Capabilities.Lock equal to true, then ONVIF Client executes <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link> to start user interaction process, and then goes to step <link linkend="tc.DOORCONTROL-3-1-28.6">6</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will execute <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> to switch the selected door into Locked state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-28.6">
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-28.8">
              <para>
                Execute <link linkend="Annex_HelperCatchingOfInitializedEvent">Annex A.3</link> to catch Initialized event for selected door. State of the Door received in <link linkend="Annex_HelperCatchingOfInitializedEvent">Annex A.3</link> will be assumed as initial State of this Door.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">AccessDoor</emphasis> request (Token = [selected Door token]) to change door state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">AccessDoorResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-28.11">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-28.12">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-3-1-28.11">11</link> until Notification messages with PropertyOperation = "Changed" contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to selected Door Token with State = “Accessed” is received (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" contain Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" have TopicExpression equal to tns1:Door/State/DoorMode.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that received Notification message with PropertyOperation = "Changed" contains Data.SimpleItem item with Name = «State» and Value equal to “Accessed”. Check that other Notification messages contain Data.SimpleItem item with Name = «State» and Value with tdc:DoorMode type.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-28.17">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-28.18">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-3-1-28.17">17</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" contain Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" have TopicExpression equal to tns1:Door/State/DoorMode.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that the last Notification message with PropertyOperation = "Changed" contains Data.SimpleItem item with Name = «State» and Value equal to initial Door state from step <link linkend="tc.DOORCONTROL-3-1-28.8">8</link>. Check that other Notification messages contain Data.SimpleItem item with Name = «State» and Value with tdc:DoorMode type.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-28.22">
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">AccessDoorResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-28.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification messages with PropertyOperation = "Changed" (correct value for UTC time, TopicExpression and wsnt:Message, Topic = “tns1:Door/State/DoorMode”, contains Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token, contains Data.SimpleItem item with Name = «State» and Value with type equal to tdc:DoorMode) at steps <link linkend="tc.DOORCONTROL-3-1-28.12">12</link> and <link linkend="tc.DOORCONTROL-3-1-28.18">18</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send Notification message with PropertyOperation = "Changed" with State value “Accessed” at step <link linkend="tc.DOORCONTROL-3-1-28.12">12</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent the last Notification message with PropertyOperation = "Changed" at step <link linkend="tc.DOORCONTROL-3-1-28.18">18</link> with State value other than initial State at step <link linkend="tc.DOORCONTROL-3-1-28.8">8</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT did not return any door for step <link linkend="tc.DOORCONTROL-3-1-28.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-28.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-28.22">22</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends SOAP fault to AccessDoor request then the ONVIF Client deletes Subscription Manager, starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-28.6">6</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If in the <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> the DUT sends SOAP fault to request to change door mode, then the ONVIF Client starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-28.6">6</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-3-1-29-->
      <section xml:id="tc.DOORCONTROL-3-1-29">
        <title>BLOCK DOOR</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-29
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> BlockDoor (ONVIF Door Control Service Specification), tns1:Door/State/DoorMode (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> BlockDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Block Door is accepted. To verify Door state change after Block Door command. To verify tns1:Door/State/DoorMode property events.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Block capability is configured and added to the DUT. The doors are closed and there are no schedules.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-29.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-29.4">
              <para>
                ONVIF Client selects one door from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-29.3">3</link> with DoorInfo.Capabilities.Block equal to true and DoorInfo.Capabilities.Locked equal to true. If there is no Door with DoorInfo.Capabilities.Block equal to true, fail the test and skip other steps. If there is no Door with DoorInfo.Capabilities.Block equal to true and DoorInfo.Capabilities.Lock equal to true, then ONVIF Client executes <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link> to start user interaction process, and then goes to step <link linkend="tc.DOORCONTROL-3-1-29.6">6</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will execute <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> to switch the selected door into Locked state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-29.6">
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <link linkend="Annex_HelperCatchingOfInitializedEvent">Annex A.3</link> to catch Initialized event for selected door.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">BlockDoor</emphasis> request (Token = [selected Door token]) to change door state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">BlockDoorResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-29.11">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-29.12">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-3-1-29.11">11</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" contain Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" have TopicExpression equal to tns1:Door/State/DoorMode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the last Notification message with PropertyOperation = "Changed" contains Data.SimpleItem item with Name = «State» and Value equal to “Blocked”. Check that other Notification messages contain Data.SimpleItem item with Name = «State» and Value with tdc:DoorMode type.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-29.16">
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid BlockDoorResponse message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send CreatePullPointSubscriptionResponse message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-29.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification messages with PropertyOperation = "Changed" (correct value for UTC time, TopicExpression and wsnt:Message, Topic = “tns1:Door/State/DoorMode”, contains Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token, contains Data.SimpleItem item with Name = «State» and Value with type equal to tdc:DoorMode) at step <link linkend="tc.DOORCONTROL-3-1-29.12">12</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent the last Notification message with PropertyOperation = "Changed" with State value other than “Blocked” at step <link linkend="tc.DOORCONTROL-3-1-29.12">12</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-29.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-29.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-29.16">16</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends SOAP fault to BlockDoor request then the ONVIF Client deletes Subscription Manager, starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-29.6">6</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If in the <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link> the DUT sends SOAP fault to request to change door mode, then the ONVIF Client starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-29.6">6</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-3-1-30-->
      <section xml:id="tc.DOORCONTROL-3-1-30">
        <title>DOUBLE LOCK DOOR</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-30
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DoubleLockDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DoubleLockDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Double Lock Door is accepted. To verify Door state change after Double Lock Door command. To verify tns1:Door/State/DoorMode property events.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Double Lock capability is configured and added to the DUT. The doors are closed and there are no schedules.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-30.3">
              <para>
                Get complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-30.4">
              <para>
                ONVIF Client selects one door from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-30.3">3</link> with DoorInfo.Capabilities.DoubleLock equal to true and DoorInfo.Capabilities.Locked equal to true. If there is no Door with DoorInfo.Capabilities.DoubleLock equal to true, fail the test and skip other steps. If there is no Door with DoorInfo.Capabilities.DoubleLock equal to true and DoorInfo.Capabilities.Lock equal to true, then ONVIF Client executes <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link> to start user interaction process and then goes to step <link linkend="tc.DOORCONTROL-3-1-30.6">6</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will execute <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> to switch the selected door into Locked state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-30.6">
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <link linkend="Annex_HelperCatchingOfInitializedEvent">Annex A.3</link> to catch Initialized event for selected door.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DoubleLockDoor</emphasis> request (Token = [selected Door token]) to change door state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DoubleLockDoorResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-30.11">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-30.12">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-3-1-30.11">11</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" contain Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" have TopicExpression equal to tns1:Door/State/DoorMode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the last Notification message with PropertyOperation = "Changed" contains Data.SimpleItem item with Name = «State» and Value equal to “DoubleLocked”. Check that other Notification messages contain Data.SimpleItem item with Name = «State» and Value with tdc:DoorMode type.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-30.16">
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid DoubleLockDoorResponse message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send CreatePullPointSubscriptionResponse message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-30.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification messages with PropertyOperation = "Changed" (correct value for UTC time, TopicExpression and wsnt:Message, Topic = “tns1:Door/State/DoorMode”, contains Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token, contains Data.SimpleItem item with Name = «State» and Value with type equal to tdc:DoorMode) at step <link linkend="tc.DOORCONTROL-3-1-30.11">11</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent the last Notification message with PropertyOperation = "Changed" with State value other than “DoubleLocked” at step <link linkend="tc.DOORCONTROL-3-1-30.11">11</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-30.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-30.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-30.16">16</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends SOAP fault to DoubleLockDoor request then the ONVIF Client deletes Subscription Manager, starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-30.6">6</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If in the <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> the DUT sends SOAP fault to request to change door mode, then the ONVIF Client starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-30.6">6</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>

      </section>
      <!--DOORCONTROL-3-1-31-->
      <section xml:id="tc.DOORCONTROL-3-1-31">
        <title>LOCK DOOR</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-31
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Lock Door is accepted. To verify Door state change after Lock Door command. To verify tns1:Door/State/DoorMode property events.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Lock capability is configured and added to the DUT. The doors are closed and there are no schedules.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-31.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-31.4">
              <para>
                ONVIF Client selects one door from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-31.3">3</link> with DoorInfo.Capabilities.Lock equal to true. If there is no such Door, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorState</emphasis> request (Token = [selected Door token]) to retrieve current state of the door.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">GetDoorStateResponse</emphasis> from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                If DoorState.DoorMode is equal to Unlocked or Blocked or DoubleLocked or Accessed then go to step <link linkend="tc.DOORCONTROL-3-1-31.23">23</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                If DoorState.DoorMode is equal to LockedDown then ONVIF Client will invoke LockDownReleaseDoor request (Token = “Token1”). Otherwise, go to step <link linkend="tc.DOORCONTROL-3-1-31.15">15</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-31.11">
              <para>
                Verify <emphasis role="bold">LockDownReleaseDoorResponse</emphasis> from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-31.12">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-31.13">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis>. Repeat step <link linkend="tc.DOORCONTROL-3-1-31.12">12</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that the last Notification message with PropertyOperation = "Changed" contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to Token1 and contains Data.SimpleItem item with Name = «State» and Value equals to “Locked”.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-31.15">
              <para>
                If DoorState.DoorMode is equal to Locked then ONVIF Client will invoke UnlockDoor request (Token = “Token1”) to move the door into state different from Locked. Otherwise, go to step <link linkend="tc.DOORCONTROL-3-1-31.17">17</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">UnlockDoorResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-31.17">
              <para>
                If DoorState.DoorMode is equal to <emphasis role="bold">LockedOpen</emphasis> then ONVIF Client will invoke LockOpenRelease request (Token = “Token1”) to move the door into Unlocked state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">LockOpenReleaseResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-31.19">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-31.20">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis>. Repeat step <link linkend="tc.DOORCONTROL-3-1-31.19">19</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that the last Notification message with PropertyOperation = "Changed" contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to Token1 and contains Data.SimpleItem item with Name = «State» and Value differ from “Locked”.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes Subscription Manager either by calling <emphasis role="bold">Unsubscribe</emphasis> or through a timeout and returns to the test.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-31.23">
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <link linkend="Annex_HelperCatchingOfInitializedEvent">Annex A.3</link> to catch Initialized event for selected door.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockDoor</emphasis> request (Token = [selected Door token]) to change door state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">LockDoorResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-31.28">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-31.29">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-3-1-31.28">28</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" contain Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" have TopicExpression equal to tns1:Door/State/DoorMode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the last Notification message with PropertyOperation = "Changed" contains Data.SimpleItem item with Name = «State» and Value equal to “Locked”. Check that other Notification messages contain Data.SimpleItem item with Name = «State» and Value with tdc:DoorMode type.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-31.33">
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetDoorStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">LockDoorResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-31.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification messages with PropertyOperation = "Changed" (correct value for UTC time, TopicExpression and wsnt:Message, Topic = “tns1:Door/State/DoorMode”, contains Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token, contains Data.SimpleItem item with Name = «State» and Value with type equal to tdc:DoorMode) at step <link linkend="tc.DOORCONTROL-3-1-31.29">29</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent the last Notification message with PropertyOperation = "Changed" with State value other than “Locked” at step <link linkend="tc.DOORCONTROL-3-1-31.29">29</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-31.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-31.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-31.33">33</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends SOAP fault to command changing the DoorState.DoorMode at step <link linkend="tc.DOORCONTROL-3-1-31.11">11</link> or 16 or 18 or 27 then the ONVIF Client starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and runs the test from step <link linkend="tc.DOORCONTROL-3-1-31.23">23</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends the last notification message with door state differerent from “Locked” at step <link linkend="tc.DOORCONTROL-3-1-31.13">13</link>, then the ONVIF Client starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and runs the test from step <link linkend="tc.DOORCONTROL-3-1-31.23">23</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends the last notification message with door state not different from “Locked” at step <link linkend="tc.DOORCONTROL-3-1-31.20">20</link>, then the ONVIF Client starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and runs the test from step <link linkend="tc.DOORCONTROL-3-1-31.23">23</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If in the <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> the DUT sends SOAP fault to request to change door mode, then the ONVIF Client starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-31.23">23</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling <emphasis role="bold">Unsubscribe</emphasis> or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-3-1-32-->
      <section xml:id="tc.DOORCONTROL-3-1-32">
        <title>UNLOCK DOOR</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-32
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> UnlockDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> UnlockDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Unlock Door is accepted or fault is returned. To verify Door state change after Unlock Door command. To verify tns1:Door/State/DoorMode property events.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Unlock capability is configured and added to the DUT. The doors are closed and there are no schedules.



        </para>

        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-32.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-32.4">
              <para>
                ONVIF Client selects one door from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-32.3">3</link> with DoorInfo.Capabilities.Unlock equal to true and DoorInfo.Capabilities.Locked equal to true. If there is no Door with DoorInfo.Capabilities.Unlock equal to true, fail the test and skip other steps. If there is no Door with DoorInfo.Capabilities.Unlock equal to true and DoorInfo.Capabilities.Lock equal to true then ONVIF Client executes <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link> to start user interaction process and then goes to step <link linkend="tc.DOORCONTROL-3-1-32.6">6</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will execute <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> to switch the selected door into Locked state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-32.6">
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <link linkend="Annex_HelperCatchingOfInitializedEvent">Annex A.3</link> to catch Initialized event for selected door.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-32.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">UnlockDoor</emphasis> request (Token = [selected Door token]) to change door state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">UnlockDoorResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-32.11">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-32.12">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-3-1-32.11">11</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" contain Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" have TopicExpression equal to tns1:Door/State/DoorMode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the last Notification message with PropertyOperation = "Changed" contains Data.SimpleItem item with Name = «State» and Value equal to “Unlocked”. Check that other Notification messages contain Data.SimpleItem item with Name = «State» and Value with tdc:DoorMode type.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-32.16">
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">UnlockDoorResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-32.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification messages with PropertyOperation = "Changed" (correct value for UTC time, TopicExpression and wsnt:Message, Topic = “tns1:Door/State/DoorMode”, contains Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token, contains Data.SimpleItem item with Name = «State» and Value with type equal to tdc:DoorMode) at step <link linkend="tc.DOORCONTROL-3-1-32.12">12</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent the last Notification message with PropertyOperation = "Changed" with State value other than “Unlocked” at step <link linkend="tc.DOORCONTROL-3-1-32.12">12</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-32.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-32.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-32.16">16</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends SOAP fault to UnlockDoor request then the ONVIF Client deletes Subscription Manager, starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-32.6">6</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If in the <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> the DUT sends SOAP fault to request to change door mode, then the ONVIF Client starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-32.6">6</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no required Notification messages are received for step <link linkend="tc.DOORCONTROL-3-1-32.9">9</link> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>

      </section>
      <!--DOORCONTROL-3-1-33-->
      <section xml:id="tc.DOORCONTROL-3-1-33">
        <title>LOCK OPEN DOOR</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-33
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockOpenDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockOpenDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Lock Open Door is accepted. To verify Door state change after Lock Open Door command. To verify tns1:Door/State/DoorMode property events.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Lock Open capability is configured and added to the DUT. The doors are closed and there are no schedules.



        </para>

        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-33.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-33.4">
              <para>
                ONVIF Client selects one door from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-33.3">3</link> with DoorInfo.Capabilities.LockOpen equal to true and DoorInfo.Capabilities.Locked equal to true. If there is no Door with DoorInfo.Capabilities.LockOpen equal to true, fail the test and skip other steps. If there is no Door with DoorInfo.Capabilities.LockOpen equal to true and DoorInfo.Capabilities.Lock equal to true then ONVIF Client executes <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link> to start user interaction process and then goes to step <link linkend="tc.DOORCONTROL-3-1-33.6">6</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will execute <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> to switch the selected door into Locked state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-33.6">
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <link linkend="Annex_HelperCatchingOfInitializedEvent">Annex A.3</link> to catch Initialized event for selected door.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockOpenDoor</emphasis> request (Token = [selected Door token]) to change door state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">LockOpenDoorResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-33.11">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-33.12">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-3-1-33.11">11</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-33.13">
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" contain Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" have TopicExpression is equal to tns1:Door/State/DoorMode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the last Notification message with PropertyOperation = "Changed" contains Data.SimpleItem item with Name = «State» and Value equal to “LockedOpen”. Check that other Notification messages contain Data.SimpleItem item with Name = «State» and Value with tdc:DoorMode type.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-33.16">
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">LockOpenDoorResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-33.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification messages with PropertyOperation = "Changed" (correct value for UTC time, TopicExpression and wsnt:Message, Topic = “tns1:Door/State/DoorMode”, contains Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token, contains Data.SimpleItem item with Name = «State» and Value with type equal to tdc:DoorMode) at step <link linkend="tc.DOORCONTROL-3-1-33.12">12</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent the last Notification message with PropertyOperation = "Changed" with State value other than “LockedOpen” at step <link linkend="tc.DOORCONTROL-3-1-33.12">12</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-33.13">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-33.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-33.16">16</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends SOAP fault to LockOpenDoor request then the ONVIF Client deletes Subscription Manager, starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-33.6">6</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If in the Annex A.5 the DUT sends SOAP fault to request to change door mode, then the ONVIF Client starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-33.6">6</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-3-1-34-->
      <section xml:id="tc.DOORCONTROL-3-1-34">
        <title>LOCK OPEN RELEASE DOOR</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-34
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockOpenReleaseDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockOpenReleaseDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Lock Open Release Door is accepted. To verify Door state change after Lock Open Release Door command. To verify tns1:Door/State/DoorMode property events.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Lock Open capability is configured and added to the DUT. The doors are closed and there are no schedules.
          Test Configuration: ONVIF Client and DUT



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-34.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-34.4">
              <para>
                ONVIF Client selects one door from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-34.3">3</link> with DoorInfo.Capabilities.LockOpen equal to true and DoorInfo.Capabilities.Locked equal to true. If there is no Door with DoorInfo.Capabilities.LockOpen equal to true, fail the test and skip other steps. If there is no Door with DoorInfo.Capabilities.LockOpen equal to true and DoorInfo.Capabilities.Lock equal to true then ONVIF Client executes <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link> to start user interaction process and then goes to step <link linkend="tc.DOORCONTROL-3-1-34.14">14</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorState</emphasis> request (Token = “Token1”, where Token1 is selected door) to retrieve current state of the door.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">GetDoorStateResponse</emphasis> from the DUT. If DoorState.DoorMode is equal to LockedOpen then skip steps <link linkend="tc.DOORCONTROL-3-1-34.7">7</link>-<link linkend="tc.DOORCONTROL-3-1-34.15">15</link> and go to step <link linkend="tc.DOORCONTROL-3-1-34.16">16</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-34.7">
              <para>
                ONVIF Client will execute <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> to switch the selected door into Locked state.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockOpenDoor</emphasis> request (Token = [selected Door token]) to move the door in LockedOpen state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">LockOpenDoorResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-34.12">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-34.13">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis>. Repeat step <link linkend="tc.DOORCONTROL-3-1-34.12">12</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-34.14">
              <para>
                Check that the last Notification message with PropertyOperation = "Changed" contains Source.SimpleItem item with Name = "DoorToken" and Value equal to selected door tocken and contains Data.SimpleItem item with Name = «State» and Value equal to “LockedOpen”.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-34.15">
              <para>
                ONVIF Client deletes Subscription Manager either by calling <emphasis role="bold">Unsubscribe</emphasis> or through a timeout.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-34.16">
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-34.18">
              <para>
                Execute <link linkend="Annex_HelperCatchingOfInitializedEvent">Annex A.3</link> to catch Initialized event for selected door. State of the Door received in <link linkend="Annex_HelperCatchingOfInitializedEvent">Annex A.3</link> will be assumed as initial State of this Door.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that initial state of the Door equals to “LockedOpen”.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockOpenReleaseDoor</emphasis> request (Token = [selected Door token]) to change door state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">LockOpenDoorReleaseResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-34.22">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-34.23">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-3-1-34.22">22</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" contain Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" have TopicExpression is equal to tns1:Door/State/DoorMode.
              </para>
            </listitem>
            <listitem>
              <para>
                Virify that last Notification message with PropertyOperation = "Changed" contains Data.SimpleItem item with Name = «State» and Value other than “LockedOpen”. Check that other Notification messages contain Data.SimpleItem item with Name = «State» and Value with tdc:DoorMode type.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-34.27">
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">LockOpenReleaseDoorResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-34.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent the last Notification message with PropertyOperation = "Changed" with State value not equal to “LockedOpen” at step <link linkend="tc.DOORCONTROL-3-1-34.13">13</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent Notification message for selected door token with PropertyOperation = "Initialized" with State value not equal to “LockedOpen” at step <link linkend="tc.DOORCONTROL-3-1-34.18">18</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification messages with PropertyOperation = "Changed" (correct value for UTC time, TopicExpression and wsnt:Message, Topic = “tns1:Door/State/DoorMode”, contains Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token, contains Data.SimpleItem item with Name = «State» and Value with type equal to tdc:DoorMode) at step <link linkend="tc.DOORCONTROL-3-1-34.23">23</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent the last Notification message with PropertyOperation = "Changed" with State value equal to “LockedOpen” at step <link linkend="tc.DOORCONTROL-3-1-34.23">23</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-34.23">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-34.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-34.27">27</link>, fail the test and go to the next test.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends SOAP fault to LockOpenDoor request or to LockOpenRealiseDoorRequest then the ONVIF Client deletes Subscription Manager, starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-34.16">16</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If in the <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> the DUT sends SOAP fault to request to change door mode, then the ONVIF Client starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-34.16">16</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-3-1-35-->
      <section xml:id="tc.DOORCONTROL-3-1-35">
        <title>LOCK DOWN DOOR</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-35
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockDownDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockDownDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Lock Down Door is accepted. To verify Door state change after Lock Down Door command. To verify tns1:Door/State/DoorMode property events.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Lock Down capability is configured and added to the DUT. The doors are closed and there are no schedules.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-35.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-35.4">
              <para>
                ONVIF Client selects one door from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-35.3">3</link> with DoorInfo.Capabilities.LockDown equal to true and DoorInfo.Capabilities.Locked equal to true. If there is no Door with DoorInfo.Capabilities.LockDown equal to true, fail the test and skip other steps. If there is no Door with DoorInfo.Capabilities.LockDown equal to true and DoorInfo.Capabilities.Lock equal to true then ONVIF Client executes <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link> to start user interaction process and then goes to step <link linkend="tc.DOORCONTROL-3-1-35.6">6</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will execute <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> to switch the selected door into Locked state.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-35.6">
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Execute <link linkend="Annex_HelperCatchingOfInitializedEvent">Annex A.3</link> to catch Initialized event for selected door.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockDownDoor</emphasis> request (Token = [selected Door token]) to change door state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">LockDownDoorResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-35.11">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-35.12">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-3-1-35.11">11</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" contain Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" have TopicExpression is equal to tns1:Door/State/DoorMode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the last Notification message with PropertyOperation = "Changed" contains Data.SimpleItem item with Name = «State» and Value equal to “LockedDown”. Check that other Notification messages contain Data.SimpleItem item with Name = «State» and Value with tdc:DoorMode type.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-35.16">
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">LockDownDoorResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-35.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification messages with PropertyOperation = "Changed" (correct value for UTC time, TopicExpression and wsnt:Message, Topic = “tns1:Door/State/DoorMode”, contains Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token, contains Data.SimpleItem item with Name = «State» and Value with type equal to tdc:DoorMode) at step <link linkend="tc.DOORCONTROL-3-1-35.12">12</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent the last Notification message with PropertyOperation = "Changed" with State value other than “LockedDown” at step <link linkend="tc.DOORCONTROL-3-1-35.12">12</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-35.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-35.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-35.16">16</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends SOAP fault to LockDownDoor request, then the ONVIF Client deletes Subscription Manager, starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-35.6">6</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If in the <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> the DUT sends SOAP fault to request to change door mode, then the ONVIF Client starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-35.6">6</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-3-1-36-->
      <section xml:id="tc.DOORCONTROL-3-1-36">
        <title>LOCK DOWN RELEASE DOOR</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-3-1-36
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> LockDownReleaseDoor (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> LockDownReleaseDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Lock Down Release Door is accepted. To verify Door state change after Lock Down Release Door command. To verify tns1:Door/State/DoorMode property events.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Lock Down capability is configured and added to the DUT. The doors are closed and there are no schedules.



        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-36.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-36.4">
              <para>
                ONVIF Client selects one door from the complete list of doors at step <link linkend="tc.DOORCONTROL-3-1-36.3">3</link> with DoorInfo.Capabilities.LockDown equal to true and DoorInfo.Capabilities.Locked equal to true. If there is no Door with DoorInfo.Capabilities.LockDown equal to true, fail the test and skip other steps. If there is no Door with DoorInfo.Capabilities.LockDown equal to true and DoorInfo.Capabilities.Lock equal to true then ONVIF Client executes <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link> to start user interaction process and then goes to step <link linkend="tc.DOORCONTROL-3-1-36.14">14</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorState</emphasis> request (Token = “Token1”, where Token1 is selected door) to retrieve current state of the door.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">GetDoorStateResponse</emphasis> from the DUT. If DoorState.DoorMode is equal to LockedDown then skip steps <link linkend="tc.DOORCONTROL-3-1-36.7">7</link>-<link linkend="tc.DOORCONTROL-3-1-36.15">15</link> and go to step <link linkend="tc.DOORCONTROL-3-1-36.16">16</link>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-36.7">
              <para>
                ONVIF Client will execute <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> to switch the selected door into Locked state.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockDownDoor</emphasis> request (Token = [selected Door token]) to move the door in LockedDown state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify <emphasis role="bold">LockDownDoorResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-36.12">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-36.13">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis>. Repeat step <link linkend="tc.DOORCONTROL-3-1-36.12">12</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-36.14">
              <para>
                Verify that the last Notification message with PropertyOperation = "Changed" contains Source.SimpleItem item with Name = "DoorToken" and Value equal to selected door tocken and contains Data.SimpleItem item with Name = «State» and Value equal to “LockedDown”.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-36.15">
              <para>
                ONVIF Client deletes Subscription Manager either by calling <emphasis role="bold">Unsubscribe</emphasis> or through a timeout.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-36.16">
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-36.18">
              <para>
                Execute <link linkend="Annex_HelperCatchingOfInitializedEvent">Annex A.3</link> to catch Initialized event for selected door. State of the Door received in <link linkend="Annex_HelperCatchingOfInitializedEvent">Annex A.3</link> will be assumed as initial State of this Door.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that initial state of the Door equals to “LockedDown”.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">LockDownReleaseDoor</emphasis> request (Token = [selected Door token]) to change door state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">LockDownReleaseDoorResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-36.22">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-36.23">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-3-1-36.22">22</link> until timeout has expired (Operation Delay option from ONVIF Device Test Tool will be used).
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" contain Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that all Notification messages with PropertyOperation = "Changed" have TopicExpression is equal to tns1:Door/State/DoorMode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the last Notification message with PropertyOperation = "Changed" contains Data.SimpleItem item with Name = «State» and Value other than “LockedDown”. Check that other Notification messages contain Data.SimpleItem item with Name = «State» and Value with tdc:DoorMode type.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-3-1-36.27">
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">LockDownReleaseDoorResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-3-1-36.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent the last Notification message with PropertyOperation = "Changed" with State value not equal to “LockedDown” at step <link linkend="tc.DOORCONTROL-3-1-36.13">13</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent Notification message for selected door token with PropertyOperation = "Initialized" with State value not equal to “LockedDown” at step <link linkend="tc.DOORCONTROL-3-1-36.18">18</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification messages with PropertyOperation = "Changed" (correct value for UTC time, TopicExpression and wsnt:Message, Topic = “tns1:Door/State/DoorMode”, contains Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token, contains Data.SimpleItem item with Name = «State» and Value with type equal to tdc:DoorMode) at step <link linkend="tc.DOORCONTROL-3-1-36.23">23</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent the last Notification message with PropertyOperation = "Changed" with State value equal to “LockedDown” at step <link linkend="tc.DOORCONTROL-3-1-36.23">23</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-3-1-36.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-3-1-36.4">4</link>-<link linkend="tc.DOORCONTROL-3-1-36.27">27</link>, fail the test and go to the next
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends SOAP fault to LockDownDoor request or to LockDownReleaseDoorRequest then the ONVIF Client deletes Subscription Manager, starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-36.16">16</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If in the <link linkend="Annex_HelperDoorTransitionToLockedState">Annex A.5</link> the DUT sends SOAP fault to request to change door mode, then the ONVIF Client starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>), and then runs the test from step <link linkend="tc.DOORCONTROL-3-1-36.16">16</link>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>

    </section>
    <!--Consistency-->
    <section xml:id="tc.door_control.consistency">
      <title>Consistency</title>
      <!--DOORCONTROL-5-1-1-->
      <section xml:id="tc.DOORCONTROL-5-1-1">
        <title>GET ACCESS POINT INFO LIST AND GET DOOR INFO LIST CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-5-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoorInfoList (ONVIF Door Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorInfoList, GetAccessPointInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Door Info List contains all Doors from Access Point Info List.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. Door Control Service address was received from the DUT.  
          Access Point Entity is supported by the DUT. At least one Access Point is configured and added to the DUT. Profile C scope or Profile A scope.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-5-1-1.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>)
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-5-1-1.4">
              <para>
                Get a complete list of access points from the DUT (see <link linkend="Annex_HelperGetCompleteAccessPointInfoList">Annex A.2</link>)
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the complete list of doors contains all Doors included in the complete list of access points in Entity element in case Type is skipped or equal to tdc:Door.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT returned at least one Door listed in Entity element of AccessPointInfo listed in the complete list of access points in case Type is skipped or equal to tdc:Door that was not included in the complete list of doors.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-5-1-1.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point at step <link linkend="tc.DOORCONTROL-5-1-1.4">4</link>.
              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
<section xml:id="tc.DOORCONTROL-5-1-2"
               xreflabel="DOORCONTROL-5-1-2">
        <title>DOOR CAPABILITIES CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-5-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DoorCapabilities (ONVIF Door Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Door сapabilities consistency.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service was received from the DUT. Door Entity is supported by the DUT. Profile D is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
           <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of door info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">doorInfoCompleteList</emphasis> - complete door info list
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
            <listitem>
              <para>
                For each Door Info (<emphasis role="italic">doorInfo</emphasis>) from <emphasis role="italic">doorInfoCompleteList</emphasis> 
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width=2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">doorInfo</emphasis>.Capabilities.Access != true, FAIL the test and skip other steps.
                    </para>
                  </listitem>    
                   <listitem>
                    <para>
                      If <emphasis role="italic">doorInfo</emphasis>.Capabilities.Lock != true, FAIL the test and skip other steps.
                    </para>
                  </listitem>    
                 <listitem>
                    <para>
                      If <emphasis role="italic">doorInfo</emphasis>.Capabilities.Unlock != true, FAIL the test and skip other steps.
                    </para>
                  </listitem>    
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT does not pass all assertions.
              </para>
            </listitem>            
          </itemizedlist>
        </para>
      </section>      
    </section>
    <!--Property Events-->
    <section xml:id="tc.door_control.property_events">
      <title>Property Events</title>
      <!--DOORCONTROL-6-1-1-->
      <section xml:id="tc.DOORCONTROL-6-1-1">
        <title>DOOR CONTROL – DOOR MODE EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-6-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Door/State/DoorMode (ONVIF Door Control Service Specification), GetDoorState (ONVIF Door Control Service Specification), Properties (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Door/State/DoorMode event generation after subscription and to verify tns1:Door/State/DoorMode event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-1.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-1.4">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:Door/State/DoorMode. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is a Property event (MessageDescription.IsProperty = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "DoorToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = «State» and Type = "tdc:DoorMode".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-1.12">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-1.13">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-6-1-1.12">12</link> until Notification for all Doors is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Door/State/DoorMode for all received Notify messages.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to one of existing Door Tokens (e.g. complete list of doors contains Door with the same token). Verify that there are Notification messages for each Door.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Data.SimpleItem item with Name = «State» and Value with type is equal to tdc:DoorMode.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that Notify PropertyOperation = "Initialized".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorState</emphasis> request for each Door with corresponding tokens.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-1.20">
              <para>
                Verify the <emphasis role="bold">GetDoorStateResponse</emphasis> messages from the DUT. Verify that Data.SimpleItem item with Name = «State» from Notification message has the same value with DoorMode elements from corresponding <emphasis role="bold">GetDoorStateResponse</emphasis> messages for each Door.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:Door/State/DoorMode at least for one Door.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid DoorToken or State values, PropertyOperation is not equal to "Initialized").
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-6-1-1.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return Topic tns1:Door/State/DoorMode in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step <link linkend="tc.DOORCONTROL-6-1-1.13">13</link> will wait for Notification messages until notification for all Doors is received or Operation Delay has expired. Notification messages for all Doors are assumed as received, if the number of Notification messages is equal to the number of Doors.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-6-1-1.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-6-1-1.4">4</link>-<link linkend="tc.DOORCONTROL-6-1-1.20">20</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-6-1-2-->
      <section xml:id="tc.DOORCONTROL-6-1-2">
        <title>DOOR CONTROL – DOOR PHYSICAL STATE EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-6-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Door/State/DoorPhysicalState (ONVIF Door Control Service Specification), GetDoorState (ONVIF Door Control Service Specification), Properties (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Door/State/DoorPhysicalState event generation after subscription and to verify tns1:Door/State/DoorPhysicalState event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Door Monitor capability is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-2.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-2.4">
              <para>
                Check that there is at least one Door with Capabilities.DoorMonitor = “true”. Otherwise fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:Door/State/DoorPhysicalState. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is a Property event (MessageDescription.IsProperty = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "DoorToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "State" and Type = "tdc:DoorPhysicalState".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorPhysicalState Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-2.13">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-2.14">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-6-1-2.13">13</link> until Notification for all Doors with Capabilities.DoorMonitor = “true” is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Door/State/DoorPhysicalState for all received Notify messages.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to one of existing Door Tokens Capabilities.DoorMonitor = “true” (e.g. complete list of doors contains Door with the same token). Verify that there are Notification messages for each Door with Capabilities.DoorMonitor = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to tdc:DoorPhysicalState.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that Notify PropertyOperation = "Initialized".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke GetDoorState request for each Door with corresponding tokens.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-2.21">
              <para>
                Verify the <emphasis role="bold">GetDoorStateResponse</emphasis> messages from the DUT. Verify that Data.SimpleItem item with Name = "State" from Notification message has the same value with DoorPhysicalState elements from corresponding <emphasis role="bold">GetDoorStateResponse</emphasis> messages for each Door with Capabilities.DoorMonitor = “true”.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:Door/State/DoorPhysicalState at least for one Door with Capabilities.DoorMonitor = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid DoorToken or State values, PropertyOperation is not equal to "Initialized").
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-6-1-2.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return Topic tns1:Door/State/DoorPhysicalState in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step <link linkend="tc.DOORCONTROL-6-1-2.14">14</link> will wait for Notification messages until notification for all Doors with Capabilities.DoorMonitor = “true” is received or Operation Delay has expired. Notification messages for all Doors with Capabilities.DoorMonitor = “true” are assumed as received, if the number of Notification messages is equal to the number of Doors with Capabilities.DoorMonitor = “true”.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-6-1-2.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-6-1-2.4">4</link>-<link linkend="tc.DOORCONTROL-6-1-2.21">21</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-6-1-3-->
      <section xml:id="tc.DOORCONTROL-6-1-3">
        <title>DOOR CONTROL – DOOR PHYSICAL STATE EVENT STATE CHANGE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-6-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Door/State/DoorPhysicalState (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Door/State/DoorPhysicalState event generation after property was changed and to verify tns1:Door/State/DoorPhysicalState event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Door Monitor capability is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-3.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-3.4">
              <para>
                Check that there is at least one Door with Capabilities.DoorMonitor = “true”. Otherwise fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will select one first Door (token = Token1) with Capabilities.DoorMonitor = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorPhysicalState Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke change of DoorPhysicalState property for Door with token = Token1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-3.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-3.10">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-6-1-3.9">9</link> until Notification with PropertyOperation = "Changed" for Door with Capabilities.DoorMonitor = “true” is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Door/State/DoorPhysicalState for received Notify message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "DoorToken" and Value = “Token1”.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-3.14">
              <para>
                Verify that notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to tdc:DoorPhysicalState.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:Door/State/DoorPhysicalState with valid DoorToken.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid DoorToken value).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-6-1-3.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> All Notification messages except messages with PropertyOperation = "Changed" will be ignored.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no required Notification messages are received for step <link linkend="tc.DOORCONTROL-6-1-3.10">10</link> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-6-1-3.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-6-1-3.4">4</link>-<link linkend="tc.DOORCONTROL-6-1-3.14">14</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-6-1-4-->
      <section xml:id="tc.DOORCONTROL-6-1-4">
        <title>DOOR CONTROL – DOUBLE LOCK PHYSICAL STATE EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-6-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Door/State/DoubleLockPhysicalState (ONVIF Door Control Service Specification), GetDoorState (ONVIF Door Control Service Specification), Properties (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Door/State/DoubleLockPhysicalState event generation after subscription and to verify tns1:Door/State/DoubleLockPhysicalState event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Double Lock Monitor capability is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-4.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-4.4">
              <para>
                Check that there is at least one Door with Capabilities.DoubleLockMonitor = “true”. Otherwise fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:Door/State/DoubleLockPhysicalState. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is a Property event (MessageDescription.IsProperty = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "DoorToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "State" and Type = "tdc:LockPhysicalState".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoubleLockPhysicalState Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-4.13">
              <para>
                ONVIF Client will invoke PullMessages command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-4.14">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-6-1-4.13">13</link> until Notification for all Doors with Capabilities.DoorMonitor = “true” is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Door/State/DoubleLockPhysicalState for all received Notify messages.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to one of existing Door Tokens Capabilities.DoubleLockMonitor = “true” (e.g. complete list of doors contains Door with the same token). Verify that there are Notification messages for each Door with Capabilities.DoubleLockMonitor = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to tdc:LockPhysicalState.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that Notify PropertyOperation = "Initialized".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke GetDoorState request for each Door with corresponding tokens.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-4.21">
              <para>
                Verify the <emphasis role="bold">GetDoorStateResponse</emphasis> messages from the DUT. Verify that Data.SimpleItem item with Name = "State" from Notification message has the same value with DoubleLockPhysicalState elements from corresponding <emphasis role="bold">GetDoorStateResponse</emphasis> messages for each Door with Capabilities.DoubleLockMonitor = “true”.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:Door/State/DoubleLockPhysicalState at least for one Door with Capabilities.DoubleLockMonitor = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid DoorToken or State values, PropertyOperation is not equal to "Initialized").
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-6-1-4.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return Topic tns1:Door/State/DoubleLockPhysicalState in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step <link linkend="tc.DOORCONTROL-6-1-4.14">14</link> will wait for Notification messages until notification for all Doors with Capabilities.DoubleLockMonitor = “true” is received or Operation Delay has expired. Notification messages for all Doors with Capabilities.DoubleLockMonitor = “true” are assumed as received, if the number of Notification messages is equal to the number of Doors with Capabilities.DoubleLockMonitor = “true”.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-6-1-4.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-6-1-4.4">4</link>-<link linkend="tc.DOORCONTROL-6-1-4.21">21</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-6-1-5-->
      <section xml:id="tc.DOORCONTROL-6-1-5">
        <title>DOOR CONTROL – DOUBLE LOCK PHYSICAL STATE EVENT STATE CHANGE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-6-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Door/State/DoubleLockPhysicalState (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Door/State/DoubleLockPhysicalState event generation after property was changed and to verify tns1:Door/State/DoubleLockPhysicalState event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Double Lock Monitor capability is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-5.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-5.4">
              <para>
                Check that there is at least one Door with Capabilities.DoubleLockMonitor = “true”. Otherwise fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will select one first Door (token = Token1) with Capabilities.DoubleLockMonitor = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoubleLockPhysicalState Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke change of DoubleLockPhysicalState property for Door with token = Token1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-5.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-5.10">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-6-1-5.9">9</link> until Notification with PropertyOperation = "Changed" for Door with Capabilities.DoubleLockMonitor = “true” is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Door/State/DoubleLockPhysicalState for received Notify message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "DoorToken" and Value = “Token1”.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-5.14">
              <para>
                Verify that notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to tdc:DoubleLockPhysicalState.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:Door/State/DoubleLockPhysicalState with valid DoorToken.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid DoorToken value).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-6-1-5.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> All Notification messages except messages with PropertyOperation = "Changed" will be ignored.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no required Notification messages are received for step <link linkend="tc.DOORCONTROL-6-1-5.10">10</link> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-6-1-5.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-6-1-5.4">4</link>-<link linkend="tc.DOORCONTROL-6-1-5.14">14</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-6-1-6-->
      <section xml:id="tc.DOORCONTROL-6-1-6">
        <title>DOOR CONTROL – LOCK PHYSICAL STATE EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-6-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Door/State/LockPhysicalState (ONVIF Door Control Service Specification), GetDoorState (ONVIF Door Control Service Specification), Properties (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Door/State/LockPhysicalState event generation after subscription and to verify tns1:Door/State/LockPhysicalState event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Lock Monitor capability is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-6.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-6.4">
              <para>
                Check that there is at least one Door with Capabilities.LockMonitor = “true”. Otherwise fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:Door/State/LockPhysicalState. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is a Property event (MessageDescription.IsProperty = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "DoorToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "State" and Type = "tdc:LockPhysicalState".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/LockPhysicalState Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-6.13">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-6.14">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-6-1-6.13">13</link> until Notification for all Doors with Capabilities.DoorMonitor = “true” is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Door/State/LockPhysicalState for all received Notify messages.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to one of existing Door Tokens Capabilities.LockMonitor = “true” (e.g. complete list of doors contains Door with the same token). Verify that there are Notification messages for each Door with Capabilities.LockMonitor = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to tdc:LockPhysicalState.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that Notify PropertyOperation = "Initialized".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorState</emphasis> request for each Door with corresponding tokens.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-6.21">
              <para>
                Verify the <emphasis role="bold">GetDoorStateResponse</emphasis> messages from the DUT. Verify that Data.SimpleItem item with Name = "State" from Notification message has the same value with LockPhysicalState elements from corresponding <emphasis role="bold">GetDoorStateResponse</emphasis> messages for each Door with Capabilities.LockMonitor = “true”.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">SubscriptionReference</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:Door/State/LockPhysicalState at least for one Door with Capabilities.LockMonitor = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid DoorToken or State values, PropertyOperation is not equal to "Initialized").
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-6-1-6.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return Topic tns1:Door/State/LockPhysicalState in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step <link linkend="tc.DOORCONTROL-6-1-6.14">14</link> will wait for Notification messages until notification for all Doors with Capabilities.LockMonitor = “true” is received or Operation Delay has expired. Notification messages for all Doors with Capabilities.LockMonitor = “true” are assumed as received, if the number of Notification messages is equal to the number of Doors with Capabilities.LockMonitor = “true”.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-6-1-6.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-6-1-6.4">4</link>-<link linkend="tc.DOORCONTROL-6-1-6.21">21</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-6-1-7-->
      <section xml:id="tc.DOORCONTROL-6-1-7">
        <title>DOOR CONTROL – LOCK PHYSICAL STATE EVENT STATE CHANGE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-6-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Door/State/LockPhysicalState (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Door/State/LockPhysicalState event generation after property was changed and to verify tns1:Door/State/LockPhysicalState event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Lock Monitor capability is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-7.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-7.4">
              <para>
                Check that there is at least one Door with Capabilities.LockMonitor = “true”. Otherwise, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will select one first Door (token = Token1) with Capabilities.LockMonitor = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/LockPhysicalState Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke change of LockPhysicalState property for Door with token = Token1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-7.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-7.10">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-6-1-7.9">9</link> until Notification with PropertyOperation = "Changed" for Door with Capabilities.LockMonitor = “true” is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Door/State/LockPhysicalState for received Notify message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "DoorToken" and Value = “Token1”.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-7.14">
              <para>
                Verify that notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to tdc:LockPhysicalState.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:Door/State/LockPhysicalState with valid DoorToken.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid DoorToken value).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-6-1-7.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> All Notification messages except messages with PropertyOperation = "Changed" will be ignored.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no required Notification messages are received for step <link linkend="tc.DOORCONTROL-6-1-7.10">10</link> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-6-1-7.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-6-1-7.4">4</link>-<link linkend="tc.DOORCONTROL-6-1-7.14">14</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-6-1-8-->
      <section xml:id="tc.DOORCONTROL-6-1-8">
        <title>DOOR CONTROL – DOOR TAMPER EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-6-1-8
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Door/State/DoorTamper (ONVIF Door Control Service Specification), GetDoorState (ONVIF Door Control Service Specification), Properties (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Door/State/DoorTamper event generation after subscription and to verify tns1:Door/State/DoorTamper event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Tamper capability is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-8.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-8.4">
              <para>
                Check that there is at least one Door with Capabilities.Tamper = “true”. Otherwise fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:Door/State/DoorTamper. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is a Property event (MessageDescription.IsProperty = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "DoorToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "State" and Type = "tdc:DoorTamperState".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorTamper Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-8.13">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-8.14">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-6-1-8.13">13</link> until Notification for all Doors with Capabilities.DoorMonitor = “true” is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Door/State/DoorTamper for all received Notify messages.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to one of existing Door Tokens Capabilities.Tamper = “true” (e.g. complete list of doors contains Door with the same token). Verify that there are Notification messages for each Door with Capabilities.Tamper = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to tdc:DoorTamperState.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that Notify PropertyOperation = "Initialized".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorState</emphasis> request for each Door with corresponding tokens.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-8.21">
              <para>
                Verify the <emphasis role="bold">GetDoorStateResponse</emphasis> messages from the DUT. Verify that Data.SimpleItem item with Name = "State" from Notification message has the same value with Tamper elements from corresponding <emphasis role="bold">GetDoorStateResponse</emphasis> messages for each Door with Capabilities.Tamper = “true”.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:Door/State/DoorTamper at least for one Door with Capabilities.Tamper = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid DoorToken or State values, PropertyOperation is not equal to "Initialized").
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-6-1-8.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return Topic tns1:Door/State/DoorTamper in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step <link linkend="tc.DOORCONTROL-6-1-8.14">14</link> will wait for Notification messages until notification for all Doors with Capabilities.Tamper = “true” is received or Operation Delay has expired. Notification messages for all Doors with Capabilities.Tamper = “true” are assumed as received, if the number of Notification messages is equal to the number of Doors with Capabilities.Tamper = “true”.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-6-1-8.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-6-1-8.4">4</link>-<link linkend="tc.DOORCONTROL-6-1-8.21">21</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-6-1-9-->
      <section xml:id="tc.DOORCONTROL-6-1-9">
        <title>DOOR CONTROL – DOOR TAMPER EVENT STATE CHANGE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-6-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Door/State/DoorTamper (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Door/State/DoorTamper event generation after property was changed and to verify tns1:Door/State/DoorTamper event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Tamper capability is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-9.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-9.4">
              <para>
                Check that there is at least one Door with Capabilities.Tamper = “true”. Otherwise fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will select one first Door (token = Token1) with Capabilities.Tamper = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorTamper Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke change of DoorTamper property for Door with token = Token1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-9.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-9.10">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-6-1-9.9">9</link> until Notification with PropertyOperation = "Changed" for Door with Capabilities.Tamper = “true” is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Door/State/DoorTamper for received Notify message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "DoorToken" and Value = “Token1”.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-9.14">
              <para>
                Verify that notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to tdc:DoorTamperState.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:Door/State/DoorTamper with valid DoorToken.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid DoorToken value).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-6-1-9.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> All Notification messages except messages with PropertyOperation = "Changed" will be ignored.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no required Notification messages are received for step <link linkend="tc.DOORCONTROL-6-1-9.10">10</link> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-6-1-9.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-6-1-9.4">4</link>-<link linkend="tc.DOORCONTROL-6-1-9.14">14</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-6-1-10-->
      <section xml:id="tc.DOORCONTROL-6-1-10">
        <title>DOOR CONTROL – DOOR ALARM EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-6-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Door/State/DoorAlarm (ONVIF Door Control Service Specification), GetDoorState (ONVIF Door Control Service Specification), Properties (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Door/State/DoorAlarm event generation after subscription and to verify tns1:Door/State/DoorAlarm event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Alarm capability is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-10.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-10.4">
              <para>
                Check that there is at least one Door with Capabilities.Alarm = “true”. Otherwise fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:Door/State/DoorAlarm. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is a Property event (MessageDescription.IsProperty = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "DoorToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "State" and Type = "tdc:DoorAlarmState".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorAlarm Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-10.13">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-10.14">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-6-1-10.13">13</link> until Notification for all Doors with Capabilities.DoorMonitor = “true” is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Door/State/DoorAlarm for all received Notify messages.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to one of existing Door Tokens Capabilities.Alarm = “true” (e.g. complete list of doors contains Door with the same token). Verify that there are Notification messages for each Door with Capabilities.Alarm = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to tdc:DoorAlarmState.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that Notify PropertyOperation = "Initialized".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorState</emphasis> request for each Door with corresponding tokens.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-10.21">
              <para>
                Verify the <emphasis role="bold">GetDoorStateResponse</emphasis> messages from the DUT. Verify that Data.SimpleItem item with Name = "State" from Notification message has the same value with Alarm elements from corresponding <emphasis role="bold">GetDoorStateResponse</emphasis> messages for each Door with Capabilities.Alarm = “true”.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:Door/State/DoorAlarm at least for one Door with Capabilities.Alarm = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid DoorToken or State values, PropertyOperation is not equal to "Initialized").
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-6-1-10.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return Topic tns1:Door/State/DoorAlarm in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step <link linkend="tc.DOORCONTROL-6-1-10.14">14</link> will wait for Notification messages until notification for all Doors with Capabilities.Alarm = “true” is received or Operation Delay has expired. Notification messages for all Doors with Capabilities.Alarm = “true” are assumed as received, if the number of Notification messages is equal to the number of Doors with Capabilities.Alarm = “true”.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-6-1-10.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-6-1-10.4">4</link>-<link linkend="tc.DOORCONTROL-6-1-10.21">21</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-6-1-11-->
      <section xml:id="tc.DOORCONTROL-6-1-11">
        <title>DOOR CONTROL – DOOR ALARM EVENT STATE CHANGE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-6-1-11
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Door/State/DoorAlarm (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Door/State/DoorAlarm event generation after property was changed and to verify tns1:Door/State/DoorAlarm event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Alarm capability is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-11.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-11.4">
              <para>
                Check that there is at least one Door with Capabilities.Alarm = “true”. Otherwise fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will select one first Door (token = Token1) with Capabilities.Alarm = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorAlarm Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke change of DoorAlarm property for Door with token = Token1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-11.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-11.10">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-6-1-11.9">9</link> until Notification with PropertyOperation = "Changed" for Door with Capabilities.Alarm = “true” is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Door/State/DoorAlarm for received Notify message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "DoorToken" and Value = “Token1”.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-11.14">
              <para>
                Verify that notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to tdc:DoorAlarmState.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">SubscriptionReference</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:Door/State/DoorAlarm with valid DoorToken.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid DoorToken value).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-6-1-11.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> All Notification messages except messages with PropertyOperation = "Changed" will be ignored.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no required Notification messages are received for step <link linkend="tc.DOORCONTROL-6-1-11.10">10</link> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-6-1-11.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-6-1-11.4">4</link>-<link linkend="tc.DOORCONTROL-6-1-11.14">14</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-6-1-12-->
      <section xml:id="tc.DOORCONTROL-6-1-12">
        <title>DOOR CONTROL – DOOR FAULT EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-6-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Door/State/DoorFault (ONVIF Door Control Service Specification), GetDoorState (ONVIF Door Control Service Specification), Properties (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Door/State/DoorFault event generation after subscription and to verify tns1:Door/State/DoorFault event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Fault capability is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-12.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-12.4">
              <para>
                Check that there is at least one Door with Capabilities.Fault = “true”. Otherwise fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:Door/State/DoorFault. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is a Property event (MessageDescription.IsProperty = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "DoorToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "State" and Type = "tdc:DoorFaultState".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "Reason" and Type = "xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorFault Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-12.14">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-12.15">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-6-1-12.14">14</link> until Notification for all Doors with Capabilities.DoorMonitor = “true” is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Door/State/DoorFault for all received Notify messages.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to one of existing Door Tokens Capabilities.Fault = “true” (e.g. complete list of doors contains Door with the same token). Verify that there are Notification messages for each Door with Capabilities.Fault = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to tdc:DoorFaultState.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification which contains Data.SimpleItem item with Name = "Reason" has Value with type is equal to xs:string.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that Notify PropertyOperation = "Initialized".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorState</emphasis> request for each Door with corresponding tokens.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-12.23">
              <para>
                Verify the <emphasis role="bold">GetDoorStateResponse</emphasis> messages from the DUT. Verify that Data.SimpleItem item with Name = "State" from Notification message has the same value with Fault elements from corresponding <emphasis role="bold">GetDoorStateResponse</emphasis> messages for each Door with Capabilities.Fault = “true”.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:Door/State/DoorFault at least for one Door with Capabilities.Fault = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid DoorToken, Reason or State values, PropertyOperation is not equal to "Initialized").
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-6-1-12.3">3</link>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return Topic tns1:Door/State/DoorFault in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step <link linkend="tc.DOORCONTROL-6-1-12.15">15</link> will wait for Notification messages until notification for all Doors with Capabilities.Fault = “true” is received or Operation Delay has expired. Notification messages for all Doors with Capabilities.Fault = “true” are assumed as received, if the number of Notification messages is equal to the number of Doors with Capabilities.Fault = “true”.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-6-1-12.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-6-1-12.4">4</link>-<link linkend="tc.DOORCONTROL-6-1-12.23">23</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-6-1-13-->
      <section xml:id="tc.DOORCONTROL-6-1-13">
        <title>DOOR CONTROL – DOOR FAULT EVENT STATE CHANGE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-6-1-13
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Door/State/DoorFault (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Door/State/DoorFault event generation after property was changed and to verify tns1:Door/State/DoorFault event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. Door Entity is supported by the DUT. At least one Door with Fault capability is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-13.3">
              <para>
                Get a complete list of doors from the DUT (see <link linkend="Annex_HelperGetCompleteDoorInfoList">Annex A.1</link>).
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-13.4">
              <para>
                Check that there is at least one Door with Capabilities.Fault = “true”. Otherwise, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will select one first Door (token = Token1) with Capabilities.Fault = “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorFault Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke change of DoorFault property for Door with token = Token1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-13.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-13.10">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-6-1-13.9">9</link> until Notification with PropertyOperation = "Changed" for Door with Capabilities.Fault = “true” is received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Door/State/DoorFault for received Notify message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "DoorToken" and Value = “Token1”.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to tdc:DoorFaultState.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-6-1-13.15">
              <para>
                Verify that notification contains Data.SimpleItem item with Name = "Reason" and Value with type is equal to xs:string.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:Door/State/DoorFault with valid DoorToken.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid DoorToken value).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-6-1-13.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> All Notification messages except messages with PropertyOperation = "Changed" will be ignored.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no required Notification messages are received for step <link linkend="tc.DOORCONTROL-6-1-13.10">10</link> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any door for step <link linkend="tc.DOORCONTROL-6-1-13.3">3</link>, skip steps <link linkend="tc.DOORCONTROL-6-1-13.4">4</link>-<link linkend="tc.DOORCONTROL-6-1-13.15">15</link>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
    </section>
    <!--Door Configuration-->
    <section xml:id="tc.door_control.door_configuration">
      <title>Door Configuration</title>
      <!--DOORCONTROL-7-1-1-->
      <section xml:id="tc.DOORCONTROL-7-1-1">
        <title>DOOR CONTROL – ADD OR CHANGE DOOR EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-7-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Configuration/Door/Changed (ONVIF Door Control Service Specification), GetDoorInfo (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Configuration/Door/Changed event generation after adding new door or changing door configuration to the DUT and to verify tns1:Configuration/Door/Changed event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. At least one Door could be added to the DUT or changed.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-7-1-1.3">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:Configuration/Door/Changed. If there is no event with such Topic fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event isn’t a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "DoorToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <!--Step to be uncomment when #1949 is implemented-->
            <!--<listitem>
              <para>
                If DUT supports Door Management feature, skip other steps with PASS result (Note: Door Changed event generation will be tested in Door Management section).
              </para>
            </listitem>-->
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Configuration/Door/Changed Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will add Door or change Door configuration.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-7-1-1.11">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-7-1-1.12">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-7-1-1.11">11</link> until Notification received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Configuration/Door/Changed for received message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "DoorToken" and Value with type is equal to tdc:ReferenceToken.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorInfo</emphasis> request (Token from Notify message) to retrieve a subset of Door Information from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetDoorInfoResponse</emphasis> message from the DUT. Verify that requested Door was returned.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetDoorInfoResponse</emphasis> with specified Door.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:Configuration/Door/Changed with valid DoorToken.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (invalid DoorToken value).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-7-1-1.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step <link linkend="tc.DOORCONTROL-7-1-1.12">12</link> will wait for Notification messages until expected notification is received or Operation Delay after last notification has expired.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-7-1-2-->
      <section xml:id="tc.DOORCONTROL-7-1-2">
        <title>DOOR CONTROL – REMOVE DOOR EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-7-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Configuration/Door/Removed (ONVIF Door Control Service Specification), GetDoorInfo (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, doorcontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1: Configuration/Door/Removed event generation after removing door from the DUT and to verify tns1: Configuration/Door/Removed event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Device supports Pull-Point Notification feature. Door Control Service was received from the DUT. At least one Door could be removed from the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-7-1-2.3">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:Configuration/Door/Removed. If there is no event with such Topic fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event isn’t a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "DoorToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <!--Step to be uncomment when #1949 is implemented-->
            <!--<listitem>
              <para>
                If DUT supports Door Management feature, skip other steps with PASS result (Note: Door Removed event generation will be tested in Door Management section).
              </para>
            </listitem>-->
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Configuration/Door/Removed Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will remove Door.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-7-1-2.11">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-7-1-2.12">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessages. Repeat step <link linkend="tc.DOORCONTROL-7-1-2.11">11</link> until Notification received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notify messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Configuration/Door/Removed for received message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "DoorToken" and Value with type is equal to tdc:ReferenceToken.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetDoorInfo</emphasis> request (Token from Notify message) to retrieve subset of Door Information from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetDoorInfoResponse</emphasis> message from the DUT. Check that empty list was returned.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetDoorInfoResponse</emphasis> with empty list.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:Configuration/Door/Removed with valid DoorToken.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (invalid DoorToken value).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Door at step <link linkend="tc.DOORCONTROL-7-1-2.3">3</link>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step <link linkend="tc.DOORCONTROL-7-1-2.12">12</link> will wait for Notification messages until expected notification is received or Operation Delay after last notification has expired.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Renew has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the Renew request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.
        </para>
      </section>
    </section>
    <!--Door Management-->
    <section xml:id="tc.door_control.door_management">
      <title>Door Management</title>
      <!--DOORCONTROL-8-1-1-->
      <section xml:id="tc.DOORCONTROL-8-1-1">
        <title>GET DOORS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoors command (ONVIF Door Control Service Specification), GetDoorList command (ONVIF Door Control Service Specification),
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoors
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Doors command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of doors (out <emphasis role="italic">doorCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If the DUT does not supports Door Entity and <emphasis role="italic">doorCompleteList</emphasis> is not empty, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If the DUT does not supports Door Entity, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList</emphasis> is empty, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-1.6">
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">doorCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetDoors</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetDoorsResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Door list =: <emphasis role="italic">doorList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorList1</emphasis> does not contain Door item for each token from <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorList1</emphasis> contains at least two Door items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorList1</emphasis> contains other Door items than listed in <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each Door.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">doorCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetDoors</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token[0] := <emphasis role="italic">token</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetDoorsResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Door list =: <emphasis role="italic">doorList2</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">doorList2</emphasis> does not contain only one Door item with token equal to <emphasis role="italic">token</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem xml:id="tc.DOORCONTROL-8-1-1.Comparision" xreflabel="14.4">
                    <para>
                      If <emphasis role="italic">doorList2</emphasis>[0] item does not have equal field values to <emphasis role="italic">doorCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetDoorsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If number of items in <emphasis role="italic">doorCompleteList</emphasis> is less than <emphasis role="italic">cap</emphasis>.MaxLimit, then all <emphasis role="italic">doorCompleteList</emphasis>.Token items shall be used for the step <xref linkend="tc.DOORCONTROL-8-1-1.6"/>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis>The following fields are compared at step <xref linkend="tc.DOORCONTROL-8-1-1.Comparision"/>:
          <itemizedlist>
            <listitem>
              <para>
                Door:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DoorType
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      Timings
                      <itemizedlist>
                        <listitem>
                          <para>
                            ReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            OpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DelayTimeBeforeRelock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedOpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            PreAlarmTime
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>


                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DOORCONTROL-8-1-2-->
      <section xml:id="tc.DOORCONTROL-8-1-2">
        <title>GET DOOR LIST - LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoorList command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Door List using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability. Door Entity is supported by the DUT as indicated by MaxDoors > 0 capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetDoorList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := 1
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetDoorListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door list =: <emphasis role="italic">doorList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorList1</emphasis> contains more Door items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit = 1, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetDoorList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetDoorListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door list =: <emphasis role="italic">doorList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorList2</emphasis> contains more Door items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit = 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetDoorList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetDoorListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door list =: <emphasis role="italic">doorList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorList3</emphasis> contains more Door items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetDoorListResponse </emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DOORCONTROL-8-1-3-->
      <section xml:id="tc.DOORCONTROL-8-1-3">
        <title>GET DOOR LIST - START REFERENCE AND LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoorList command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Door List using StartReference and Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability. Door Entity is supported by the DUT as indicated by MaxDoors > 0 capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - Door Control capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetDoorList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetDoorListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door list =: <emphasis role="italic">doorCompleteList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList1</emphasis> contains more Door items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetDoorList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetDoorListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Door list =: <emphasis role="italic">doorListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">doorListPart</emphasis> contains more Door items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">doorCompleteList1</emphasis> := <emphasis role="italic">doorCompleteList1</emphasis> + <emphasis role="italic">doorListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList1</emphasis> contains at least two Door item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit = 1:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of door info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">doorInfoCompleteList</emphasis> - complete door info list
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">doorCompleteList1</emphasis> does not contain all doors from <emphasis role="italic">doorInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">doorCompleteList1</emphasis> contains doors other than doors from <emphasis role="italic">doorInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each DoorInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">doorInfoCompleteList</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">doorCompleteList1</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">doorInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetDoorList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := 1
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetDoorListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door list =: <emphasis role="italic">doorCompleteList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList2</emphasis> contains more Door items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetDoorList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := 1
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetDoorListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Door list =: <emphasis role="italic">doorListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">doorListPart</emphasis> contains more Door items than 1, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">doorCompleteList2</emphasis> := <emphasis role="italic">doorCompleteList2</emphasis> + <emphasis role="italic">doorListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList2</emphasis> contains at least two Door item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList2</emphasis> does not contain all doors from <emphasis role="italic">doorCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList2</emphasis> contains doors other than doors from <emphasis role="italic">doorCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit = 2:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">doorInfoCompleteList</emphasis> - complete door info list
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">doorCompleteList2</emphasis> does not contain all doors from <emphasis role="italic">doorInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">doorCompleteList2</emphasis> contains doors other than doors from <emphasis role="italic">doorInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each DoorInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">doorInfoCompleteList</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">doorCompleteList2</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">doorInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetDoorList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetDoorListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door list =: <emphasis role="italic">doorCompleteList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList3</emphasis> contains more Door items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetDoorList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">limit</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetDoorListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Door list =: <emphasis role="italic">doorListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">doorListPart</emphasis> contains more Door items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">doorCompleteList3</emphasis> := <emphasis role="italic">doorCompleteList3</emphasis> + <emphasis role="italic">doorListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList3</emphasis> contains at least two Door items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList3</emphasis> does not contain all doors from <emphasis role="italic">doorCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList3</emphasis> contains doors other than doors from <emphasis role="italic">doorCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoCompleteList</emphasis> - complete door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList3</emphasis> does not contain all doors from <emphasis role="italic">doorInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList3</emphasis> contains doors other than doors from <emphasis role="italic">doorInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each DoorInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">doorInfoCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem xml:id="tc.DOORCONTROL-8-1-3.29.1" xreflabel="29.1">
                    <para>
                      If <emphasis role="italic">doorCompleteList3</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">doorInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetDoorListResponse </emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.DOORCONTROL-8-1-3.29.1"/>:
          <itemizedlist>
            <listitem>
              <para>
                Door Info:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DOORCONTROL-8-1-4-->
      <section xml:id="tc.DOORCONTROL-8-1-4">
        <title>GET DOOR LIST - NO LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoorList command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoorList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Door List without using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability. Door Entity is supported by the DUT as indicated by MaxDoors > 0 capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetDoorList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetDoorListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door list =: <emphasis role="italic">doorCompleteList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList</emphasis> contains more Door items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetDoorList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetDoorListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Door list =: <emphasis role="italic">doorListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">doorListPart</emphasis> contains more Door items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">doorCompleteList</emphasis> := <emphasis role="italic">doorCompleteList</emphasis> + <emphasis role="italic">doorListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>

                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList</emphasis> contains at least two Door item with equal token, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoCompleteList</emphasis> - complete door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList</emphasis> does not contain all doors from <emphasis role="italic">doorInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList</emphasis> contains doors other than doors from <emphasis role="italic">doorInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each DoorInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">doorInfoCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem xml:id="tc.DOORCONTROL-8-1-4.12.1" xreflabel="12.1">
                    <para>
                      If <emphasis role="italic">doorCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">doorInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetDoorListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.DOORCONTROL-8-1-4.12.1"/>:
          <itemizedlist>
            <listitem>
              <para>
                DoorInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>

        </para>
      </section>
      <!--DOORCONTROL-8-1-5-->
      <section xml:id="tc.DOORCONTROL-8-1-5">
        <title>CREATE DOOR (DOOR CAPABILITIES TRUE)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreateDoor command (ONVIF Door Control Service Specification), Door (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of door and generating of door changed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Event Service was received from the DUT. Device supports Pull-Point Notification feature. The DUT shall have enough free storage capacity for one additional Door. Door Management is supported by the DUT as indicated by DoorManagementSupported capability. Door Entity is supported by the DUT as indicated by MaxDoors > 0 capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-5.4">
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList1</emphasis> - complete door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.DOORCONTROL-8-1-5.5">
              <para>
                ONVIF Client checks free storage for additional Door by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorCompleteList1</emphasis> - complete door list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorToRestore</emphasis> - deleted door
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Door/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.DOORCONTROL-8-1-5.10">
              <para>
                ONVIF client invokes <emphasis role="bold">CreateDoor</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Door.token := ""
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Access := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.AccessTimingOverride := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Lock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Unlock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Block := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockDown := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockOpen := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoorMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLockMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Alarm := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Tamper := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Fault := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.DoorType := "pt:Door"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ReleaseTime := PT60S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.OpenTime := PT120S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedReleaseTime := PT30S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.DelayTimeBeforeRelock := PT30S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedOpenTime := PT30S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.PreAlarmTime := PT10S
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreateDoorResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">doorToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>


            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Door/Changed</emphasis> event for the specified Door token by following the procedure mentioned in <xref linkend="Annex_HelperPullDoorChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - Door token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a door by following the procedure mentioned in <xref linkend="Annex_HelperGetDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorList</emphasis> - door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-5.15">
              <para>
                If <emphasis role="italic">doorList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-5.10"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-5.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a door info by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoList</emphasis> - door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-5.17">
              <para>
                If <emphasis role="italic">doorInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-5.10"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-5.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete door information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following input and output parameters
                <itemizedlist>

                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoCompleteList</emphasis> - door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-5.19">
              <para>
                If <emphasis role="italic">doorInfoCompleteList</emphasis> does not have <emphasis role="italic">doorInfo</emphasis>.[token = <emphasis role="italic">doorToken</emphasis>] item with equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-5.10"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-5.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList2</emphasis> - door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-5.21">
              <para>
                If <emphasis role="italic">doorCompleteList2</emphasis> does not have <emphasis role="italic">door</emphasis>.[token = <emphasis role="italic">doorToken</emphasis>] item with equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-5.10"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-5.24"/>.
              </para>
            </listitem>


            <listitem xml:id="tc.DOORCONTROL-8-1-5.24">
              <para>
                ONVIF Client deletes the Door by following the procedure mentioned in <xref linkend="Annex_HelperDeleteDoor"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores door deleted at step <xref linkend="tc.DOORCONTROL-8-1-5.5"/> if any.
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>

            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateDoorResponse</emphasis> message.
              </para>
            </listitem>



          </itemizedlist>
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.DOORCONTROL-8-1-5.15"/>, <xref linkend="tc.DOORCONTROL-8-1-5.21"/>:
          <itemizedlist>
            <listitem>
              <para>
                Door:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DoorType
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      Timings
                      <itemizedlist>
                        <listitem>
                          <para>
                            ReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            OpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DelayTimeBeforeRelock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedOpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            PreAlarmTime
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>


                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>

        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.DOORCONTROL-8-1-5.17"/>, <xref linkend="tc.DOORCONTROL-8-1-5.19"/>:
          <itemizedlist>
            <listitem>
              <para>
                DoorInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DOORCONTROL-8-1-6-->
      <section xml:id="tc.DOORCONTROL-8-1-6">
        <title>CREATE DOOR (DOOR CAPABILITIES FALSE)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreateDoor command (ONVIF Door Control Service Specification), Door (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of door and generating of door changed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Event Service was received from the DUT. Device supports Pull-Point Notification feature. The DUT shall have enough free storage capacity for one additional Door. Door Management is supported by the DUT as indicated by DoorManagementSupported capability. Door Entity is supported by the DUT as indicated by MaxDoors > 0 capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-6.4">
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList1</emphasis> - complete door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.DOORCONTROL-8-1-6.5">
              <para>
                ONVIF Client checks free storage for additional Door by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorCompleteList1</emphasis> - complete door list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorToRestore</emphasis> - deleted door
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>


            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Door/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-6.10">
              <para>
                ONVIF client invokes <emphasis role="bold">CreateDoor</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Door.token := ""
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Access := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.AccessTimingOverride := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Lock := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Unlock := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Block := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLock := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockDown := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockOpen := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoorMonitor := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockMonitor := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLockMonitor := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Alarm := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Tamper := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Fault := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.DoorType := "pt:ManTrap"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ReleaseTime := PT60S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.OpenTime := PT120S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedReleaseTime skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.DelayTimeBeforeRelock skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedOpenTime skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.PreAlarmTime skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreateDoorResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">doorToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Door/Changed</emphasis> event for the specified Door token by following the procedure mentioned in <xref linkend="Annex_HelperPullDoorChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - Door token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a door by following the procedure mentioned in <xref linkend="Annex_HelperGetDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorList</emphasis> - door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-6.15">
              <para>
                If <emphasis role="italic">doorList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-6.10"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-6.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a door info by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoList</emphasis> - door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-6.17">
              <para>
                If <emphasis role="italic">doorInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-6.10"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-6.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete door information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following input and output parameters
                <itemizedlist>

                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoCompleteList</emphasis> - door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-6.19">
              <para>
                If <emphasis role="italic">doorInfoCompleteList</emphasis> does not have <emphasis role="italic">doorInfo</emphasis>.[token = <emphasis role="italic">doorToken</emphasis>] item with equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-6.10"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-6.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList2</emphasis> - door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-6.21">
              <para>
                If <emphasis role="italic">doorCompleteList2</emphasis> does not have <emphasis role="italic">door</emphasis>.[token = <emphasis role="italic">doorToken</emphasis>] item with equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-6.10"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-6.24"/>.
              </para>
            </listitem>


            <listitem xml:id="tc.DOORCONTROL-8-1-6.24">
              <para>
                ONVIF Client deletes the Door by following the procedure mentioned in <xref linkend="Annex_HelperDeleteDoor"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores door deleted at step <xref linkend="tc.DOORCONTROL-8-1-6.5"/> if any.
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>

            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateDoorResponse</emphasis> message.
              </para>
            </listitem>



          </itemizedlist>
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.DOORCONTROL-8-1-6.15"/>, <xref linkend="tc.DOORCONTROL-8-1-6.21"/>:
          <itemizedlist>
            <listitem>
              <para>
                Door:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DoorType
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      Timings
                      <itemizedlist>
                        <listitem>
                          <para>
                            ReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            OpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DelayTimeBeforeRelock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedOpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            PreAlarmTime
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>


                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>

        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.DOORCONTROL-8-1-6.17"/>, <xref linkend="tc.DOORCONTROL-8-1-6.19"/>:
          <itemizedlist>
            <listitem>
              <para>
                DoorInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DOORCONTROL-8-1-7-->
      <section xml:id="tc.DOORCONTROL-8-1-7">
        <title>MODIFY DOOR</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DoorInfo (ONVIF Door Control Service Specification), Door (ONVIF Door Control Service Specification), ModifyDoor command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ModifyDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifying of door and generating of door changed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Event Service was received from the DUT. Device supports Pull-Point Notification feature. The DUT shall have enough free storage capacity for one additional Door. Door Management is supported by the DUT as indicated by DoorManagementSupported capability. Door Entity is supported by the DUT as indicated by MaxDoors > 0 capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem xml:id="tc.DOORCONTROL-8-1-7.1">
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - door control capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-7.4">
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList1</emphasis> - complete door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.DOORCONTROL-8-1-7.5">
              <para>
                ONVIF Client checks free storage for additional Door by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorCompleteList1</emphasis> - complete door list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorToRestore</emphasis> - deleted door
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>


            <listitem>
              <para>
                ONVIF Client creates door by following the procedure mentioned in <xref linkend="Annex_HelperCreateDoor"/>  with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in false - for all door capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in "pt:Door" - Door Type
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in PT60S - ReleaseTime
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in PT120S - OpenTime
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Door/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.DOORCONTROL-8-1-7.9">
              <para>
                ONVIF client invokes <emphasis role="bold">ModifyDoor</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Door.Token := <emphasis role="italic">doorToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Name := "Test Name 2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Description := "Test Description 2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Access := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.AccessTimingOverride := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Lock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Unlock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Block := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockDown := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockOpen := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoorMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLockMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Alarm := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Tamper := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Fault := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.DoorType := "pt:Door"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ReleaseTime := PT30S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.OpenTime := PT60S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedReleaseTime := PT10S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.DelayTimeBeforeRelock := PT10S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedOpenTime := PT10S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.PreAlarmTime := PT10S
                    </para>
                  </listitem>

                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with empty <emphasis role="bold">ModifyDoorResponse</emphasis> message.
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Door/Changed</emphasis> event for the specified Door token by following the procedure mentioned in <xref linkend="Annex_HelperPullDoorChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - Door token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-7.13">
              <para>
                ONVIF Client retrieves a door by following the procedure mentioned in <xref linkend="Annex_HelperGetDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorList</emphasis> - door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-7.14">
              <para>
                If <emphasis role="italic">doorList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-7.9"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-7.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a door info by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoList</emphasis> - door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-7.16">
              <para>
                If <emphasis role="italic">doorInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-7.9"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-7.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete door information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following input and output parameters
                <itemizedlist>

                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoCompleteList</emphasis> - door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-7.18">
              <para>
                If <emphasis role="italic">doorInfoCompleteList</emphasis> does not have <emphasis role="italic">doorInfo</emphasis>.[token:= <emphasis role="italic">doorToken</emphasis>] item with equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-7.9"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-7.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList2</emphasis> - door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-7.20">
              <para>
                If <emphasis role="italic">doorCompleteList2</emphasis> does not have <emphasis role="italic">door</emphasis>.[token:= <emphasis role="italic">doorToken</emphasis>] item with equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-7.9"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-7.21"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-7.21">
              <para>
                ONVIF Client deletes the Door by following the procedure mentioned in <xref linkend="Annex_HelperDeleteDoor"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores door deleted at step <xref linkend="tc.DOORCONTROL-8-1-7.5"/> if any.
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>


            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ModifyDoorResponse</emphasis> message.
              </para>
            </listitem>


          </itemizedlist>
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.DOORCONTROL-8-1-7.18"/>, <xref linkend="tc.DOORCONTROL-8-1-7.20"/>:
          <itemizedlist>
            <listitem>
              <para>
                Door:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DoorType
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      Timings
                      <itemizedlist>
                        <listitem>
                          <para>
                            ReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            OpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DelayTimeBeforeRelock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedOpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            PreAlarmTime
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>


                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.DOORCONTROL-8-1-7.14"/>, <xref linkend="tc.DOORCONTROL-8-1-7.16"/>:
          <itemizedlist>
            <listitem>
              <para>
                DoorInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
      <!--DOORCONTROL-8-1-8-->
      <section xml:id="tc.DOORCONTROL-8-1-8">
        <title>DELETE DOOR</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-8
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DeleteDoor command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify deleting of door and generating of door removed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Event Service was received from the DUT. Device supports Pull-Point Notification feature. The DUT shall have enough free storage capacity for one additional Door. Door Management is supported by the DUT as indicated by DoorManagementSupported capability. Door Entity is supported by the DUT as indicated by MaxDoors > 0 capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client gets the service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - door control capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-8.4">
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList1</emphasis> - complete door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.DOORCONTROL-8-1-8.5">
              <para>
                ONVIF Client checks free storage for additional Door by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorCompleteList1</emphasis> - complete door list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorToRestore</emphasis> - deleted door
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates door by following the procedure mentioned in <xref linkend="Annex_HelperCreateDoor"/>  with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in false - for all door capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in "pt:Door" - Door Type
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in PT60S - ReleaseTime
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in PT120S - OpenTime
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Door/Removed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>



            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">DeleteDoor</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">doorToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with empty <emphasis role="bold">DeleteDoorResponse</emphasis> message.
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Door/Removed</emphasis> event for the specified Door token by following the procedure mentioned in <xref linkend="Annex_HelperPullDoorRemoved"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - Door token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-8.12">
              <para>
                ONVIF Client retrieves a door by following the procedure mentioned in <xref linkend="Annex_HelperGetDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorList</emphasis> - door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorList</emphasis> is not empty, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-8.20"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a door info by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoList</emphasis> - door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorInfoList</emphasis> is not empty, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-8.20"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete door information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following input and output parameters
                <itemizedlist>

                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoCompleteList</emphasis> - door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorInfoCompleteList</emphasis> contains <emphasis role="italic">doorInfo</emphasis>.[token:= <emphasis role="italic">doorToken</emphasis>] item, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-8.20"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList2</emphasis> - door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList2</emphasis> contains <emphasis role="italic">door</emphasis>.[token:= <emphasis role="italic">doorToken</emphasis>] item, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-8.20"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-8.20">
              <para>
                ONVIF Client restores door deleted at step <xref linkend="tc.DOORCONTROL-8-1-7.5"/> if any.
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>


            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">DeleteDoorResponse</emphasis> message.
              </para>
            </listitem>


          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">oprationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DOORCONTROL-8-1-9-->
      <section xml:id="tc.DOORCONTROL-8-1-9">
        <title>GET DOORS WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>GetDoors command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoors
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Door with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of door info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoCompleteList</emphasis> - complete door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">doorInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetDoors</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token[0] := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetDoorsResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Door list =: <emphasis role="italic">doorsList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorsList</emphasis> is not empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorInfoCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - door control capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is less than 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetDoors</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token[0] := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Token[1] := <emphasis role="italic">doorInfoCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetDoorsResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      DoorInfo list =: <emphasis role="italic">doorsList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorsList</emphasis> is empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorsList</emphasis> contains more than one item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorsList</emphasis>[0].token does not equal to <emphasis role="italic">doorInfoCompleteList</emphasis>[0].token, FAIL the test.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetDoorsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DOORCONTROL-8-1-10-->
      <section xml:id="tc.DOORCONTROL-8-1-10">
        <title>GET DOORS - TOO MANY ITEMS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetDoors command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDoors
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Door if there are more items than MaxLimit in request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability. Door Entity is supported by the DUT as indicated by MaxDoors > 0 capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList</emphasis> - complete door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - door control capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">doorCompleteList</emphasis>.token items number is less than <emphasis role="italic">cap</emphasis>.MaxLimit or equal to <emphasis role="italic">cap</emphasis>.MaxLimit, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">doorCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit + 1]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetDoors</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DOORCONTROL-8-1-11-->
      <section xml:id="tc.DOORCONTROL-8-1-11">
        <title>CREATE DOOR - NOT EMPTY DOOR TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-11
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreateDoor command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Create Door with not Empty Token Verification.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. The DUT shall have enough free storage capacity for one additional Door. Door Management is supported by the DUT as indicated by DoorManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-11.4">
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList1</emphasis> - complete door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.DOORCONTROL-8-1-11.5">
              <para>
                ONVIF Client checks free storage for additional Door by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorCompleteList1</emphasis> - complete door list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorToRestore</emphasis> - deleted door
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.DOORCONTROL-8-1-11.10">
              <para>
                ONVIF client invokes <emphasis role="bold">CreateDoor</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Door.token := "DoorToken"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Access := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.AccessTimingOverride := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Lock := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Unlock := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Block := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLock := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockDown := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockOpen := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoorMonitor := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockMonitor := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLockMonitor := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Alarm := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Tamper := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Fault := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.DoorType := "pt:Door"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ReleaseTime := PT60S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.OpenTime := PT120S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedReleaseTime skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.DelayTimeBeforeRelock skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedOpenTime skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.PreAlarmTime skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores door deleted at step <xref linkend="tc.DOORCONTROL-8-1-11.5"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>

            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>



          </itemizedlist>
        </para>



      </section>
      <!--DOORCONTROL-8-1-12-->
      <section xml:id="tc.DOORCONTROL-8-1-12">
        <title>MODIFY DOOR WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ModifyDoor command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ModifyDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifying of door with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client retrieves a complete list of door info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoCompleteList</emphasis> - complete door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">doorInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ModifyDoor</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Door.Token := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Access := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.AccessTimingOverride := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Lock := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Unlock := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Block := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLock := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockDown := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockOpen := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoorMonitor := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockMonitor := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLockMonitor := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Alarm := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Tamper := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Fault := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.DoorType := "pt:ManTrap"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ReleaseTime := PT60S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.OpenTime := PT120S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedReleaseTime skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.DelayTimeBeforeRelock skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedOpenTime skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.PreAlarmTime skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DOORCONTROL-8-1-13-->
      <section xml:id="tc.DOORCONTROL-8-1-13">
        <title>DELETE DOOR WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-13
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DeleteDoor command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify deleting of door with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of door info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoCompleteList</emphasis> - complete door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">doorInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">DeleteDoor</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
      <!--DOORCONTROL-8-1-14-->
      <section xml:id="tc.DOORCONTROL-8-1-14">
        <title>CREATE NEW DOOR WITH SET DOOR (DOOR CAPABILITIES TRUE)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-14
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DoorInfo (ONVIF Door Control Service Specification), Door (ONVIF Door Control Service Specification), SetDoor command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of door using SetDoor command and generating of appropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Event Service was received from the DUT. Device supports Pull-Point Notification feature. Client Supplied Token
          is supported by the DUT as indicated by ClientSuppliedTokenSupported capability. The DUT shall have enough free storage capacity for one additional Door. Door Entity is supported by the DUT as indicated by MaxDoors > 0 capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Door Control Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - Door Control Service capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">initialDoorCompleteList</emphasis> - door complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem  xml:id="tc.DOORCONTROL-8-1-14.RemoveDoor">
              <para>
                ONVIF Client checks free storage for additional door by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">initialDoorCompleteList</emphasis> - door complete list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorToRestore</emphasis> - removed door
                    </para>
                  </listitem>

                </itemizedlist>
              </para>
            </listitem>


            <listitem>
              <para>
                Set <emphasis role="italic">doorToken</emphasis> := token that differs from tokens listed in <emphasis role="italic">initialDoorCompleteList</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Door/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.DOORCONTROL-8-1-14.SetDoor1">
              <para>
                ONVIF client invokes <emphasis role="bold">SetDoor</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Door.token := <emphasis role="italic">doorToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Access := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.AccessTimingOverride := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Lock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Unlock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Block := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockDown := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockOpen := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoorMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLockMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Alarm := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Tamper := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Fault := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.DoorType := "pt:Door"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ReleaseTime := PT60S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.OpenTime := PT120S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedReleaseTime := PT30S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.DelayTimeBeforeRelock := PT30S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedOpenTime := PT30S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.PreAlarmTime := PT10S
                    </para>
                  </listitem>

                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetDoorResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Door/Changed</emphasis> event for the specified Door token by following the procedure mentioned in <xref linkend="Annex_HelperPullDoorChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - Door token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a door by following the procedure mentioned in <xref linkend="Annex_HelperGetDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorList</emphasis> - the list of doors
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-14.CompareDoor1">
              <para>
                If <emphasis role="italic">doorList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-14.SetDoor1"/>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a door info by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoList</emphasis> - the list of doors info
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-14.CompareDoorInfo1">
              <para>
                If <emphasis role="italic">doorInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-14.SetDoor1"/>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of doors info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoCompleteList</emphasis> - door info complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-14.CompareDoorInfo2">
              <para>
                If <emphasis role="italic">doorInfoCompleteList</emphasis> does not have DoorInfo[token = <emphasis role="italic">doorToken</emphasis>] item with equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-14.SetDoor1"/>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList</emphasis> - door complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-14.CompareDoor2">
              <para>
                If <emphasis role="italic">doorCompleteList</emphasis> does not have Door[token = <emphasis role="italic">doorToken</emphasis>] item with equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-14.SetDoor1"/>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client deletes the Door by following the procedure mentioned in <xref linkend="Annex_HelperDeleteDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores door deleted at step <xref linkend="tc.DOORCONTROL-8-1-14.RemoveDoor"/> if any.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetDoorResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.DOORCONTROL-8-1-14.CompareDoor1"/> and <xref linkend="tc.DOORCONTROL-8-1-14.CompareDoor2"/>:
          <itemizedlist>
            <listitem>
              <para>
                Door:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DoorType
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      Timings
                      <itemizedlist>
                        <listitem>
                          <para>
                            ReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            OpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DelayTimeBeforeRelock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedOpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            PreAlarmTime
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>


                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>

        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.DOORCONTROL-8-1-14.CompareDoorInfo1"/> and <xref linkend="tc.DOORCONTROL-8-1-14.CompareDoorInfo2"/>:
          <itemizedlist>
            <listitem>
              <para>
                DoorInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DOORCONTROL-8-1-15-->
      <section xml:id="tc.DOORCONTROL-8-1-15">
        <title>CREATE NEW DOOR WITH SET DOOR (DOOR CAPABILITIES FALSE)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-15
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DoorInfo (ONVIF Door Control Service Specification), Door (ONVIF Door Control Service Specification), SetDoor command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of door using SetDoor command and generating of appropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Event Service was received from the DUT. Device supports Pull-Point Notification feature. Client Supplied Token
          is supported by the DUT as indicated by ClientSuppliedTokenSupported capability. The DUT shall have enough free storage capacity for one additional Door. Door Entity is supported by the DUT as indicated by MaxDoors > 0 capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Door Control Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - Door Control Service capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">initialDoorCompleteList</emphasis> - door complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem  xml:id="tc.DOORCONTROL-8-1-15.RemoveDoor">
              <para>
                ONVIF Client checks free storage for additional door by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">initialDoorCompleteList</emphasis> - door complete list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorToRestore</emphasis> - removed door
                    </para>
                  </listitem>

                </itemizedlist>
              </para>
            </listitem>


            <listitem>
              <para>
                Set <emphasis role="italic">doorToken</emphasis> := token that differs from tokens listed in <emphasis role="italic">initialDoorCompleteList</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Door/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.DOORCONTROL-8-1-15.SetDoor1">
              <para>
                ONVIF client invokes <emphasis role="bold">SetDoor</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Door.token := <emphasis role="italic">doorToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Access := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.AccessTimingOverride := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Lock := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Unlock := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Block := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLock := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockDown := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockOpen := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoorMonitor := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockMonitor := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLockMonitor := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Alarm := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Tamper := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Fault := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.DoorType := "pt:ManTrap"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ReleaseTime := PT60S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.OpenTime := PT120S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedReleaseTime skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.DelayTimeBeforeRelock skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedOpenTime skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.PreAlarmTime skipped
                    </para>
                  </listitem>



                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetDoorResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Door/Changed</emphasis> event for the specified Door token by following the procedure mentioned in <xref linkend="Annex_HelperPullDoorChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - Door token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a door by following the procedure mentioned in <xref linkend="Annex_HelperGetDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorList</emphasis> - the list of doors
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-15.CompareDoor1">
              <para>
                If <emphasis role="italic">doorList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-15.SetDoor1"/>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a door info by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoList</emphasis> - the list of doors info
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-15.CompareDoorInfo1">
              <para>
                If <emphasis role="italic">doorInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-15.SetDoor1"/>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of doors info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoCompleteList</emphasis> - door info complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-15.CompareDoorInfo2">
              <para>
                If <emphasis role="italic">doorInfoCompleteList</emphasis> does not have DoorInfo[token = <emphasis role="italic">doorToken</emphasis>] item with equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-15.SetDoor1"/>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList</emphasis> - door complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-15.CompareDoor2">
              <para>
                If <emphasis role="italic">doorCompleteList</emphasis> does not have Door[token = <emphasis role="italic">doorToken</emphasis>] item with equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-15.SetDoor1"/>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client deletes the Door by following the procedure mentioned in <xref linkend="Annex_HelperDeleteDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores door deleted at step <xref linkend="tc.DOORCONTROL-8-1-15.RemoveDoor"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetDoorResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.DOORCONTROL-8-1-15.CompareDoor1"/> and <xref linkend="tc.DOORCONTROL-8-1-15.CompareDoor2"/>:
          <itemizedlist>
            <listitem>
              <para>
                Door:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DoorType
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      Timings
                      <itemizedlist>
                        <listitem>
                          <para>
                            ReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            OpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DelayTimeBeforeRelock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedOpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            PreAlarmTime
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>


                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>

        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.DOORCONTROL-8-1-15.CompareDoorInfo1"/> and <xref linkend="tc.DOORCONTROL-8-1-15.CompareDoorInfo2"/>:
          <itemizedlist>
            <listitem>
              <para>
                DoorInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DOORCONTROL-8-1-16-->
      <section xml:id="tc.DOORCONTROL-8-1-16">
        <title>MODIFY DOOR WITH SET DOOR</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-16
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DoorInfo (ONVIF Door Control Service Specification), Door (ONVIF Door Control Service Specification), SetDoor command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifying of door using SetDoor command and generating of door changed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Event Service was received from the DUT. Device supports Pull-Point Notification feature. The DUT shall have enough free storage capacity for one additional Door. Client Supplied Token
          is supported by the DUT as indicated by ClientSuppliedTokenSupported capability. Door Entity is supported by the DUT as indicated by MaxDoors > 0 capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem xml:id="tc.DOORCONTROL-8-1-16.1">
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - door control capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-16.4">
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList1</emphasis> - complete door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.DOORCONTROL-8-1-16.5">
              <para>
                ONVIF Client checks free storage for additional Door by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorCompleteList1</emphasis> - complete door list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorToRestore</emphasis> - deleted door
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>


            <listitem>
              <para>
                ONVIF Client creates door by following the procedure mentioned in <xref linkend="Annex_HelperCreateDoor"/>  with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in false - for all door capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in "pt:Door" - Door Type
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in PT60S - ReleaseTime
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in PT120S - OpenTime
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Door/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.DOORCONTROL-8-1-16.9">
              <para>
                ONVIF client invokes <emphasis role="bold">SetDoor</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Door.Token := <emphasis role="italic">doorToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Name := "Test Name 2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Description := "Test Description 2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Access := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.AccessTimingOverride := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Lock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Unlock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Block := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockDown := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockOpen := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoorMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLockMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Alarm := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Tamper := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Fault := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.DoorType := "pt:Door"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ReleaseTime := PT30S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.OpenTime := PT60S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedReleaseTime := PT10S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.DelayTimeBeforeRelock := PT10S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedOpenTime := PT10S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.PreAlarmTime := PT10S
                    </para>
                  </listitem>

                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with empty <emphasis role="bold">SetDoorResponse</emphasis> message.
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Door/Changed</emphasis> event for the specified Door token by following the procedure mentioned in <xref linkend="Annex_HelperPullDoorChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - Door token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-16.13">
              <para>
                ONVIF Client retrieves a door by following the procedure mentioned in <xref linkend="Annex_HelperGetDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorList</emphasis> - door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-16.14">
              <para>
                If <emphasis role="italic">doorList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-16.9"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-16.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a door info by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoList</emphasis> - door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-16.16">
              <para>
                If <emphasis role="italic">doorInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-16.9"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-16.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete door information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following input and output parameters
                <itemizedlist>

                  <listitem>
                    <para>
                      out <emphasis role="italic">doorInfoCompleteList</emphasis> - door info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-16.18">
              <para>
                If <emphasis role="italic">doorInfoCompleteList</emphasis> does not have <emphasis role="italic">doorInfo</emphasis>.[token:= <emphasis role="italic">doorToken</emphasis>] item with equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-16.9"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-16.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorCompleteList2</emphasis> - door list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-16.20">
              <para>
                If <emphasis role="italic">doorCompleteList2</emphasis> does not have <emphasis role="italic">door</emphasis>.[token:= <emphasis role="italic">doorToken</emphasis>] item with equal field values to values from step <xref linkend="tc.DOORCONTROL-8-1-16.9"/>, FAIL the test and go step <xref linkend="tc.DOORCONTROL-8-1-16.21"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.DOORCONTROL-8-1-16.21">
              <para>
                ONVIF Client deletes the Door by following the procedure mentioned in <xref linkend="Annex_HelperDeleteDoor"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> - door token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores door deleted at step <xref linkend="tc.DOORCONTROL-8-1-16.5"/> if any.
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>


            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetDoorResponse</emphasis> message.
              </para>
            </listitem>


          </itemizedlist>
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.DOORCONTROL-8-1-16.18"/>, <xref linkend="tc.DOORCONTROL-8-1-16.20"/>:
          <itemizedlist>
            <listitem>
              <para>
                Door:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DoorType
                    </para>
                  </listitem>

                  <listitem>
                    <para>
                      Timings
                      <itemizedlist>
                        <listitem>
                          <para>
                            ReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            OpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedReleaseTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DelayTimeBeforeRelock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExtendedOpenTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            PreAlarmTime
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>


                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.DOORCONTROL-8-1-16.14"/>, <xref linkend="tc.DOORCONTROL-8-1-16.16"/>:
          <itemizedlist>
            <listitem>
              <para>
                DoorInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            Access
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTimingOverride
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Lock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Unlock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Block
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLock
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockDown
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockOpen
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoorMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            LockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DoubleLockMonitor
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Alarm
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Tamper
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Fault
                          </para>
                        </listitem>


                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>

      <section xml:id="tc.DOORCONTROL-8-1-17">
        <title>SET DOOR - EMPTY DOOR TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DOORCONTROL-8-1-17
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SetDoor command (ONVIF Door Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetDoor
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> door.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify SetDoor command with empty door token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Door Control Service is received from the DUT. Client Supplied Token
          is supported by the DUT as indicated by ClientSuppliedTokenSupported capability. The DUT shall have enough free storage capacity for one additional Door.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Door Control Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - Door Control Service capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of doors by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">initialDoorCompleteList</emphasis> - door complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem  xml:id="tc.DOORCONTROL-8-1-17.RemoveDoor">
              <para>
                ONVIF Client checks free storage for additional door by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForDoor"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">initialDoorCompleteList</emphasis> - door complete list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">doorToRestore</emphasis> - removed door
                    </para>
                  </listitem>

                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.DOORCONTROL-8-1-17.SetDoor1">
              <para>
                ONVIF client invokes <emphasis role="bold">SetDoor</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Door.token := ""
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Access := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.AccessTimingOverride := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Lock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Unlock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Block := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLock := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockDown := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockOpen := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoorMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.LockMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.DoubleLockMonitor := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Alarm := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Tamper := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Capabilities.Fault := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.DoorType := "pt:Door"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ReleaseTime := PT60S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.OpenTime := PT120S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedReleaseTime := PT30S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.DelayTimeBeforeRelock := PT30S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.ExtendedOpenTime := PT30S
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Door.Timings.PreAlarmTime := PT10S
                    </para>
                  </listitem>

                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores door deleted at step <xref linkend="tc.DOORCONTROL-8-1-17.RemoveDoor"/> if any.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </itemizedlist>
        </para>


      </section>
    </section>
  </chapter>
  <appendix>
    <title>Helper Procedures and Additional Notes</title>
    <!--A.1-->
    <section xml:id="Annex_HelperGetCompleteDoorInfoList" xreflabel="Annex A.1">
      <title>Get Complete Door Info List</title>
      <para>
        The following algorithm will be used to get a complete list of Doors:
        <orderedlist numeration="arabic">
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperGetCompleteDoorInfoList.1">
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetDoorInfoList</emphasis> request (no Limit, no StartReference) to retrieve the first part of Door Information list from the DUT.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperGetCompleteDoorInfoList.2">
            <para>
              Verify the <emphasis role="bold">GetDoorInfoListResponse</emphasis> message from the DUT.

            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="bold">GetDoorInfoListResponse</emphasis> message contains NextStartReference, repeat steps <link linkend="Annex_HelperGetCompleteDoorInfoList.1">1</link>-<link linkend="Annex_HelperGetCompleteDoorInfoList.2">2</link> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting complete door list.

            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        The complete ordered list of doors with information will be made by the means of uniting all <emphasis role="bold">GetDoorInfoListResponse</emphasis> messages. Also, the total number of doors will be calculated.
      </para>

    </section>
    <!--A.2-->
    <section xml:id="Annex_HelperGetCompleteAccessPointInfoList">
      <title>Get Complete Access Point Info List</title>
      <para>
        The following algorithm will be used to get the complete list of Access Points:
        <orderedlist numeration="arabic">
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperGetCompleteAccessPointInfoList.1">
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetAccessPointInfoList</emphasis> request (no Limit, no StartReference) to retrieve the first part of Access Point Information list from the DUT.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperGetCompleteAccessPointInfoList.2">
            <para>
              Verify the <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message contains NextStartReference, repeat steps <link linkend="Annex_HelperGetCompleteAccessPointInfoList.1">1</link>-<link linkend="Annex_HelperGetCompleteAccessPointInfoList.2">2</link> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting complete access point list.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        The complete ordered list of access points with information will be made by the means of uniting all <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> messages. Also total number of access points will be calculated.
      </para>
    </section>
    <!--A.3-->
    <section xml:id="Annex_HelperCatchingOfInitializedEvent">
      <title>Catching of Initialized event</title>
      <para>
        According to ONVIF-Core-Specification (9.4 Properties Item) device shall provide notifications informing the client of all objects with the requested property, which are alive at the time of the subscription. Therefore, after <emphasis role="bold">CreatePullPointSubscription</emphasis> request in <link linkend="tc.DOORCONTROL-3-1-28">DOORCONTROL-3-1-28</link> – <link linkend="tc.DOORCONTROL-3-1-36">DOORCONTROL-3-1-36</link> tests device shall generate Initialized events with current Door State for all existing doors.
      </para>
      <para>
        ONVIF Client will follow the following logic to catch Initialized event for required Door token:
        <orderedlist numeration="arabic">
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperCatchingOfInitializedEvent.1">
            <para>
              ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. If no NotificationMessage for selected Door is received and Operation Delay time does not expire, ONVIF Client repeats step <link linkend="Annex_HelperCatchingOfInitializedEvent.1">1</link>.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperCatchingOfInitializedEvent.3">
            <para>
              Verify that the DUT sends Notification message for selected Door with current state (Notifications for other Doors will be ignored for this test case).
            </para>
          </listitem>
          <listitem>
            <para>
              Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
            </para>
          </listitem>
          <listitem>
            <para>
              Verify that PropertyOperation = "Initialized".
            </para>
          </listitem>
          <listitem>
            <para>
              Verify that TopicExpression is equal to tns1:Door/State/DoorMode.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify that notification contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to selected Door Token.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify that notification contains Data.SimpleItem item with Name = «State» and Value with type is equal to tdc:DoorMode.

            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send a valid Notification message that contains a property event tns1:Door/State/DoorMode for selected Door during Operation delay time (correct value for UTC time, TopicExpression and wsnt:Message, PropertyOperation = "Initialized", Topic = “tns1:Door/State/DoorMode”, contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to selected Door Token, contains Data.SimpleItem item with Name = «State» and Value with type equal to tdc:DoorMode).
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> Notifications for other Doors than selected will be ignored.
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> Test will be failed, if no required Notification messages are received at step <link linkend="Annex_HelperCatchingOfInitializedEvent.3">3</link> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
      </para>
    </section>
    <!--A.4-->
    <section xml:id="Annex_HelperUserInteractionProcess">
      <title>User Interaction Process</title>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client sends <emphasis role="bold">Unsubscribe</emphasis> request to end current subscription if subscription manager has been created during test.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">UnsubscribeResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              User Interaction window appears.
            </para>
          </listitem>
          <listitem>
            <para>
              Test Operator puts Door into the appropriate state. At that state the command (used in the test), which changes the door state, shall be accepted by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              Returns to the test and use DoorToken from user Interaction window as token of selected Door.
            </para>
          </listitem>
        </orderedlist>
      </para>
    </section>
    <!--A.5-->
    <section xml:id="Annex_HelperDoorTransitionToLockedState">
      <title>Door's transition to Locked state</title>
      <para>
        ONVIF Client will try to move the selected for the test door into ‘Locked’ state according to the following logics:
        <orderedlist numeration="arabic">
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetDoorState</emphasis> request (Token = “Token1”, where Token1 is selected door) to retrieve current state of the door.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">GetDoorStateResponse</emphasis> from the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              If DoorState.DoorMode is equal to Locked then skip other steps and returns to the test.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Door/State/DoorMode Topic as Filter and an InitialTerminationTime of timeout1.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              If DoorState.DoorMode is equal to Unlocked then ONVIF Client will invoke <emphasis role="bold">LockDoor</emphasis> request (Token = “Token1”) to switch the door into Locked state. Otherwise, go to step <link linkend="Annex_HelperDoorTransitionToLockedState.12">12</link>.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">LockDoorResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.8">
            <para>
              ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.9">
            <para>
              Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> request. Repeat step <link linkend="Annex_HelperDoorTransitionToLockedState.8">8</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
            </para>
          </listitem>
          <listitem>
            <para>
              Check that the last Notification message with PropertyOperation = "Changed" contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to Token1 and contains Data.SimpleItem item with Name = «State» and Value equal to “Locked”.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client deletes Subscription Manager either by calling <emphasis role="bold">Unsubscribe</emphasis> or through a timeout and returns to the test.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.12">
            <para>
              If DoorState.DoorMode is equal to Accessed then ONVIF Client will invoke LockDoor request (Token = “Token1”) to switch the door into Locked state. Otherwise, go to step <link linkend="Annex_HelperDoorTransitionToLockedState.18">18</link>.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">LockDoorResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.14">
            <para>
              ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.15">
            <para>
              Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis>. Repeat step <link linkend="Annex_HelperDoorTransitionToLockedState.14">14</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
            </para>
          </listitem>
          <listitem>
            <para>
              Check that the last Notification message with PropertyOperation = "Changed" contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to Token1 and contains Data.SimpleItem item with Name = «State» and Value equal to “Locked”.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client deletes Subscription Manager either by calling <emphasis role="bold">unsubscribe</emphasis> or through a timeout and returns to the test.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.18">
            <para>
              If DoorState.DoorMode is equal to LockedDown then ONVIF Client will invoke <emphasis role="bold">LockDownReleaseDoor</emphasis> request (Token = “Token1”) to switch the door into Locked state. Otherwise, go to step <link linkend="Annex_HelperDoorTransitionToLockedState.24">24</link>.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">LockDownReleaseDoorResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.20">
            <para>
              ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.21">
            <para>
              Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis>. Repeat step <link linkend="Annex_HelperDoorTransitionToLockedState.20">20</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
            </para>
          </listitem>
          <listitem>
            <para>
              Check that the last Notification message with PropertyOperation = "Changed" contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to Token1 and contains Data.SimpleItem item with Name = «State» and Value equal to “Locked”.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client deletes Subscription Manager either by calling <emphasis role="bold">unsubscribe</emphasis> or through a timeout and returns to the test.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.24">
            <para>
              If DoorState.DoorMode is equal to LockedOpen then ONVIF Client will invoke <emphasis role="bold">LockOpenReleaseDoor</emphasis> request (Token = “Token1”) to move the door into Unlocked state. Otherwise go to step <link linkend="Annex_HelperDoorTransitionToLockedState.35">35</link>.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">LockOpenReleaseDoorResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.26">
            <para>
              ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.27">
            <para>
              Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis>. Repeat step <link linkend="Annex_HelperDoorTransitionToLockedState.26">26</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
            </para>
          </listitem>
          <listitem>
            <para>
              Check that the last Notification message with PropertyOperation = "Changed" contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to Token1 and contains Data.SimpleItem item with Name = «State» and Value equal to “Unlocked”.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">LockDoor</emphasis> request (Token = “Token1”) to switch the door into Locked state.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">LockDoorResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.31">
            <para>
              ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.32">
            <para>
              Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis>. Repeat step <link linkend="Annex_HelperDoorTransitionToLockedState.31">31</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
            </para>
          </listitem>
          <listitem>
            <para>
              Check that the last Notification message with PropertyOperation = "Changed" contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to Token1 and contains Data.SimpleItem item with Name = «State» and Value equal to “Locked”.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client deletes Subscription Manager either by calling <emphasis role="bold">unsubscribe</emphasis> or through a timeout and returns to the test.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.35">
            <para>
              If DoorState.DoorMode is equal to DoubleLocked then ONVIF Client will invoke <emphasis role="bold">LockDoor</emphasis> request (Token = “Token1”) to move the door into Locked state. Otherwise, go to step <link linkend="Annex_HelperDoorTransitionToLockedState.41">41</link>.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">LockDoorResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.37">
            <para>
              ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.38">
            <para>
              Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis>. Repeat step <link linkend="Annex_HelperDoorTransitionToLockedState.37">37</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
            </para>
          </listitem>
          <listitem>
            <para>
              Check that the last Notification message with PropertyOperation = "Changed" contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to Token1 and contains Data.SimpleItem item with Name = «State» and Value equal to “Locked”.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client deletes Subscription Manager either by calling <emphasis role="bold">unsubscribe</emphasis> or through a timeout and returns to the test.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperDoorTransitionToLockedState.41">
            <para>
              If DoorState.DoorMode is equal to Blocked then ONVIF Client will invoke LockDoor request (Token = “Token1”) to switch the door into Locked state. Otherwise, skip other steps and run user interaction process.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify <emphasis role="bold">LockDoorResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> command with a PullMessagesTimeout of 20s and a MessageLimit of 1.
            </para>
          </listitem>
          <listitem>
            <para>
              Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis>. Repeat step <link linkend="Annex_HelperDoorTransitionToLockedState.14">14</link> until timeout expires (Operation Delay option from ONVIF Device Test Tool will be used).
            </para>
          </listitem>
          <listitem>
            <para>
              Check that the last Notification message with PropertyOperation = "Changed" contains Source.SimpleItem item with Name = "DoorToken" and Value is equal to Token1 and contains Data.SimpleItem item with Name = «State» and Value equal to “Locked”.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client deletes Subscription Manager either by calling <emphasis role="bold">unsubscribe</emphasis> or through a timeout and returns to the test.
            </para>
          </listitem>
        </orderedlist>
      </para>

      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT sent the last Notification message with PropertyOperation = "Changed" with State value not equal to expected state at step <link linkend="Annex_HelperDoorTransitionToLockedState.9">9</link> or <link linkend="Annex_HelperDoorTransitionToLockedState.15">15</link> or <link linkend="Annex_HelperDoorTransitionToLockedState.32">32</link> or <link linkend="Annex_HelperDoorTransitionToLockedState.38">38</link>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT sent an invalid Notification messages with PropertyOperation = "Changed" (correct value for UTC time, TopicExpression and wsnt:Message, Topic = “tns1:Door/State/DoorMode”, contains Source.SimpleItem item with Name = "DoorToken" and Value equal to selected Door Token, contains Data.SimpleItem item with Name = «State» and Value with type equal to tdc:DoorMode).
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If the DUT sends SOAP fault to request to change door mode, then the ONVIF Client starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>).
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If DUT sends the last notification message with PropertyOperation = "Changed" with door state different from expected at step <link linkend="Annex_HelperDoorTransitionToLockedState.21">21</link> or at step <link linkend="Annex_HelperDoorTransitionToLockedState.27">27</link>, then the ONVIF Client returns to the test and starts user interaction process (see <link linkend="Annex_HelperUserInteractionProcess">Annex A.4</link>)
      </para>
    </section>
    <!--A.6-->
    <section xml:id="Annex_HelperGetDoorList" xreflabel="Annex A.6">
      <title>Get Door List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetDoorList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get complete doors list.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Door Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The complete list of doors (<emphasis role="italic">doorCompleteList</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>

      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">GetDoorList</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Limit skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    StartReference skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetDoorListResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door list =: <emphasis role="italic">doorCompleteList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF client invokes <emphasis role="bold">GetDoorList</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Limit skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          StartReference := <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetDoorListResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Door list =: <emphasis role="italic">doorListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set the following:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">doorCompleteList</emphasis> := <emphasis role="italic">doorCompleteList</emphasis> + <emphasis role="italic">doorListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>

      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetDoorListResponse</emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.7-->
    <section xml:id="Annex_HelperGetServiceCapabilities" xreflabel="Annex A.7">
      <title>Get Service Capabilities</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetServiceCapabilities
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get service capabilities.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Door Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The service capabilities (<emphasis role="italic">cap</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Capabilities =: <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.8-->
    <section xml:id="Annex_HelperCheckFreeStorageForDoor" xreflabel="Annex A.8">
      <title>Free Storage for Additional Door</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCheckFreeStorageForDoor
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to provide possibility to add a door.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> The complete list of doors (<emphasis role="italic">doorCompleteList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Removed door (<emphasis role="italic">doorToRestore</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.MaxDoors is skipped set <emphasis role="italic">cap</emphasis>.MaxDoors := 10.
            </para>
          </listitem>
          <listitem>
            <para>
              If number of items of <emphasis role="italic">doorCompleteList</emphasis> less than cap.MaxDoor, skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client find a door to delete by following the procedure mentioned in <xref linkend="Annex_HelperFindDoorToDelete"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">doorCompleteList</emphasis> - door list.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out <emphasis role="italic">doorToRestore</emphasis> - deleted door to restore.
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>

        </itemizedlist>
      </para>
    </section>
    <!--A.9-->
    <section xml:id="Annex_HelperDeleteDoor" xreflabel="Annex A.9">
      <title>Delete Door</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteDoor
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete door.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Door Token (<emphasis role="italic">doorToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">DeleteDoor</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">doorToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">DeleteDoorResponse </emphasis> message.
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">DeleteDoorResponse </emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.10-->
    <section xml:id="Annex_HelperGetDoor" xreflabel="Annex A.10">
      <title>Get Door</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetDoor
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get door.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Door Token (<emphasis role="italic">doorToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Door List (<emphasis role="italic">doorList</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetDoors</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token[0] := <emphasis role="italic">doorToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetDoorsResponse</emphasis> message with parameters:
              <itemizedlist>
                <listitem>
                  <para>
                    Door list =: <emphasis role="italic">doorList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetDoorsResponse </emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.11-->
    <section xml:id="Annex_HelperGetDoorInfo" xreflabel="Annex A.11">
      <title>Get Door Info</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetDoorInfo
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get door info.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Door Control Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Door Token (<emphasis role="italic">doorToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Door Info List (<emphasis role="italic">doorInfoList</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetDoorInfo</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token[0] := <emphasis role="italic">doorToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT sends the <emphasis role="bold">GetDoorInfoResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    DoorInfo =: <emphasis role="italic">doorInfoList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetDoorInfoResponse</emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.12-->
    <section xml:id="Annex_HelperCreateDoor" xreflabel="Annex A.12">
      <title>Create Door</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreateDoor
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create door.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Door Capabilities (<emphasis role="italic">doorCapabilities</emphasis>), <emphasis role="italic">doorType</emphasis>, <emphasis role="italic">doorTimings</emphasis>.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Door Token (<emphasis role="italic">doorToken</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">CreateDoor</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Door.token := ""
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Name := "Test Name"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Description := "Test Description"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Access := <emphasis role="italic">doorCapabilities</emphasis>.Access
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.AccessTimingOverride := <emphasis role="italic">doorCapabilities</emphasis>.AccessTimingOverride
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Lock := <emphasis role="italic">doorCapabilities</emphasis>.Lock
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Unlock := <emphasis role="italic">doorCapabilities</emphasis>.Unlock
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Block := <emphasis role="italic">doorCapabilities</emphasis>.Block
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.DoubleLock := <emphasis role="italic">doorCapabilities</emphasis>.DoubleLock
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.LockDown := <emphasis role="italic">doorCapabilities</emphasis>.LockDown
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.LockOpen := <emphasis role="italic">doorCapabilities</emphasis>.LockOpen
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.DoorMonitor := <emphasis role="italic">doorCapabilities</emphasis>.DoorMonitor
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.LockMonitor := <emphasis role="italic">doorCapabilities</emphasis>.LockMonitor
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.DoubleLockMonitor := <emphasis role="italic">doorCapabilities</emphasis>.DoubleLockMonitor
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Alarm := <emphasis role="italic">doorCapabilities</emphasis>.Alarm
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Tamper := <emphasis role="italic">doorCapabilities</emphasis>.Tamper
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Fault := <emphasis role="italic">doorCapabilities</emphasis>.Fault
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.DoorType := <emphasis role="italic">doorType</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Timings.ReleaseTime := <emphasis role="italic">doorTimings</emphasis>.ReleaseTime
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Timings.OpenTime := <emphasis role="italic">doorTimings</emphasis>.OpenTime
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Timings.ExtendedReleaseTime := <emphasis role="italic">doorTimings</emphasis>.ExtendedReleaseTime
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Timings.DelayTimeBeforeRelock := <emphasis role="italic">doorTimings</emphasis>.DelayTimeBeforeRelock
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Timings.ExtendedOpenTime := <emphasis role="italic">doorTimings</emphasis>.ExtendedOpenTime
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Timings.PreAlarmTime := <emphasis role="italic">doorTimings</emphasis>.PreAlarmTime
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreateDoorResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">doorToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>


        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">CreateDoorResponse </emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.13-->
    <section xml:id="Annex_HelperCreatePullPointSubscription" xreflabel="Annex A.13">
      <title>Create Pull Point Subscription</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreatePullPointSubscription
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create PullPoint Subscription with specified Topic.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Notification Topic (<emphasis role="italic">topic</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>), subscription termination time (<emphasis role="italic">tt</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Filter.TopicExpression := <emphasis role="italic">topic</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    SubscriptionReference =: <emphasis role="italic">s</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    CurrentTime =: <emphasis role="italic">ct</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    TerminationTime =: <emphasis role="italic">tt</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.14-->
    <section xml:id="Annex_HelperDeleteSubscription" xreflabel="Annex A.14">
      <title>Delete Subscription</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteSubscription
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete supscribtion.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint s.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.15-->
    <section xml:id="Annex_HelperPullDoorChanged" xreflabel="Annex A.15">
      <title>Retrieve Door Changed Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullDoorChanged
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:Configuration/Door/Changed event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>),
        Subscription termination time (<emphasis role="italic">tt</emphasis>) and Door token (<emphasis role="italic">doorToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullDoorChanged.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> contains at least one NotificationMessage with Topic value is not equal to "tns1:Configuration/Door/Changed", FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty and the DoorToken source simple item in <emphasis role="italic">notificationMessageList</emphasis> is equal
                    to <emphasis role="italic">doorToken</emphasis>, skip other steps and finish the procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <link linkend="Annex_HelperPullDoorChanged.1">1</link> without
                    Notification with Token source simple item equal to <emphasis role="italic">doorToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.16-->
    <section xml:id="Annex_HelperPullDoorRemoved" xreflabel="Annex A.15">
      <title>Retrieve Door Removed Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullDoorRemoved
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:Configuration/Door/Removed event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>),
        Subscription termination time (<emphasis role="italic">tt</emphasis>) and Door token (<emphasis role="italic">doorToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullDoorRemoved.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> contains at least one NotificationMessage with Topic value is not equal to "tns1:Configuration/Door/Removed", FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty and the DoorToken source simple item in <emphasis role="italic">notificationMessageList</emphasis> is equal
                    to <emphasis role="italic">doorToken</emphasis>, skip other steps and finish the procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <link linkend="Annex_HelperPullDoorRemoved.1">1</link> without
                    Notification with Token source simple item equal to <emphasis role="italic">doorToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.17-->
    <section xml:id="Annex_HelperFindDoorToDelete" xreflabel="Annex A.17">
      <title>Find Door To Delete</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperFindDoorToDelete
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to find a door in the door list that can be deleted.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Door list (<emphasis role="italic">doorList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Deleted Door (<emphasis role="italic">deletedDoor</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              For each Door <emphasis role="italic">door</emphasis> from <emphasis role="italic">doorList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">DeleteDoor</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Token =: <emphasis role="italic">door</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with SOAP fault message or with <emphasis role="bold">DeleteDoorResponse</emphasis> message.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If DUT returns <emphasis role="bold">DeleteDoorResponse</emphasis> message, set <emphasis role="italic">deletedDoor</emphasis> := <emphasis role="italic">door</emphasis> and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Fail the test.
            </para>
          </listitem>



        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">DeleteDoorResponse</emphasis> message or SOAP fault message.
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
  </appendix>
</book>