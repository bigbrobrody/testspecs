<?xml version='1.0' encoding='UTF-8'?>
<!--For PDF version (standard)-->
<!-- <?xml-stylesheet href="docbook/xsl/fo/docbook.xsl" type="text/xsl" ?>-->
<!--For PDF version-->
<!-- <?xml-stylesheet href="ONVIF-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<!--For online version-->
<?xml-stylesheet href="docbook-css/docbook.xsl" type="text/xsl" ?>
<!--For PDF version - New ONVIF-->
<!--<?xml-stylesheet href="../ONVIFNew-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd" version="0.1" xml:id="ONVIF_Profile_Imaging_Client_TS">
  <info>
    <orgname>
      <phrase>
        <trademark class="registered">ONVIF</trademark>
      </phrase>
    </orgname>
    <title>Schedule Device Test Specification</title>
    <subtitle>Version 20.06</subtitle>
    <date>June 2020</date>
    <copyright>
      <year>2020</year>
      <holder>ONVIF, Inc. All rights reserved.</holder>
    </copyright>
    <address>
      <uri>www.onvif.org</uri>
    </address>
    <legalnotice role="notices">
      <para>
        Recipients of this document may copy, distribute, publish, or display this
        document so long as this copyright notice, license and disclaimer are retained with
        all copies of the document. No license is granted to modify this document.
      </para>
      <para>
        THIS DOCUMENT IS PROVIDED &quot;AS IS,&quot; AND THE CORPORATION AND ITS MEMBERS AND THEIR
        AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
        NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
        NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY
        PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS,
        COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
      </para>
      <para>IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT. THE FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE CORPORATION.</para>
    </legalnotice>
    <revhistory>
      <revision>
        <revnumber>15.06</revnumber>
        <date/>
        <revdescription>
          <para>First issue of Schedule Test Specification</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.09</revnumber>
        <date>Sep, 2016</date>
        <revdescription>
          <para>Annex A.7 was updated with changing of DTEND value</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Nov, 2016</date>
        <revdescription>
          <para>
            CREATE SCHEDULE - INVALID TIME RANGE INTERVAL: fault code was changed
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Feb 21, 2017</date>
        <revdescription>
          <para>
            CHANGE SCHEDULE STATE - CHANGE SPECIAL DAYS updated according to #1136
          </para>
          <para>
            CREATE SCHEDULE - NOT EMPTY SCHEDULE TOKEN updated according to #1355
          </para>
          <para>
            CREATE SPECIAL DAY GROUP - NOT EMPTY SPECIAL DAY GROUP TOKEN updated according to #1356
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Mar 27, 2017</date>
        <revdescription>
          <para>
            Current document name was changed from Schedule Test Specification to Schedule Device Test Specification.
          </para>
          <para>
            The document formating were updated.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jun 21, 2018</date>
        <revdescription>
          <para>Reformatting document using new template</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.12</revnumber>
        <date>Oct 1, 2018</date>
        <revdescription>
          <para>
            The following were updated in the scope of #1714:
          </para>
          <para>
            SCHEDULE-3-1-15 MODIFY SCHEDULE - INVALID TIME RANGE INTERVAL (expected fault updated to env:Sender\ter:InvalidArgVal)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.12</revnumber>
        <date>Oct 9, 2018</date>
        <revdescription>
          <para>
            The following were updated in the scope of #1670:
          </para>
          <para>
            Scope\Schedule (updated with SetSchedule)
          </para>
          <para>
            Scope\Special Day Group (updated with SetSpecialDayGroup)
          </para>
          <para>
            Test Policy\Schedule (updated with SetSchedule)
          </para>
          <para>
            Test Policy\Special Day Group (updated with SetSpecialDayGroup)
          </para>
          <para>
            SCHEDULE-3-1-17 SET NEW SCHEDULE (added)
          </para>
          <para>
            SCHEDULE-3-1-18 SET SCHEDULE (added)
          </para>
          <para>
            SCHEDULE-5-1-13 SET NEW SPECIAL DAY GROUP (added)
          </para>
          <para>
            SCHEDULE-5-1-14 SET SPECIAL DAY GROUP (added)
          </para>
        </revdescription>
      </revision>
      <revision>
				<revnumber>18.12</revnumber>
				<date>Dec 21, 2018</date>
				<revdescription>
          <para>Switching Hub description in 'Network Configuration for DUT' section was added according to #1737</para>				
				</revdescription>
			</revision>
       <revision>
        <revnumber>20.06</revnumber>
        <date>May 13, 2020</date>
        <revdescription>
          <para>Pre-Requisite of the following test cases updated with adding of Pull-Point Notification feature according to #1999:</para>
        <para>SCHEDULE-3-1-5	CREATE SCHEDULE</para>
<para>SCHEDULE-3-1-6	MODIFY SCHEDULE</para>
<para>SCHEDULE-3-1-7	DELETE SCHEDULE</para>
<para>SCHEDULE-3-1-17	SET NEW SCHEDULE</para>
<para>SCHEDULE-3-1-18	SET SCHEDULE</para>
<para>SCHEDULE-5-1-5	CREATE SPECIAL DAY GROUP</para>
<para>SCHEDULE-5-1-6	MODIFY SPECIAL DAY GROUP</para>
<para>SCHEDULE-5-1-7	DELETE SPECIAL DAY GROUP</para>
<para>SCHEDULE-5-1-13	SET NEW SPECIAL DAY GROUP</para>
<para>SCHEDULE-5-1-14	SET SPECIAL DAY GROUP</para>
<para>SCHEDULE-6-1-2	CHANGE SCHEDULE STATE - CHANGE STANDARD</para>
<para>SCHEDULE-6-1-3	CHANGE SCHEDULE STATE  - CHANGE SPECIAL DAYS</para>
<para>SCHEDULE-7-1-1	SCHEDULE STATE ACTIVE EVENT (PROPERTY EVENT)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>May 18, 2020</date>
        <revdescription>
          <para>Pre-Requisite of the following test cases updated with adding of Event Service according to #1999:</para>
     <para>SCHEDULE-7-1-2 SCHEDULE CHANGED EVENT</para>
<para>SCHEDULE-7-1-3 SCHEDULE REMOVED EVENT</para>
<para>SCHEDULE-7-1-4 SPECIAL DAYS CHANGED EVENT</para>
<para>SCHEDULE-7-1-5 SPECIAL DAYS REMOVED EVENT</para>
        </revdescription>
      </revision>
    </revhistory>
  </info>
  <chapter xml:id="s.intro">
    <title>Introduction</title>
    <para>
      The goal of the ONVIF test specification set is to make it possible to realize fully interoperable IP physical security implementation from different vendors.
      The set of ONVIF test specification describes the test cases need to verify the [ONVIF Network Interface Specs] and [ONVIF Conformance] requirements.
      In addition, the test cases are to be basic inputs for some Profile specification requirements. It also describes the test framework, test setup, pre-requisites, test policies needed for the execution of the described test cases.
    </para>
    <para>
      This ONVIF Schedule Test Specification acts as a supplementary document to the [ONVIF Network Interface Specs],
      illustrating test cases need to be executed and passed. In addition,
      this specification acts as an input document to the development of test tool that will be used to test the ONVIF device implementation conformance towards ONVIF standard. This test tool is referred as ONVIF Client hereafter.
    </para>
    <section xml:id="s.intro.scope">
      <title>Scope</title>
      <para>
        This ONVIF Schedule Test Specification defines and regulates the conformance testing procedure for the ONVIF conformant devices.
        Conformance testing is meant to be functional black-box testing.
        The objective of this specification is to provide test cases to test individual requirements of ONVIF devices according to the ONVIF Schedule Service,
        which is defined in [ONVIF Schedule Service].
      </para>
      <para>
        The principal intended purposes are:
        <orderedlist>
          <listitem>
            <para>Provide self-assessment tool for implementations.</para>
          </listitem>
          <listitem>
            <para>
              Provide comprehensive test suite coverage for [ONVIF Network Interface Specs].
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        This specification <emphasis role="bold">does not</emphasis> address the following:
        <orderedlist>
          <listitem>
            <para>
              Product use cases and non-functional (performance and regression) testing.
            </para>
          </listitem>
          <listitem>
            <para>
              SOAP Implementation Interoperability test i.e. Web Services Interoperability Basic Profile version 2.0 (WS-I BP2.0).
            </para>
          </listitem>
          <listitem>
            <para>
              Network protocol implementation Conformance test for HTTPS, HTTP, RTP and RTSP protocols.
            </para>
          </listitem>
          <listitem>
            <para>
              Wi-Fi Conformance test
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        The set of ONVIF Test Specification will not cover the complete set of requirements as defined in [ONVIF Network Interface Specs]; instead it will cover its subset.
      </para>
      <para>
        This ONVIF Schedule Test Specification covers the ONVIF Schedule Service, which is a functional block of [ONVIF Network Interface Specs]. The following section gives a brief overview of each functional block and its scope.
      </para>
      <section xml:id="s.intro.scope.capabilities">
        <title>Capabilities</title>
        <para>
          The Capabilities section covers the test cases needed for getting capabilities from an ONVIF device.
        </para>
        <para>
          The scope of this specification section is to cover the following functions:
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>Getting Schedule service address with GetServices command via Device service</para>
            </listitem>
            <listitem>
              <para>Getting capabilities with GetServiceCapabilities command</para>
            </listitem>
            <listitem>
              <para>Getting capabilities with GetServices command via Device service</para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <section xml:id="s.intro.scope.schedule_info">
        <title>Schedule Info</title>
        <para>
          The Schedule Info section covers the test cases needed for getting schedule list and information from an ONVIF device.
        </para>
        <para>
          The scope of this specification section is to cover the following functions:
          <itemizedlist>
            <listitem>
              <para>Getting Schedule service address with GetServices command via Device service</para>
            </listitem>
            <listitem>
              <para>Getting capabilities with GetServiceCapabilities command</para>
            </listitem>
            <listitem>
              <para>Getting capabilities with GetServices command via Device service</para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <section xml:id="s.intro.scope.schedule">
        <title>Schedule</title>
        <para>
          The Schedule section covers the test cases needed for getting schedule from an ONVIF device.
        </para>
        <para>
          The scope of this specification section is to cover the following functions:
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                Getting schedule with GetSchedules command
              </para>
            </listitem>
            <listitem>
              <para>Getting schedule list with GetScheduleList command</para>
            </listitem>
            <listitem>
              <para>Creating schedule with CreateSchedule command</para>
            </listitem>
            <listitem>
              <para>Modifying schedule with ModifySchedule command</para>
            </listitem>
            <listitem>
              <para>Deleting schedule with DeleteSchedule command</para>
            </listitem>
            <listitem>
              <para>Creating and modifying schedule with SetSchedule command</para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <section xml:id="s.intro.scope.special_day_group_info">
        <title>Special Day Group Info</title>
        <para>
          The Special Day Group Info section covers the test cases needed for getting Special Day Group list and information from an ONVIF device.
        </para>
        <para>
          The scope of this specification section is to cover the following functions:
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                Getting SpecialDayGroup information with GetSpecialDayGroupInfo command
              </para>
            </listitem>
            <listitem>
              <para>Getting SpecialDayGroup information list with GetSpecialDayGroupInfoList command</para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <section xml:id="s.intro.scope.special_day_group">
        <title>Special Day Group</title>
        <para>
          The Special Day Group section covers the test cases needed for getting Special Day Group from an ONVIF device.
        </para>
        <para>
          The scope of this specification section is to cover the following functions:
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                Getting special day group with GetSpecialDayGroups command
              </para>
            </listitem>
            <listitem>
              <para>Getting special day group list with GetSpecialDayGroupList command</para>
            </listitem>
            <listitem>
              <para>Creating special day group with CreateSpecialDayGroup command</para>
            </listitem>
            <listitem>
              <para>Modifying special day group with ModifySpecialDayGroup command</para>
            </listitem>
            <listitem>
              <para>Deleting special day group with DeleteSpecialDayGroup command</para>
            </listitem>
            <listitem>
              <para>Creating and modifying special day group with SetSpecialDayGroup command</para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <section xml:id="s.intro.scope.schedule_states">
        <title>Schedule States</title>
        <para>
          The Schedule States section covers the test cases needed for getting schedule states from an ONVIF device.
        </para>
        <para>
          The scope of this specification section is to cover the following functions:
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                Getting schedule states with GetScheduleStates command
              </para>
            </listitem>
            <listitem>
              <para>Changing schedule states </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <section xml:id="s.intro.scope.schedule_events">
        <title>Schedule Events</title>
        <para>
          The Schedule Events section covers the test cases needed for for checking specified events format.
        </para>
        <para>
          The scope of this specification section is to cover the following functions:
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                Getting event properties with GetEventProperties command
              </para>
            </listitem>
            <listitem>
              <para>Changing schedule states </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <section xml:id="s.intro.scope.consistency">
        <title>Consistency</title>
        <para>
          Consistency test cases cover verification of consistency between different entities and commands.
        </para>
        <para>
          Consistency between the following entities is covered by the following test case:
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                Schedule and Special Day Info
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
  </chapter>
  <chapter xml:id="s.docbook">
    <title>Normative references</title>
    <itemizedlist>
      <listitem>
        <para>[ONVIF Conformance] ONVIF Conformance Process Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/conformance/">https://www.onvif.org/profiles/conformance/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Profile Policy] ONVIF Profile Policy:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/">https://www.onvif.org/profiles/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Network Interface Specs] ONVIF Network Interface Specification documents:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Core Specs] ONVIF Core Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Schedule Spec] ONVIF Schedule Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Base Test] ONVIF Base Device Test Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/conformance/device-test/">https://www.onvif.org/profiles/conformance/device-test/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ISO/IEC Directives, Part 2] ISO/IEC Directives, Part 2, Annex H:</para>
        <para>
          <link xlink:href="http://www.iso.org/directives">http://www.iso.org/directives</link>
        </para>
      </listitem>
      <listitem>
        <para>[ISO 16484-5] ISO 16484-5:2014-09 Annex P:</para>
        <para>
          <link xlink:href="https://www.iso.org/obp/ui/#!iso:std:63753:en">https://www.iso.org/obp/ui/#!iso:std:63753:en</link>
        </para>
      </listitem>
      <listitem>
        <para>[SOAP 1.2, Part 1] W3C SOAP 1.2, Part 1, Messaging Framework:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/soap12-part1/">http://www.w3.org/TR/soap12-part1/</link>
        </para>
      </listitem>
      <listitem>
        <para>[XML-Schema, Part 1] W3C XML Schema Part 1: Structures Second Edition:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/xmlschema-1/">http://www.w3.org/TR/xmlschema-1/</link>
        </para>
      </listitem>
      <listitem>
        <para>[XML-Schema, Part 2] W3C XML Schema Part 2: Datatypes Second Edition:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/xmlschema-2/">http://www.w3.org/TR/xmlschema-2/</link>
        </para>
      </listitem>
      <listitem>
        <para>[WS-Security] "Web Services Security: SOAP Message Security 1.1 (WS-Security 2004)", OASIS Standard, February 2006.:</para>
        <para>
          <link xlink:href="http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf">http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf</link>
        </para>
      </listitem>
      <listitem>
        <para>[RFC 2445] "Internet Calendaring and Scheduling Core Object Specification (iCalendar)", F. Dawson, D. Stenerson, November 1998.:</para>
        <para>
          <link xlink:href="https://www.ietf.org/rfc/rfc2445.txt">https://www.ietf.org/rfc/rfc2445.txt</link>
        </para>
      </listitem>
    </itemizedlist>
  </chapter>
  <chapter xml:id="additions">
    <title>Terms and Definitions</title>
    <section xml:id="additions.conventions">
      <title>Conventions</title>
      <para>
        The key words "shall", "shall not", "should", "should not", "may", "need not",
        "can", "cannot" in this specification are to be interpreted as described in [ISO/IEC
        Directives Part 2].
      </para>
    </section>
    <section xml:id="additions.definitions">
      <title>Definitions</title>
      <para>
        This section defines terms that are specific to the ONVIF Schedule Service and tests. For a list of applicable general terms and definitions, please see [ONVIF Base Test].
      </para>
      <variablelist>
        <varlistentry>
          <term>iCalendar</term>
          <listitem>
            <para>An industry standard format for exchanging scheduling and activity-recording information electronically.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Schedule</term>
          <listitem>
            <para>A set of time periods, e.g. working hours (weekdays from 8 AM to 6 PM). It may also include one or more Special Days Schedules.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Special Days</term>
          <listitem>
            <para>A set of dates that require the regular Schedule to be overridden, e.g. holidays, half-days or working Sundays.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Special Days Schedule</term>
          <listitem>
            <para>A schedule that defines time periods for a Special Day List.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Time Period</term>
          <listitem>
            <para>A time period has a start time and an end time, e.g. 8 AM to 6 PM.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>vEvent</term>
          <listitem>
            <para>A component in iCalendar, specifying the properties of an event.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:id="additions.abbreviations">
      <title>Abbreviations</title>
      <para>This section describes abbreviations used in this document.</para>
      <variablelist>
        <varlistentry>
          <term>DUT</term>
          <listitem>
            <para>Device Under Test</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>HTTP</term>
          <listitem>
            <para>Hypertext Transfer Protocol</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>PACS</term>
          <listitem>
            <para>Physical Access Control System</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>
  <chapter xml:id="overview">
    <title>Test Overview</title>
    <para>
      This section provides information the test setup procedure and required prerequisites,
      and the test policies that should be followed for test case execution.
    </para>
    <section xml:id="overview.test_setup">
      <title>Test Setup</title>
      <section xml:id="overview.test_setup.network_configuration">
        <title>Network Configuration for DUT</title>
        <para>
          The generic test configuration for the execution of test cases defined in this document is as shown below (Figure 4.1).
        </para>
        <para>
          Based on the individual test case requirements, some of the entities in the below setup may not be needed for the execution of those corresponding test cases.
        </para>
        <figure>
          <title>Test Configuration for DUT</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="test_network.png" format="PNG" scalefit="0"/>
            </imageobject>
            <textobject>
              <phrase>Test Configuration for DUT</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <para>
          <emphasis role="bold">DUT:</emphasis> ONVIF device to be tested. Hereafter, this is referred to as DUT (Device Under Test).
        </para>
        <para>
          <emphasis role="bold">ONVIF Client (Test Tool):</emphasis> Tests are executed by this system and it controls the behavior of the DUT. It handles both expected and unexpected behavior.
        </para>
        <para>
          <emphasis role="bold">HTTP Proxy:</emphasis> provides facilitation in case of RTP and RTSP tunneling over HTTP.
        </para>
        <para>
          <emphasis role="bold">Wireless Access Point:</emphasis> provides wireless connectivity to the devices that support wireless connection.
        </para>
        <para>
          <emphasis role="bold">DNS Server:</emphasis> provides DNS related information to the connected devices.
        </para>
        <para>
          <emphasis role="bold">DHCP Server:</emphasis> provides IPv4 Address to the connected devices.
        </para>
        <para>
          <emphasis role="bold">NTP Server:</emphasis> provides time synchronization between ONVIF Client and DUT.
        </para>
        <para>
          <emphasis role="bold">Switching Hub:</emphasis> provides network connectivity among all the test equipments in the test environment. All devices should be connected to the Switching Hub.
          When running multiple test instances in parallel on the same network, the Switching Hub should be configured to use filtering in order to avoid multicast traffic being flooded to all ports, because this may affect test stability.
        </para>
        <para>
          <emphasis role="bold">Router:</emphasis> provides router advertisements for IPv6 configuration.
        </para>
      </section>
    </section>
    <section xml:id="overview.prerequisites">
      <title>Prerequisites</title>
      <para>
        The pre-requisites for executing the test cases described in this Test Specification are:
        <itemizedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              The DUT shall be configured with an IPv4 address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be IP reachable in the test configuration.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be able to be discovered by the Test Tool.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be configured with the time, i.e. manual configuration of UTC time and if NTP is supported by DUT, then NTP time shall be synchronized with NTP Server.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <section xml:id="overview.test_policy">
      <title>Test Policy</title>
      <para>
        This section describes the test policies specific to the test case execution of each functional block.
      </para>
      <para>
        The DUT shall adhere to the test policies defined in this section.
      </para>
      <section xml:id="overview.test_policy.capabilities">
        <title>Capabilities</title>
        <para>
          The test policies specific to the test case execution of Capabilities functional block:
          <itemizedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                DUT shall give the Schedule Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following commands:
                <itemizedlist>
                  <listitem>
                    <para>
                      GetServices
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetServiceCapabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed
                <itemizedlist>
                  <listitem>
                    <para>
                      Getting capabilities with GetServiceCapabilities command
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting capabilities with GetServices command
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
          Please refer to <xref linkend="tc.schedule.capabilities"/> for abilities Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.schedule_info">
        <title>Schedule Info</title>
        <para>
          The test policies specific to the test case execution of Schedule Info functional block:
          <itemizedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                DUT shall give the Schedule Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following commands:
                <itemizedlist>
                  <listitem>
                    <para>
                      GetServices
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetServiceCapabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetScheduleInfo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetScheduleInfoList
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return more items in GetScheduleInfo and GetScheduleInfoList responses than specified in service capabilities by MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return more items in GetScheduleInfoList response than specified by Limit parameter in a request.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return items with the same tokens in GetScheduleInfoList responses for one schedule info list resieving.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return more ScheduleInfo items in GetScheduleInfoList responses than specified in service capabilities by MaxSchedules.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return any fault if GetScheduleInfo was invoked for non-exciting Schedule token. Such tokens shall be ignored.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return SOAP 1.2 fault message (InvalidArgs/TooManyItems) if more items than MaxLimit was requested by GetScheduleInfo command.
              </para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed
                <itemizedlist>
                  <listitem>
                    <para>
                      Getting schedule info with GetScheduleInfo command
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting schedule info list with GetScheduleInfoList command with using different Limit and NextReference values
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting schedule info with invalid schedule token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting schedule info with number of requested items is greater than MaxLimit
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
          Please refer to <xref linkend="tc.schedule.schedule_info"/> for Schedule Info Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.schedule">
        <title>Schedule</title>
        <para>
          The test policies specific to the test case execution of Schedule functional block:
          <itemizedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                DUT shall give the Schedule Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following commands:
                <itemizedlist>
                  <listitem>
                    <para>
                      GetSchedules
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetScheduleList
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetScheduleInfoList
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CreateSchedule
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ModifySchedule
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      DeleteSchedule
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Client Supplied Token as indicated by Capabilities.ClientSuppliedTokenSupported = true, DUT shall support the following commands:
                <itemizedlist>
                  <listitem>
                    <para>
                      SetSchedule
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return only requested items in GetSchedules response that specified in GetSchedules request.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return all requested items in GetSchedules response that specified in GetSchedules request.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return more items in GetSchedules responses than specified in service capabilities by MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return the same information in GetSchedules responses and in GetScheduleInfoList responses for the items with the same token.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return more items in GetScheduleList response than specified by Limit parameter in a request.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall not return items with the same tokens in GetScheduleList responses for one schedule list resieving.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return the same information in GetSchedules responses and in GetScheduleList responses for the items with the same token.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return the same information in GetScheduleList responses and in GetScheduleInfoList responses for the items with the same token.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return the schedules in GetScheduleList responses and in GetScheduleInfoList responses.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return SOAP 1.2 fault message (InvalidArgs/TooManyItems) if more items than MaxLimit was requested by GetSchedules command.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT shall support creating of schedule using CreateSchedule command.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT shall support modifying of schedule using ModifySchedule command.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT shall support deleting of schedule.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Client Supplied Token as indicated by Capabilities.ClientSuppliedTokenSupported = true, creating and modifying of schedule using SetSchedule command.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall return SOAP 1.2 fault message (InvalidArgs) if schedule token is specified in CreateSchedule request.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT should return SOAP 1.2 fault message (InvalidArgVal/NotFound) if ModifySchedule or DeleteSchedule command was invoked for non-exciting schedule token.
              </para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed
                <itemizedlist>
                  <listitem>
                    <para>
                      Getting schedule with GetSchedule command and test that it includes the same information with GetScheduleInfoList command
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting schedule info list with GetScheduleList command with using different Limit and NextReference values and test that it includes the same information with GetScheduleInfoList command
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Creating schedule with CreateSchedule command with empty token and test that corresponding notification message is received
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Modifying schedule with ModifySchedule command and test that corresponding notification message is received
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Deleting schedule with DeleteSchedule command and test that corresponding notification message is received
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting schedules with invalid schedule token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Getting schedules with number of requested items is greater than MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Creating schedule with CreateSchedule command with specified token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Modifying schedule with ModifySchedule command with invalid token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Deleting schedule with DeleteSchedule command with invalid token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If DUT supports Client Supplied Token as indicated by Capabilities.ClientSuppliedTokenSupported = true:
                      <itemizedlist>
                        <listitem>
                          <para>
                            Creating schedule with SetSchedule command with empty token and test that corresponding notification message is received
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Modifying schedule with SetSchedule command and test that corresponding notification message is received
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
          Please refer to <xref linkend="tc.schedule.schedule"/> for Schedule Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.special_day_group_info">
        <title>Special Day Group Info</title>
        <para>
          The test policies specific to the test case execution of SpecialDayGroup Info Info functional block:<itemizedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>DUT shall give the Schedule Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.</para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following commands:<itemizedlist>
                  <listitem>
                    <para>
                      GetServices
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetServiceCapabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Special Days as indicated by the Capabilities.SpecialDaysSupported, then DUT shall support the following commands:<itemizedlist>
                  <listitem>
                    <para>
                      GetSpecialDayGroupInfo
                    </para>
                  </listitem>
                  <listitem>
                    <para>GetSpecialDayGroupInfoList</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>DUT shall not return more items in GetSpecialDayGroupInfo and GetSpecialDayGroupInfoList responses than specified in service capabilities by MaxLimit.</para>
            </listitem>
            <listitem>
              <para>DUT shall not return more items in GetSpecialDayGroupInfoList response than specified by Limit parameter in a request.</para>
            </listitem>
            <listitem>
              <para>DUT shall not return items with the same tokens in GetSpecialDayGroupInfoList responses for one special day group info list resieving.</para>
            </listitem>
            <listitem>
              <para>DUT shall not return more SpecialDayGroupInfo items in GetSpecialDayGroupInfoList responses than specified in service capabilities by MaxSpecialDayGroups.</para>
            </listitem>
            <listitem>
              <para>DUT shall not return any fault if GetSpecialDayGroupInfo was invoked for non-exciting SpecialDayGroup token. Such tokens shall be ignored.</para>
            </listitem>
            <listitem>
              <para>DUT shall return SOAP 1.2 fault message (InvalidArgs/TooManyItems) if more items than MaxLimit was requested by GetSpecialDayGroupInfo command.</para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed if DUT supports Special Days:<itemizedlist>
                  <listitem>
                    <para>Getting special day group info with GetSpecialDayGroupInfo command</para>
                  </listitem>
                  <listitem>
                    <para>Getting special day group info list with GetSpecialDayGroupInfoList command with using different Limit and NextReference values</para>
                  </listitem>
                  <listitem>
                    <para>Getting special day group info with invalid special day group token</para>
                  </listitem>
                  <listitem>
                    <para>Getting special day group info with number of requested items is greater than MaxLimit</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
          Please refer to <xref linkend="tc.schedule.special_day_group_info"/> for Special Day Group Info Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.special_day_group">
        <title>Special Day Group</title>
        <para>
          The test policies specific to the test case execution of Special Day Group functional block:<itemizedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>DUT shall give the Schedule Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.</para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following commands:<itemizedlist>
                  <listitem>
                    <para>
                      GetServices
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      GetServiceCapabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Special Days as indicated by the Capabilities.SpecialDaysSupported, then DUT shall support the following commands:<itemizedlist>
                  <listitem>
                    <para>
                      GetSpecialDayGroups
                    </para>
                  </listitem>
                  <listitem>
                    <para>GetSpecialDayGroupList</para>
                  </listitem>
                  <listitem>
                    <para>GetSpecialDayGroupInfoList</para>
                  </listitem>
                  <listitem>
                    <para>CreateSpecialDayGroup</para>
                  </listitem>
                  <listitem>
                    <para>ModifySpecialDayGroup</para>
                  </listitem>
                  <listitem>
                    <para>DeleteSpecialDayGroup</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Client Supplied Token as indicated by Capabilities.ClientSuppliedTokenSupported = true, the DUT shall support the following commands:
                <itemizedlist>
                  <listitem>
                    <para>
                      SetSpecialDayGroup
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>DUT shall return only requested items in GetSpecialDayGroups response that specified in GetSpecialDayGroups request.</para>
            </listitem>
            <listitem>
              <para>DUT shall return all requested items in GetSpecialDayGroups response that specified in GetSpecialDayGroups request.</para>
            </listitem>
            <listitem>
              <para>DUT shall not return more items in GetSpecialDayGroups responses than specified in service capabilities by MaxLimit.</para>
            </listitem>
            <listitem>
              <para>DUT shall return the same information in GetSpecialDayGroups responses and in GetSpecialDayGroupInfoList responses for the items with the same token.</para>
            </listitem>
            <listitem>
              <para>DUT shall not return more items in GetSpecialDayGroupList response than specified by Limit parameter in a request.</para>
            </listitem>
            <listitem>
              <para>DUT shall not return items with the same tokens in GetSpecialDayGroupList responses for one special day group list resieving.</para>
            </listitem>
            <listitem>
              <para>DUT shall return the same information in GetSpecialDayGroups responses and in GetSpecialDayGroupList responses for the items with the same token.</para>
            </listitem>
            <listitem>
              <para>DUT shall return the same information in GetSpecialDayGroupList responses and in GetSpecialDayGroupInfoList responses for the items with the same token.</para>
            </listitem>
            <listitem>
              <para>DUT shall return the special day groups in GetSpecialDayGroupList responses and in GetSpecialDayGroupInfoList responses.</para>
            </listitem>
            <listitem>
              <para>The DUT shall support creating of special day group.</para>
            </listitem>
            <listitem>
              <para>The DUT shall support modifying of special day group.</para>
            </listitem>
            <listitem>
              <para>The DUT shall support deleting of special day group.</para>
            </listitem>
            <listitem>
              <para>If DUT supports Client Supplied Token as indicated by Capabilities.ClientSuppliedTokenSupported = true, the DUT shall support creating and modifying of special day group using SetSpecialDayGroup command.</para>
            </listitem>
            <listitem>
              <para>DUT shall return SOAP 1.2 fault message (InvalidArgs) if special day group token is specified in CreateSpecialDayGroup request.</para>
            </listitem>
            <listitem>
              <para>DUT should return SOAP 1.2 fault message (InvalidArgVal/NotFound) if ModifySpecialDayGroup or DeleteSpecialDayGroup command was invoked for non-exciting special day group token.</para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed if DUT supports Special Days:<itemizedlist>
                  <listitem>
                    <para>Getting special day group with GetSpecialDayGroups command and test that it includes the same information with GetSpecialDayGroupInfoList command</para>
                  </listitem>
                  <listitem>
                    <para>Getting special day group info list with GetSpecialDayGroupList command with using different Limit and NextReference values and test that it includes the same information with GetSpecialDayGroupInfoList command</para>
                  </listitem>
                  <listitem>
                    <para>Creating special day group with CreateSpecialDayGroup command with empty token and test that corresponding notification message is received</para>
                  </listitem>
                  <listitem>
                    <para>Modifying special day group with ModifySpecialDayGroup command and test that corresponding notification message is received</para>
                  </listitem>
                  <listitem>
                    <para>Deleting special day group with DeleteSpecialDayGroup command and test that corresponding notification message is received</para>
                  </listitem>
                  <listitem>
                    <para>Getting special day groups with invalid special day group token</para>
                  </listitem>
                  <listitem>
                    <para>Getting special day groups with number of requested items is greater than MaxLimit</para>
                  </listitem>
                  <listitem>
                    <para>Creating special day group with CreateSpecialDayGroup command with specified token</para>
                  </listitem>
                  <listitem>
                    <para>Modifying special day group with ModifySpecialDayGroup command with invalid token</para>
                  </listitem>
                  <listitem>
                    <para>Deleting special day group with DeleteSpecialDayGroup command with invalid token</para>
                  </listitem>
                  <listitem>
                    <para>
                      If DUT supports Client Supplied Token as indicated by Capabilities.ClientSuppliedTokenSupported = true:
                      <itemizedlist>
                        <listitem>
                          <para>
                            Creating special day group with SetSpecialDayGroup command with empty token and test that corresponding notification message is received
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Modifying special day group with SetSpecialDayGroup command and test that corresponding notification message is received
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
          Please refer to <xref linkend="tc.schedule.special_day_group"/> for Special Day Group Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.schedule_state">
        <title>Schedule State</title>
        <para>
          The test policies specific to the test case execution of Schedule functional block:<itemizedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>DUT shall give the Schedule Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.</para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following command:<itemizedlist>
                  <listitem>
                    <para>
                      GetServices
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports ReportingSupported  as indicated by the Capabilities.StateReportingSupported, then DUT shall support the following command:<itemizedlist>
                  <listitem>
                    <para>
                      GetScheduleState
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed if DUT supports State Reporting:<itemizedlist>
                  <listitem>
                    <para>Getting schedule state with GetScheduleState command</para>
                  </listitem>
                  <listitem>
                    <para>Changing schedule states with changing if iCalendar values in schedule</para>
                  </listitem>
                  <listitem>
                    <para>Changing schedule states with changing if iCalendar values in special dey group</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
          Please refer to <xref linkend="tc.schedule.schedule_state"/> for Schedule State Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.schedule_events">
        <title>Schedule Events</title>
        <para>
          The test policies specific to the test case execution of Schedule Events functional block:<itemizedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>DUT shall give the Schedule Service and Event Service entry points by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.</para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following commands:<itemizedlist>
                  <listitem>
                    <para>GetServices                    </para>
                  </listitem>
                  <listitem>
                    <para>GetEventProperties</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>DUT shall support Pull Point Subscription and Topic Expression filter.</para>
            </listitem>
            <listitem>
              <para>DUT shall generate property events with initial state after subscription was done.</para>
            </listitem>
            <listitem>
              <para>DUT shall generate property events with current state after corresponding properties were changed.</para>
            </listitem>
            <listitem>
              <para>
                If DUT supports ReportingSupported  as indicated by the Capabilities.StateReportingSupported, then DUT shall support the following event:<itemizedlist>
                  <listitem>
                    <para>
                      tns1:Schedule/State/Active
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                DUT shall supports the following events:<itemizedlist>
                  <listitem>
                    <para>
                      tns1:Configuration/Schedule/Changed
                    </para>
                  </listitem>
                  <listitem>
                    <para>tns1:Configuration/Schedule/Removed </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Special Days as indicated by the Capabilities.SpecialDaysSupported, then DUT shall support the following events:<itemizedlist>
                  <listitem>
                    <para>
                      tns1:Configuration/SpecialDays/Changed
                    </para>
                  </listitem>
                  <listitem>
                    <para>tns1:Configuration/SpecialDays/Removed </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed<itemizedlist>
                  <listitem>
                    <para>
                      Getting event properties with GetEventProperties command
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
          Please refer to <xref linkend="tc.schedule.schedule_events"/> for Schedule Events Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.consistency">
        <title>Consistency</title>
        <para>
          The test policies specific to the test case execution of Consistency functional block:<itemizedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>DUT shall give the Schedule Service by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.</para>
            </listitem>
            <listitem>
              <para>
                DUT shall support the following commands:<itemizedlist>
                  <listitem>
                    <para>GetServices</para>
                  </listitem>
                  <listitem>
                    <para>GetSpecialDayGroupInfo</para>
                  </listitem>
                  <listitem>
                    <para>GetSchedules</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The following tests are performed<itemizedlist>
                  <listitem>
                    <para>
                      Schedule and Special Day Group Info Consistency
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
          Please refer to <xref linkend="tc.schedule.consistency"/> for Consistency Test Cases.
        </para>
      </section>
    </section>
  </chapter>
  <!--Schedule Test Cases-->
  <chapter xml:id="tc.schedule">
    <title>Schedule Test Cases</title>
    <!--Capabilities-->
    <section xml:id="tc.schedule.capabilities" xreflabel="Section 5.1">
      <title>Capabilities</title>
      <!--SCHEDULE-1-1-1-->
      <section xml:id="tc.SCHEDULE-1-1-1">
        <title>SCHEDULE SERVICE CAPABILITIES</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-1-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ServiceCapabilities (ONVIF Schedule Service Specification), GetServiceCapabilities command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServiceCapabilities (for Schedule Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Schedule Service Capabilities.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Capabilities =: <emphasis role="italic">cap</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Procedure Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send GetServiceCapabilitiesResponse message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-1-1-2-->
      <section xml:id="tc.SCHEDULE-1-1-2">
        <title>GET SERVICES AND GET SCHEDULE SERVICE CAPABILITIES CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-1-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Capability exchange (ONVIF Core Specification), ServiceCapabilities (ONVIF Schedule Service Specification), GetServiceCapabilities command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServices, GetServiceCapabilities (for Schedule Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> devicemgmt.wsdl, schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Services and Schedule Service Capabilities consistency.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> None.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServices</emphasis> request with parameters<itemizedlist>
                  <listitem>
                    <para>IncludeCapability := true</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a GetServicesResponse message with parameters<itemizedlist>
                  <listitem>
                    <para>
                      Services list =: <emphasis role="italic">servicesList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client selects Service with Service.Namespace = &quot;http://www.onvif.org/ver10/schedule/wsdl&quot;:<itemizedlist>
                  <listitem>
                    <para>
                      Services list [Namespace = &quot;http://www.onvif.org/ver10/schedule/wsdl&quot;] =: <emphasis role="italic">scheduleService</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Capabilities =: <emphasis role="italic">cap</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis> differs from scheduleService.Capabilities.Capabilities, FAIL the test.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Procedure Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send GetServicesResponse message.
              </para>
            </listitem>
            <listitem>
              <para>The DUT did not send GetServiceCapabilitiesResponse message.</para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step 8:
          <itemizedlist>
            <listitem>
              <para>MaxLimit</para>
            </listitem>
            <listitem>
              <para>MaxSchedules</para>
            </listitem>
            <listitem>
              <para>MaxTimePeriodsPerDay</para>
            </listitem>
            <listitem>
              <para>MaxSpecialDayGroups</para>
            </listitem>
            <listitem>
              <para>MaxSpecialDaysInSpecialDayGroup</para>
            </listitem>
            <listitem>
              <para>MaxSpecialDaysSchedules</para>
            </listitem>
            <listitem>
              <para>ExtendedRecurrenceSupported</para>
            </listitem>
            <listitem>
              <para>SpecialDaysSupported</para>
            </listitem>
            <listitem>
              <para>StateReportingSupported</para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Schedule Info-->
    <section xml:id="tc.schedule.schedule_info" xreflabel="Section 5.2">
      <title>Schedule Info</title>
      <!--SCHEDULE-2-1-1-->
      <section xml:id="tc.SCHEDULE-2-1-1">
        <title>GET SCHEDULE INFO</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-2-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleInfo (ONVIF Schedule Service Specification), Get Schedule Info command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule Info.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedule info (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:<itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">scheduleInfoCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleInfo</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleInfoResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      ScheduleInfo list =: <emphasis role="italic">scheduleInfoList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoList1</emphasis> does not contain ScheduleInfo item for each token from <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoList1</emphasis> contains at least two ScheduleInfo items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoList1</emphasis> contains other ScheduleInfo items than listed in <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each ScheduleInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">scheduleInfoCompleteList</emphasis>  repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetScheduleInfo</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token[0] := <emphasis role="italic">token</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetScheduleInfoResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ScheduleInfo list =: <emphasis role="italic">scheduleInfoList2</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleInfoList2</emphasis> does not contain only one ScheduleInfo item with token equal to <emphasis role="italic">token</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleInfoList2</emphasis>[0] item is not equal to <emphasis role="italic">scheduleInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetScheduleInfoResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note: </emphasis>If number of items in <emphasis role="italic">scheduleInfoCompleteList</emphasis> is less than <emphasis role="italic">cap</emphasis>.MaxLimit, then all <emphasis role="italic">scheduleInfoCompleteList</emphasis>.Token items shall be used for the step 6.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step 12.4:
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                ScheduleInfo:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-2-1-2-->
      <section xml:id="tc.SCHEDULE-2-1-2">
        <title>GET SCHEDULE INFO LIST - LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-2-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleInfo (ONVIF Schedule Service Specification), GetScheduleInfoList command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule Info List using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Limit :=1</para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ScheduleInfo list =: <emphasis role="italic">scheduleInfoList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoList1</emphasis> contains more ScheduleInfo items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ScheduleInfo list =: <emphasis role="italic">scheduleInfoList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoList2</emphasis> contains more ScheduleInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ScheduleInfo list =: <emphasis role="italic">scheduleInfoList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoList3</emphasis> contains more ScheduleInfo items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-2-1-3-->
      <section xml:id="tc.SCHEDULE-2-1-3">
        <title>GET SCHEDULE INFO LIST - START REFERENCE AND LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-2-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleInfo (ONVIF Schedule Service Specification), GetScheduleInfoList command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule Info List using StartReference and Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit :=<emphasis role="italic"> cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ScheduleInfo list =: <emphasis role="italic">scheduleInfoCompleteList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList1</emphasis> contains more ScheduleInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetScheduleInfoList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ScheduleInfo list =: <emphasis role="italic">scheduleInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleInfoListPart</emphasis> contains more ScheduleInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">scheduleInfoCompleteList1</emphasis> := <emphasis role="italic">scheduleInfoCompleteList1</emphasis> + <emphasis role="italic">scheduleInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList1</emphasis> contains at least two ScheduleInfo item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Limit := 1</para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ScheduleInfo list =: <emphasis role="italic">scheduleInfoCompleteList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList2</emphasis> contains more ScheduleInfo items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetScheduleInfoList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Limit := 1</para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ScheduleInfo list =: <emphasis role="italic">scheduleInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleInfoListPart</emphasis> contains more ScheduleInfo items than 1, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">scheduleInfoCompleteList2</emphasis> := <emphasis role="italic">scheduleInfoCompleteList2</emphasis> + <emphasis role="italic">scheduleInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList2 </emphasis> contains at least two ScheduleInfo item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList2 </emphasis> does not contain all schedules from <emphasis role="italic">scheduleInfoCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList2</emphasis> contains schedules other than schedules from <emphasis role="italic">scheduleInfoCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ScheduleInfo list =: <emphasis role="italic">scheduleInfoCompleteList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList3</emphasis>  contains more ScheduleInfo items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference is not null, repeat the following steps:</emphasis><orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetScheduleInfoList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">limit</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ScheduleInfo list =: <emphasis role="italic">scheduleInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleInfoListPart</emphasis> contains more ScheduleInfo items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">scheduleInfoCompleteList3</emphasis> := <emphasis role="italic">scheduleInfoCompleteList3</emphasis> + <emphasis role="italic">scheduleInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList3</emphasis> contains at least two ScheduleInfo item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList3 </emphasis>does not contain all schedules from <emphasis role="italic">scheduleInfoCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList3</emphasis> contains schedules other than schedules from <emphasis role="italic">scheduleInfoCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-2-1-4-->
      <section xml:id="tc.SCHEDULE-2-1-4">
        <title>GET SCHEDULE INFO LIST - NO LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-2-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleInfo (ONVIF Schedule Service Specification), GetScheduleInfoList command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule Info List without using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Limit  skipped</para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ScheduleInfo list =: <emphasis role="italic">scheduleInfoCompleteList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList</emphasis> contains more ScheduleInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetScheduleInfoList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Limit skipped </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ScheduleInfo list =: <emphasis role="italic">scheduleInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleInfoListPart</emphasis> contains more ScheduleInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">scheduleInfoCompleteList </emphasis> := <emphasis role="italic">scheduleInfoCompleteList </emphasis> + <emphasis role="italic">scheduleInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList</emphasis> contains at least two ScheduleInfo item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList</emphasis> contains more ScheduleInfo items than <emphasis role="italic">cap</emphasis>.MaxSchedules, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-2-1-5-->
      <section xml:id="tc.SCHEDULE-2-1-5">
        <title>GET SCHEDULE INFO WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-2-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleInfo (ONVIF Schedule Service Specification), Get Schedule Info command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule Info with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedule info (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">scheduleInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleInfo</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleInfoResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      ScheduleInfo list =: <emphasis role="italic">scheduleInfoList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoList </emphasis> is not empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is less than 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleInfo</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token[0]:= <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Token[1]:= <emphasis role="italic">scheduleInfoCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleInfoResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      ScheduleInfo list =: <emphasis role="italic">scheduleInfoList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoList</emphasis> is empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoList</emphasis> contains more than one item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoList</emphasis>[0].token is not equal to <emphasis role="italic">scheduleInfoCompleteList</emphasis>[0].token, FAIL the test.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetScheduleInfoResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-2-1-6-->
      <section xml:id="tc.SCHEDULE-2-1-6">
        <title>GET SCHEDULE INFO - TOO MANY ITEMS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-2-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleInfo (ONVIF Schedule Service Specification), Get Schedule Info command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule Info in case there are more items than MaxLimit in request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedule info (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If  <emphasis role="italic">scheduleInfoCompleteList</emphasis>.token items number is less than <emphasis role="italic">cap</emphasis>.MaxLimit or equal to <emphasis role="italic">cap</emphasis>.MaxLimit, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList </emphasis> := [subset of <emphasis role="italic">scheduleInfoCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit + 1]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleInfo</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Schedule-->
    <section xml:id="tc.schedule.schedule" xreflabel="Section 5.3">
      <title>Schedule</title>
      <!--SCHEDULE-3-1-1-->
      <section xml:id="tc.SCHEDULE-3-1-1">
        <title>GET SCHEDULES</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Schedule (ONVIF Schedule Service Specification), GetSchedules command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSchedules
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedules (out <emphasis role="italic">scheduleCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">scheduleCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSchedules</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Schedule list =: <emphasis role="italic">scheduleList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleList1</emphasis> does not contain Schedule  item for each token from <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleList1</emphasis> contains at least two Schedule  items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleList1</emphasis> contains other Schedule  items than listed in <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each Schedule.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">scheduleCompleteList</emphasis> repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetSchedules</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token[0] := <emphasis role="italic">token</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSchedulesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Schedule list =: <emphasis role="italic">scheduleList2</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleList2</emphasis> does not contain only one Schedule item with token equal to <emphasis role="italic">token</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleList2</emphasis>[0] item does not have equal field values to <emphasis role="italic">scheduleCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSchedulesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note: </emphasis>If number of items in <emphasis role="italic">scheduleCompleteList</emphasis> is less than <emphasis role="italic">cap</emphasis>.MaxLimit, then all <emphasis role="italic">scheduleCompleteList</emphasis>.Token items shall be used for the step 6.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step 12.4:
          <itemizedlist>
            <listitem>
              <para>
                Schedule:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                  <listitem>
                    <para>Standart</para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDays<itemizedlist>
                        <listitem>
                          <para>GroupToken</para>
                        </listitem>
                        <listitem>
                          <para>
                            TimeRange<itemizedlist>
                              <listitem>
                                <para>
                                  From
                                </para>
                              </listitem>
                              <listitem>
                                <para>Until</para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-3-1-2-->
      <section xml:id="tc.SCHEDULE-3-1-2">
        <title>GET SCHEDULE LIST - LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Schedule (ONVIF Schedule Service Specification), GetScheduleList command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule List using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Limit :=1</para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule list =: <emphasis role="italic">scheduleList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleList1</emphasis> contains more Schedule  items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule list =: <emphasis role="italic">scheduleList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleList2</emphasis> contains more Schedule items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule list =: <emphasis role="italic">scheduleList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleList3</emphasis> contains more Schedule items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetScheduleListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-3-1-3-->
      <section xml:id="tc.SCHEDULE-3-1-3">
        <title>GET SCHEDULE LIST - START REFERENCE AND LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleInfo (ONVIF Schedule Service Specification), Schedule (ONVIF Schedule Service Specification), GetScheduleList command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule List using StartReference and Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit :=<emphasis role="italic"> cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule list =: <emphasis role="italic">scheduleCompleteList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList1</emphasis> contains more Schedule items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetScheduleList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Schedule list =: <emphasis role="italic">scheduleListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleListPart</emphasis> contains more Schedule items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">scheduleCompleteList1</emphasis> := <emphasis role="italic">scheduleCompleteList1</emphasis> + <emphasis role="italic">scheduleListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList1</emphasis> contains at least two Schedule item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, do the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of ScheduleInfo (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleCompleteList1</emphasis> does not contain all tokens from <emphasis role="italic">scheduleInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleCompleteList1</emphasis> contains tokens other than tokens from <emphasis role="italic">scheduleInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each ScheduleInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">scheduleInfoCompleteList</emphasis> repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">scheduleCompleteList1</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">scheduleInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Skip other steps.</para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Limit := 1</para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule list =: <emphasis role="italic">scheduleCompleteList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList2</emphasis> contains more Schedule items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetScheduleList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Limit := 1</para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Schedule list =: <emphasis role="italic">scheduleListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleListPart</emphasis> contains more Schedule items than 1, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">scheduleCompleteList2</emphasis> := <emphasis role="italic">scheduleCompleteList2</emphasis> + <emphasis role="italic">scheduleListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList2 </emphasis> contains at least two Schedule item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList2 </emphasis> does not contain all schedules from <emphasis role="italic">scheduleCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList2</emphasis> contains schedules other than schedules from <emphasis role="italic">scheduleCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2 do the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of ScheduleInfo (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleCompleteList2</emphasis> does not contain all tokens from <emphasis role="italic">scheduleInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleCompleteList2</emphasis> contains tokens other than tokens from <emphasis role="italic">scheduleInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each ScheduleInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">scheduleInfoCompleteList</emphasis> repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">scheduleCompleteList2</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">scheduleInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Skip other steps.</para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule list =: <emphasis role="italic">scheduleCompleteList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList3</emphasis>  contains more Schedule items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetScheduleList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">limit</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Schedule list =: <emphasis role="italic">scheduleListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleListPart</emphasis> contains more Schedule items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">scheduleCompleteList3</emphasis> := <emphasis role="italic">scheduleCompleteList3</emphasis> + <emphasis role="italic">scheduleListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList3</emphasis> contains at least two Schedule item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList3 </emphasis>does not contain all schedules from <emphasis role="italic">scheduleCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList3</emphasis> contains schedules other than schedules from <emphasis role="italic">scheduleCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of ScheduleInfo (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList3</emphasis> does not contain all tokens from <emphasis role="italic">scheduleInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList3</emphasis> contains tokens other than tokens from <emphasis role="italic">scheduleInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each ScheduleInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">scheduleInfoCompleteList</emphasis> repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleCompleteList3</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">scheduleInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetScheduleListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps 9.4.1, 17.4.1, 29.1:
          <itemizedlist>
            <listitem>
              <para>
                ScheduleInfo:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-3-1-4-->
      <section xml:id="tc.SCHEDULE-3-1-4">
        <title>GET SCHEDULE LIST - NO LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleInfo (ONVIF Schedule Service Specification), Schedule (ONVIF Schedule Service Specification), GetScheduleList command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule List without using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Limit skipped</para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule list =: <emphasis role="italic">scheduleCompleteList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList</emphasis> contains more Schedule items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetScheduleList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Limit skipped </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Schedule list =: <emphasis role="italic">scheduleListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleListPart</emphasis> contains more Schedule items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">scheduleCompleteList </emphasis> := <emphasis role="italic">scheduleCompleteList </emphasis> + <emphasis role="italic">scheduleListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList</emphasis> contains at least two Schedule item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedules  (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList</emphasis> does not contain all schedules from <emphasis role="italic">scheduleInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList</emphasis> contains schedules other than schedules from <emphasis role="italic">scheduleInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each ScheduleInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">scheduleInfoCompleteList</emphasis> repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">scheduleInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetScheduleListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step 12.1:
          <itemizedlist>
            <listitem>
              <para>
                ScheduleInfo:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-3-1-5-->
      <section xml:id="tc.SCHEDULE-3-1-5">
        <title>CREATE SCHEDULE </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleInfo (ONVIF Schedule Service Specification), Schedule (ONVIF Schedule Service Specification), CreateSchedule command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateSchedule
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of schedule and generating of appropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. The DUT shall have enough free storage capacity for one additional Schedule. The DUT shall have enough free storage capacity for one additional SpecialDayGroup if Special Days is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an initial complete list of schedules (out <emphasis role="italic">scheduleCompleteList1</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.SpecialDaysSupported is equal to true, ONVIF Client creates SpecialDayGroup (out <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCreateSpecialDayGroup"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Filter.TopicExpression := &quot;tns1:Configuration/Schedule/Changed&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">CreateSchedule</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Schedule.token := &quot;&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Description := &quot;Test Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Name := &quot;Test Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.SpecialDays skipped if  <emphasis role="italic">cap</emphasis>.SpecialDaysSupported is equal to false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.SpecialDays.GroupToken := <emphasis role="italic">specialDayGroupToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays.TimeRange.From := &quot;22:00:00&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays.TimeRange.Until := &quot;23:00:00&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreateScheduleResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">scheduleToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Until t<emphasis role="italic">imeout1</emphasis> timeout expires, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt-ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Timeout := PT60S</para>
                        </listitem>
                        <listitem>
                          <para>MessageLimit := 1</para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage =: <emphasis role="italic">m</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the TopicExpression item in <emphasis role="italic">m</emphasis> is not equal to &quot;tns1:Configuration/Schedule/Changed&quot;, FAIL the test and go to the step 22.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and does not contain Source.SimpleItem item with Name =: &quot;ScheduleToken&quot; and Value =: <emphasis role="italic">scheduleToken</emphasis>, FAIL the test and go to the step 22.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and contains Source.SimpleItem item with Name =: &quot;ScheduleToken&quot; and Value =: <emphasis role="italic">scheduleToken</emphasis>, go to the step 13.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">operationDelay</emphasis> timeout expires for step 11 without Notification with ScheduleToken source simple item equal to <emphasis role="italic">scheduleToken</emphasis>, FAIL the test and go to the step 22.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a schedule (in <emphasis role="italic">scheduleToken</emphasis>, out <emphasis role="italic">scheduleList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSchedule"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleList</emphasis>[0] item does not have equal field values to values from step 9, FAIL the test and go step 22.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a schedule info (in <emphasis role="italic">scheduleToken</emphasis>, out <emphasis role="italic">scheduleInfoList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfo"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoList</emphasis>[0] item does not have equal field values to values from step 9, FAIL the test and go step 22.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete schedule information list   (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList</emphasis> does not have <emphasis role="italic">scheduleInfo</emphasis>[token = <emphasis role="italic">scheduleToken</emphasis>] item with equal field values to values from step 9, FAIL the test and go step 22.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedules (out <emphasis role="italic">scheduleCompleteList2</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList2</emphasis> does not have <emphasis role="italic">schedule</emphasis>[token = <emphasis role="italic">scheduleToken</emphasis>] item with equal field values to values from step 9, FAIL the test and go step 22.
              </para>
            </listitem>
            <listitem>
              <para>
                For each Schedule.token (<emphasis role="italic">token</emphasis>) from <emphasis role="italic">scheduleCompleteList1</emphasis> do the following:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleCompleteList2</emphasis> does not have <emphasis role="italic">schedule</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and go step 22.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the Schedule (in <emphasis role="italic">scheduleToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSchedule"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                If SpecialDayGroup was created at step 4, ONVIF Client deletes the SpecialDayGroup (in <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSpecialDayGroup"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateScheduleResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis><emphasis role="italic"> operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps 14, 20:
          <itemizedlist>
            <listitem>
              <para>
                Schedule:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                  <listitem>
                    <para>
                      Standard<itemizedlist>
                        <listitem>
                          <para>
                            GroupToken
                          </para>
                        </listitem>
                        <listitem>
                          <para>TimeRange</para>
                          <itemizedlist>
                            <listitem>
                              <para>From</para>
                            </listitem>
                            <listitem>
                              <para>Until</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step 16, 18:
          <itemizedlist>
            <listitem>
              <para>
                ScheduleInfo:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> For comparison Schedule.Standard field values the ONVIF Client compares all iCalendar fields each with other excluding UID field.
        </para>
      </section>
      <!--SCHEDULE-3-1-6-->
      <section xml:id="tc.SCHEDULE-3-1-6">
        <title>MODIFY SCHEDULE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleInfo (ONVIF Schedule Service Specification), Schedule (ONVIF Schedule Service Specification), ModifySchedule command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ModifySchedule
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifiing of schedule and generating of apropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. The DUT shall have enough free storage capacity for one additional Schedule. The DUT shall have enough free storage capacity for one additional SpecialDayGroup if Special Days is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.SpecialDaysSupported is equal to true, ONVIF Client creates SpecialDayGroup (out <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCreateSpecialDayGroup"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates Schedule with Schedule token (out <emphasis role="italic">scheduleToken</emphasis>), with iCalendar value of the Schedule.Standard field (in <emphasis role="italic">scheduleiCalendarValue</emphasis>) and with SpecialDayGroupToken (in <emphasis role="italic">specialDayGroupToken</emphasis>) if Special Days is supported by the DUT by following the procedure mentioned in <xref linkend="Annex_HelperCreateSchedule"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">scheduleiCalendarValue</emphasis> := <emphasis role="italic">scheduleiCalendarValue</emphasis> with changed &lt;hour&gt; in DTSTART and DTEND (increase hour values in 1)
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Filter.TopicExpression := &quot;tns1:Configuration/Schedule/Changed&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ModifySchedule</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Schedule.token := &quot;<emphasis role="italic">scheduleToken</emphasis>&quot;
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Name := &quot;Test Name2&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Description := &quot;Test Description2&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays skipped </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">ModifyScheduleResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Until t<emphasis role="italic">imeout1</emphasis> timeout expires, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt-ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Timeout := PT60S</para>
                        </listitem>
                        <listitem>
                          <para>MessageLimit := 1</para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage =: <emphasis role="italic">m</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the TopicExpression item in <emphasis role="italic">m</emphasis> is not equal to &quot;tns1:Configuration/Schedule/Changed&quot;, FAIL the test and go to the step 23.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and does not contain Source.SimpleItem item with Name =: &quot;ScheduleToken&quot; and Value =: <emphasis role="italic">scheduleToken</emphasis>, FAIL the test and go to the step 23.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and contains Source.SimpleItem item with Name =: &quot;ScheduleToken&quot; and Value =: <emphasis role="italic">scheduleToken</emphasis>, go to the step 14.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">operationDelay</emphasis> timeout expires for step 12 without Notification with ScheduleToken source simple item equal to <emphasis role="italic">scheduleToken</emphasis>, FAIL the test and go to the step 23.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a schedule (in <emphasis role="italic">scheduleToken</emphasis>, out <emphasis role="italic">scheduleList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSchedule"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleList</emphasis>[0] item does not have equal field values to values from step 10, FAIL the test and go step 23.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a schedule info (in <emphasis role="italic">scheduleToken</emphasis>, out <emphasis role="italic">scheduleInfoList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfo"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoList</emphasis>[0] item does not have equal field values to values from step 10, FAIL the test and go step 23.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete schedule information list   (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList</emphasis> does not have <emphasis role="italic">scheduleInfo</emphasis>[token = <emphasis role="italic">scheduleToken</emphasis>] item with equal field values to values from step 10, FAIL the test and go step 23.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedules (out <emphasis role="italic">scheduleCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList</emphasis> does not have <emphasis role="italic">schedule</emphasis>[token = <emphasis role="italic">scheduleToken</emphasis>] item with equal field values to values from step 10, FAIL the test and go step 23.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the Schedule (in <emphasis role="italic">scheduleToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSchedule"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                If SpecialDayGroup was created at step 4, ONVIF Client deletes the SpecialDayGroup (in <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSpecialDayGroup"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ModifyScheduleResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis><emphasis role="italic"> operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps 12, 18:
          <itemizedlist>
            <listitem>
              <para>
                Schedule:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                  <listitem>
                    <para>
                      Standard<itemizedlist>
                        <listitem>
                          <para>
                            GroupToken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TimeRange
                            <itemizedlist>
                              <listitem>
                                <para>From</para>
                              </listitem>
                              <listitem>
                                <para>Until</para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step 16, 18:
          <itemizedlist>
            <listitem>
              <para>
                ScheduleInfo:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> For comparison Schedule.Standard field values the ONVIF Client compares all iCalendar fields each with other excluding UID field.
        </para>
      </section>
      <!--SCHEDULE-3-1-7-->
      <section xml:id="tc.SCHEDULE-3-1-7">
        <title>DELETE SCHEDULE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleInfo (ONVIF Schedule Service Specification), Schedule (ONVIF Schedule Service Specification), DeleteSchedule command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteSchedule
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify deleting  of schedule and generating of apropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. The DUT shall have enough free storage capacity for one additional Schedule. The DUT shall have enough free storage capacity for one additional SpecialDayGroup if Special Days is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedules (out <emphasis role="italic">scheduleCompleteList1</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates Schedule with Schedule token (out <emphasis role="italic">scheduleToken</emphasis>), with iCalendar value of the Schedule.Standard field (in <emphasis role="italic">scheduleiCalendarValue</emphasis>)and with skipped SpecialDayGroup by following the procedure mentioned in <xref linkend="Annex_HelperCreateSchedule"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Filter.TopicExpression := &quot;tns1:Configuration/Schedule/Removed&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">DeleteSchedule</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Schedule.token := &quot;<emphasis role="italic">scheduleToken</emphasis>&quot;
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">DeleteScheduleResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Until t<emphasis role="italic">imeout1</emphasis> timeout expires, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt-ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Timeout := PT60S</para>
                        </listitem>
                        <listitem>
                          <para>MessageLimit := 1</para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage =: <emphasis role="italic">m</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the TopicExpression item in <emphasis role="italic">m</emphasis> is not equal to &quot;tns1:Configuration/Schedule/Removed&quot;, FAIL the test and go to the step 21.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and does not contain Source.SimpleItem item with Name =: &quot;ScheduleToken&quot; and Value =: <emphasis role="italic">scheduleToken</emphasis>, FAIL the test and go to the step 21.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and contains Source.SimpleItem item with Name =: &quot;ScheduleToken&quot; and Value =: <emphasis role="italic">scheduleToken</emphasis>, go to the step 12.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">operationDelay</emphasis> timeout expires for step 10 without Notification with ScheduleToken source simple item equal to <emphasis role="italic">scheduleToken</emphasis>, FAIL the test and go to the step 21.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a schedule (in <emphasis role="italic">scheduleToken</emphasis>, out <emphasis role="italic">scheduleList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSchedule"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleList</emphasis> is not empty, FAIL the test and go step 21.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a schedule info (in <emphasis role="italic">scheduleToken</emphasis>, out <emphasis role="italic">scheduleInfoList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfo"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoList</emphasis> is not empty, FAIL the test and go step 21.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete schedule information list   (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList</emphasis> contains scheduleInfo.[token = <emphasis role="italic">scheduleToken</emphasis>] item, FAIL the test and go step 21.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedules (out <emphasis role="italic">scheduleCompleteList2</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList2</emphasis> contains schedule.[token = <emphasis role="italic">scheduleToken</emphasis>] item, FAIL the test and go step 20.
              </para>
            </listitem>
            <listitem>
              <para>
                For each Schedule.token (<emphasis role="italic">token</emphasis>) from <emphasis role="italic">scheduleCompleteList1</emphasis> do the following:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleCompleteList2</emphasis> does not have <emphasis role="italic">schedule</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and go step 21.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send
                <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis>
                message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">DeleteScheduleResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis><emphasis role="italic"> operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--SCHEDULE-3-1-8-->
      <section xml:id="tc.SCHEDULE-3-1-8">
        <title>GET SCHEDULES WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-8
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Schedule (ONVIF Schedule Service Specification), GetSchedules command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSchedules
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedule info (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">scheduleInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSchedules</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSchedulesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Schedule list =: <emphasis role="italic">schedulesList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">schedulesList </emphasis> is not empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is less than 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleInfo</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token[0]:= <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Token[1]:= <emphasis role="italic">scheduleInfoCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleInfoResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      ScheduleInfo list =: <emphasis role="italic">schedulesList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">schedulesList</emphasis> is empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">schedulesList</emphasis> contains more than one item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">schedulesList</emphasis>[0].token is not equal to <emphasis role="italic">scheduleInfoCompleteList</emphasis>[0].token, FAIL the test.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSchedulesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-3-1-9-->
      <section xml:id="tc.SCHEDULE-3-1-9">
        <title>GET SCHEDULE - TOO MANY ITEMS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Schedule (ONVIF Schedule Service Specification), GetSchedules command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSchedules
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule in case there are more items than MaxLimit in request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedules (out <emphasis role="italic">scheduleCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If  <emphasis role="italic">scheduleCompleteList</emphasis>.token items number is less than <emphasis role="italic">cap</emphasis>.MaxLimit or equal to <emphasis role="italic">cap</emphasis>.MaxLimit, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList </emphasis> := [subset of <emphasis role="italic">scheduleInfoCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit + 1]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSchedules</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-3-1-10-->
      <section xml:id="tc.SCHEDULE-3-1-10">
        <title>CREATE SCHEDULE - NOT EMPTY SCHEDULE TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreateSchedule command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateSchedule
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Create Schedule with not empty token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. The DUT shall have enough free storage capacity for one additional Schedule.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">CreateSchedule</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Schedule.token := &quot;ScheduleToken&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Description := &quot;Test Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Name := &quot;Test Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-3-1-11-->
      <section xml:id="tc.SCHEDULE-3-1-11">
        <title>CREATE SCHEDULE - TOO MANY TIME PERIODS PER DAY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-11
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreateSchedule command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateSchedule
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Create Schedule with maximum number of time periods per day and with to many time periods per day.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. The DUT shall have enough free storage capacity for one additional Schedule.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>If MaxTimePeriodsPerDay is equal to one, go to step 10.</para>
            </listitem>
            <listitem>
              <para>
                Set  the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      numberPeriodsPerDay := <emphasis role="italic">cap</emphasis>.MaxTimePeriodsPerDay
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) with maximum number of time periods per day (in <emphasis role="italic">numberPeriodsPerDay</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalTimePeriodsGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">CreateSchedule</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Schedule.token := &quot;&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Description := &quot;Test Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Name := &quot;Test Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreateScheduleResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">scheduleTok</emphasis>en
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the Schedule (in <emphasis role="italic">scheduleToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSchedule"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxTimePeriodsPerDay value is more than 720, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set  the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">numberPeriodsPerDay</emphasis> := <emphasis role="italic">cap</emphasis>.MaxTimePeriodsPerDay + 1
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) with too many number of time periods per day (in numberPeriodsPerDay) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalTimePeriodsGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">CreateSchedule</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Schedule.token := &quot;&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Description := &quot;Test Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Name := &quot;Test Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter: CapabilityViolated\ter:MaxTimePeriodsPerDay</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateScheduleResponse</emphasis> to schedule creation with maximum number of time periods per day
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter: CapabilityViolated\ter:MaxTimePeriodsPerDay</emphasis> SOAP 1.2 fault to schedule creation with too  many time periods per day.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends other SOAP 1.2 fault message than specified, log WARNING message, and PASS the test.
        </para>
      </section>
      <!--SCHEDULE-3-1-12-->
      <section xml:id="tc.SCHEDULE-3-1-12">
        <title>CREATE SCHEDULE - INVALID TIME RANGE INTERVAL</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> TimePeriod (ONVIF Schedule Service Specification), CreateSchedule command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateSchedule
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Create Schedule with time range interval where the end time is less than the start time.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. The DUT shall have enough free storage capacity for one additional Schedule. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported. The DUT shall have enough free storage capacity for one additional SpecialDayGroup.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates SpecialDayGroup (out <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCreateSpecialDayGroup"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">CreateSchedule</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Schedule.token := &quot;&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Description := &quot;Test Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Name := &quot;Test Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays.GroupToken := specialDayGroupToken </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays.TimeRange.From := &quot;10:00:00&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays.TimeRange.Until := &quot;09:00:00&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the SpecialDayGroup (in <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSpecialDayGroup"/> to restore DUT configuration.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends other SOAP 1.2 fault message than specified, log WARNING message, and PASS the test.
        </para>
      </section>
      <!--SCHEDULE-3-1-13-->
      <section xml:id="tc.SCHEDULE-3-1-13">
        <title>MODIFY SCHEDULE WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-13
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ModifySchedule command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ModifySchedule
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifiing of schedule with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedule info (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">scheduleInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ModifySchedule</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Schedule.token := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Name := &quot;Test Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Description := &quot;Test Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays skipped </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends other SOAP 1.2 fault message than specified, log WARNING message, and PASS the test.
        </para>
      </section>
      <!--SCHEDULE-3-1-14-->
      <section xml:id="tc.SCHEDULE-3-1-14">
        <title>MODIFY SCHEDULE - TOO MANY TIME PERIODS PER DAY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-14
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ModifySchedule command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ModifySchedule
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Modify Schedule with maximum number of time periods per day and with to many time periods per day.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. The DUT shall have enough free storage capacity for one additional Schedule.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates Schedule with Schedule token (out <emphasis role="italic">scheduleToken</emphasis>), with iCalendar value of the Schedule.Standard field (in <emphasis role="italic">scheduleiCalendarValue</emphasis>) and with skipped SpecialDayGroup element by following the procedure mentioned in <xref linkend="Annex_HelperCreateSchedule"/>.
              </para>
            </listitem>
            <listitem>
              <para>If MaxTimePeriodsPerDay is equal to one, go to step 11.</para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">numberPeriodsPerDay</emphasis>  := <emphasis role="italic">cap</emphasis>.MaxTimePeriodsPerDay
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) with maximum number of time periods per day (in <emphasis role="italic">numberPeriodsPerDay</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalTimePeriodsGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ModifySchedule</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Schedule.token := <emphasis role="italic">scheduleToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Description := &quot;Test Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Name := &quot;Test Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays skipped </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">ModifyScheduleResponse</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxTimePeriodsPerDay value is more than 720, go to step 16.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">numberPeriodsPerDay</emphasis>  := <emphasis role="italic">cap</emphasis>.MaxTimePeriodsPerDay + 1
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) with too many number of time periods per day (in <emphasis role="italic">numberPeriodsPerDay</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalTimePeriodsGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ModifySchedule</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Schedule.token := <emphasis role="italic">scheduleToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Description := &quot;Test Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Name := &quot;Test Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays skipped </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter: CapabilityViolated\ter:MaxTimePeriodsPerDay</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the Schedule (in <emphasis role="italic">scheduleToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSchedule"/> to restore DUT configuration.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ModifyScheduleResponse</emphasis> to schedule modifying with maximum number of time periods per day
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter: CapabilityViolated\ter:MaxTimePeriodsPerDay</emphasis> SOAP 1.2 fault to schedule modifying with too  many time periods per day.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends other SOAP 1.2 fault message than specified, log WARNING message, and PASS the test.
        </para>
      </section>
      <!--SCHEDULE-3-1-15-->
      <section xml:id="tc.SCHEDULE-3-1-15">
        <title>MODIFY SCHEDULE - INVALID TIME RANGE INTERVAL</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-15
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> TimePeriod (ONVIF Schedule Service Specification), ModifySchedule command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ModifySchedule
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Modify Schedule with time range interval where the end time is less than the start time.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. The DUT shall have enough free storage capacity for one additional Schedule. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported. The DUT shall have enough free storage capacity for one additional SpecialDayGroup.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates SpecialDayGroup (out <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCreateSpecialDayGroup"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates Schedule with Schedule token (out <emphasis role="italic">scheduleToken</emphasis>), with iCalendar value of the Schedule.Standard field (in <emphasis role="italic">scheduleiCalendarValue</emphasis>) and with SpecialDayGroupToken (in <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCreateSchedule"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ModifySchedule</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Schedule.token := <emphasis role="italic">scheduleToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Description := &quot;Test Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Name := &quot;Test Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.SpecialDays.GroupToken := <emphasis role="italic">specialDayGroupToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays.TimeRange.From := &quot;10:00:00&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays.TimeRange.Until := &quot;09:00:00&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the Schedule (in <emphasis role="italic">scheduleToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSchedule"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the SpecialDayGroup (in <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSpecialDayGroup"/> to restore DUT configuration.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends other SOAP 1.2 fault message than specified, log WARNING message, and PASS the test.
        </para>
      </section>
      <!--SCHEDULE-3-1-16-->
      <section xml:id="tc.SCHEDULE-3-1-16">
        <title>DELETE SCHEDULE WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-16
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DeleteSchedule command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteSchedule
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify deleting of schedule with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedule info (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:<itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">scheduleInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">DeleteSchedule</emphasis> request with parameters<itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:ReferenceNotFound</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:ReferenceNotFound</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT sends other SOAP 1.2 fault message than specified, log WARNING message, and PASS the test.
        </para>
      </section>
      <!--SCHEDULE-3-1-17-->
      <section xml:id="tc.SCHEDULE-3-1-17">
        <title>SET NEW SCHEDULE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-17
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleInfo (ONVIF Schedule Service Specification), Schedule (ONVIF Schedule Service Specification), SetSchedule command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetSchedule, tns1:Configuration/Schedule/Changed
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of schedule using SetSchedule command and generating of appropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. Client Supplied Token is supported by the DUT. The DUT shall have enough free storage capacity for one additional Schedule. The DUT shall have enough free storage capacity for one additional SpecialDayGroup, if Special Days is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Schedule Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - Schedule Service capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of schedules by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">initialScheduleCompleteList</emphasis> - schedule complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.SpecialDaysSupported = true:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client creates special day group by following the procedure mentioned in <xref linkend="Annex_HelperCreateSpecialDayGroup"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">specialDayGroupToken</emphasis> - token of new special day group
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">cap</emphasis> - Schedule Service capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">scheduleiCalendarValue</emphasis> - iCalendar value for the Schedule.Standard field
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">scheduleToken</emphasis> := token that differs from tokens listed in <emphasis role="italic">initialScheduleCompleteList</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Schedule/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">schedule</emphasis> :=
                <itemizedlist>
                  <listitem>
                    <para>
                      Schedule.token := <emphasis role="italic">scheduleToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Description := "Test Description"</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Name := "Test Name"</para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">cap</emphasis>.SpecialDaysSupported = true:
                      <itemizedlist>
                        <listitem>
                          <para>
                            Schedule.SpecialDays.GroupToken := <emphasis role="italic">specialDayGroupToken</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>Schedule.SpecialDays.TimeRange.From := "22:00:00"</para>
                        </listitem>
                        <listitem>
                          <para>Schedule.SpecialDays.TimeRange.Until := "23:00:00"</para>
                        </listitem>
                      </itemizedlist>
                    </para>
                    <para>
                      otherwise:
                      <itemizedlist>
                        <listitem>
                          <para>
                            Schedule.SpecialDays is skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">SetSchedule</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Schedule := <emphasis role="italic">schedule</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetScheduleResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Schedule/Changed</emphasis> event for the specified Schedule token by following the procedure mentioned in <xref linkend="Annex_HelperPullScheduleChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">scheduleToken</emphasis> - Schedule token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a schedule by following the procedure mentioned in <xref linkend="Annex_HelperGetSchedule"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">scheduleToken</emphasis> - schedule token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">scheduleList</emphasis> - the list of schedules
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-3-1-17.CompareSchedule1">
              <para>
                If <emphasis role="italic">scheduleList</emphasis>[0] item does not have equal to <emphasis role="italic">schedule</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a schedule info by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">scheduleToken</emphasis> - schedule token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">scheduleInfoList</emphasis> - the list of schedules info
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-3-1-17.CompareScheduleInfo1">
              <para>
                If <emphasis role="italic">scheduleInfoList</emphasis>[0] item does not have equal fields with <emphasis role="italic">schedule</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of schedules info by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">scheduleInfoCompleteList</emphasis> - schedule info complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-3-1-17.CompareScheduleInfo2">
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList</emphasis> does not have ScheduleInfo[token = <emphasis role="italic">scheduleToken</emphasis>] item with equal fields with <emphasis role="italic">schedule</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of schedules by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">scheduleCompleteList</emphasis> - schedule complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-3-1-17.CompareSchedule2">
              <para>
                If <emphasis role="italic">scheduleCompleteList</emphasis> does not have Schedule[token = <emphasis role="italic">scheduleToken</emphasis>] item with equal fields with <emphasis role="italic">schedule</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each Schedule.token (<emphasis role="italic">token</emphasis>) from <emphasis role="italic">initialScheduleCompleteList</emphasis> do the following:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleCompleteList</emphasis> does not have Schedule[token = <emphasis role="italic">token</emphasis>] item, FAIL the test, restore the DUT state, and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the Schedule by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSchedule"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">scheduleToken</emphasis> - schedule token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.SpecialDaysSupported = true:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client deletes special day group by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSpecialDayGroup"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">specialDayGroupToken</emphasis> - special day group token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetScheduleResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.SCHEDULE-3-1-17.CompareSchedule1"/> and <xref linkend="tc.SCHEDULE-3-1-17.CompareSchedule2"/>:
          <itemizedlist>
            <listitem>
              <para>
                Schedule:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                  <listitem>
                    <para>
                      Standard (ONVIF Client compares all iCalendar fields each with other excluding UID field)
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDays
                      <itemizedlist>
                        <listitem>
                          <para>
                            GroupToken
                          </para>
                        </listitem>
                        <listitem>
                          <para>TimeRange</para>
                          <itemizedlist>
                            <listitem>
                              <para>From</para>
                            </listitem>
                            <listitem>
                              <para>Until</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.SCHEDULE-3-1-17.CompareScheduleInfo1"/> and <xref linkend="tc.SCHEDULE-3-1-17.CompareScheduleInfo2"/>:
          <itemizedlist>
            <listitem>
              <para>
                ScheduleInfo:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-3-1-18-->
      <section xml:id="tc.SCHEDULE-3-1-18">
        <title>SET SCHEDULE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-3-1-18
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleInfo (ONVIF Schedule Service Specification), Schedule (ONVIF Schedule Service Specification), SetSchedule command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetSchedule, tns1:Configuration/Schedule/Changed
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifiing of schedule using SetSchedule command and generating of apropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. Client Supplied Token is supported by the DUT. The DUT shall have enough free storage capacity for one additional Schedule. The DUT shall have enough free storage capacity for one additional SpecialDayGroup if Special Days is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Schedule Service Capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - Schedule Service capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">cap</emphasis> - Schedule Service capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">scheduleiCalendarValue</emphasis> - iCalendar value for the Schedule.Standard field
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.SpecialDaysSupported = true:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client creates special day group by following the procedure mentioned in <xref linkend="Annex_HelperCreateSpecialDayGroup"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            out <emphasis role="italic">specialDayGroupToken</emphasis> - token of new special day group
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates schedule by following the procedure mentioned in <xref linkend="Annex_HelperCreateSchedule"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">scheduleToken</emphasis> - token of new schedule
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">scheduleiCalendarValue</emphasis> - iCalendar value for the Schedule.Standard field
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">specialDayGroupToken</emphasis> - special day group token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">scheduleiCalendarValue</emphasis> := <emphasis role="italic">scheduleiCalendarValue</emphasis> with changed "hour" in DTSTART and DTEND (increase hour values by 1)
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Schedule/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">schedule</emphasis> :=
                <itemizedlist>
                  <listitem>
                    <para>
                      Schedule.token := <emphasis role="italic">scheduleToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Description := "Test Description2"</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Name := "Test Name2"</para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Schedule.SpecialDays is skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetScheduleResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Schedule/Changed</emphasis> event for the specified Schedule token by following the procedure mentioned in <xref linkend="Annex_HelperPullScheduleChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">scheduleToken</emphasis> - Schedule token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a schedule by following the procedure mentioned in <xref linkend="Annex_HelperGetSchedule"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">scheduleToken</emphasis> - schedule token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">scheduleList</emphasis> - the list of schedules
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-3-1-18.CompareSchedule1">
              <para>
                If <emphasis role="italic">scheduleList</emphasis>[0] item does not have equal to <emphasis role="italic">schedule</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a schedule info by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">scheduleToken</emphasis> - schedule token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">scheduleInfoList</emphasis> - the list of schedules info
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-3-1-18.CompareScheduleInfo1">
              <para>
                If <emphasis role="italic">scheduleInfoList</emphasis>[0] item does not have equal fields with <emphasis role="italic">schedule</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of schedules info by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">scheduleInfoCompleteList</emphasis> - schedule info complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-3-1-18.CompareScheduleInfo2">
              <para>
                If <emphasis role="italic">scheduleInfoCompleteList</emphasis> does not have ScheduleInfo[token = <emphasis role="italic">scheduleToken</emphasis>] item with equal fields with <emphasis role="italic">schedule</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of schedules by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">scheduleCompleteList</emphasis> - schedule complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-3-1-18.CompareSchedule2">
              <para>
                If <emphasis role="italic">scheduleCompleteList</emphasis> does not have Schedule[token = <emphasis role="italic">scheduleToken</emphasis>] item with equal fields with <emphasis role="italic">schedule</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the Schedule by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSchedule"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">scheduleToken</emphasis> - schedule token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.SpecialDaysSupported = true:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client deletes special day group by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSpecialDayGroup"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">specialDayGroupToken</emphasis> - special day group token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetScheduleResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.SCHEDULE-3-1-18.CompareSchedule1"/> and <xref linkend="tc.SCHEDULE-3-1-18.CompareSchedule2"/>:
          <itemizedlist>
            <listitem>
              <para>
                Schedule:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                  <listitem>
                    <para>
                      Standard (ONVIF Client compares all iCalendar fields each with other excluding UID field)
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDays
                      <itemizedlist>
                        <listitem>
                          <para>
                            GroupToken
                          </para>
                        </listitem>
                        <listitem>
                          <para>TimeRange</para>
                          <itemizedlist>
                            <listitem>
                              <para>From</para>
                            </listitem>
                            <listitem>
                              <para>Until</para>
                            </listitem>
                          </itemizedlist>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.SCHEDULE-3-1-18.CompareScheduleInfo1"/> and <xref linkend="tc.SCHEDULE-3-1-18.CompareScheduleInfo2"/>:
          <itemizedlist>
            <listitem>
              <para>
                ScheduleInfo:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Special Day Group Info-->
    <section xml:id="tc.schedule.special_day_group_info" xreflabel="Section 5.4">
      <title>Special Day Group Info</title>
      <!--SCHEDULE-4-1-1-->
      <section xml:id="tc.SCHEDULE-4-1-1">
        <title>GET SPECIAL DAY GROUP INFO</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-4-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroupInfo (ONVIF Schedule Service Specification), GetSpecialDayGroupInfo command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSpecialDayGroupInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Specia Day Group Info.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of special day group information (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:<itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfo</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SpecialDayGroupInfo list =: <emphasis role="italic">specialDayGroupInfoList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupInfoList1</emphasis> does not contain SpecialDayGroupInfo item for each token from <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupInfoList1</emphasis> contains at least two SpecialDayGroupInfo items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupInfoList1</emphasis> contains other SpecialDayGroupInfo items than listed in <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each SpecialDayGroupInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>  repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfo</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token[0] := <emphasis role="italic">token</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SpecialDayGroupInfo list =: <emphasis role="italic">specialDayGroupInfoList2</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDayGroupInfoList2</emphasis> does not contain only one SpecialDayGroupInfo item with token equal to <emphasis role="italic">token</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDayGroupInfoList2</emphasis>[0] item is not equal to <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSpecialDayGroupInfoResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note: </emphasis>If number of items in <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> is less than <emphasis role="italic">cap</emphasis>.MaxLimit, then all <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>.Token items shall be used for the step 6.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step 12.4:
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                SpecialDayGroupInfo:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-4-1-2-->
      <section xml:id="tc.SCHEDULE-4-1-2">
        <title>GET SPECIAL DAY GROUP INFO LIST - LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-4-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroupInfo (ONVIF Schedule Service Specification), GetSpecialDayGroupInfoList command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSpecialDayGroupInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Special Day Group Info List using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Limit :=1</para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroupInfo list =: <emphasis role="italic">specialDayGroupInfoList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupInfoList1</emphasis> contains more SpecialDayGroupInfo items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroupInfo list =: <emphasis role="italic">specialDayGroupInfoList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupInfoList2</emphasis> contains more SpecialDayGroupInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroupInfo list =: <emphasis role="italic">specialDayGroupInfoList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupInfoList3</emphasis> contains more SpecialDayGroupInfo items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-4-1-3-->
      <section xml:id="tc.SCHEDULE-4-1-3">
        <title>GET SPECIAL DAY GROUP INFO LIST - START REFERENCE AND LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-4-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroupInfo (ONVIF Schedule Service Specification), GetSpecialDayGroupInfoList command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSpecialDayGroupInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Special Day Group Info List using StartReference and Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit :=<emphasis role="italic"> cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroupInfo list =: <emphasis role="italic">SpecialDayGroupInfoCompleteList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList1</emphasis> contains more SpecialDayGroupInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfoList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SpecialDayGroupInfo list =: <emphasis role="italic">SpecialDayGroupInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">SpecialDayGroupInfoListPart</emphasis> contains more SpecialDayGroupInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">SpecialDayGroupInfoCompleteList1</emphasis> := <emphasis role="italic">SpecialDayGroupInfoCompleteList1</emphasis> + <emphasis role="italic">SpecialDayGroupInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList1</emphasis> contains at least two SpecialDayGroupInfo item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Limit := 1</para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroupInfo list =: <emphasis role="italic">SpecialDayGroupInfoCompleteList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList2</emphasis> contains more SpecialDayGroupInfo items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfoList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Limit := 1</para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SpecialDayGroupInfo list =: <emphasis role="italic">SpecialDayGroupInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">SpecialDayGroupInfoListPart</emphasis> contains more SpecialDayGroupInfo items than 1, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">SpecialDayGroupInfoCompleteList2</emphasis> := <emphasis role="italic">SpecialDayGroupInfoCompleteList2</emphasis> + <emphasis role="italic">SpecialDayGroupInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList2 </emphasis> contains at least two SpecialDayGroupInfo item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList2 </emphasis> does not contain all SpecialDayGroupInfo items from <emphasis role="italic">SpecialDayGroupInfoCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList2</emphasis> contains SpecialDayGroupInfo item other than SpecialDayGroupInfo items from <emphasis role="italic">SpecialDayGroupInfoCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroupInfo list =: <emphasis role="italic">SpecialDayGroupInfoCompleteList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList3</emphasis>  contains more SpecialDayGroupInfo items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference is not null, repeat the following steps:</emphasis><orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfoList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">limit</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SpecialDayGroupInfo list =: <emphasis role="italic">SpecialDayGroupInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">SpecialDayGroupInfoListPart</emphasis> contains more SpecialDayGroupInfo items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">SpecialDayGroupInfoCompleteList3</emphasis> := <emphasis role="italic">SpecialDayGroupInfoCompleteList3</emphasis> + <emphasis role="italic">SpecialDayGroupInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList3</emphasis> contains at least two SpecialDayGroupInfo item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList3 </emphasis>does not contain all SpecialDayGroupInfo items from <emphasis role="italic">SpecialDayGroupInfoCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList3</emphasis> contains SpecialDayGroupInfo item other than SpecialDayGroupInfo items from <emphasis role="italic">SpecialDayGroupInfoCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-4-1-4-->
      <section xml:id="tc.SCHEDULE-4-1-4">
        <title>GET SPECIAL DAY GROUP INFO LIST - NO LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-4-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroupInfo (ONVIF Schedule Service Specification), GetSpecialDayGroupInfoList command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSpecialDayGroupInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Special Day Group Info List without using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfoList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Limit  skipped</para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroupInfo list =: <emphasis role="italic">SpecialDayGroupInfoCompleteList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList</emphasis> contains more SpecialDayGroupInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfoList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Limit skipped </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SpecialDayGroupInfo list =: <emphasis role="italic">SpecialDayGroupInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">SpecialDayGroupInfoListPart</emphasis> contains more SpecialDayGroupInfo items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">SpecialDayGroupInfoCompleteList </emphasis> := <emphasis role="italic">SpecialDayGroupInfoCompleteList </emphasis> + <emphasis role="italic">SpecialDayGroupInfoListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList</emphasis> contains at least two SpecialDayGroupInfo item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList</emphasis> contains more SpecialDayGroupInfo items than <emphasis role="italic">cap</emphasis>.MaxSpecialDayGroups, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-4-1-5-->
      <section xml:id="tc.SCHEDULE-4-1-5">
        <title>GET SPECIAL DAY GROUP INFO WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-4-1-5
        </para>
        <para>
          <emphasis role="bold">ONVIF Core Specification Coverage: </emphasis>SpecialDayGroupInfo (ONVIF Schedule Service Specification), GetSpecialDayGroupInfo command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSpecialDayGroupInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Special Day Group Info with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of special day group information (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">SpecialDayGroupInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfo</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SpecialDayGroupInfo list =: <emphasis role="italic">SpecialDayGroupInfoList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoList </emphasis> is not empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is less than 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfo</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token[0]:= <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Token[1]:= <emphasis role="italic">SpecialDayGroupInfoCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SpecialDayGroupInfo list =: <emphasis role="italic">SpecialDayGroupInfoList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoList</emphasis> is empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoList</emphasis> contains more than one item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoList</emphasis>[0].token does not equal to  <emphasis role="italic">SpecialDayGroupInfoCompleteList</emphasis>[0].token, FAIL the test.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSpecialDayGroupInfoResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-4-1-6-->
      <section xml:id="tc.SCHEDULE-4-1-6">
        <title>GET SPECIAL DAY GROUP INFO - TOO MANY ITEMS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-4-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroupInfo (ONVIF Schedule Service Specification), GetSpecialDayGroupInfo command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSpecialDayGroupInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Special Day Group Info in case there are more items than MaxLimit in request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of special day group information (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If  <emphasis role="italic">SpecialDayGroupInfoCompleteList</emphasis>.token items number is less than <emphasis role="italic">cap</emphasis>.MaxLimit or equal to <emphasis role="italic">cap</emphasis>.MaxLimit, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList </emphasis> := [subset of <emphasis role="italic">SpecialDayGroupInfoCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit + 1]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfo</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Special Day Group-->
    <section xml:id="tc.schedule.special_day_group" xreflabel="Section 5.5">
      <title>Special Day Group</title>
      <!--SCHEDULE-5-1-1-->
      <section xml:id="tc.SCHEDULE-5-1-1">
        <title>GET SPECIAL DAY GROUPS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroup (ONVIF Schedule Service Specification), GetSpecialDayGroups command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSpecialDayGroups
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Special Day Groups.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of Special Day Groups (out <emphasis role="italic">specialDayGroupCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperSpecialDayGroupList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:<itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">specialDayGroupCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroup</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SpecialDayGroup list =: <emphasis role="italic">specialDayGroupList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupList1</emphasis> does not contain SpecialDayGroup item for each token from <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupList1</emphasis> contains at least two SpecialDayGroup items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupList1</emphasis> contains other SpecialDayGroup items than listed in <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each SpecialDayGroup.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">specialDayGroupCompleteList</emphasis>  repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetSpecialDayGroup</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token[0] := <emphasis role="italic">token</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSpecialDayGroupResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SpecialDayGroup list =: <emphasis role="italic">specialDayGroupList2</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDayGroupList2</emphasis> does not contain only one SpecialDayGroup item with token equal to <emphasis role="italic">token</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDayGroupList2</emphasis>[0] item is not equal to <emphasis role="italic">specialDayGroupCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSpecialDayGroupResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note: </emphasis>If number of items in <emphasis role="italic">specialDayGroupCompleteList</emphasis> is less than <emphasis role="italic">cap</emphasis>.MaxLimit, then all <emphasis role="italic">specialDayGroupCompleteList</emphasis>.Token items shall be used for the step 6.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step 12.4:
        </para>
        <para>
          <itemizedlist>
            <listitem>
              <para>
                SpecialDayGroup:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-5-1-2-->
      <section xml:id="tc.SCHEDULE-5-1-2">
        <title>GET SPECIAL DAY GROUP LIST - LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroup (ONVIF Schedule Service Specification), GetSpecialDayGroupList command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSpecialDayGroupList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get SpecialDayGroup List using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Limit :=1</para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup list =: <emphasis role="italic">specialDayGroupList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupList1</emphasis> contains more SpecialDayGroup items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup list =: <emphasis role="italic">specialDayGroupList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupList2</emphasis> contains more SpecialDayGroup items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup list =: <emphasis role="italic">specialDayGroupList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupList3</emphasis> contains more SpecialDayGroup items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-5-1-3-->
      <section xml:id="tc.SCHEDULE-5-1-3">
        <title>GET SPECIAL DAY GROUP LIST - START REFERENCE AND LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroup (ONVIF Schedule Service Specification), GetSpecialDayGroupList command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSpecialDayGroupList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get SpecialDayGroup List using StartReference and Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit :=<emphasis role="italic"> cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup list =: <emphasis role="italic">SpecialDayGroupCompleteList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupCompleteList1</emphasis> contains more SpecialDayGroup items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SpecialDayGroup list =: <emphasis role="italic">SpecialDayGroupListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">SpecialDayGroupListPart</emphasis> contains more SpecialDayGroup items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">SpecialDayGroupCompleteList1</emphasis> := <emphasis role="italic">SpecialDayGroupCompleteList1</emphasis> + <emphasis role="italic">SpecialDayGroupListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupCompleteList1</emphasis> contains at least two SpecialDayGroup item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, do the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of SpecialDayGroupInfo (out specialDayGroupInfoCompleteList) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDayGroupCompleteList1</emphasis> does not contain all tokens from <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDayGroupCompleteList1</emphasis> contains tokens other than tokens from <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each SpecialDayGroupInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">specialDayGroupCompleteList1</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Skip other steps.</para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Limit := 1</para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup list =: <emphasis role="italic">SpecialDayGroupCompleteList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupCompleteList2</emphasis> contains more SpecialDayGroup items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Limit := 1</para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SpecialDayGroup list =: <emphasis role="italic">SpecialDayGroupListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">SpecialDayGroupListPart</emphasis> contains more SpecialDayGroup items than 1, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">SpecialDayGroupCompleteList2</emphasis> := <emphasis role="italic">SpecialDayGroupCompleteList2</emphasis> + <emphasis role="italic">SpecialDayGroupListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupCompleteList2 </emphasis> contains at least two SpecialDayGroup item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupCompleteList2 </emphasis> does not contain all SpecialDayGroup items from <emphasis role="italic">SpecialDayGroupCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupCompleteList2</emphasis> contains SpecialDayGroup item other than SpecialDayGroup items from <emphasis role="italic">SpecialDayGroupCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2, do the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of SpecialDayGroupInfo (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDayGroupCompleteList2</emphasis> does not contain all tokens from <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDayGroupCompleteList2</emphasis> contains tokens other than tokens from <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each SpecialDayGroupInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">specialDayGroupCompleteList2</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>Skip other steps.</para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup list =: <emphasis role="italic">SpecialDayGroupCompleteList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupCompleteList3</emphasis>  contains more SpecialDayGroup items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference is not null, repeat the following steps:</emphasis><orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">limit</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SpecialDayGroup list =: <emphasis role="italic">SpecialDayGroupListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">SpecialDayGroupListPart</emphasis> contains more SpecialDayGroup items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">SpecialDayGroupCompleteList3</emphasis> := <emphasis role="italic">SpecialDayGroupCompleteList3</emphasis> + <emphasis role="italic">SpecialDayGroupListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupCompleteList3</emphasis> contains at least two SpecialDayGroup item with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupCompleteList3 </emphasis>does not contain all SpecialDayGroup items from <emphasis role="italic">SpecialDayGroupCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupCompleteList3</emphasis> contains SpecialDayGroup item other than SpecialDayGroup items from <emphasis role="italic">SpecialDayGroupCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of SpecialDayGroupInfo (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupCompleteList3</emphasis> does not contain all tokens from <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupCompleteList2</emphasis> contains tokens other than tokens from <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each SpecialDayGroupInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="3.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDayGroupCompleteList3</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps 9.4.1, 17.4.1, 29.1:<itemizedlist>
            <listitem>
              <para>
                SpecialDayGroupInfo:<itemizedlist>
                  <listitem>
                    <para>token</para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-5-1-4-->
      <section xml:id="tc.SCHEDULE-5-1-4">
        <title>GET SPECIAL DAY GROUP LIST - NO LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroup (ONVIF Schedule Service Specification), GetSpecialDayGroupList command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSpecialDayGroupList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get SpecialDayGroup  List without using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupList</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Limit  skipped</para>
                  </listitem>
                  <listitem>
                    <para>StartReference skipped</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup list =: <emphasis role="italic">SpecialDayGroupCompleteList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupCompleteList</emphasis> contains more SpecialDayGroup items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupList</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Limit skipped </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SpecialDayGroup list =: <emphasis role="italic">SpecialDayGroupListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">SpecialDayGroupListPart</emphasis> contains more SpecialDayGroup items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">SpecialDayGroupCompleteList </emphasis> := <emphasis role="italic">SpecialDayGroupCompleteList </emphasis> + <emphasis role="italic">SpecialDayGroupListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupCompleteList</emphasis> contains at least two SpecialDayGroup item with equal token, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of SpecialDayGroupInfo (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupCompleteList</emphasis> does not contain all tokens from <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupCompleteList</emphasis> contains tokens other than tokens from <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each SpecialDayGroupInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDayGroupCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps 12.1:<itemizedlist>
            <listitem>
              <para>
                SpecialDayGroupInfo:<itemizedlist>
                  <listitem>
                    <para>token</para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-5-1-5-->
      <section xml:id="tc.SCHEDULE-5-1-5">
        <title>CREATE SPECIAL DAY GROUP </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroup (ONVIF Schedule Service Specification), CreateSpecialDayGroup command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateSpecialDayGroup
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of special day group and generating of appropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported. The DUT shall have enough free storage capacity for one additional SpecialDayGroup.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an initial complete list of SpecialDaysGroup (out <emphasis role="italic">specialDayGroupCompleteList1</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperSpecialDayGroupList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates Unique Identifier value for UID field in iCalendar (out <emphasis role="italic">uid</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperUIDiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:<itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">days</emphasis> := &quot;BEGIN:VCALENDAR
                    </para>
                    <para>BEGIN:VEVENT</para>
                    <para>SUMMARY:Test special days</para>
                    <para>DTSTART:&lt;current year&gt;&lt;current month&gt;&lt;current day&gt;T000000</para>
                    <para>DTEND:&lt;the date of the next day&gt;T000000</para>
                    <para>
                      UID:<emphasis role="italic">uid</emphasis>
                    </para>
                    <para>END:VEVENT</para>
                    <para>END:VCALENDAR&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Filter.TopicExpression := &quot;tns1:Configuration/SpecialDays/Changed&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">CreateSpecialDayGroup</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>SpecialDayGroup.token := &quot;&quot;</para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Name := &quot;Test SpecialDayGroup Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Description := &quot;Test SpecialDayGroup Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup.Days  := <emphasis role="italic">days</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreateSpecialDayGroupResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">SpecialDayGroupToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Until t<emphasis role="italic">imeout1</emphasis> timeout expires, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt-ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Timeout := PT60S</para>
                        </listitem>
                        <listitem>
                          <para>MessageLimit := 1</para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage =: <emphasis role="italic">m</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the TopicExpression item in <emphasis role="italic">m</emphasis> is not equal to &quot;tns1:Configuration/SpecialDays/Changed&quot;, FAIL the test and go to the step 21.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and does not contain Source.SimpleItem item with Name =: &quot;SpecialDaysToken&quot; and Value =: <emphasis role="italic">SpecialDayGroupToken</emphasis>, FAIL the test and go to the step 21.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and contains Source.SimpleItem item with Name =: &quot;SpecialDayGroupToken&quot; and Value =: <emphasis role="italic">SpecialDayGroupToken</emphasis>, go to the step 12.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">operationDelay</emphasis> timeout expires for step 10 without Notification with SpecialDaysToken  source simple item equal to <emphasis role="italic">specialDayGroupToken</emphasis>, FAIL the test and go to the step 21.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a SpecialDayGroup (in <emphasis role="italic">specialDayGroupToken</emphasis>, out <emphasis role="italic">specialDayGroupList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroup"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupList</emphasis>[0] item does not have equal field values to values from step 8, FAIL the test and go step 21.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a SpecialDayGroup info (in <emphasis role="italic">specialDayGroupToken</emphasis>, out <emphasis role="italic">specialDayGroupInfoList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfo"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupInfoList</emphasis>[0] item does not have equal field values to values from step 8, FAIL the test and go step 21.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete SpecialDayGroup information list (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> does not have specialDayGroupInfo[token = <emphasis role="italic">specialDayGroupToken</emphasis>] item with equal field values to values from step 8, FAIL the test and go step 21.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of SpecialDayGroups (out <emphasis role="italic">specialDayGroupCompleteList2</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperSpecialDayGroupList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupCompleteList2</emphasis> does not have SpecialDayGroup[token = <emphasis role="italic">specialDayGroupToken</emphasis>] item with equal field values to values from step 8, FAIL the test and go step 21.
              </para>
            </listitem>
            <listitem>
              <para>
                For each SpecialDayGroup.token (<emphasis role="italic">token</emphasis>) from <emphasis role="italic">specialDayGroupCompleteList1</emphasis> do the following:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDayGroupCompleteList2</emphasis> does not have SpecialDayGroup[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and go step 21.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the SpecialDayGroup (in <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSpecialDayGroup"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateSpecialDayGroupResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis><emphasis role="italic"> operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps 13, 19:
          <itemizedlist>
            <listitem>
              <para>
                SpecialDayGroup:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                  <listitem>
                    <para>Days </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step 15, 17:
          <itemizedlist>
            <listitem>
              <para>
                SpecialDayGroupInfo:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> For comparison SpecialDayGroup.Days field values the ONVIF Client compares all iCalendar fields each with other excluding UID field.
        </para>
      </section>
      <!--SCHEDULE-5-1-6-->
      <section xml:id="tc.SCHEDULE-5-1-6">
        <title>MODIFY SPECIAL DAY GROUP</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroup (ONVIF Schedule Service Specification), ModifySpecialDayGroup command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ModifySpecialDayGroup
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifiing of special day group and generating of apropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported. The DUT shall have enough free storage capacity for one additional SpecialDayGroup.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates SpecialDayGroup (out <emphasis role="italic">specialDayGroupToken</emphasis>) with iCalendar value of Days field (out <emphasis role="italic">days</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCreateSpecialDayGroup"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">days</emphasis> := <emphasis role="italic">days</emphasis> with changed &lt;day&gt; value in DTSTART field (increase day value in one day) and with changed &lt;day&gt; value in DTEND field (increase day value in one day)
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Filter.TopicExpression := &quot;tns1:Configuration/SpecialDays/Changed&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ModifySpecialDayGroup</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SpecialDayGroup.token := &quot;<emphasis role="italic">SpecialDayGroupToken</emphasis>&quot;
                    </para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Name := &quot;Test SpecialDayGroup Name2&quot;</para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Description := &quot;Test SpecialDayGroup Description2&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup.Days := <emphasis role="italic">days</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">ModifySpecialDayGroupResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Until t<emphasis role="italic">imeout1</emphasis> timeout expires, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt-ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Timeout := PT60S</para>
                        </listitem>
                        <listitem>
                          <para>MessageLimit := 1</para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage =: <emphasis role="italic">m</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the TopicExpression item in <emphasis role="italic">m</emphasis> is not equal to &quot;tns1:Configuration/SpecialDays/Changed&quot;, FAIL the test and go to the step 19.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and does not contain Source.SimpleItem item with Name =: &quot;SpecialDaysToken&quot; and Value =: <emphasis role="italic">specialDayGroupToken</emphasis>, FAIL the test and go to the step 19.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and contains Source.SimpleItem item with Name =: &quot;SpecialDaysToken&quot; and Value =: <emphasis role="italic">specialDayGroupToken</emphasis>, go to the step 11.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">operationDelay</emphasis> timeout expires for step 9 without Notification with SpecialDaysToken  source simple item equal to <emphasis role="italic">specialDayGroupToken</emphasis>, FAIL the test and go to the step 19.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a SpecialDayGroup  (in <emphasis role="italic">SpecialDayGroupToken</emphasis>, out <emphasis role="italic">SpecialDayGroupList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroup"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupList</emphasis>[0] item does not have equal field values to values from step 7, FAIL the test and go step 19.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a SpecialDayGroup info (in <emphasis role="italic">specialDayGroupToken</emphasis>, out <emphasis role="italic">specialDayGroupInfoList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfo"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoList</emphasis>[0] item does not have equal field values to values from step 7, FAIL the test and go step 19.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete SpecialDayGroup information list (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> does not have <emphasis role="italic">specialDayGroupInfo</emphasis>.[token = <emphasis role="italic">specialDayGroupToken</emphasis>] item with equal field values to values from step 7, FAIL the test and go step 19.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of SpecialDayGroups (out <emphasis role="italic">specialDayGroupCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperSpecialDayGroupList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupCompleteList</emphasis> does not have <emphasis role="italic">specialDayGroup</emphasis>.[token = <emphasis role="italic">specialDayGroupToken</emphasis>] item with equal field values to values from step 7, FAIL the test and go step 19.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the SpecialDayGroup (in <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSpecialDayGroup"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ModifySpecialDayGroupResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis><emphasis role="italic"> operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps 12, 18:
          <itemizedlist>
            <listitem>
              <para>
                SpecialDayGroup:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                  <listitem>
                    <para>Days</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step 14, 16:
          <itemizedlist>
            <listitem>
              <para>
                SpecialDayGroup:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> For comparison SpecialDayGroup.Days field values the ONVIF Client compares all iCalendar fields each with other excluding UID field.
        </para>
      </section>
      <!--SCHEDULE-5-1-7-->
      <section xml:id="tc.SCHEDULE-5-1-7">
        <title>DELETE SPECIAL DAY GROUP</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroup (ONVIF Schedule Service Specification), DeleteSpecialDayGroup command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteSpecialDayGroup
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify deleting of special day group and generating of apropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported. The DUT shall have enough free storage capacity for one additional SpecialDayGroup.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an initial complete list of SpecialDaysGroup (out <emphasis role="italic">specialDayGroupsCompleteList1</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperSpecialDayGroupList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creats SpecialDayGroup (out specialDayGroupToken) by following the procedure mentioned  in <xref linkend="Annex_HelperCreateSpecialDayGroup"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>Filter.TopicExpression := &quot;tns1:Configuration/SpecialDays/Removed&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">DeleteSpecialDayGroup</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token := &quot;<emphasis role="italic">specialDayGroupToken</emphasis>&quot;
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">DeleteSpecialDayGroupResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Until t<emphasis role="italic">imeout1</emphasis> timeout expires, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt-ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>Timeout := PT60S</para>
                        </listitem>
                        <listitem>
                          <para>MessageLimit := 1</para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage =: <emphasis role="italic">m</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the TopicExpression item in <emphasis role="italic">m</emphasis> is not equal to &quot;tns1:Configuration/SpecialDays/Removed&quot;, FAIL the test and go to the step 20.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and does not contain Source.SimpleItem item with Name =: &quot;SpecialDaysToken&quot; and Value =: <emphasis role="italic">specialDayGroupToken</emphasis>, FAIL the test and go to the step 20.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and contains Source.SimpleItem item with Name =: &quot;SpecialDaysToken&quot; and Value =: <emphasis role="italic">SpecialDayGroupToken</emphasis>, go to the step 11.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">operationDelay</emphasis> timeout expires for step 9 without Notification with SpecialDaysToken source simple item equal to <emphasis role="italic">specialDayGroupToken</emphasis>, FAIL the test and go to the step 20.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a SpecialDayGroup (in <emphasis role="italic">specialDayGroupToken</emphasis>, out <emphasis role="italic">specialDayGroupList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroup"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupList</emphasis> is not empty, FAIL the test and go step 20.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a SpecialDayGroup info (in <emphasis role="italic">specialDayGroupToken</emphasis>, out <emphasis role="italic">specialDayG</emphasis>roupInfoList) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfo"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupInfoList</emphasis> is not empty, FAIL the test and go step 20.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete SpecialDayGroup information list (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> contains <emphasis role="italic">specialDayGroupInfo</emphasis>.[token = <emphasis role="italic">specialDayGroupToken</emphasis>] item, FAIL the test and go step 20.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of SpecialDayGroups (out <emphasis role="italic">specialDayGroupCompleteList2</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperSpecialDayGroupList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupCompleteList2</emphasis> contains SpecialDayGroup.[token = <emphasis role="italic">SpecialDayGroupToken</emphasis>] item, FAIL the test and go step 20.
              </para>
            </listitem>
            <listitem>
              <para>
                For each SpecialDayGroup.token (<emphasis role="italic">token</emphasis>) from <emphasis role="italic">SpecialDayGroupCompleteList1</emphasis> do the following:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">SpecialDayGroupCompleteList2</emphasis> does not have <emphasis role="italic">SpecialDayGroup</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and go step 20.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send
                <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis>
                message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">DeleteSpecialDayGroupResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis><emphasis role="italic"> operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--SCHEDULE-5-1-8-->
      <section xml:id="tc.SCHEDULE-5-1-8">
        <title>GET SPECIAL DAY GROUPS WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-8
        </para>
        <para>
          <emphasis role="bold">ONVIF Core Specification Coverage: </emphasis>SpecialDayGroup (ONVIF Schedule Service Specification), GetSpecialDayGroups command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSpecialDayGroups
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Special Day Groups with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of special day group information (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroups</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupsResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SpecialDayGroup list =: <emphasis role="italic">SpecialDayGroupList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupList </emphasis> is not empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is less than 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroups</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token[0]:= <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Token[1]:= <emphasis role="italic">SpecialDayGroupCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSpecialDayGroupsResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SpecialDayGroup list =: <emphasis role="italic">SpecialDayGroupList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupList</emphasis> is empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupList</emphasis> contains more than one item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">SpecialDayGroupList</emphasis>[0].token does not equal to  <emphasis role="italic">SpecialDayGroupCompleteList</emphasis>[0].token, FAIL the test.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSpecialDayGroupsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-5-1-9-->
      <section xml:id="tc.SCHEDULE-5-1-9">
        <title>GET SPECIAL DAY GROUPS - TOO MANY ITEMS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroups (ONVIF Schedule Service Specification), GetSpecialDayGroups command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSpecialDayGroups
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Special Day Groups in case there are more items than MaxLimit in request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of special day group information (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned  in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If  <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>.token items number is less than <emphasis role="italic">cap</emphasis>.MaxLimit or equal to <emphasis role="italic">cap</emphasis>.MaxLimit, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList </emphasis> := [subset of <emphasis role="italic">SpecialDayGroupCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit + 1]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetSpecialDayGroup</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-5-1-10-->
      <section xml:id="tc.SCHEDULE-5-1-10">
        <title>CREATE SPECIAL DAY GROUP - NOT EMPTY SPECIAL DAY GROUP TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroup (ONVIF Schedule Service Specification), CreateSpecialDayGroup command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateSpecialDayGroup
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of special day group with not empty token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported. The DUT shall have enough free storage capacity for one additional SpecialDayGroup.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates Unique Identifier value for UID field in iCalendar (out <emphasis role="italic">uid</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperUIDiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:<itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">days</emphasis> := &quot;BEGIN:VCALENDAR
                    </para>
                    <para>BEGIN:VEVENT</para>
                    <para>SUMMARY:Test special days</para>
                    <para>DTSTART:&lt;current year&gt;&lt;current month&gt;&lt;current day&gt;T000000</para>
                    <para>DTEND:&lt;the date of the next day&gt;T000000</para>
                    <para>
                      UID:<emphasis role="italic">uid</emphasis>
                    </para>
                    <para>END:VEVENT</para>
                    <para>END:VCALENDAR&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">CreateSpecialDayGroup</emphasis> request with parameters<itemizedlist>
                  <listitem>
                    <para>SpecialDayGroup.token := &quot;SpecialDayGroupToken&quot;</para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Name := &quot;Test SpecialDayGroup Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Description := &quot;Test SpecialDayGroup Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup.Days := <emphasis role="italic">days</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-5-1-11-->
      <section xml:id="tc.SCHEDULE-5-1-11">
        <title>MODIFY SPECIAL DAY GROUP WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-11
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ModifySpecialDayGroup command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ModifySpecialDayGroup
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifiing of special day group with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of special day group information (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates Unique Identifier value for UID field in iCalendar (out <emphasis role="italic">uid</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperUIDiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">days</emphasis> := &quot;BEGIN:VCALENDAR
                    </para>
                    <para>BEGIN:VEVENT</para>
                    <para>SUMMARY:Test special days</para>
                    <para>DTSTART:&lt;current year&gt;&lt;current month&gt;&lt;current day&gt;T000000</para>
                    <para>DTEND:&lt;the date of the next day&gt;T000000</para>
                    <para>
                      UID:<emphasis role="italic">uid</emphasis>
                    </para>
                    <para>END:VEVENT</para>
                    <para>END:VCALENDAR&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ModifySpecialDayGroup</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SpecialDayGroup.token := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Name := &quot;Test SpecialDayGroup Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Description := &quot;Test SpecialDayGroup Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup.Days := <emphasis role="italic">days</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note: </emphasis>If the DUT sends other SOAP 1.2 fault message than specified, log WARNING message, and PASS the test.
        </para>
      </section>
      <!--SCHEDULE-5-1-12-->
      <section xml:id="tc.SCHEDULE-5-1-12">
        <title>DELETE SPECIAL DAY GROUP WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DeleteSpecialDayGroup command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteSpecialDayGroup
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify deleting of special day group with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of special day group information (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">DeleteSpecialDayGroup</emphasis> request with parameters<itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note: </emphasis>If the DUT sends other SOAP 1.2 fault message than specified, log WARNING message, and PASS the test.
        </para>
      </section>
      <!--SCHEDULE-5-1-13-->
      <section xml:id="tc.SCHEDULE-5-1-13">
        <title>SET NEW SPECIAL DAY GROUP</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-13
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroup (ONVIF Schedule Service Specification), SetSpecialDayGroup command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetSpecialDayGroup, tns1:Configuration/SpecialDays/Changed
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of special day group using SetSpecialDayGroup command and generating of appropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported. Client Supplied Token is supported by the DUT. The DUT shall have enough free storage capacity for one additional SpecialDayGroup.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of special day groups by following the procedure mentioned in <xref linkend="Annex_HelperSpecialDayGroupList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">initialSpecialDayGroupCompleteList</emphasis> - special day group list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates unique identifier value for UID field of iCalendar by following the procedure mentioned in <xref linkend="Annex_HelperUIDiCalendarGeneration"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">uid</emphasis> - unique identifier value
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">days</emphasis> :=
                <itemizedlist>
                  <listitem>
                    <para>
                      "BEGIN:VCALENDAR
                    </para>
                    <para>BEGIN:VEVENT</para>
                    <para>SUMMARY:Test special days</para>
                    <para>DTSTART:&lt;current year&gt;&lt;current month&gt;&lt;current day&gt;T000000</para>
                    <para>DTEND:&lt;the date of the next day&gt;T000000</para>
                    <para>
                      UID:<emphasis role="italic">uid</emphasis>
                    </para>
                    <para>END:VEVENT</para>
                    <para>END:VCALENDAR"</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">specialDayGroupToken</emphasis> := token that differs from tokens listed in <emphasis role="italic">initialSpecialDayGroupCompleteList</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/SpecialDays/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">specialDayGroup</emphasis> :=
                <itemizedlist>
                  <listitem>
                    <para>
                      SpecialDayGroup.token := <emphasis role="italic">specialDayGroupToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Name := "Test SpecialDayGroup Name"</para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Description := "Test SpecialDayGroup Description"</para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup.Days := <emphasis role="italic">days</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup.Extension is skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">SetSpecialDayGroup</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SpecialDayGroup := <emphasis role="italic">specialDayGroup</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetSpecialDayGroupResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/SpecialDays/Changed</emphasis> event for the specified Special Days Group token by following the procedure mentioned in <xref linkend="Annex_HelperPullSpecialDaysChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">specialDayGroupToken</emphasis> - special day group token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a special day group by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroup"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">specialDayGroupToken</emphasis> - special day group token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">specialDayGroupList</emphasis> - the list of special day groups
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-5-1-13.CompareSpecialDayGroup1">
              <para>
                If <emphasis role="italic">specialDayGroupList</emphasis>[0] item does not have equal to <emphasis role="italic">specialDayGroup</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a special day group info by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">specialDayGroupToken</emphasis> - special day group token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">specialDayGroupInfoList</emphasis> - the list of special day groups info
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-5-1-13.CompareSpecialDayGroupInfo1">
              <para>
                If <emphasis role="italic">specialDayGroupInfoList</emphasis>[0] item does not have equal fields with <emphasis role="italic">specialDayGroup</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of special day groups info by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> - special day group info complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-5-1-13.CompareSpecialDayGroupInfo2">
              <para>
                If <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> does not have SpecialDayGroupInfo[token = <emphasis role="italic">specialDayGroupToken</emphasis>] item with equal fields with <emphasis role="italic">specialDayGroup</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of special day groups by following the procedure mentioned in <xref linkend="Annex_HelperSpecialDayGroupList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">specialDayGroupCompleteList</emphasis> - special day group complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-5-1-13.CompareSpecialDayGroup2">
              <para>
                If <emphasis role="italic">specialDayGroupCompleteList</emphasis> does not have SpecialDayGroup[token = <emphasis role="italic">specialDayGroupToken</emphasis>] item with equal fields with <emphasis role="italic">specialDayGroup</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each SpecialDayGroup.token (<emphasis role="italic">token</emphasis>) from <emphasis role="italic">initialSpecialDayGroupCompleteList</emphasis> do the following:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDayGroupCompleteList</emphasis> does not have SpecialDayGroup[token = <emphasis role="italic">token</emphasis>] item, FAIL the test, restore the DUT state, and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes special day group by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSpecialDayGroup"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">specialDayGroupToken</emphasis> - special day group token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetSpecialDayGroupResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.SCHEDULE-5-1-13.CompareSpecialDayGroup1"/> and <xref linkend="tc.SCHEDULE-5-1-13.CompareSpecialDayGroup2"/>:
          <itemizedlist>
            <listitem>
              <para>
                SpecialDayGroup:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                  <listitem>
                    <para>Days (the ONVIF Client compares all iCalendar fields each with other excluding UID field)</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.SCHEDULE-5-1-13.CompareSpecialDayGroupInfo1"/> and <xref linkend="tc.SCHEDULE-5-1-13.CompareSpecialDayGroupInfo2"/>:
          <itemizedlist>
            <listitem>
              <para>
                SpecialDayGroupInfo:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-5-1-14-->
      <section xml:id="tc.SCHEDULE-5-1-14">
        <title>SET SPECIAL DAY GROUP</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-5-1-14
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SpecialDayGroup (ONVIF Schedule Service Specification), SetSpecialDayGroup command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetSpecialDayGroup, tns1:Configuration/SpecialDays/Changed
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifiing of special day group using SetSpecialDayGroup and generating of apropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported. Client Supplied Token is supported by the DUT. The DUT shall have enough free storage capacity for one additional SpecialDayGroup.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates unique special day group by following the procedure mentioned in <xref linkend="Annex_HelperCreateSpecialDayGroup"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">specialDayGroupToken</emphasis> - token of new special day group
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">days</emphasis> - iCalendar value of Days field
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">days</emphasis> := <emphasis role="italic">days</emphasis> with changed "day" value in DTSTART field (increase day value by one day) and with changed "day" value in DTEND field (increase day value by one day).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/SpecialDays/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">specialDayGroup</emphasis> :=
                <itemizedlist>
                  <listitem>
                    <para>
                      SpecialDayGroup.token := <emphasis role="italic">specialDayGroupToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Name := "Test SpecialDayGroup Name2"</para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Description := "Test SpecialDayGroup Description2"</para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup.Days := <emphasis role="italic">days</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup.Extension is skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">SetSpecialDayGroup</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SpecialDayGroup := <emphasis role="italic">specialDayGroup</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetSpecialDayGroupResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/SpecialDays/Changed</emphasis> event for the specified Special Days Group token by following the procedure mentioned in <xref linkend="Annex_HelperPullSpecialDaysChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">specialDayGroupToken</emphasis> - special day group token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client retrieves a special day group by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroup"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">specialDayGroupToken</emphasis> - special day group token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">specialDayGroupList</emphasis> - the list of special day groups
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-5-1-14.CompareSpecialDayGroup1">
              <para>
                If <emphasis role="italic">specialDayGroupList</emphasis>[0] item does not have equal to <emphasis role="italic">specialDayGroup</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a special day group info by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">specialDayGroupToken</emphasis> - special day group token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">specialDayGroupInfoList</emphasis> - the list of special day groups info
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-5-1-14.CompareSpecialDayGroupInfo1">
              <para>
                If <emphasis role="italic">specialDayGroupInfoList</emphasis>[0] item does not have equal fields with <emphasis role="italic">specialDayGroup</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of special day groups info by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> - special day group info complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-5-1-14.CompareSpecialDayGroupInfo2">
              <para>
                If <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> does not have SpecialDayGroupInfo[token = <emphasis role="italic">specialDayGroupToken</emphasis>] item with equal fields with <emphasis role="italic">specialDayGroup</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of special day groups by following the procedure mentioned in <xref linkend="Annex_HelperSpecialDayGroupList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">specialDayGroupCompleteList</emphasis> - special day group complete list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.SCHEDULE-5-1-14.CompareSpecialDayGroup2">
              <para>
                If <emphasis role="italic">specialDayGroupCompleteList</emphasis> does not have SpecialDayGroup[token = <emphasis role="italic">specialDayGroupToken</emphasis>] item with equal fields with <emphasis role="italic">specialDayGroup</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes special day group by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSpecialDayGroup"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">specialDayGroupToken</emphasis> - special day group token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetSpecialDayGroupResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.SCHEDULE-5-1-14.CompareSpecialDayGroup1"/> and <xref linkend="tc.SCHEDULE-5-1-14.CompareSpecialDayGroup2"/>:
          <itemizedlist>
            <listitem>
              <para>
                SpecialDayGroup:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                  <listitem>
                    <para>Days (the ONVIF Client compares all iCalendar fields each with other excluding UID field)</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.SCHEDULE-5-1-14.CompareSpecialDayGroupInfo1"/> and <xref linkend="tc.SCHEDULE-5-1-14.CompareSpecialDayGroupInfo2"/>:
          <itemizedlist>
            <listitem>
              <para>
                SpecialDayGroupInfo:<itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>Name</para>
                  </listitem>
                  <listitem>
                    <para>Description</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Schedule State-->
    <section xml:id="tc.schedule.schedule_state" xreflabel="Section 5.6">
      <title>Schedule State</title>
      <!--SCHEDULE-6-1-1-->
      <section xml:id="tc.SCHEDULE-6-1-1">
        <title>GET SCHEDULE STATE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-6-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleState (ONVIF Schedule Service Specification), Get ScheduleState command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule State.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. State Reporting is supported by the DUT as indicated by the Capabilities.StateReportingSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete Schedule list (out <emphasis role="italic">scheduleCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each Schedule.token <emphasis role="italic">scheduleToken</emphasis> from <emphasis role="italic">scheduleCompleteList</emphasis> repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetScheduleState</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">scheduleToken</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetScheduleStateResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            ScheduleState  =: <emphasis role="italic">scheduleState</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If Schedule[token = <emphasis role="italic">scheduleToken</emphasis>] item from <emphasis role="italic">scheduleCompleteList</emphasis> contains at least one SpecialDays item and <emphasis role="italic">scheduleState</emphasis> does not contain SpecialDays item, FAIL the test.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If Schedule[token = <emphasis role="italic">scheduleToken</emphasis>] item from <emphasis role="italic">scheduleCompleteList</emphasis> does not contain SpecialDays item and <emphasis role="italic">scheduleState</emphasis>.SpecialDays is equal to true, FAIL the test.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetScheduleStateResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-6-1-2-->
      <section xml:id="tc.SCHEDULE-6-1-2">
        <title>CHANGE SCHEDULE STATE - CHANGE STANDARD</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-6-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleState (ONVIF Schedule Service Specification), Get ScheduleState command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleState, tns1:Schedule/State/Active event
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule State and tns1:Schedule/State/Active changed event generation when current time is within the boundaries of the schedule period.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. State Reporting is supported by the DUT as indicated by the Capabilities.StateReportingSupported. The DUT shall have enough free storage capacity for one additional Schedule.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates Unique Identifier value for UID field in iCalendar (out <emphasis role="italic">uid</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperUIDiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:<itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">delta</emphasis> := max{(Message Timeout value, 10 seconds}.
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.ExtendedRecurrenceSupported is equal to true, set the following:<itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">scheduleiCalendarValue</emphasis> := &quot;BEGIN:VCALENDAR
                    </para>
                    <para>BEGIN:VEVENT</para>
                    <para>SUMMARY:Test summary</para>
                    <para>
                      DTSTART:&lt;current year&gt;&lt; current month&gt;&lt; current day&gt;T&lt;current time + <emphasis role="italic">delta</emphasis>&gt;
                    </para>
                    <para>DTEND: DTSTART + 1 hour</para>
                    <para>RRULE:FREQ=DAILY</para>
                    <para>
                      UID:<emphasis role="italic">uid</emphasis>
                    </para>
                    <para>END:VEVENT</para>
                    <para>END:VCALENDAR&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.ExtendedRecurrenceSupported is equal to false, set the following:<itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">scheduleiCalendarValue</emphasis> := &quot;BEGIN:VCALENDAR
                    </para>
                    <para>BEGIN:VEVENT</para>
                    <para>SUMMARY: Test summary</para>
                    <para>
                      DTSTART:1970&lt;current month&gt;&lt;current day&gt;T&lt;current time + <emphasis role="italic">delta</emphasis>&gt;
                    </para>
                    <para>DTEND: DTSTART + 1 hour </para>
                    <para>RRULE:FREQ=WEEKLY;BYDAY=&lt;current week day&gt;,&lt;next week day&gt;</para>
                    <para>
                      UID:<emphasis role="italic">uid</emphasis>
                    </para>
                    <para>END:VEVENT</para>
                    <para>END:VCALENDAR&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates Schedule with Schedule token (out <emphasis role="italic">scheduleToken</emphasis>), with iCalendar value of the Schedule.Standard field (in <emphasis role="italic">scheduleiCalendarValue</emphasis>) and without SpecialDayGroup item by following the procedure mentioned in <xref linkend="Annex_HelperCreateSchedule"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters<itemizedlist>
                  <listitem>
                    <para>Filter.TopicExpression := &quot;tns1:Schedule/State/Active&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Filter.TopicExpression.@Dialect := &quot;http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters<itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:<itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">timeout</emphasis> := max{(Operation Delay value, <emphasis role="italic">delta</emphasis> + 5 seconds}.
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">timeout</emphasis> timeout expires, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint s with parameters<itemizedlist>
                        <listitem>
                          <para>Timeout := PT60S</para>
                        </listitem>
                        <listitem>
                          <para>MessageLimit := 1</para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters<itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage =: <emphasis role="italic">m</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If the TopicExpression item in <emphasis role="italic">m</emphasis> is not equal to &quot;tns1:Schedule/State/Active&quot;, FAIL the test and go to the step 18.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and PropertyOperation item in <emphasis role="italic">m</emphasis> is equal to &quot;Changed&quot; check the following:<orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">m</emphasis> does not contain Source.SimpleItem item with Name = &quot;ScheduleToken&quot; and Value with type is equal to pt:ReferenceToken, FAIL the test and go to the step 18.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If value of Source.SimpleItem.ScheduleToken item in <emphasis role="italic">m</emphasis> is equal to <emphasis role="italic">scheduleToken</emphasis>, check the following:<orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">m</emphasis> does not contain Source.SimpleItem item with Name = &quot;Name&quot; and Value with type is equal to xs:string, FAIL the test and go to the step 18.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If value of Source.SimpleItem.Name item in <emphasis role="italic">m</emphasis> is not equal to &quot;Test Name&quot;, FAIL the test and go to the step 18.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">m</emphasis> does not contain Data.SimpleItem item with Name = &quot;Active&quot; and Value with type is equal to xs:boolean, FAIL the test and go to the step 18.
                                </para>
                              </listitem>
                              <listitem>
                                <para>If value of Data.SimpleItem item with Name = &quot;Active&quot; is not equal to true, FAIL the test and go to the step 18.</para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">m</emphasis> does not contain Data.SimpleItem item with Name = &quot;SpecialDay&quot; and Value with type is equal to xs:boolean, FAIL the test and go to the step 18.
                                </para>
                              </listitem>
                              <listitem>
                                <para>If value of Data.SimpleItem item with Name = &quot;SpecialDay&quot; is not equal to false, FAIL the test and go to the step 18.</para>
                              </listitem>
                              <listitem>
                                <para>Go to step 14.</para>
                              </listitem>
                            </orderedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">timeout</emphasis> timeout expires for step 11 without Notification with TopicExpression = &quot;tns1:Schedule/State/Active&quot; and with <emphasis role="italic">m</emphasis> with Source.SimpleItem.ScheduleToken value is equal to <emphasis role="italic">scheduleToken</emphasis>, FAIL the test and go to the step 18.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleState</emphasis> request with parameters<itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">scheduleToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleStateResponse</emphasis> message with parameters<itemizedlist>
                  <listitem>
                    <para>
                      ScheduleState =: <emphasis role="italic">scheduleState</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleState</emphasis>.Active value is not equal to true, FAIL the test and go to the step 18.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleState</emphasis> contains SpecialDays item and <emphasis role="italic">scheduleState</emphasis>.SpecialDays value is not equal to false, FAIL the test and go to the step 18.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the Schedule (in <emphasis role="italic">scheduleToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSchedule"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint s.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetScheduleStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If time to the end of the current day is less than <emphasis role="italic">delta</emphasis>, the test tool waits for the start of the next day before step 7.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Message Timeout value for <emphasis role="italic">delta</emphasis> calculation will be taken from Message Timeout field of ONVIF Device Test Tool.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Operation Delay value for <emphasis role="italic">timeout</emphasis> calculation will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--SCHEDULE-6-1-3-->
      <section xml:id="tc.SCHEDULE-6-1-3">
        <title>CHANGE SCHEDULE STATE - CHANGE SPECIAL DAYS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-6-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleState (ONVIF Schedule Service Specification), Get ScheduleState command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleState, tns1:Schedule/State/Active event
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule State and tns1:Schedule/State/Active changed event generation when current time is within the boundaries of the special day time period.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. State Reporting is supported by the DUT as indicated by the Capabilities.StateReportingSupported. The DUT shall have enough free storage capacity for one additional Schedule. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported. The DUT shall have enough free storage capacity for one additional SpecialDayGroup.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:<itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">specialDayState</emphasis> := false
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar for Days field in special day group (out days1) with boundaries of special days time period in iCalendar are not contained current time (in <emphasis role="italic">specialDayState</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperSpecialDayGroupiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates SpecialDayGroup (out <emphasis role="italic">specialDayGroupToken</emphasis>) with required iCalendar value (in <emphasis role="italic">days1</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCreateSpecialDayGroup"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">CreateSchedule</emphasis> request with parameters<itemizedlist>
                  <listitem>
                    <para>Schedule.token := &quot;&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Description := &quot;Test Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Name := &quot;Test Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.Standard := scheduleiCalendarValue</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays: = specialDayGroupToken</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays.GroupToken := specialDayGroupToken</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays.TimeRange.From := current time – 5 min</para>
                  </listitem>
                  <listitem>
                    <para>Schedule.SpecialDays.TimeRange.Until := Schedule.SpecialDays.TimeRange.From + 1 hour</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreateScheduleResponse</emphasis> message with parameters<itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">scheduleToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:<itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">specialDayState</emphasis> := true
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar for Days field in special day group (out <emphasis role="italic">days2</emphasis>) with boundaries of special days time period in iCalendar are contained current time (in <emphasis role="italic">specialDayState</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperSpecialDayGroupiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters<itemizedlist>
                  <listitem>
                    <para>Filter.TopicExpression := &quot;tns1:Schedule/State/Active&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Filter.TopicExpression.@Dialect := &quot;http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters<itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ModifySpecialDayGroup</emphasis> request with parameters<itemizedlist>
                  <listitem>
                    <para>
                      SpecialDayGroup.token := &quot;<emphasis role="italic">specialDayGroupToken</emphasis>&quot;
                    </para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Name := &quot;Test SpecialDayGroup Name&quot;</para>
                  </listitem>
                  <listitem>
                    <para>SpecialDayGroup.Description := &quot;Test SpecialDayGroup Description&quot;</para>
                  </listitem>
                  <listitem>
                    <para>
                      SpecialDayGroup.Days := <emphasis role="italic">days2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with empty <emphasis role="bold">ModifySpecialDayGroupResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">timeout</emphasis> timeout expires, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint s with parameters<itemizedlist>
                        <listitem>
                          <para>Timeout := PT60S</para>
                        </listitem>
                        <listitem>
                          <para>MessageLimit := 1</para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters<itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage =: <emphasis role="italic">m</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If the TopicExpression item in <emphasis role="italic">m</emphasis> is not equal to &quot;tns1:Schedule/State/Active&quot;, FAIL the test and go to the step 23.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and PropertyOperation item in <emphasis role="italic">m</emphasis> is equal to &quot;Changed&quot; check the following:<orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">m</emphasis> does not contain Source.SimpleItem item with Name = &quot;ScheduleToken&quot; and Value with type is equal to pt:ReferenceToken, FAIL the test and go to the step 23.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If value of Source.SimpleItem.ScheduleToken item in <emphasis role="italic">m</emphasis> is equal to <emphasis role="italic">scheduleToken</emphasis>, check the following:<orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">m</emphasis> does not contain Source.SimpleItem item with Name = &quot;Name&quot; and Value with type is equal to xs:string, FAIL the test and go to the step 23.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If value of Source.SimpleItem.Name item in <emphasis role="italic">m</emphasis> is not equal to &quot;Test Name&quot;, FAIL the test and go to the step 23.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">m</emphasis> does not contain Data.SimpleItem item with Name = &quot;Active&quot; and Value with type is equal to xs:boolean, FAIL the test and go to the step 23.
                                </para>
                              </listitem>
                              <listitem>
                                <para>If value of Data.SimpleItem item with Name = &quot;Active&quot; is not equal to true, FAIL the test and go to the step 23.</para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">m</emphasis> does not contain Data.SimpleItem item with Name = &quot;SpecialDay&quot; and Value with type is equal to xs:boolean, FAIL the test and go to the step 23.
                                </para>
                              </listitem>
                              <listitem>
                                <para>If value of Data.SimpleItem item with Name = &quot;SpecialDay&quot; is not equal to false, FAIL the test and go to the step 23.</para>
                              </listitem>
                              <listitem>
                                <para>Go to step 18.</para>
                              </listitem>
                            </orderedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">timeout</emphasis> timeout expires for step 16 without Notification with TopicExpression = &quot;tns1:Schedule/State/Active&quot; and with <emphasis role="italic">m</emphasis> with Source.SimpleItem.ScheduleToken value is equal to <emphasis role="italic">scheduleToken</emphasis>, FAIL the test and go to the step 23.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetScheduleState</emphasis> request with parameters<itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">scheduleToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetScheduleStateResponse</emphasis> message with parameters<itemizedlist>
                  <listitem>
                    <para>
                      ScheduleState =: <emphasis role="italic">scheduleState</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleState</emphasis>.Active value is not equal to true, FAIL the test and go to the step 23.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleState</emphasis> does not contain SpecialDays item, FAIL the test and go to the step 23.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleState</emphasis>.SpecialDays value is not equal to true, FAIL the test and go to the step 23.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes the Schedule (in <emphasis role="italic">scheduleToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSchedule"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint s.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetScheduleStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Operation Delay value for <emphasis role="italic">timeout</emphasis> calculation will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--SCHEDULE-6-1-4-->
      <section xml:id="tc.SCHEDULE-6-1-4">
        <title>GET SCHEDULE STATE WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-6-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ScheduleState (ONVIF Schedule Service Specification), Get ScheduleState command (ONVIF Schedule Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Schedule State with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. State Reporting is supported by the DUT as indicated by the Capabilities.StateReportingSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedule info (out <emphasis role="italic">scheduleInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">scheduleInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetScheduleState</emphasis> request with parameters<itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note: </emphasis>If the DUT sends other SOAP 1.2 fault message than specified, log WARNING message, and PASS the test.
        </para>
      </section>
    </section>
    <!--Schedule Events-->
    <section xml:id="tc.schedule.schedule_events" xreflabel="Section 5.7">
      <title>Schedule Events</title>
      <!--SCHEDULE-7-1-1-->
      <section xml:id="tc.SCHEDULE-7-1-1">
        <title>SCHEDULE STATE ACTIVE EVENT (PROPERTY EVENT) </title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-7-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Schedule State (ONVIF Schedule Service Specification), Notification topics (ONVIF Schedule Service Specification), Get event properties (ONVIF Core specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetEventProperties
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Schedule/State/Active event format and and initialize event generation.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Event Service is received from the DUT. Device supports Pull-Point Notification feature. State Reporting is supported by the DUT as indicated by the Capabilities.StateReportingSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters<itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:Schedule/State/Active topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:Schedule/State/Active topic (<emphasis role="italic">stateActiveTopic</emphasis>) from <emphasis role="italic">topicSet</emphasis>:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">stateActiveTopic</emphasis>.MessageDescription.IsProperty equals to false or skipped, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">stateActiveTopic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name =: &quot;ScheduleToken&quot;, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">stateActiveTopic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name =: &quot;ScheduleToken&quot; does not have Type =: &quot;pt:ReferenceToken&quot;, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">stateActiveTopic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name =: &quot;Name&quot;, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">stateActiveTopic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name =: &quot;Name&quot; does not have Type =: &quot;xs:string&quot;, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">stateActiveTopic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name =: &quot;Active&quot;, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">stateActiveTopic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name =: &quot;Active&quot; does not have Type =: &quot;xs:boolean&quot;, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">stateActiveTopic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name =: &quot;SpecialDay&quot;, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">stateActiveTopic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name =: &quot;SpecialDay&quot; does not have Type =: &quot;xs:boolean&quot;, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of Schedules (out <emphasis role="italic">scheduleCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">scheduleCompleteList</emphasis> is not empty, go to step 14.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.SpecialDaysSupported is equal to true, ONVIF Client creates SpecialDayGroup (out <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperCreateSpecialDayGroup"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client generates appropriate iCalendar value for the Schedule.Standard field (in <emphasis role="italic">cap</emphasis>, out <emphasis role="italic">scheduleiCalendarValue</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperScheduleiCalendarGeneration"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates Schedule with Schedule token (out <emphasis role="italic">scheduleToken</emphasis>), with iCalendar value of the Schedule.Standard field (in <emphasis role="italic">scheduleiCalendarValue</emphasis>) and with SpecialDayGroupToken (in specialDayGroupToken) if Special Days is supported by the DUT by following the procedure mentioned in <xref linkend="Annex_HelperCreateSchedule"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Set:<itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">scheduleCompleteList</emphasis>  := <emphasis role="italic">scheduleToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters<itemizedlist>
                  <listitem>
                    <para>Filter.TopicExpression := &quot;tns1:Schedule/State/Active&quot;</para>
                  </listitem>
                  <listitem>
                    <para>Filter.TopicExpression.@Dialect := &quot;http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet&quot;</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters<itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime =: <emphasis role="italic">ct</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime =: <emphasis role="italic">tt</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint s with parameters<itemizedlist>
                        <listitem>
                          <para>Timeout := PT60S</para>
                        </listitem>
                        <listitem>
                          <para>MessageLimit := 1</para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters<itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime =: <emphasis role="italic">ct</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime =: <emphasis role="italic">tt</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage =: <emphasis role="italic">m</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and the TopicExpression item in m is not equal to &quot;tns1:Schedule/State/Active&quot;, FAIL the test and go to the step 19.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and PropertyOperation item in <emphasis role="italic">m</emphasis> is equal to &quot;Initialized&quot; check the following:<orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">m</emphasis> does not contain Source.SimpleItem item with Name = &quot;ScheduleToken&quot; and Value with type is equal to pt:ReferenceToken, FAIL the test and go to the step 19.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If value of ScheduleToken item (<emphasis role="italic">scheduleToken</emphasis>) in <emphasis role="italic">m</emphasis> is not equal to any Schedule token from <emphasis role="italic">scheduleCompleteList</emphasis>, FAIL the test and go to the step 19.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">m</emphasis> does not contain Source.SimpleItem item with Name = &quot;Name&quot; and Value with type is equal to xs:string, FAIL the test and go to the step 19.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If value of Name item in <emphasis role="italic">m</emphasis> is not equal to value of Name of Schedule[token = <emphasis role="italic">scheduleToken</emphasis>] from  <emphasis role="italic">scheduleCompleteList</emphasis>, FAIL the test and go to the step 19.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">m</emphasis> does not contain Data.SimpleItem item with Name = &quot;Active&quot; and Value with type is equal to xs:boolean, FAIL the test and go to the step 19.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">m</emphasis> does not contain Data.SimpleItem item with Name = &quot;SpecialDay&quot; and Value with type is equal to xs:boolean, FAIL the test and go to the step 19.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            16.5.7.If notifications for all schedule tokens from <emphasis role="italic">scheduleCompleteList</emphasis> are received, go to step 18.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">operationDelay</emphasis> timeout expires for step 16 without Notification with TopicExpression = &quot;tns1:Schedule/State/Active&quot;, FAIL the test and go to step 19.
              </para>
            </listitem>
            <listitem>
              <para>
                If the DUT sent Notifications not for all schedule tokens from <emphasis role="italic">scheduleCompleteList</emphasis>, FAIL the test and go to step 19.
              </para>
            </listitem>
            <listitem>
              <para>
                If Schedule was created at step 12, ONVIF Client deletes the Schedule (in <emphasis role="italic">scheduleToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSchedule"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                If SpecialDayGroup was created at step 10, ONVIF Client deletes the SpecialDayGroup (in <emphasis role="italic">specialDayGroupToken</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSpecialDayGroup"/> to restore DUT configuration.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from the Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--SCHEDULE-7-1-2-->
      <section xml:id="tc.SCHEDULE-7-1-2">
        <title>SCHEDULE CHANGED EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-7-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Schedule State (ONVIF Schedule Service Specification), Notification topics (ONVIF Schedule Service Specification), Get event properties (ONVIF Core specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetEventProperties
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Configuration/Schedule/Changed event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is supported by the DUT. Event Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters<itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:Configuration/Schedule/Changed topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:Configuration/Schedule/Changed topic (<emphasis role="italic">scheduleChangedTopic</emphasis>) from topicSet:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleChangedTopic</emphasis>.MessageDescription.IsProperty equals to true, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleChangedTopic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name =: &quot;ScheduleToken&quot;, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleChangedTopic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name =: &quot;ScheduleToken&quot; does not have Type =: &quot;pt:ReferenceToken&quot;, FAIL the test.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-7-1-3-->
      <section xml:id="tc.SCHEDULE-7-1-3">
        <title>SCHEDULE REMOVED EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-7-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Notification topics (ONVIF Schedule Service Specification), Get event properties (ONVIF Core specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetEventProperties
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Configuration/Schedule/Removed event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is supported by the DUT. Event Service is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters<itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:Configuration/Schedule/Removed topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:Configuration/Schedule/Removed topic (<emphasis role="italic">scheduleRemovedTopic</emphasis>) from topicSet:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleRemovedTopic</emphasis>.MessageDescription.IsProperty equals to true, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleRemovedTopic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name =: &quot;ScheduleToken&quot;, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">scheduleRemovedTopic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name =: &quot;ScheduleToken&quot; does not have Type =: &quot;pt:ReferenceToken&quot;, FAIL the test.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-7-1-4-->
      <section xml:id="tc.SCHEDULE-7-1-4">
        <title>SPECIAL DAYS CHANGED EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-7-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Notification topics (ONVIF Schedule Service Specification), Get event properties (ONVIF Core specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetEventProperties
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Configuration/SpecialDays/Changed event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is supported by the DUT. Event Service is supported by the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters<itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:Configuration/SpecialDays/Changed topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:Configuration/SpecialDays/Changed topic (<emphasis role="italic">specialDaysChangedTopic</emphasis>) from topicSet:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDaysChangedTopic</emphasis>.MessageDescription.IsProperty equals to true, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDaysChangedTopic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name =: &quot;SpecialDaysToken&quot;, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDaysChangedTopic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name =: &quot;SpecialDaysToken&quot; does not have Type =: &quot;pt:ReferenceToken&quot;, FAIL the test.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--SCHEDULE-7-1-5-->
      <section xml:id="tc.SCHEDULE-7-1-5">
        <title>SPECIAL DAYS REMOVED EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-7-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Notification topics (ONVIF Schedule Service Specification), Get event properties (ONVIF Core specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetEventProperties
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Configuration/SpecialDays/Removed event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is supported by the DUT. Event Service is supported by the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters<itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:Configuration/SpecialDays/Removed topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:Configuration/SpecialDays/Removed topic (<emphasis role="italic">specialDaysRemovedTopic</emphasis>) from topicSet:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDaysRemovedTopic</emphasis>.MessageDescription.IsProperty equals to true, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDaysRemovedTopic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name =: &quot;SpecialDaysToken&quot;, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDaysRemovedTopic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name =: &quot;SpecialDaysToken&quot; does not have Type =: &quot;pt:ReferenceToken&quot;, FAIL the test.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Consistency-->
    <section xml:id="tc.schedule.consistency" xreflabel="Section 5.8">
      <title>Consistency</title>
      <!--SCHEDULE-8-1-1-->
      <section xml:id="tc.SCHEDULE-8-1-1">
        <title>GET SCHEDULE AND GET SPECIAL DAY GROUP INFO LIST CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> SCHEDULE-8-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Schedule (ONVIF Schedule Service Specification), Special day group (ONVIF Schedule Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetScheduleList, GetSpecialDayGroupInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> schedule.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that all Special Day Group Tokens from GetScheduleResponses could be listed through GetSpecialDayGroupInfoList command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Sequence:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of schedules (out <emphasis role="italic">scheduleCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetScheduleList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of special day group information (out <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetSpecialDayGroupInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                For each Schedule.SpecialDays.GroupToken (<emphasis role="italic">specialDaysGroupToken</emphasis>) from <emphasis role="italic">scheduleCompleteList</emphasis> repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">specialDaysGroupToken</emphasis> is not listed in <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT passed all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
  </chapter>
  <appendix>
    <title>Helper Procedures and Additional Notes</title>
    <para>This section describes the meaning of the following definitions. These definitions are used in the test case description.</para>
    <!--A.1-->
    <section xml:id="Annex_HelperGetScheduleInfoList" xreflabel="Annex A.1">
      <title>Get schedules information list</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetScheduleInfoList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get complete schedules information list.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The complete list of schedules information (<emphasis role="italic">scheduleInfoCompleteList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes  <emphasis role="bold">GetScheduleInfoList</emphasis> request with parameters<itemizedlist>
                <listitem>
                  <para>Limit skipped</para>
                </listitem>
                <listitem>
                  <para>StartReference skipped                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ScheduleInfo list =: <emphasis role="italic">scheduleInfoCompleteList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF client invokes <emphasis role="bold">GetScheduleInfoList</emphasis> request with parameters<itemizedlist>
                      <listitem>
                        <para>Limit skipped</para>
                      </listitem>
                      <listitem>
                        <para>
                          StartReference := <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message with parameters<itemizedlist>
                      <listitem>
                        <para>
                          NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ScheduleInfo list =: <emphasis role="italic">scheduleInfoListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set the following:<itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">scheduleInfoCompleteList</emphasis> := <emphasis role="italic">scheduleInfoCompleteList</emphasis> + <emphasis role="italic">scheduleInfoListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetScheduleInfoListResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.2-->
    <section xml:id="Annex_HelperGetServiceCapabilities" xreflabel="Annex A.2">
      <title>Get service capabilities</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperGetServiceCapabilities
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get service capabilities.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The service capabilities (<emphasis role="italic">cap</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes  <emphasis role="bold">GetServiceCapabilities</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    Capabilities =: <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.3-->
    <section xml:id="Annex_HelperGetScheduleList" xreflabel="Annex A.3">
      <title>Get schedules list</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperGetScheduleList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get complete schedules list with.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The complete list of schedules (<emphasis role="italic">scheduleCompleteList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes  <emphasis role="bold">GetScheduleList</emphasis> request with parameters<itemizedlist>
                <listitem>
                  <para>Limit skipped</para>
                </listitem>
                <listitem>
                  <para>StartReference skipped                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Schedule list =: <emphasis role="italic">scheduleCompleteList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF client invokes <emphasis role="bold">GetScheduleList</emphasis> request with parameters<itemizedlist>
                      <listitem>
                        <para>Limit skipped</para>
                      </listitem>
                      <listitem>
                        <para>
                          StartReference := <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetScheduleListResponse</emphasis> message with parameters<itemizedlist>
                      <listitem>
                        <para>
                          NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Schedule
                          list =: <emphasis role="italic">scheduleListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set the following:<itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">scheduleCompleteList </emphasis> := <emphasis role="italic">scheduleCompleteList </emphasis> + <emphasis role="italic">scheduleListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>

      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetScheduleListResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.4-->
    <section xml:id="Annex_HelperGetSpecialDayGroupInfoList" xreflabel="Annex A.4">
      <title>Get special day group information list</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperGetSpecialDayGroupInfoList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get complete SpecialDayGroup information list.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The complete list of special day group information (<emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfoList</emphasis> request with parameters<itemizedlist>
                <listitem>
                  <para>Limit skipped</para>
                </listitem>
                <listitem>
                  <para>StartReference skipped                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SpecialDayGroupInfo list =: <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfoList</emphasis> request with parameters<itemizedlist>
                      <listitem>
                        <para>Limit skipped</para>
                      </listitem>
                      <listitem>
                        <para>
                          StartReference := <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message with parameters<itemizedlist>
                      <listitem>
                        <para>
                          NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          SpecialDayGroupInfo list =: <emphasis role="italic">specialDayGroupInfoListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set the following:<itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> := <emphasis role="italic">specialDayGroupInfoCompleteList</emphasis> + <emphasis role="italic">specialDayGroupInfoListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>

      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetSpecialDayGroupInfoListResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.5-->
    <section xml:id="Annex_HelperSpecialDayGroupList" xreflabel="Annex A.5">
      <title>Get special day group list</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperSpecialDayGroupList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get complete Special Day Group list.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The complete list of Special Day Group (<emphasis role="italic">specialDayGroupCompleteList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupList</emphasis> request with parameters<itemizedlist>
                <listitem>
                  <para>Limit skipped</para>
                </listitem>
                <listitem>
                  <para>StartReference skipped                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    SpecialDayGroup  list =: <emphasis role="italic">specialDayGroupsCompleteList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupList</emphasis> request with parameters<itemizedlist>
                      <listitem>
                        <para>Limit skipped</para>
                      </listitem>
                      <listitem>
                        <para>
                          StartReference := <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message with parameters<itemizedlist>
                      <listitem>
                        <para>
                          NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          SpecialDayGroup  list =: <emphasis role="italic">specialDayGroupsListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set the following:<itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">specialDayGroupsCompleteList</emphasis> := <emphasis role="italic">specialDayGroupsCompleteList</emphasis> + <emphasis role="italic">specialDayGroupsListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>

      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetSpecialDayGroupListResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.6-->
    <section xml:id="Annex_HelperUIDiCalendarGeneration" xreflabel="Annex A.6">
      <title>Generate UID value for iCalendar</title>
      <para>
        <emphasis role="bold">Name: </emphasis>HelperUIDiCalendarGeneration
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to generate Unique Identifier value for UID field in iCalendar.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Unique Identifier value for UID field in iCalendar (<emphasis role="italic">uid</emphasis>) that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>ONVIF Client generates Globally Unique Identifier value.</para>
          </listitem>
        </orderedlist>

      </para>
    </section>
    <!--A.7-->
    <section xml:id="Annex_HelperScheduleiCalendarGeneration" xreflabel="Annex A.7">
      <title>Generate iCalendar value for Schedule</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperScheduleiCalendarGeneration
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to generate iCalendar value for Schedule.Standard field.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> The Schedule service capabilities (<emphasis role="italic">cap</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> iCalendar value for Standard field (<emphasis role="italic">scheduleiCalendarValue</emphasis>) that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client generates Unique Identifier value for UID field in iCalendar (out <emphasis role="italic">uid</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperUIDiCalendarGeneration"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.ExtendedRecurrenceSupported is equal to true, set the following:<itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="italic">scheduleiCalendarValue</emphasis> := &quot;BEGIN:VCALENDAR
                  </para>
                  <para>BEGIN:VEVENT</para>
                  <para>SUMMARY:Access from 9 AM to 6 PM</para>
                  <para>DTSTART:&lt;current year&gt;&lt; current month&gt;&lt; current day&gt;T090000</para>
                  <para>DTEND:&lt;year of (current day + one week)&gt;&lt;month of (current day + one week)&gt;&lt;day of (current day + one week)&gt;T180000</para>
                  <para>RRULE:FREQ=DAILY</para>
                  <para>
                    UID:<emphasis role="italic">uid</emphasis>
                  </para>
                  <para>END:VEVENT</para>
                  <para>
                    END:VCALENDAR&quot;
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.ExtendedRecurrenceSupported is equal to false, set the following:<itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="italic">scheduleiCalendarValue</emphasis> := &quot;BEGIN:VCALENDAR
                  </para>
                  <para>BEGIN:VEVENT</para>
                  <para>SUMMARY:Access on weekdays from 9 AM to 6 PM for employees</para>
                  <para>DTSTART:1970&lt;current month&gt;&lt;current day&gt;T090000</para>
                  <para>DTEND:1970&lt;current month&gt;&lt;current day&gt;T180000</para>
                  <para>RRULE:FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR</para>
                  <para>
                    UID:<emphasis role="italic">uid</emphasis>
                  </para>
                  <para>END:VEVENT</para>
                  <para>
                    END:VCALENDAR&quot;
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>

      </para>
    </section>
    <!--A.8-->
    <section xml:id="Annex_HelperCreateSpecialDayGroup" xreflabel="Annex A.8">
      <title>Create special day group</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperCreateSpecialDayGroup
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create SpecialDayGroup with Days field value that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported. The DUT shall have enough free storage capacity for one additional SpecialDayGroup.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> iCalendar value of the SpecialDayGroup.Days field (<emphasis role="italic">days</emphasis>) that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Returns: Special day group token (<emphasis role="italic">specialDayGroupToken</emphasis>), iCalendar value of Days field (<emphasis role="italic">days</emphasis>) that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client generates Unique Identifier value for UID field in iCalendar (out <emphasis role="italic">uid</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperUIDiCalendarGeneration"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">days</emphasis> is empty, set the following:<itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="italic">days </emphasis> := &quot;BEGIN:VCALENDAR
                  </para>
                  <para>BEGIN:VEVENT</para>
                  <para>SUMMARY:Test special days</para>
                  <para>DTSTART:&lt;current year&gt;&lt;current month&gt;&lt;current day&gt;T000000</para>
                  <para>DTEND:&lt;year of the next day&gt;&lt;month of the next day&gt;&lt;day of the next day&gt;T000000</para>
                  <para>
                    UID:<emphasis role="italic">uid</emphasis>
                  </para>
                  <para>END:VEVENT</para>
                  <para>
                    END:VCALENDAR&quot;
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">CreateSpecialDayGroup</emphasis> request with parameters<itemizedlist>
                <listitem>
                  <para>SpecialDayGroup.token := &quot;&quot;</para>
                </listitem>
                <listitem>
                  <para>SpecialDayGroup.Name := &quot;Test SpecialDayGroup Name&quot;</para>
                </listitem>
                <listitem>
                  <para>SpecialDayGroup.Description := &quot;Test SpecialDayGroup Description&quot;</para>
                </listitem>
                <listitem>
                  <para>
                    SpecialDayGroup.Days := <emphasis role="italic">days</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreateSpecialDayGroupResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">specialDayGroupToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">CreateSpecialDayGroupResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.9-->
    <section xml:id="Annex_HelperGetSchedule" xreflabel="Annex A.9">
      <title>Get schedule</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperGetSchedule
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get schedule.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Schedule Token (<emphasis role="italic">scheduleToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Schedule List (<emphasis role="italic">scheduleList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">GetSchedules</emphasis> request with parameters<itemizedlist>
                <listitem>
                  <para>
                    Token[0] := <emphasis role="italic">scheduleToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetSchedulesResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    Schedule list =: <emphasis role="italic">scheduleList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetSchedulesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.10-->
    <section xml:id="Annex_HelperGetScheduleInfo" xreflabel="Annex A.10">
      <title>Get schedule info</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperGetScheduleInfo
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get schedule info.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Schedule Token (<emphasis role="italic">scheduleToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Schedule Info  List (<emphasis role="italic">Info scheduleInfoList </emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">GetScheduleInfo</emphasis> request with parameters<itemizedlist>
                <listitem>
                  <para>
                    Token[0] := <emphasis role="italic">scheduleToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetScheduleInfoResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    ScheduleInfo  list =: <emphasis role="italic">scheduleInfoList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetScheduleInfoResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.11-->
    <section xml:id="Annex_HelperDeleteSchedule" xreflabel="Annex A.11">
      <title>Delete schedule</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperDeleteSchedule
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete schedule.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Schedule Token (<emphasis role="italic">scheduleToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">DeleteSchedule</emphasis> request with parameters<itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">scheduleToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with empty  <emphasis role="bold">DeleteScheduleResponse</emphasis> message
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">DeleteScheduleResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.12-->
    <section xml:id="Annex_HelperDeleteSpecialDayGroup" xreflabel="Annex A.12">
      <title>Delete special day group</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperDeleteSpecialDayGroup
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete SpecialDayGroup.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> SpecialDayGroup Token (<emphasis role="italic">specialDayGroupToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">DeleteSpecialDayGroup</emphasis> request with parameters<itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">specialDayGroupToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with empty  <emphasis role="bold">DeleteSpecialDayGroupResponse</emphasis> message
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">DeleteSpecialDayGroupResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.13-->
    <section xml:id="Annex_HelperCreateSchedule" xreflabel="Annex A.13">
      <title>Create Schedule</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperCreateSchedule
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create Schedule with Standard field value that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT. The DUT shall have enough free storage capacity for one additional Schedule.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> iCalendar value of the Schedule.Standard field (<emphasis role="italic">scheduleiCalendarValue</emphasis>), SpecialDayGroupToken (<emphasis role="italic">specialDayGroupToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Schedule token (<emphasis role="italic">scheduleToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">CreateSchedule</emphasis> request with parameters<itemizedlist>
                <listitem>
                  <para>Schedule.token := &quot;&quot;</para>
                </listitem>
                <listitem>
                  <para>Schedule.Description := &quot;Test Description&quot;</para>
                </listitem>
                <listitem>
                  <para>Schedule.Name := &quot;Test Name&quot;</para>
                </listitem>
                <listitem>
                  <para>
                    Schedule.Standard := <emphasis role="italic">scheduleiCalendarValue</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Schedule.SpecialDays skipped if  <emphasis role="italic">specialDayGroupToken</emphasis> is empty
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Schedule.SpecialDays.GroupToken := <emphasis role="italic">specialDayGroupToken</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>Schedule.SpecialDays.TimeRange.From := &quot;22:00:00&quot;</para>
                </listitem>
                <listitem>
                  <para>Schedule.SpecialDays.TimeRange.Until := &quot;23:00:00&quot;</para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreateScheduleResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">scheduleToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">CreateScheduleResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.14-->
    <section xml:id="Annex_HelperGetSpecialDayGroup" xreflabel="Annex A.14">
      <title>Get special day group</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperGetSpecialDayGroup
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get SpecialDayGroup.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> SpecialDayGroup Token (<emphasis role="italic">specialDayGroupToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> SpecialDayGroup List (<emphasis role="italic">specialDayGroupList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">GetSpecialDayGroups</emphasis> request with parameters<itemizedlist>
                <listitem>
                  <para>
                    Token[0] := <emphasis role="italic">specialDayGroupToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetSpecialDayGroupsResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    SpecialDayGroup list =: <emphasis role="italic">specialDayGroupList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetSpecialDayGroupsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.15-->
    <section xml:id="Annex_HelperGetSpecialDayGroupInfo" xreflabel="Annex A.15">
      <title>Get special day group info</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperGetSpecialDayGroupInfo
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get special day group info.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> SpecialDayGroup Token (<emphasis role="italic">specialDayGroupToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> SpecialDayGroup Info List (<emphasis role="italic">specialDayGroupInfoList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">GetSpecialDayGroupInfo</emphasis> request with parameters<itemizedlist>
                <listitem>
                  <para>
                    Token[0] := <emphasis role="italic">specialDayGroupToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetSpecialDayGroupInfoResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    SpecialDayGroupInfo =: <emphasis role="italic">specialDayGroupInfoList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetSpecialDayGroupInfoResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.16-->
    <section xml:id="Annex_HelperSpecialDayGroupiCalendarGeneration" xreflabel="Annex A.16">
      <title>Generate iCalenrad value for Special Day Group with required Special Day state</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperSpecialDayGroupiCalendarGeneration
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to generate iCalendar value for Day field in special day group with required special day state.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT. Special Days is supported by the DUT as indicated by the Capabilities.SpecialDaysSupported.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> special day state (<emphasis role="italic">specialDayState</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> iCalendar value of the SpecialDayGroup.Days field (<emphasis role="italic">days</emphasis>) that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client generates Unique Identifier value for UID field in iCalendar (out <emphasis role="italic">uid</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperUIDiCalendarGeneration"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              If specialDayState is equal to true, do the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>If time to the end of the current day is less than Operation delay time or equals to Operation delay time, the test tool waits for the start of the next day.</para>
                </listitem>
                <listitem>
                  <para>
                    Set the following:<itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">days </emphasis> := &quot;BEGIN:VCALENDAR
                        </para>
                        <para>BEGIN:VEVENT</para>
                        <para>SUMMARY:Test special days</para>
                        <para>DTSTART:&lt;current year&gt;&lt;current month&gt;&lt;current day&gt;T000000</para>
                        <para>DTEND:&lt;year of the next day&gt;&lt;month of the next day&gt;&lt;day of the next day&gt;T000000</para>
                        <para>
                          UID:<emphasis role="italic">uid</emphasis>
                        </para>
                        <para>END:VEVENT</para>
                        <para>
                          END:VCALENDAR&quot;
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">specialDayState</emphasis> is equal to <emphasis role="italic">false</emphasis>, do the following steps:<orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    <emphasis role="italic">days </emphasis> := &quot;BEGIN:VCALENDAR
                  </para>
                  <para>BEGIN:VEVENT</para>
                  <para>SUMMARY:Test special days</para>
                  <para>DTSTART:&lt;year of the day that was two days before the current day&gt;&lt;month of the day that was two days before the current day&gt;&lt;day that was two days before the current day&gt;T000000</para>
                  <para>DTEND:&lt;year of the previous day&gt;&lt;month of the previous day&gt;&lt;day of the previous day&gt;T000000</para>
                  <para>
                    UID:<emphasis role="italic">uid</emphasis>
                  </para>
                  <para>END:VEVENT</para>
                  <para>
                    END:VCALENDAR&quot;
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>

      </para>
    </section>
    <!--A.17-->
    <section xml:id="Annex_HelperScheduleiCalTimePeriodsGeneration" xreflabel="Annex A.17">
      <title>Generate iCalendar value for Schedule with required number of time periods per day</title>
      <para>
        <emphasis role="bold">Name:</emphasis>HelperScheduleiCalTimePeriodsGeneration
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to generate iCalendar value for Schedule.Standard field with required number of time periods per day.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Schedule Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> The Schedule service capabilities (<emphasis role="italic">cap</emphasis>), the number of time periods per day (<emphasis role="italic">numberPeriodsPerDay</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> iCalendar value for Standard field (<emphasis role="italic">scheduleiCalendarValue</emphasis>) that is compliant to [RFC 2445].
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Set the following:<itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="italic">k</emphasis> := 1
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              For <emphasis role="italic">k</emphasis> = 1 to <emphasis role="italic">numberPeriodsPerDay</emphasis>:<orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client generates Unique Identifier value for UID field in iCalendar (out <emphasis role="italic">uidk</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperUIDiCalendarGeneration"/>.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <emphasis role="italic">k</emphasis> := <emphasis role="italic">k</emphasis>+1
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.ExtendedRecurrenceSupported is equal to true, set the following:<itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="italic">scheduleiCalendarValue </emphasis> := &quot;BEGIN:VCALENDAR
                  </para>
                  <para>BEGIN:VEVENT</para>
                  <para>SUMMARY:required number of time periods per day</para>
                  <para>DTSTART:&lt;current year&gt;&lt;current month&gt;&lt;current day&gt;T000100</para>
                  <para>DTEND:&lt;current year&gt;&lt;current month&gt;&lt;current day&gt;T000200</para>
                  <para>RRULE:FREQ=DAILY</para>
                  <para>
                    UID:<emphasis role="italic">uid1</emphasis>
                  </para>
                  <para>END:VEVENT</para>
                  <para>BEGIN:VEVENT</para>
                  <para>SUMMARY:required number of time periods per day</para>
                  <para>DTSTART:&lt;current year&gt;&lt;current month&gt;&lt;current day&gt;T000300</para>
                  <para>DTEND:&lt;current year&gt;&lt;current month&gt;&lt;current day&gt;T000400</para>
                  <para>RRULE:FREQ=DAILY</para>
                  <para>
                    UID:<emphasis role="italic">uid2</emphasis>
                  </para>
                  <para>END:VEVENT</para>
                  <para>...</para>
                  <para>BEGIN:VEVENT</para>
                  <para>SUMMARY:required number of time periods per day</para>
                  <para>DTSTART:&lt;current year&gt;&lt;current month&gt;&lt;current day&gt;T&lt;time of DTEND in the previous VEVENT + 1min&gt;</para>
                  <para>DTEND:&lt;current year&gt;&lt;current month&gt;&lt;current day&gt;T&lt;time of current DTSTART + 1min&gt;</para>
                  <para>RRULE:FREQ=DAILY</para>
                  <para>
                    UID:<emphasis role="italic">uidk</emphasis>
                  </para>
                  <para>END:VEVENT</para>
                  <para>
                    END:VCALENDAR&quot;
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.ExtendedRecurrenceSupported is equal to false, set the following:<itemizedlist>
                <listitem>
                  <para>
                    <emphasis role="italic">scheduleiCalendarValue </emphasis> := &quot;BEGIN:VCALENDAR
                  </para>
                  <para>BEGIN:VEVENT</para>
                  <para>SUMMARY:required number of time periods per day</para>
                  <para>DTSTART:1970&lt;current month&gt;&lt;current day&gt;T000100</para>
                  <para>DTEND:1970&lt;current month&gt;&lt;current day&gt;T000200</para>
                  <para>RRULE:FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR</para>
                  <para>
                    UID:<emphasis role="italic">uid1</emphasis>
                  </para>
                  <para>END:VEVENT</para>
                  <para>BEGIN:VEVENT</para>
                  <para>SUMMARY: required number of time periods per day</para>
                  <para>DTSTART:1970&lt;current month&gt;&lt;current day&gt;T000300</para>
                  <para>DTEND:1970&lt;current month&gt;&lt;current day&gt;T000400</para>
                  <para>RRULE:FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR</para>
                  <para>
                    UID:<emphasis role="italic">uid2</emphasis>
                  </para>
                  <para>END:VEVENT</para>
                  <para>...</para>
                  <para>BEGIN:VEVENT</para>
                  <para>SUMMARY:required number of time periods per day</para>
                  <para>DTSTART:1970&lt;current month&gt;&lt;current day&gt;T&lt;time of DTEND in the previous VEVENT + 1min&gt;</para>
                  <para>DTEND:1970&lt;current month&gt;&lt;current day&gt;T&lt;time of current DTSTART + 1min&gt;</para>
                  <para>RRULE:FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR</para>
                  <para>
                    UID:<emphasis role="italic">uidk</emphasis>
                  </para>
                  <para>END:VEVENT</para>
                  <para>
                    END:VCALENDAR&quot;
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>

      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If <emphasis role="italic">numberPeriodsPerDay</emphasis> value does not allow creating of <emphasis role="italic">numberPeriodsPerDay</emphasis> VEVENT items with different periods (value is more than 720), then the number of time periods will be restricted.
      </para>
    </section>
    <!--A.18-->
    <section xml:id="Annex_HelperCreatePullPointSubscription" xreflabel="Annex A.18">
      <title>Create Pull Point Subscription</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreatePullPointSubscription
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create PullPoint Subscription with specified Topic.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Notification Topic (<emphasis role="italic">topic</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>), subscription termination time (<emphasis role="italic">tt</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Filter.TopicExpression := <emphasis role="italic">topic</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    SubscriptionReference =: <emphasis role="italic">s</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    CurrentTime =: <emphasis role="italic">ct</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    TerminationTime =: <emphasis role="italic">tt</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.19-->
    <section xml:id="Annex_HelperDeleteSubscription" xreflabel="Annex A.19">
      <title>Delete Subscription</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteSubscription
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete supscribtion.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint s.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.20-->
    <section xml:id="Annex_HelperPullScheduleChanged" xreflabel="Annex A.20">
      <title>Retrieve Schedule Changed Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullScheduleChanged
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:Configuration/Schedule/Changed event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>),
        Subscription termination time (<emphasis role="italic">tt</emphasis>) and Schedule token (<emphasis role="italic">scheduleToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullScheduleChanged.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty and the ScheduleToken source simple item in <emphasis role="italic">notificationMessageList</emphasis> is equal
                    to <emphasis role="italic">scheduleToken</emphasis>, skip other steps and finish the procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <link linkend="Annex_HelperPullScheduleChanged.1">1</link> without
                    Notification with Token source simple item equal to <emphasis role="italic">scheduleToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.21-->
    <section xml:id="Annex_HelperPullSpecialDaysChanged" xreflabel="Annex A.21">
      <title>Retrieve Special Days Changed Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullSpecialDaysChanged
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:Configuration/SpecialDays/Changed event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>),
        Subscription termination time (<emphasis role="italic">tt</emphasis>) and Special Day Group token (<emphasis role="italic">specialDaysToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullSpecialDaysChanged.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty and the SpecialDaysToken source simple item in <emphasis role="italic">notificationMessageList</emphasis> is equal
                    to <emphasis role="italic">specialDaysToken</emphasis>, skip other steps and finish the procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <link linkend="Annex_HelperPullSpecialDaysChanged.1">1</link> without
                    Notification with Token source simple item equal to <emphasis role="italic">specialDaysToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
  </appendix>
</book>
