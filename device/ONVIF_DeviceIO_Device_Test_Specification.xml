<?xml version="1.0" encoding="UTF-8"?>
<!--For PDF version (standard)-->
<!-- <?xml-stylesheet href="docbook/xsl/fo/docbook.xsl" type="text/xsl" ?>-->
<!--For PDF version-->
<!-- <?xml-stylesheet href="ONVIF-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<!--For online version-->
<?xml-stylesheet href="docbook-css/docbook.xsl" type="text/xsl" ?>
<!--For PDF version - New ONVIF-->
<!--<?xml-stylesheet href="../ONVIFNew-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xml="http://www.w3.org/XML/1998/namespace" xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd" version="0.1" xml:id="ONVIF_Profile_Imaging_Client_TS">
  <info>
    <orgname>
      <phrase>
        <trademark class="registered">ONVIF</trademark>
      </phrase>
    </orgname>
    <title>Device IO Device Test Specification</title>
    <subtitle>Version 20.06</subtitle>
    <date>June 2020</date>
    <copyright>
      <year>2020</year>
      <holder>ONVIF, Inc. All rights reserved.</holder>
    </copyright>
    <address>
      <uri>www.onvif.org</uri>
    </address>
    <legalnotice role="notices">
      <para>
        Recipients of this document may copy, distribute, publish, or display this
        document so long as this copyright notice, license and disclaimer are retained with
        all copies of the document. No license is granted to modify this document.
      </para>
      <para>
        THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR
        AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
        NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
        NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY
        PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS,
        COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
      </para>
      <para>
        IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR
        ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES,
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR
        NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE
        POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT. THE
        FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR
        LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE
        AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE
        CORPORATION.
      </para>
    </legalnotice>
    <revhistory>


      <revision>
        <revnumber>16.06</revnumber>
        <date>Mar 16, 2016</date>
        <revdescription>
          <para>Original publication</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.06</revnumber>
        <date>Mar 30, 2016</date>
        <revdescription>
          <para>The tests DEVICEIO-3-1-1 - DEVICEIO-3-1-4 have been added.</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.06</revnumber>
        <date>Apr 6, 2016</date>
        <revdescription>
          <para>The DEVICEIO-1-2-1 - DEVICEIO-1-2-4 and DEVICEIO-3-1-4 have been updated according to feedback from Sano Hiroyuki.</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.06</revnumber>
        <date>Apr 11, 2016</date>
        <revdescription>
          <para>Implemented comments from Sano Hiroyuki about redundant event-testing steps. Implemented comments of Bhetanabottla Sriram from Canon.</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.07</revnumber>
        <date>Jun 22, 2016</date>
        <revdescription>
          <para>Minor spellcheck and version number correction</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.07</revnumber>
        <date>Jul 13, 2016</date>
        <revdescription>
          <para>Tests sequences updated.</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.07</revnumber>
        <date>Jul 27, 2016</date>
        <revdescription>
          <para>Implemented comments from Canon and Sony</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.07</revnumber>
        <date>Aug 5, 2016</date>
        <revdescription>
          <para>Bugfixes based on comments from Hiroyuki Sano</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.12</revnumber>
        <date>Dec 08, 2016</date>
        <revdescription>
          <para>
            REALTIME PULLPOINT SUBSCRIPTION – DIGITAL INPUT EVENT was moved from ONVIF Base Test specification to ONVIF Device IO Test specification
          </para>
          <para>
            Test section ‘Digital Input Configuration’ was renamed to ‘Digital Input’
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>16.12</revnumber>
        <date>Dec 15, 2016</date>
        <revdescription>
          <para>
            The following test cases were updated:
          </para>
          <para>
            IO SETRELAYOUTPUTSTATE – BISTABLE MODE (OPENED IDLE STATE)
          </para>
          <para>
            IO SETRELAYOUTPUTSTATE – BISTABLE MODE (CLOSED IDLE STATE)
          </para>
          <para>
            IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (OPENED IDLE STATE)
          </para>
          <para>
            IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (CLOSED IDLE STATE)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.01</revnumber>
        <date>Jan 16, 2017</date>
        <revdescription>
          <para>Minor changes based on Sony review.</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Jan 31, 2017</date>
        <revdescription>
          <para>
            DEVICE IO TRIGGER EVENT test was added according to #1279
          </para>
          <para>
            The following test cases were updated according to #1279:
          </para>
          <para>
            IO SETRELAYOUTPUTSTATE – BISTABLE MODE (OPENED IDLE STATE)
          </para>
          <para>
            IO SETRELAYOUTPUTSTATE – BISTABLE MODE (CLOSED IDLE STATE)
          </para>
          <para>
            IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (OPENED IDLE STATE)
          </para>
          <para>
            IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (CLOSED IDLE STATE)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Mar 27, 2017</date>
        <revdescription>
          <para>DEVICEIO-4-1-1 IO GET AUDIO SOURCES added according to #1349.</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.06</revnumber>
        <date>Mar 27, 2017</date>
        <revdescription>
          <para>
            Current document name was changed from Device IO Test Specification to Device IO Device Test Specification.
          </para>
          <para>
            The document formating were updated.
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Jul 11, 2017</date>
        <revdescription>
          <para>
            The following test cases and annexes were added according #1402:
          </para>
          <para>
            DEVICEIO-5-1-1 GET VIDEOSOURCES (DeviceIO) AND GET VIDEOSOURCES (Media) CONSISTENCY
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Jul 11, 2017</date>
        <revdescription>
          <para>
            The following test cases were added according #1178:
          </para>
          <para>
            DEVICEIO-6-1-1 IO GET SERIAL PORTS
          </para>
          <para>
            DEVICEIO-6-1-2 IO GET SERIAL PORT CONFIGURATION AND GET SERIAL PORT OPTIONS
          </para>
          <para>
            DEVICEIO-6-1-3 IO MODIFY SERIAL PORT CONFIGURATION
          </para>
          <para>
            DEVICEIO-6-1-4 IO RECEIVE SERIAL COMMAND
          </para>
          <para>
            DEVICEIO-6-1-5 IO SEND SERIAL COMMAND
          </para>
          <para>
            DEVICEIO-6-1-6 IO GETSERIALPORTCONFIGURATION COMMAND - INVALID TOKEN
          </para>
          <para>
            DEVICEIO-6-1-7 IO GETSERIALPORTCONFIGURATIONOPTIONS COMMAND - INVALID TOKEN
          </para>
          <para>
            DEVICEIO-6-1-8 IO SETSERIALPORTCONFIGURATION COMMAND - INVALID SETTINGS
          </para>
          <para>
            Annex A.7 Get Device IO Service Capabilities
          </para>
          <para>
            Annex A.8 Get Relay Outputs List
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Jul 12, 2017</date>
        <revdescription>
          <para>
            The following test cases were changed according to #1403
          </para>
          <para>
            DEVICEIO-1-2-1 IO SETRELAYOUTPUTSTATE – BISTABLE MODE (OPENED IDLE STATE)
          </para>
          <para>
            DEVICEIO-1-2-2 IO SETRELAYOUTPUTSTATE – BISTABLE MODE (CLOSED IDLE STATE)
          </para>
          <para>
            DEVICEIO-1-2-3 IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (OPENED IDLE STATE)
          </para>
          <para>
            DEVICEIO-1-2-4 IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (CLOSED IDLE STATE)
          </para>
          <para>
            DEVICEIO-2-1-2 DEVICE IO TRIGGER EVENT
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Jul 13, 2017</date>
        <revdescription>
          <para>
            The following test cases were changed according to #1406
          </para>
          <para>
            DEVICEIO-3-1-3 IOGET DIGITAL INPUT CONFIGURATION OPTIONS
          </para>
          <para>
            DEVICEIO-3-1-4 IO DIGITAL INPUT CONFIGURATION
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Oct 30, 2017</date>
        <revdescription>
          <para>
            The following test case was added according to #1496:
          </para>
          <para>
            DEVICEIO-7-1-1 IO GET VIDEO SOURCES
          </para>
          <para>
            The following test case was added according to #1502:
          </para>
          <para>
            DEVICEIO-8-1-1 IO GET AUDIO OUTPUTS
          </para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 11, 2018</date>
        <revdescription>
          <para>
            The following test case was updated according to #1528:
          </para>
          <para>
            DEVICEIO-1-1-4 IO SETRELAYOUTPUTSETTINGS
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 12, 2018</date>
        <revdescription>
          <para>
            The following test case was updated according to #1565:
          </para>
          <para>
            DEVICEIO-2-1-1 REALTIME PULLPOINT SUBSCRIPTION – DIGITAL INPUT EVENT
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jan 24, 2018</date>
        <revdescription>
          <para>
            The following test case was updated according to #1567:
          </para>
          <para>
            DEVICEIO-1-1-3 IO GETRELAYOUTPUTOPTIONS (pre-requisite updated)
          </para>
          <para>
            DEVICEIO-1-1-4 IO SETRELAYOUTPUTSETTINGS (pre-requisite updated)
          </para>
          <para>
            DEVICEIO-1-2-1 IO SETRELAYOUTPUTSTATE – BISTABLE MODE (OPENED IDLE STATE) (pre-requisite updated)
          </para>
          <para>
            DEVICEIO-1-2-2 IO SETRELAYOUTPUTSTATE – BISTABLE MODE (CLOSED IDLE STATE) (pre-requisite updated)
          </para>
          <para>
            DEVICEIO-1-2-3 IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (OPENED IDLE STATE) (pre-requisite updated)
          </para>
          <para>
            DEVICEIO-1-2-4 IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (CLOSED IDLE STATE) (pre-requisite updated)
          </para>
          <para>
            Annex A.3 Select Relay Output with supporting of required RelayMode (pre-requisite updated)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jun 21, 2018</date>
        <revdescription>
          <para>Reformatting document using new template</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06 SR1</revnumber>
        <date>Aug 27, 2018</date>
        <revdescription>
          <para>
            The following test case was updated according to #1711:
          </para>
          <para>
            DEVICEIO-1-1-4 IO SETRELAYOUTPUTSETTINGS (steps 6.6.1 and 6.7.4 were added, steps 6.6.2, 6.6.9, 6.7.5, and 6.7.12 were updated)
          </para>
          <para>
            DEVICEIO-1-2-1 IO SETRELAYOUTPUTSTATE – BISTABLE MODE (OPENED IDLE STATE) (steps 5, 9, 14, 17 were updated, steps 3, 4, 6 were removed, steps 9, 13, 17 were added, Test Results were updated, Pre-Requisite was updated, Specification Coverage was updated, Note was removed)
          </para>
          <para>
            DEVICEIO-1-2-2 IO SETRELAYOUTPUTSTATE – BISTABLE MODE (CLOSED IDLE STATE) (steps 5, 9, 14, 17 were updated, steps 3, 4, 6 were removed, steps 9, 13, 17 were added, Test Results were updated, Pre-Requisite was updated, Specification Coverage was updated, Note was removed)
          </para>
          <para>
            DEVICEIO-1-2-3 IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (OPENED IDLE STATE) (steps 5, 10, 16, 18 were updated, steps 3, 4, 6 were removed, steps 11, 18 were added, Test Results were updated, Pre-Requisite was updated, Specification Coverage was updated, Note was removed)
          </para>
          <para>
            DEVICEIO-1-2-4 IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (CLOSED IDLE STATE) (steps 5, 10, 16, 18 were updated, steps 3, 4, 6 were removed, steps 11, 18 were added, Test Results were updated, Pre-Requisite was updated, Specification Coverage was updated, Note was removed)
          </para>
          <para>
            A.3 Select Relay Output with supporting of required RelayMode (removed)
          </para>
          <para>
            A.3 Select Relay Output with supporting of required Relay Mode and Idle State (added)
          </para>
        </revdescription>
      </revision>
    <revision>
        <revnumber>19.12</revnumber>
        <date>Sep 5, 2019</date>
        <revdescription>
          <para>
            The following test case was updated according to #1890:
          </para>        
                   
          <para>
            DEVICEIO-1-2-3 IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (OPENED IDLE STATE) (updated)
          </para>
          <para>
            DEVICEIO-1-2-4 IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (CLOSED IDLE STATE) (updated)
          </para>         
          <para>
            A.10 Move Relay Output to Monostable Mode with Inactive Logical State (added)
          </para>
        </revdescription>
      </revision>
    <revision>
        <revnumber>20.06</revnumber>
        <date>May 13, 2020</date>
        <revdescription>
          <para>Pre-Requisite of the following test cases updated with adding of Pull-Point Notification feature according to #1999:</para>
        <para>DEVICEIO-2-1-1 REALTIME PULLPOINT SUBSCRIPTION – DIGITAL INPUT EVENT</para>
        </revdescription>
      </revision>
    </revhistory>
  </info>
  <chapter xml:id="s.intro">
    <title>Introduction</title>
    <para>
      The goal of the ONVIF test specification set is to make it possible to realize fully interoperable IP physical security implementation from different vendors. The set of ONVIF test specification describes the test cases need to verify the [ONVIF DeviceIO Service Specs] and [ONVIF Conformance] requirements. It also describes the test framework, test setup, pre-requisites, test policies needed for the execution of the described test cases.
    </para>
    <para>
      This ONVIF Device IO Test Specification acts as a supplementary document to the [ONVIF DeviceIO Service Specs], illustrating test cases need to be executed and passed. And also this specification acts as an input document to the development of test tool which will be used to test the ONVIF device implementation conformance towards ONVIF standard. This test tool is referred as ONVIF Client hereafter.
    </para>
    <section xml:id="s.intro.scope">
      <title>Scope</title>
      <para>
        This ONVIF Device IO Test Specification defines and regulates the conformance testing procedure for the ONVIF conformant devices. Conformance testing is meant to be functional black-box testing. The objective of this specification is to provide test cases to test individual requirements of ONVIF devices according to ONVIF Device IO Service which is defined in [ONVIF DeviceIO Service Specs].
      </para>
      <para>
        The principal intended purposes are:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>Provide self-assessment tool for implementations.</para>
          </listitem>
          <listitem>
            <para>
              Provide comprehensive test suite coverage for [ONVIF Network Interface Specs].
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        This specification does not address the following:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Product use cases and non-functional (performance and regression) testing.
            </para>
          </listitem>
          <listitem>
            <para>
              SOAP Implementation Interoperability test i.e. Web Service Interoperability Basic Profile version 2.0 (WS-I BP 2.0).
            </para>
          </listitem>
          <listitem>
            <para>
              Network protocol implementation Conformance test for HTTP, HTTPS, RTP protocol.
            </para>
          </listitem>
          <listitem>
            <para>
              Wi-Fi Conformance test
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        The set of ONVIF Test Specification will not cover the complete set of requirements as defined in [ONVIF DeviceIO Service Specs]; instead it would cover subset of it. The scope of this specification is to derive all the normative requirements of [ONVIF DeviceIO Service Specs] which are related to ONVIF Device IO Service and some of the optional requirements.
      </para>
      <para>
        This ONVIF DeviceIO Test Specification covers Device IO service which is a functional block of [ONVIF Network Interface Specs]. The following sections describe the brief overview of and scope of each functional block.
      </para>

      <section xml:id="s.intro.scope.relay_outputs">
        <title>Relay Outputs</title>
        <para>
          Relay Outputs section covers the test cases needed for the verification of Relay Outputs service features as mentioned in [ONVIF DeviceIO Service Specs]. The DeviceIO service is used to retrieve and configure the settings of physical outputs of a device.
        </para>
        <para>
          Briefly it covers the following things:
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>	Manage Relay Output Configuration</para>
            </listitem>
            <listitem>
              <para>
                Change Relay Output State
              </para>
            </listitem>
          </orderedlist>
        </para>

      </section>

      <section xml:id="s.intro.scope.digital_inputs">
        <title>Digital Inputs</title>
        <para>
          Digital Inputs section covers the test cases needed for the verification of Digital Inputs service features as mentioned in [ONVIF DeviceIO Service Specs]. The DeviceIO service is used to retrieve and configure the settings of physical inputs of a device.
        </para>
        <para>
          Briefly it covers the following thing.
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Configure Digital Input idle state.
              </para>
            </listitem>
          </orderedlist>
        </para>

      </section>
      <section xml:id="s.intro.scope.video_source">
        <title>Video Source</title>
        <para>
          Video Source section covers the test cases needed for the verification of Get Video Sources command as mentioned in [ONVIF DeviceIO Service Specs]. The DeviceIO service is used to retrieve video source list from a device.
        </para>


      </section>
      <section xml:id="s.intro.scope.audio_output">
        <title>Audio Output</title>
        <para>
          Audio Output section covers the test cases needed for the verification of Get Audio Outputs command as mentioned in [ONVIF DeviceIO Service Specs]. The DeviceIO service is used to retrieve audio output list from a device.
        </para>


      </section>

    </section>
  </chapter>
  <chapter xml:id="s.docbook">
    <title>Normative references</title>
    <itemizedlist>
      <listitem>
        <para>[ONVIF Conformance] ONVIF Conformance Process Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/conformance/">https://www.onvif.org/profiles/conformance/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Profile Policy] ONVIF Profile Policy:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/">https://www.onvif.org/profiles/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Network Interface Specs] ONVIF Network Interface Specification documents:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Core Specs] ONVIF Core Specifications:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF DeviceIO Service Specs] ONVIF DEvice IO Specifications:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/specifications/">https://www.onvif.org/profiles/specifications/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ONVIF Base Test] ONVIF Base Device Test Specification:</para>
        <para>
          <link xlink:href="https://www.onvif.org/profiles/conformance/device-test/">https://www.onvif.org/profiles/conformance/device-test/</link>
        </para>
      </listitem>
      <listitem>
        <para>[ISO/IEC Directives, Part 2] ISO/IEC Directives, Part 2, Annex H:</para>
        <para>
          <link xlink:href="http://www.iso.org/directives">http://www.iso.org/directives</link>
        </para>
      </listitem>
      <listitem>
        <para>[ISO 16484-5] ISO 16484-5:2014-09 Annex P:</para>
        <para>
          <link xlink:href="https://www.iso.org/obp/ui/#!iso:std:63753:en">https://www.iso.org/obp/ui/#!iso:std:63753:en</link>
        </para>
      </listitem>
      <listitem>
        <para>[SOAP 1.2, Part 1] W3C SOAP 1.2, Part 1, Messaging Framework:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/soap12-part1/">http://www.w3.org/TR/soap12-part1/</link>
        </para>
      </listitem>
      <listitem>
        <para>[XML-Schema, Part 1] W3C XML Schema Part 1: Structures Second Edition:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/xmlschema-1/">http://www.w3.org/TR/xmlschema-1/</link>
        </para>
      </listitem>
      <listitem>
        <para>[XML-Schema, Part 2] W3C XML Schema Part 2: Datatypes Second Edition:</para>
        <para>
          <link xlink:href="http://www.w3.org/TR/xmlschema-2/">http://www.w3.org/TR/xmlschema-2/</link>
        </para>
      </listitem>
      <listitem>
        <para>[WS-Security] "Web Services Security: SOAP Message Security 1.1 (WS-Security 2004)", OASIS Standard, February 2006.:</para>
        <para>
          <link xlink:href="http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf">http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf</link>
        </para>
      </listitem>
    </itemizedlist>
  </chapter>
  <chapter xml:id="additions">
    <title>Terms and Definitions</title>
    <section xml:id="additions.conventions">
      <title>Conventions</title>
      <para>
        The key words "shall", "shall not", "should", "should not", "may", "need not",
        "can", "cannot" in this specification are to be interpreted as described in [ISO/IEC
        Directives Part 2].
      </para>
    </section>
    <section xml:id="additions.definitions">
      <title>Definitions</title>
      <para>This section defines terms that are specific to the ONVIF Device IO Service and tests. For a list of applicable general terms and definitions, please see [ONVIF Base Test].</para>
      <variablelist>
        <varlistentry>
          <term>Relay Output </term>
          <listitem>
            <para>
              physical outputs of a device.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Digital Input</term>
          <listitem>
            <para>
              physical inputs of a device
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>
  <chapter xml:id="overview">
    <title>Test Overview</title>
    <para>
      This section provides information the test setup procedure and required prerequisites, and the test policies that should be followed for test case execution.
    </para>
    <section xml:id="overview.test_setup">
      <title>Test Setup</title>
      <section xml:id="overview.test_setup.network_configuration">
        <title>Network Configuration for DUT</title>
        <para>
          The generic test configuration for the execution of test cases defined in this document is as shown below (Figure 4.1).
        </para>
        <para>
          Based on the individual test case requirements, some of the entities in the below setup may not be needed for the execution of those corresponding test cases.
        </para>
        <figure>
          <title>Test Configuration for DUT</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="test_network.png" format="PNG" scalefit="0"/>
            </imageobject>
            <textobject>
              <phrase>Test Configuration for DUT</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <para>
          <emphasis role="bold">DUT:</emphasis> ONVIF device to be tested. Hereafter, this is referred to as DUT (Device Under Test).
        </para>
        <para>
          <emphasis role="bold">ONVIF Client (Test Tool):</emphasis> Tests are executed by this system and it controls the behavior of the DUT. It handles both expected and unexpected behavior.
        </para>
        <para>
          <emphasis role="bold">HTTP Proxy:</emphasis> provides facilitation in case of RTP and RTSP tunneling over HTTP.
        </para>
        <para>
          <emphasis role="bold">Wireless Access Point:</emphasis> provides wireless connectivity to the devices that support wireless connection.
        </para>
        <para>
          <emphasis role="bold">DNS Server:</emphasis> provides DNS related information to the connected devices.
        </para>
        <para>
          <emphasis role="bold">DHCP Server:</emphasis> provides IPv4 Address to the connected devices.
        </para>
        <para>
          <emphasis role="bold">NTP Server:</emphasis> provides time synchronization between ONVIF Client and DUT.
        </para>
        <para>
          <emphasis role="bold">Switching Hub:</emphasis> provides network connectivity among all the test equipments in the test environment. All devices should be connected to the Switching Hub.
          When running multiple test instances in parallel on the same network, the Switching Hub should be configured to use filtering in order to avoid multicast traffic being flooded to all ports, because this may affect test stability.
        </para>
        <para>
          <emphasis role="bold">Router:</emphasis> provides router advertisements for IPv6 configuration.
        </para>
      </section>
    </section>
    <section xml:id="overview.prerequisites">
      <title>Prerequisites</title>
      <para>
        The pre-requisites for executing the test cases described in this Test Specification are:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              The DUT shall be configured with an IPv4 address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be IP reachable [in the test configuration].
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be able to be discovered by the Test Tool.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be configured with the time, i.e. manual configuration of UTC time and if NTP is supported by the DUT then NTP time shall be synchronized with NTP Server.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT time and Test tool time shall be synchronized with each other either manually or by a common NTP server.
            </para>
          </listitem>

        </orderedlist>
      </para>

    </section>
    <section xml:id="overview.test_policy">
      <title>Test Policy</title>
      <para>
        This section describes the test policies specific to the test case execution of each functional block.
      </para>
      <para>
        The DUT shall adhere to the test policies defined in this section.
      </para>
      <section xml:id="overview.test_policy.relay_output">
        <title>Relay Output</title>
        <para>
          DUT should respond with proper response message for all SOAP actions. Sending fault messages such as "ter:ConfigurationConflict" will be treated as FAILURE of the test cases.
        </para>
        <para>
          Please refer to <xref linkend="tc.device_io.relay_output"/> and <xref linkend="tc.device_io.relay_output_state"/> for Relay Output Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.events">
        <title>Events</title>
        <para>
          If DUT supports Digital Inputs feature, DUT should support tns1:Device/Trigger/DigitalInput event.
        </para>
        <para>
          Please refer to <xref linkend="tc.device_io.events"/> for Digital Input Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.digital_input">
        <title>Digital Input</title>
        <para>
          DUT should respond with proper response message for all SOAP actions. Sending fault messages such as "ter:ConfigurationConflict" will be treated as FAILURE of the test cases.
        </para>
        <para>
          Please refer to <xref linkend="tc.device_io.digital_input"/> for Digital Input Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.audio_source">
        <title>Digital Input</title>
        <para>
          DUT should respond with proper response message for all SOAP actions.
        </para>
        <para>
          Please refer to <xref linkend="tc.device_io.audio_source"/> for Digital Input Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.video_source">
        <title>Video Source</title>
        <para>
          DUT shall support the following commands:
          <itemizedlist>
            <?dbfo label-width="2.5em"?>
            <listitem>
              <para>
                GetVideoSources
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please refer to <xref linkend="tc.device_io.video_source"/> for Video Source Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.audio_output">
        <title>Audio Output</title>
        <para>
          If DUT supports Media2 Audio Output, then DUT shall support the following commands:
          <itemizedlist>
            <?dbfo label-width="2.5em"?>
            <listitem>
              <para>
                GetAudioOutputs
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please refer to <xref linkend="tc.device_io.audio_output"/> for Audio Output Test Cases.
        </para>
      </section>
    </section>
  </chapter>
  <!--Device IO Test Cases-->
  <chapter xml:id="tc.device_io">
    <title>Device IO Test Cases</title>
    <!--Relay Output-->
    <section xml:id="tc.device_io.relay_output" xreflabel="Section 5.1">
      <title>Relay Output</title>
      <!--DEVICEIO-1-1-1-->
      <section xml:id="tc.DEVICEIO-1-1-1">
        <title>IO GETRELAYOUTPUTS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-1-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRelayOutputs
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To retrieve DUT relay outputs using GetRelayOutputs command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO service is supported by DUT. Relay Outputs supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetRelayOutputs</emphasis> request to retrieve relay outputs supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRelayOutputsResponse</emphasis> message from the DUT.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetRelayOutputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetRelayOutputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent at least two RelayOutputs with the same token.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-1-1-2-->
      <section xml:id="tc.DEVICEIO-1-1-2">
        <title>IO GETRELAYOUTPUTS – VERIFY QUANTITY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-1-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRelayOutputs, GetServiceCapabilities
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the number of Relay outputs from <emphasis role="bold">GetRelayOutputsResponse</emphasis> message.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO service is supported by DUT. Relay Outputs supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT sends <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message. ONVIF Client verifies the response.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetRelayOutputs</emphasis> request to retrieve relay outputs supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                DUT sends <emphasis role="bold">GetRelayOutputsResponse</emphasis> message with a list of relay outputs supported.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetRelayOutputsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the number of Relay Outputs in <emphasis role="bold">GetRelayOutputsResponse</emphasis> message. This number should be equal to the Capabilities.RelayOutputs number in <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetRelayOutputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetRelayOutputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The number of Relay Outputs in <emphasis role="bold">GetRelayOutputsResponse</emphasis> message is not equal to Device.IO.RelayOutputs number from <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-1-1-3-->
      <section xml:id="tc.DEVICEIO-1-1-3">
        <title>IO GETRELAYOUTPUTOPTIONS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-1-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRelayOutputs, GetRelayOutputOptions
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of GetRelayOutputOptions command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO service is supported by DUT. Relay Outputs supported by DUT. Relay Output Options supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetRelayOutputs</emphasis> request to retrieve a list of all available relay outputs and their settings
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sends the <emphasis role="bold">GetRelayOutputsResponse</emphasis> message with list of all available relay outputs and their settings.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies the <emphasis role="bold">GetRelayOutputsResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client selects first relay output from <emphasis role="bold">GetRelayOutputsResponse</emphasis> message, saves this relay output in <emphasis role="italic">RelayOutput1</emphasis> variable. Then it runs the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetRelayOutputOptions</emphasis> request RelayOutputToken = <emphasis role="italic">RelayOutput1</emphasis> token as input parameter.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT sends <emphasis role="bold">GetRelayOutputOptionsResponse</emphasis>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF client verifies the <emphasis role="bold">GetRelayOutputOptionsResponse</emphasis> message.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetRelayOutputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetRelayOutputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an empty list of RelayOutputs in <emphasis role="bold">GetRelayOutputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetRelayOutputOptionsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetRelayOutputOptionsResponse</emphasis> message.

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-1-1-4-->
      <section xml:id="tc.DEVICEIO-1-1-4">
        <title>IO SETRELAYOUTPUTSETTINGS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-1-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Get relay outputs (Device IO), Get relay output options (Device IO), Set relay output settings (Device IO)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRelayOutputs, SetRelayOutputSettings, GetRelayOutputOptions
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of SetRelayOutputSettings command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO service is supported by DUT. Relay Outputs is supported by DUT. Relay Output Options supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetRelayOutputs</emphasis> request to retrieve a list of all available relay outputs and their settings.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sends the <emphasis role="bold">GetRelayOutputsResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      RelayOutputs list =: <emphasis role="italic">relayOutputsList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">relayOutputsList</emphasis> is empty, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each relay output <emphasis role="italic">relayOutput1</emphasis> in <emphasis role="italic">relayOutputsList</emphasis> list repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetRelayOutputOptions</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            RelayOutputToken := <emphasis role="italic">relayOutput1</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetRelayOutputOptionsResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            RelayOutputOptions list := <emphasis role="italic">relayOutputOptionsList</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">relayOutputOptionsList</emphasis> is empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">relayOutputOptionsList</emphasis> contains more then one item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">relayOutputOptionsList</emphasis>[0].@token != <emphasis role="italic">relayOutput1</emphasis>.@token, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">relayOutputOptionsList</emphasis>[0].Mode list contains item equal to Bistable:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            Set <emphasis role="italic">idleState</emphasis> := ['open', if Bistable Mode\Open Idle State is supported by <emphasis role="italic">relayOutput1</emphasis>, otherwise 'closed'].
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">SetRelayOutputSettings</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  RelayOutput.@token := <emphasis role="italic">relayOutput1</emphasis>.@token
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  RelayOutput.Properties.Mode := Bistable
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  RelayOutput.Properties.DelayTime := <emphasis role="italic">relayOutput1</emphasis>.Properties.DelayTime
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  RelayOutput.Properties.IdleState := <emphasis role="italic">idleState</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">SetRelayOutputSettingsResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetRelayOutputs</emphasis> request to retrieve a list of all available relay outputs and their settings.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT sends the <emphasis role="bold">GetRelayOutputsResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  RelayOutputs list =: <emphasis role="italic">updatedRelayOutputsList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">updatedRelayOutputsList</emphasis> do not contiens item with @token = <emphasis role="italic">relayOutput1</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Set <emphasis role="italic">updatedRelayOutput1</emphasis> := item from <emphasis role="italic">updatedRelayOutputsList</emphasis> list with @token = <emphasis role="italic">relayOutput1</emphasis>.@token.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">updatedRelayOutput1</emphasis>.Properties.Mode != Bistable, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">updatedRelayOutput1</emphasis>.Properties.IdleState != <emphasis role="italic">idleState</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">relayOutputOptionsList</emphasis>[0].Mode list contains item equal to Monostable:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">relayOutputOptionsList</emphasis>[0].DelayTimes is skipped, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">relayOutputOptionsList</emphasis>[0].Discrete is skipped or equal to false:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">relayOutputOptionsList</emphasis>[0].DelayTimes list do not contains two items, FAIL the test and skip other steps.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">relayOutputOptionsList</emphasis>[0].DelayTimes[0] > <emphasis role="italic">relayOutputOptionsList</emphasis>[0].DelayTimes[1], FAIL the test and skip other steps.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Set <emphasis role="italic">delayTime</emphasis> := nearest to 5 seconds value from the range between <emphasis role="italic">relayOutputOptionsList</emphasis>[0].DelayTimes[0] and <emphasis role="italic">relayOutputOptionsList</emphasis>[0].DelayTimes[1].
                                </para>
                              </listitem>
                            </orderedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">relayOutputOptionsList</emphasis>[0].Discrete = true:
                            <orderedlist numeration="arabic" inheritnum="inherit">
                              <?dbfo label-width="4.5em"?>
                              <listitem>
                                <para>
                                  If <emphasis role="italic">relayOutputOptionsList</emphasis>[0].DelayTimes list do not contains at least one item, FAIL the test and skip other steps.
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  Set <emphasis role="italic">delayTime</emphasis> := nearest to 5 seconds value from <emphasis role="italic">relayOutputOptionsList</emphasis>[0].DelayTimes list.
                                </para>
                              </listitem>
                            </orderedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Set <emphasis role="italic">idleState</emphasis> := ['closed', if Monostable Mode\Closed Idle State is supported by <emphasis role="italic">relayOutput1</emphasis>, otherwise 'open'].
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">SetRelayOutputSettings</emphasis> request with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  RelayOutput.@token := <emphasis role="italic">relayOutput1</emphasis>.@token
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  RelayOutput.Properties.Mode := Monostable
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  RelayOutput.Properties.DelayTime := <emphasis role="italic">delayTime</emphasis>
                                </para>
                              </listitem>
                              <listitem>
                                <para>
                                  RelayOutput.Properties.IdleState := <emphasis role="italic">idleState</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT responds with <emphasis role="bold">SetRelayOutputSettingsResponse</emphasis> message.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetRelayOutputs</emphasis> request to retrieve a list of all available relay outputs and their settings.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT sends the <emphasis role="bold">GetRelayOutputsResponse</emphasis> message with parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  RelayOutputs list =: <emphasis role="italic">updatedRelayOutputsList</emphasis>
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">updatedRelayOutputsList</emphasis> do not contiens item with @token = <emphasis role="italic">relayOutput1</emphasis>.@token, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Set <emphasis role="italic">updatedRelayOutput1</emphasis> := item from <emphasis role="italic">updatedRelayOutputsList</emphasis> list with @token = <emphasis role="italic">relayOutput1</emphasis>.@token.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">updatedRelayOutput1</emphasis>.Properties.Mode != Monostable, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">updatedRelayOutput1</emphasis>.Properties.IdleState != <emphasis role="italic">idleState</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">updatedRelayOutput1</emphasis>.Properties.DelayTime != <emphasis role="italic">delayTime</emphasis>, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">SetRelayOutputSettings</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            RelayOutput := <emphasis role="italic">relayOutput1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">SetRelayOutputSettingsResponse</emphasis> message.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetRelayOutputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetRelayOutputOptionsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetRelayOutputSettingsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-1-1-5-->
      <section xml:id="tc.DEVICEIO-1-1-5">
        <title>IO SETRELAYOUTPUTSETTINGS – INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-1-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetRelayOutputSettings
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior ofSetRelayOutputSettings command in case of invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO service is supported by DUT. Relay Outputs supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">SetRelayOutputSettings</emphasis> request with RelayOutput token = "OnvifTest123".
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:RelayToken</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies fault message.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Relay Output State-->
    <section xml:id="tc.device_io.relay_output_state" xreflabel="Section 5.2">
      <title>Relay Output State</title>
      <!--DEVICEIO-1-2-1-->
      <section xml:id="tc.DEVICEIO-1-2-1">
        <title>IO SETRELAYOUTPUTSTATE – BISTABLE MODE (OPENED IDLE STATE)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-1-2-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Relay Output Trigger (ONVIF Device IO Service Specification), Set relay output settings (ONVIF Device IO Service Specification), Trigger relay output (ONVIF Device IO Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRelayOutputs, SetRelayOutputSettings, SetRelayOutputState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of SetRelayOutputState command in the case of bistable mode and opened idle state as well as appropriate event messaging.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Relay Outputs is supported by the DUT. Bistable Mode with Open Idle State is supported by the DUT for at lease one Relay Output. Profile T is supported by the DUT. Relay Output Options supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client selects the first relay output which supports required Relay Mode and Idle State for this mode by following the procedure mentioned in <xref linkend="Annex_HelperSelectRelayOutputWithRequiredMode"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in Bistable – required Relay Mode
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in open – required Idle State for the Relay Mode
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">relayOutput</emphasis> - Relay Output
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">relayOutputOptions</emphasis> - Relay Output Options
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">initialRelayOutput</emphasis> := <emphasis role="italic">relayOutput</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription Reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription Termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Initialized - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">initialLogicalState</emphasis> - Current Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">SetRelayOutputSettings</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      RelayOutput.@token := <emphasis role="italic">relayOutput</emphasis>.@token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      RelayOutput.Properties.Mode := Bistable
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      RelayOutput.Properties.DelayTime := <emphasis role="italic">relayOutput</emphasis>.Properties.DelayTime
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      RelayOutput.Properties.IdleState := open
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetRelayOutputSettingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">newLogicalState</emphasis> := active if <emphasis role="italic">initialLogicalState</emphasis> = inactive, otherwise inactive
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">SetRelayOutputState</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      RelayOutputToken := <emphasis role="italic">relayOutput</emphasis>.@token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      LogicalState := <emphasis role="italic">newLogicalState</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetRelayOutputStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Changed - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">updatedLogicalState1</emphasis> - Current Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">updatedLogicalState1</emphasis> != <emphasis role="italic">newLogicalState</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">SetRelayOutputState</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      RelayOutputToken := <emphasis role="italic">relayOutput</emphasis>.@token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      LogicalState := <emphasis role="italic">initialLogicalState</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetRelayOutputStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Changed - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">updatedLogicalState2</emphasis> - Current Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">updatedLogicalState2</emphasis> != <emphasis role="italic">initialLogicalState</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores initial Relay Output settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreRelayOutput"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">initialRelayOutput</emphasis> – Relay Output to restore
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetRelayOutputSettingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetRelayOutputStateResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-1-2-2-->
      <section xml:id="tc.DEVICEIO-1-2-2">
        <title>IO SETRELAYOUTPUTSTATE – BISTABLE MODE (CLOSED IDLE STATE)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-1-2-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Relay Output Trigger (ONVIF Device IO Service Specification), Set relay output settings (ONVIF Device IO Service Specification), Trigger relay output (ONVIF Device IO Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRelayOutputs, SetRelayOutputSettings, SetRelayOutputState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of SetRelayOutputState command in the case of bistable mode and closed idle state.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Relay Outputs is supported by the DUT. Bistable Mode with Closed Idle State is supported by the DUT for at lease one Relay Output. Profile T is supported by the DUT. Relay Output Options supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client selects the first relay output which supports required Relay Mode and Idle State for this mode by following the procedure mentioned in <xref linkend="Annex_HelperSelectRelayOutputWithRequiredMode"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in Bistable – required Relay Mode
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in closed – required Idle State for the Relay Mode
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">relayOutput</emphasis> - Relay Output
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">relayOutputOptions</emphasis> - Relay Output Options
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">initialRelayOutput</emphasis> := <emphasis role="italic">relayOutput</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription Reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription Termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Initialized - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">initialLogicalState</emphasis> - Current Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">SetRelayOutputSettings</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      RelayOutput.@token := <emphasis role="italic">relayOutput</emphasis>.@token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      RelayOutput.Properties.Mode := Bistable
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      RelayOutput.Properties.DelayTime := <emphasis role="italic">relayOutput</emphasis>.Properties.DelayTime
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      RelayOutput.Properties.IdleState := closed
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetRelayOutputSettingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">newLogicalState</emphasis> := active if <emphasis role="italic">initialLogicalState</emphasis> = inactive, otherwise inactive
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">SetRelayOutputState</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      RelayOutputToken := <emphasis role="italic">relayOutput</emphasis>.@token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      LogicalState := <emphasis role="italic">newLogicalState</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetRelayOutputStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Changed - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">updatedLogicalState1</emphasis> - Current Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">updatedLogicalState1</emphasis> != <emphasis role="italic">newLogicalState</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">SetRelayOutputState</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      RelayOutputToken := <emphasis role="italic">relayOutput</emphasis>.@token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      LogicalState := <emphasis role="italic">initialLogicalState</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetRelayOutputStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Changed - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">updatedLogicalState2</emphasis> - Current Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">updatedLogicalState2</emphasis> != <emphasis role="italic">initialLogicalState</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores initial Relay Output settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreRelayOutput"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">initialRelayOutput</emphasis> – Relay Output to restore
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetRelayOutputSettingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetRelayOutputStateResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-1-2-3-->
      <section xml:id="tc.DEVICEIO-1-2-3">
        <title>IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (OPENED IDLE STATE)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-1-2-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Relay Output Trigger (ONVIF Device IO Service Specification), Set relay output settings (ONVIF Device IO Service Specification), Trigger relay output (ONVIF Device IO Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRelayOutputs, SetRelayOutputSettings, SetRelayOutputState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of SetRelayOutputState command in the case of Monostable mode and opened idle state as well as appropriate event messaging.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Relay Outputs is supported by the DUT. Monostable Mode with Open Idle State is supported by the DUT for at lease one Relay Output. Profile T is supported by the DUT. Relay Output Options supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client selects the first relay output which supports required Relay Mode and Idle State for this mode by following the procedure mentioned in <xref linkend="Annex_HelperSelectRelayOutputWithRequiredMode"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in Monostable – required Relay Mode
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in open – required Idle State for the Relay Mode
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">relayOutput</emphasis> - Relay Output
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">relayOutputOptions</emphasis> - Relay Output Options of selected Relay Output
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">relayOutputOptions</emphasis>.Discrete value is equal to true and <emphasis role="italic">relayOutputOptions</emphasis> does not contain DelayTimes element, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">initialRelayOutput</emphasis> := <emphasis role="italic">relayOutput</emphasis> to save initial Relay Output settings for restore procedure.
              </para>
            </listitem>
            <!--<listitem>
              <para>
                Set <emphasis role="italic">delayTime</emphasis> := <emphasis role="italic">relayOutputOptions</emphasis>.DelayTimes[0]
              </para>
            </listitem>-->    
            <listitem>
              <para>
                Set <emphasis role="italic">delayTime</emphasis> := [value from <emphasis role="italic">relayOutputOptions</emphasis>.DelayTimes list closest to 5 seconds if <emphasis role="italic">relayOutputOptions</emphasis>.Discrete = true, otherwise PT5S].
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client moves Relay Output to Monostable Mode with Inactive Logical State by following the procedure mentioned in <xref linkend="Annex_HelperSetRelayOptputToMonostableInactive"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>  
                   <listitem>
                    <para>
                      in open -  Required Idle State
                    </para>
                  </listitem>  
                  <listitem>
                    <para>
                      in <emphasis role="italic">delayTime</emphasis> -  Required Delay Time
                    </para>
                  </listitem>                
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription Reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription Termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Initialized - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">initialLogicalState</emphasis> - Current Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
             <listitem>
                    <para>
                      If <emphasis role="italic">initialLogicalState</emphasis> != inactive, FAIL the test, restore the DUT state, and skip other steps. 
                    </para>
                  </listitem>
            
            <!--<listitem>
              <para>
                Set <emphasis role="italic">newLogicalState</emphasis> := active if <emphasis role="italic">initialLogicalState</emphasis> = inactive, otherwise inactive.
              </para>
            </listitem>-->
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">SetRelayOutputState</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      RelayOutputToken := <emphasis role="italic">relayOutput</emphasis>.@token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      LogicalState := active
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetRelayOutputStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Changed - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">updatedLogicalState1</emphasis> - Current Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">updatedLogicalState1</emphasis> != active, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client waits until <emphasis role="italic">delayTime</emphasis> timeout is expired.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Changed - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">updatedLogicalState2</emphasis> - Current Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">updatedLogicalState2</emphasis> != inactive, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores initial Relay Output settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreRelayOutput"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">initialRelayOutput</emphasis> – Relay Output to restore
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetRelayOutputSettingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetRelayOutputStateResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-1-2-4-->
      <section xml:id="tc.DEVICEIO-1-2-4">
        <title>IO SETRELAYOUTPUTSTATE – MONOSTABLE MODE (CLOSED IDLE STATE)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-1-2-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Relay Output Trigger (ONVIF Device IO Service Specification), Set relay output settings (ONVIF Device IO Service Specification), Trigger relay output (ONVIF Device IO Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetRelayOutputs, SetRelayOutputSettings, SetRelayOutputState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of SetRelayOutputState command in the case of monostable mode and closed idle state.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Relay Outputs is supported by the DUT. Monostable Mode with Closed Idle State is supported by the DUT for at lease one Relay Output. Profile T is supported by the DUT. Relay Output Options supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client selects the first relay output which supports required Relay Mode and Idle State for this mode by following the procedure mentioned in <xref linkend="Annex_HelperSelectRelayOutputWithRequiredMode"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in Monostable – required Relay Mode
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in closed – required Idle State for the Relay Mode
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">relayOutput</emphasis> - Relay Output
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">relayOutputOptions</emphasis> - Relay Output Options of selected Relay Output
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">relayOutputOptions</emphasis>.Discrete value is equal to true and <emphasis role="italic">relayOutputOptions</emphasis> does not contain DelayTimes element, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">initialRelayOutput</emphasis> := <emphasis role="italic">relayOutput</emphasis> to save initial Relay Output settings for restore procedure.
              </para>
            </listitem>
            <!--<listitem>
              <para>
                Set <emphasis role="italic">delayTime</emphasis> := <emphasis role="italic">relayOutputOptions</emphasis>.DelayTimes[0]
              </para>
            </listitem>-->    
            <listitem>
              <para>
                Set <emphasis role="italic">delayTime</emphasis> := [value from <emphasis role="italic">relayOutputOptions</emphasis>.DelayTimes list closest to 5 seconds if <emphasis role="italic">relayOutputOptions</emphasis>.Discrete = true, otherwise PT5S].
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client moves Relay Output to Monostable Mode with Inactive Logical State by following the procedure mentioned in <xref linkend="Annex_HelperSetRelayOptputToMonostableInactive"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>  
                   <listitem>
                    <para>
                      in closed -  Required Idle State
                    </para>
                  </listitem>  
                  <listitem>
                    <para>
                      in <emphasis role="italic">delayTime</emphasis> -  Required Delay Time
                    </para>
                  </listitem>                
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription Reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription Termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Initialized - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">initialLogicalState</emphasis> - Current Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
             <listitem>
                    <para>
                      If <emphasis role="italic">initialLogicalState</emphasis> != inactive, FAIL the test, restore the DUT state, and skip other steps. 
                    </para>
                  </listitem>
            
            <!--<listitem>
              <para>
                Set <emphasis role="italic">newLogicalState</emphasis> := active if <emphasis role="italic">initialLogicalState</emphasis> = inactive, otherwise inactive.
              </para>
            </listitem>-->
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">SetRelayOutputState</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      RelayOutputToken := <emphasis role="italic">relayOutput</emphasis>.@token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      LogicalState := active
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetRelayOutputStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Changed - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">updatedLogicalState1</emphasis> - Current Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">updatedLogicalState1</emphasis> != active, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client waits until <emphasis role="italic">delayTime</emphasis> timeout is expired.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutput</emphasis>.@token - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Changed - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">updatedLogicalState2</emphasis> - Current Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">updatedLogicalState2</emphasis> != inactive, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores initial Relay Output settings by following the procedure mentioned in <xref linkend="Annex_HelperRestoreRelayOutput"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">initialRelayOutput</emphasis> – Relay Output to restore
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetRelayOutputSettingsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetRelayOutputStateResponse</emphasis> message.

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Events-->
    <section xml:id="tc.device_io.events" xreflabel="Section 5.3">
      <title>Events</title>
      <!--DEVICEIO-2-1-1-->
      <section xml:id="tc.DEVICEIO-2-1-1">
        <title>REALTIME PULLPOINT SUBSCRIPTION – DIGITAL INPUT EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-2-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DigitalInput State Change (Device IO)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:Device/Trigger/DigitalInput
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Device/Trigger/DigitalInput event generation after subscription and to verify tns1:Device/Trigger/DigitalInput event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device supports Digital Inputs feature. Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain <emphasis role="bold">tns1:Device/Trigger/DigitalInput</emphasis> topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies <emphasis role="bold">tns1:Device/Trigger/DigitalInput</emphasis> topic (<emphasis role="italic">triggerDigitalInput</emphasis>) from <emphasis role="italic">topicSet</emphasis>:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">triggerDigitalInput</emphasis>.MessageDescription.IsProperty is skipped or equals false, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">triggerDigitalInput</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name = "InputToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">triggerDigitalInput</emphasis>.MessageDescription.Source.SimpleItemDescription with Name = "InputToken" does not have Type = "tt:ReferenceToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">triggerDigitalInput</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "LogicalState", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">triggerDigitalInput</emphasis>.MessageDescription.Data.SimpleItemDescription item with Name = "LogicalState" does not have Type = "xs:boolean", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Filter.TopicExpression := "tns1:Device/Trigger/DigitalInput"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SubscriptionReference =: <emphasis role="italic">s</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CurrentTime
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TerminationTime
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DEVICEIO-2-1-1.9" xreflabel="9">
              <para>
                Until <emphasis role="italic">timeout1</emphasis> timeout expires, repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Timeout := PT60S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            MessageLimit := 1
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            CurrentTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TerminationTime
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            NotificationMessage =: <emphasis role="italic">m</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">m</emphasis> is not null and <emphasis role="italic">m</emphasis> Message.Message.PropertyOperation = Initialized ONVIF Client verifies <emphasis role="italic">m</emphasis>:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">m</emphasis>.Topic does not equal to <emphasis role="bold">tns1:Device/Trigger/DigitalInput</emphasis>, FAIL the test and go to the step <xref linkend="tc.DEVICEIO-2-1-1.10"/>.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">m</emphasis> does not contain Message.Message.Source.SimpleItem.InputToken, FAIL the test and go to the step <xref linkend="tc.DEVICEIO-2-1-1.10"/>.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">m</emphasis>.Message.Message.Source.SimpleItem.InputToken has value type different from tt:ReferenceToken type, FAIL the test and go to the step <xref linkend="tc.DEVICEIO-2-1-1.10"/>.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">m</emphasis> does not contain Message.Message.Data.SimpleItem.LogicalState, FAIL the test and go to the step <xref linkend="tc.DEVICEIO-2-1-1.10"/>.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            If <emphasis role="italic">m</emphasis>.Message.Message.Data.SimpleItem.LogicalState has value type different from xs:boolean type, FAIL the test and go to the step <xref linkend="tc.DEVICEIO-2-1-1.10"/>.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Go to the step <xref linkend="tc.DEVICEIO-2-1-1.10"/>.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">timeout1</emphasis> timeout expires for step <xref linkend="tc.DEVICEIO-2-1-1.9"/> without Notification with PropertyOperation = Initialized, FAIL the test and go to the step <xref linkend="tc.DEVICEIO-2-1-1.10"/>.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.DEVICEIO-2-1-1.10" xreflabel="10">
              <para>
                ONVIF Client invokes <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message(s).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">timeout1</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--DEVICEIO-2-1-2-->
      <section xml:id="tc.DEVICEIO-2-1-2">
        <title>DEVICE IO TRIGGER EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-2-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Relay Output Trigger (Device IO Service)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetEventProperties
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Device/Trigger/Relay event format in TopicSet.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO service is supported by DUT. Event service is supported by DUT. Relay Outputs supported by DUT. Profile T is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:Device/Trigger/Relay topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:Device/Trigger/Relay topic (<emphasis role="italic">triggerTopic</emphasis>) from <emphasis role="italic">topicSet</emphasis>:
                <itemizedlist>
                  <listitem>
                    <para>
                      If <emphasis role="italic">triggerTopic</emphasis>.MessageDescription.IsProperty does not equal to true, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">triggerTopic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name = "RelayToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">triggerTopic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name = "RelayToken" does not have Type = "tt:ReferenceToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">triggerTopic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "LogicalState", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">triggerTopic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "LogicalState" does not have Type = "tt:RelayLogicalState", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Digital Input-->
    <section xml:id="tc.device_io.digital_input" xreflabel="Section 5.4">
      <title>Digital Input</title>
      <!--DEVICEIO-3-1-1-->
      <section xml:id="tc.DEVICEIO-3-1-1">
        <title>IO GETDIGITALINPUTS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-3-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDigitalInputs
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the DUT returns proper message for GetDigitalInputs request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO service is supported by DUT. Digital Inputs is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends <emphasis role="bold">GetDigitalInputs</emphasis> request to DUT to retrieve the list of supported digital input configurations.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sends <emphasis role="bold">GetDigitalInputsResponse</emphasis> message with the list of supported DigitalInputs.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetDigitalInputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">GetDigitalInputsResponse</emphasis> message did not contain Digital Inputs.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-3-1-2-->
      <section xml:id="tc.DEVICEIO-3-1-2">
        <title>IO GETDIGITALINPUTS – VERIFY QUANTITY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-3-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDigitalInputs, GetServiceCapabilities
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the DUT returns proper message for GetDigitalInputs request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO service is supported by DUT. Digital Inputs is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sends <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> with the capabilities of the device IO service.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client sends <emphasis role="bold">GetDigitalInputs</emphasis> request to DUT to retrieve the list of supported digital input configurations.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sends <emphasis role="bold">GetDigitalInputsResponse</emphasis> message with the list of supported DigitalInputs.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies the number of digital inputs in <emphasis role="bold">GetDigitalInputsResponse</emphasis> message. This number should be equal to the Capabilities.DigitalInputsnumber in <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.

              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetDigitalInputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect <emphasis role="bold">GetDigitalInputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent empty list of DigitalInputsin <emphasis role="bold">GetDigitalInputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The number of Digital Inputs in <emphasis role="bold">GetDigitalInputsResponse</emphasis> message is not equal to Capabilities.DigitalInputs number from <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-3-1-3-->
      <section xml:id="tc.DEVICEIO-3-1-3">
        <title>IOGET DIGITAL INPUT CONFIGURATION OPTIONS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-3-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDigitalInputs, GetDigitalInputConfigurationOptions
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of GetDigitalInputConfigurationOptions command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO service is supported by DUT. Digital Inputs is supported by DUT. Digital Input Options is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetDigitalInputs</emphasis> request to DUT to retrieve the list of supported digital input configurations.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sends <emphasis role="bold">GetDigitalInputsResponse</emphasis> message with the list of supported digital inputs.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetDigitalInputConfigurationOptions</emphasis> message to DUT to retrieve the generic input configuration options.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sends <emphasis role="bold">GetDigitalInputConfigurationOptionsResponse</emphasis> message with generic digital input configuration options.
              </para>
            </listitem>
            <listitem>
              <para>
                For each digital input in <emphasis role="bold">GetDigitalInputsResponse</emphasis> message, ONVIF Client saves this digital input in <emphasis role="italic">DigitalInput1</emphasis> variable and runs the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetDigitalInputConfigurationOptions</emphasis> request with Token = <emphasis role="italic">DigitalInput1</emphasis> token as input argument.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT sends <emphasis role="bold">GetDigitalInputConfigurationOptionsResponse</emphasis> message with configuration options for the given token.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetDigitalInputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">GetDigitalInputsResponse</emphasis> message did not contain Digital Inputs.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT Did not send <emphasis role="bold">GetDigitalInputConfigurationOptionsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">GetDigitalInputConfigurationOptionsResponse</emphasis> message did not contain Digital Input Options.

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-3-1-4-->
      <section xml:id="tc.DEVICEIO-3-1-4">
        <title>IO DIGITAL INPUT CONFIGURATION</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-3-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> None
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetDigitalInputs, GetDigitalInputConfigurationOptions, SetDigitalInputConfigurations
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of GetDigitalInputs, GetDigitalInputConfigurationOptions, SetDigitalInputConfigurations commands.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO service is supported by DUT. Digital Inputs is supported by DUT. Digital Input Options is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetDigitalInputs</emphasis> request to DUT to retrieve the list of supported digital input configurations.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sends <emphasis role="bold">GetDigitalInputsResponse</emphasis> message with the list of supported DigitalInputs.
              </para>
            </listitem>
            <listitem>
              <para>
                For each digital input in <emphasis role="bold">GetDigitalInputsResponse</emphasis> message, ONVIF Client saves this digital input in <emphasis role="italic">DigitalInput1</emphasis> variable and runs the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetDigitalInputConfigurationOptions</emphasis> request with Token = <emphasis role="italic">DigitalInput1</emphasis> token as input argument.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT sends <emphasis role="bold">GetDigitalInputConfigurationOptionsResponse</emphasis> message with configuration options for the given token.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="bold">GetDigitalInputConfigurationOptionsResponse</emphasis> message contains DigitalInputOptionsIdleState = closed then run the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            ONVIF Client changes <emphasis role="italic">DigitalInput1</emphasis> IdleState property to closed.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">SetDigitalInputConfigurations</emphasis> request with <emphasis role="italic">DigitalInput1</emphasis> as input argument.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT sends <emphasis role="bold">SetDigitalInputConfigurationsResponse</emphasis> message. ONVIF Client verifies the response.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetDigitalInputs</emphasis> request.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT sends <emphasis role="bold">GetDigitalInputsResponse</emphasis> message with the list of Digital Inputs.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client verifies that the <emphasis role="bold">GetDigitalInputsResponse</emphasis> message contains digital input with token = <emphasis role="italic">DigitalInput1</emphasis> token, also it verifies that IdleState value equals to the value set up in the step 5.3.1.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="bold">GetDigitalInputConfigurationOptionsResponse</emphasis> message contains DigitalInputOptions.IdleState = open then run the following steps:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem>
                          <para>
                            ONVIF Client changes <emphasis role="italic">DigitalInput1</emphasis>.IdleState property to open.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">SetDigitalInputConfigurations</emphasis> request with <emphasis role="italic">DigitalInput1</emphasis> as input argument.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT sends <emphasis role="bold">SetDigitalInputConfigurationsResponse</emphasis> message. ONVIF Client verifies the response.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client invokes <emphasis role="bold">GetDigitalInputs</emphasis> request.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            The DUT sends <emphasis role="bold">GetDigitalInputsResponse</emphasis> message with the list of Digital Inputs.
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ONVIF Client verifies that the <emphasis role="bold">GetDigitalInputsResponse</emphasis> message contains digital input with token = <emphasis role="italic">DigitalInput1</emphasis> token, also it verifies that IdleState value equals to the value set up in the step 5.4.1.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>


          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetDigitalInputsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">GetDigitalInputsResponse</emphasis> message did not contain Digital Inputs.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT Did not send <emphasis role="bold">GetDigitalInputConfigurationOptionsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The <emphasis role="bold">GetDigitalInputConfigurationOptionsResponse</emphasis> message did not contain Digital Input Options.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetDigitalInputConfigurationsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not change IdleState.

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Audio Source-->
    <section xml:id="tc.device_io.audio_source" xreflabel="Section 5.5">
      <title>Audio Source</title>
      <!--DEVICEIO-4-1-1-->
      <section xml:id="tc.DEVICEIO-4-1-1">
        <title>IO GET AUDIO SOURCES</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-4-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAudioSources (ONVIF Device IO Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAudioSources
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving supported Audio Sources.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Media2 Service is supported by Device. Media2 Audio is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioSource capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetAudioSources</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAudioSourcesResponse</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list =: <emphasis role="italic">audioSourcesList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">audioSourcesList</emphasis> is empty, FAIL the test.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAudioSourcesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Consistency-->
    <section xml:id="tc.device_io.consistency" xreflabel="Section 5.6">
      <title>Consistency</title>
      <!--DEVICEIO-5-1-1-->
      <section xml:id="tc.DEVICEIO-5-1-1">
        <title>GET VIDEOSOURCES (DeviceIO) AND GET VIDEOSOURCES (Media) CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-5-1-1
        </para>
        <para>
          <emphasis role="bold">Specification coverage:</emphasis> GetVideoSources (Media Service Specification), GetVideoSources (Device IO Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature under test:</emphasis> GetVideoSources (DeviceIO), GetVideoSources (Media)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> media.wsdl, deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify GetVideoSources (DeviceIO) and GetVideoSources (Media) consistency.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Media Service is received from the DUT. DeviceIO Service is received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetVideoSources</emphasis> (DeviceIO) request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetVideoSourcesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list =: <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetVideoSources</emphasis> (Media) request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetVideoSourcesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      VideoSources list =: <emphasis role="italic">videoSourcesList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">tokenList</emphasis> is not equal to list of @token items from <emphasis role="italic">videoSourcesList</emphasis> list, FAIL the test.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetVideoSources</emphasis> (DeviceIO) message.
              </para>
              <para>
                DUT did not send <emphasis role="bold">GetVideoSources</emphasis> (Media) message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Serial Port-->
    <section xml:id="tc.device_io.serial_port" xreflabel="Section 5.7">
      <title>Serial Port</title>
      <!--DEVICEIO-6-1-1-->
      <section xml:id="tc.DEVICEIO-6-1-1">
        <title>IO GET SERIAL PORTS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-6-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetSerialPorts (Device IO Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSerialPorts
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving of DUT Serial Ports using GetSerialPorts command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Serial Port is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Device IO Service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - Device IO Service capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetSerialPorts</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetSerialPortsResponse</emphasis> message with parameters:
                <itemizedlist>
                  <listitem>
                    <para>
                      SerialPort list =: <emphasis role="italic">serialPortList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If number of items in <emphasis role="italic">serialPortList</emphasis> is not equal to <emphasis role="italic">cap</emphasis>.SerialPorts, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">serialPortList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSerialPortsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-6-1-2-->
      <section xml:id="tc.DEVICEIO-6-1-2">
        <title>IO GET SERIAL PORT CONFIGURATION AND GET SERIAL PORT OPTIONS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-6-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetSerialPortConfiguration (Device IO Service Specification), GetSerialPortConfigurationOptions (Device IO Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSerialPortConfiguration, GetSerialPortConfigurationOptions
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving of DUT Serial Port Configuration using GetSerialPortConfiguration command. To verify retrieving of DUT Serial Port Configuration Options using GetSerialPortConfigurationOptions command. To verify that all Serial Port Configurations are consistent with Serial Port Configuration Options.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Serial Port is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Serial Ports list by following the procedure mentioned in <xref linkend="Annex_HelperGetSerialPortsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">serialPortList</emphasis> - Serial Ports list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each SerialPort <emphasis role="italic">serialPort</emphasis> in <emphasis role="italic">serialPortList</emphasis> list repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetSerialPortConfiguration</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortToken := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSerialPortConfigurationResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortConfiguration  =: <emphasis role="italic">serialPortConfiguration</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">serialPortConfiguration</emphasis>.@token not equal to <emphasis role="italic">serialPort</emphasis>.@token, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetSerialPortConfigurationOptions</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortToken := <emphasis role="italic">serialPortConfiguration</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSerialPortConfigurationOptionsResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortOptions =: <emphasis role="italic">serialPortOptions</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">serialPortConfiguration</emphasis>.@token is not equal to <emphasis role="italic">serialPortOptions</emphasis>.@token, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">serialPortOptions</emphasis>.BaudRateList.Items list is empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">serialPortOptions</emphasis>.ParityBitList.Items list is empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">serialPortOptions</emphasis>.CharacterLengthList.Items list is empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">serialPortOptions</emphasis>.StopBitList.Items list is empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">serialPortConfiguration</emphasis>.BaudRate is not in <emphasis role="italic">serialPortOptions</emphasis>.BaudRateList.Items list, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">serialPortConfiguration</emphasis>.ParityBit is not in <emphasis role="italic">serialPortOptions</emphasis>.ParityBitList.Items list, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">serialPortConfiguration</emphasis>.CharacterLength is not in <emphasis role="italic">serialPortOptions</emphasis>.CharacterLengthList.Items list, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">serialPortConfiguration</emphasis>.StopBit is not in <emphasis role="italic">serialPortOptions</emphasis>.StopBitList.Items list, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSerialPortConfigurationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSerialPortConfigurationOptionsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-6-1-3-->
      <section xml:id="tc.DEVICEIO-6-1-3">
        <title>IO MODIFY SERIAL PORT CONFIGURATION</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-6-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SetSerialPortConfiguration (Device IO Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetSerialPortConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modification of Serial Port Configuration using SetSerialPortConfiguration command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Serial Port is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Serial Ports list by following the procedure mentioned in <xref linkend="Annex_HelperGetSerialPortsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">serialPortList</emphasis> - Serial Ports list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each SerialPort <emphasis role="italic">serialPort</emphasis> in <emphasis role="italic">serialPortList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetSerialPortConfiguration</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortToken := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSerialPortConfigurationResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortConfiguration  =: <emphasis role="italic">initialSerialPortConfig</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetSerialPortConfigurationOptions</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortToken := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSerialPortConfigurationOptionsResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortOptions =: <emphasis role="italic">serialPortOptions</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem xml:id="tc.DEVICEIO-6-1-3.4.5" xreflabel="4.5">
                    <para>
                      ONVIF Client invokes <emphasis role="bold">SetSerialPortConfiguration</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortConfiguration.token := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.type := <emphasis role="italic">initialSerialPortConfig</emphasis>.@type
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.BaudRate := <emphasis role="italic">serialPortOptions</emphasis>.BaudRateList.Items[0] (if this value is equal to current, the next item in the list should be used)
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.ParityBit := <emphasis role="italic">serialPortOptions</emphasis>.ParityBitList.Items[0] (if this value is equal to current, the next item in the list should be used)
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.CharacterLength := <emphasis role="italic">serialPortOptions</emphasis>.CharacterLengthList.Items[0] (if this value is equal to current, the next item in the list should be used)
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.StopBit := <emphasis role="italic">serialPortOptions</emphasis>.StopBitList.Items[0] (if this value is equal to current, the next item in the list should be used)
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ForcePersistance := false
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">SetSerialPortConfigurationResponse</emphasis> message.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetSerialPortConfiguration</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortToken := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSerialPortConfigurationResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortConfiguration  =: <emphasis role="italic">serialPortConfiguration</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">serialPortConfiguration</emphasis> is not equal to Serial Port Configuration from step <xref linkend="tc.DEVICEIO-6-1-3.4.5"/>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem xml:id="tc.DEVICEIO-6-1-3.4.10" xreflabel="4.10">
                    <para>
                      ONVIF Client invokes <emphasis role="bold">SetSerialPortConfiguration</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortConfiguration.token := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.type := <emphasis role="italic">serialPortConfiguration</emphasis>.type
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.BaudRate := <emphasis role="italic">serialPortOptions</emphasis>.BaudRateList.Items[last]
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.ParityBit := <emphasis role="italic">serialPortOptions</emphasis>.ParityBitList.Items[last]
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.CharacterLength := <emphasis role="italic">serialPortOptions</emphasis>.CharacterLengthList.Items[last]
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.StopBit := <emphasis role="italic">serialPortOptions</emphasis>.StopBitList.Items[last]
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ForcePersistance := true
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">SetSerialPortConfigurationResponse</emphasis> message.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetSerialPortConfiguration</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortToken := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSerialPortConfigurationResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortConfiguration  =: <emphasis role="italic">serialPortConfiguration</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">serialPortConfiguration</emphasis> is not equal to SerialPortConfiguration from step <xref linkend="tc.DEVICEIO-6-1-3.4.10"/>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client restores settings of Serial Port Configuration with @token = <emphasis role="italic">serialPort</emphasis>.@token.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSerialPortConfigurationResponse</emphasis> message(s).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSerialPortConfigurationOptionsResponse</emphasis> message(s).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetSerialPortConfigurationResponse</emphasis> message(s).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.DEVICEIO-6-1-3.4.5"/> and <xref linkend="tc.DEVICEIO-6-1-3.4.10"/>:
          <itemizedlist>
            <listitem>
              <para>
                token
              </para>
            </listitem>
            <listitem>
              <para>
                type
              </para>
            </listitem>
            <listitem>
              <para>
                BaudRate
              </para>
            </listitem>
            <listitem>
              <para>
                ParityBit
              </para>
            </listitem>
            <listitem>
              <para>
                CharacterLength
              </para>
            </listitem>
            <listitem>
              <para>
                StopBit
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-6-1-4-->
      <section xml:id="tc.DEVICEIO-6-1-4">
        <title>IO RECEIVE SERIAL COMMAND</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-6-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Send ReceiveSerialCommand (Device IO Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SendReceiveSerialCommand
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify receiving of generic controlling data from Serial Port using SendReceiveSerialCommand command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Serial Port is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Serial Ports list by following the procedure mentioned in <xref linkend="Annex_HelperGetSerialPortsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">serialPortList</emphasis> - Serial Ports list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each SerialPort <emphasis role="italic">serialPort</emphasis> in <emphasis role="italic">serialPortList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">SendReceiveSerialCommand</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialData - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TimeOut - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DataLength - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Delimiter - skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem xml:id="tc.DEVICEIO-6-1-4.4.2" xreflabel="4.2">
                    <para>
                      The DUT responds with <emphasis role="bold">SendReceiveSerialCommandResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialData
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">SendReceiveSerialCommand</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialData - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TimeOut :=  PT1M1S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DataLength - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Delimiter - skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem xml:id="tc.DEVICEIO-6-1-4.4.4" xreflabel="4.4">
                    <para>
                      The DUT responds with <emphasis role="bold">SendReceiveSerialCommandResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialData
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">SendReceiveSerialCommand</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialData - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TimeOut :=  PT0S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DataLength - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Delimiter - skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem xml:id="tc.DEVICEIO-6-1-4.4.6" xreflabel="4.6">
                    <para>
                      The DUT responds with <emphasis role="bold">SendReceiveSerialCommandResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialData
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">SendReceiveSerialCommand</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialData - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TimeOut := -PT1S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DataLength - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Delimiter - skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem xml:id="tc.DEVICEIO-6-1-4.4.8" xreflabel="4.8">
                    <para>
                      The DUT responds with <emphasis role="bold">SendReceiveSerialCommandResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialData
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SendReceiveSerialCommandResponse</emphasis> message(s).
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following message timeouts should be used:
          <itemizedlist>
            <listitem>
              <para>
                for step <xref linkend="tc.DEVICEIO-6-1-4.4.4"/>: 61s + Message Timeout field of ONVIF Device Test Tool
              </para>
            </listitem>
            <listitem>
              <para>
                for steps <xref linkend="tc.DEVICEIO-6-1-4.4.2"/> and <xref linkend="tc.DEVICEIO-6-1-4.4.8"/>: Operation Delay field of ONVIF Device Test Tool
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-6-1-5-->
      <section xml:id="tc.DEVICEIO-6-1-5">
        <title>IO SEND SERIAL COMMAND</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-6-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Send ReceiveSerialCommand (Device IO Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SendReceiveSerialCommand
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify sending of generic controlling data from Serial Port using SendReceiveSerialCommand command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Serial Port is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Serial Ports list by following the procedure mentioned in <xref linkend="Annex_HelperGetSerialPortsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">serialPortList</emphasis> - Serial Ports list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each SerialPort <emphasis role="italic">serialPort</emphasis> in <emphasis role="italic">serialPortList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">SendReceiveSerialCommand</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialData.Binary := &lt;binaryData&gt;
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TimeOut := PT0S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DataLength - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Delimiter - skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">SendReceiveSerialCommandResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialData
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">SendReceiveSerialCommand</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialData.String := &lt;stringData&gt;
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TimeOut := PT0S
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            DataLength - skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Delimiter - skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">SendReceiveSerialCommandResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialData
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SendReceiveSerialCommandResponse</emphasis> message(s).
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-6-1-6-->
      <section xml:id="tc.DEVICEIO-6-1-6">
        <title>IO GETSERIALPORTCONFIGURATION COMMAND - INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-6-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetSerialPortConfiguration (Device IO Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSerialPortConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of GetSerialPortConfiguration command in case of invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Serial Port is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetSerialPortConfiguration</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SerialPortToken := "OnvifTest123"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:InvalidSerialPort</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send the <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:InvalidSerialPort</emphasis> SOAP 1.2 fault message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-6-1-7-->
      <section xml:id="tc.DEVICEIO-6-1-7">
        <title>IO GETSERIALPORTCONFIGURATIONOPTIONS COMMAND - INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-6-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetSerialPortConfigurationOptions (Device IO Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetSerialPortConfigurationOptions
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of GetSerialPortConfigurationOptions command in case of invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Serial Port is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetSerialPortConfigurationOptions</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      SerialPortToken := "OnvifTest123"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:InvalidSerialPort</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send the <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:InvalidSerialPort</emphasis> SOAP 1.2 fault message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--DEVICEIO-6-1-8-->
      <section xml:id="tc.DEVICEIO-6-1-8">
        <title>IO SETSERIALPORTCONFIGURATION COMMAND - INVALID SETTINGS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-6-1-8
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SetSerialPortConfiguration (Device IO Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetSerialPortConfiguration
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify the behavior of SetSerialPortConfiguration command in case of invalid settings.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Serial Port is supported by DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Serial Ports list by following the procedure mentioned in <xref linkend="Annex_HelperGetSerialPortsList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">serialPortList</emphasis> - Serial Ports list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each SerialPort <emphasis role="italic">serialPort</emphasis> in <emphasis role="italic">serialPortList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetSerialPortConfiguration</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortToken := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSerialPortConfigurationResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortConfiguration  =: <emphasis role="italic">initialSerialPortConfiguration</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetSerialPortConfigurationOptions</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortToken := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSerialPortConfigurationOptionsResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortOptions  =: <emphasis role="italic">serialPortOptions</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">SetSerialPortConfiguration</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortConfiguration.token  := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.type   := <emphasis role="italic">serialPortConfiguration</emphasis>.type
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.BaudRate := value not from <emphasis role="italic">serialPortOptions</emphasis>.BaudRateList.Items list
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.ParityBit := value not from <emphasis role="italic">serialPortOptions</emphasis>.ParityBitList.Itemslist (if possible)
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.CharacterLength := value not from <emphasis role="italic">serialPortOptions</emphasis>.CharacterLengthList.Items list
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SerialPortConfiguration.StopBit := value not from <emphasis role="italic">serialPortOptions</emphasis>.StopBitList.Items list
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ForcePersistance    := false
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT returns <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:ConfigModify</emphasis> SOAP 1.2 fault.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetSerialPortConfiguration</emphasis> request with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortToken := <emphasis role="italic">serialPort</emphasis>.@token
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetSerialPortConfigurationResponse</emphasis> message with parameters:
                      <itemizedlist>
                        <listitem>
                          <para>
                            SerialPortConfiguration  =: <emphasis role="italic">serialPortConfiguration</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">initialSerialPortConfiguration</emphasis> is not equal to <emphasis role="italic">serialPortConfiguration</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">GetSerialPortConfigurationResponse</emphasis> message(s).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetSerialPortConfigurationOptionsResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send the <emphasis role="bold">env:Sender/ter:InvalidArgVal/ter:ConfigModify</emphasis> SOAP 1.2 fault message.
              </para>
            </listitem>

          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Video Source-->
    <section xml:id="tc.device_io.video_source" xreflabel="Section 5.8">
      <title>Video Source</title>
      <!--DEVICEIO-7-1-1-->
      <section xml:id="tc.DEVICEIO-7-1-1">
        <title>IO GET VIDEO SOURCES</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-7-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetVideoSources (ONVIF Device IO Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetVideoSources
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving supported Video Sources.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Media2 Service is supported by Device. Media2 Video is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = VideoSource capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Device IO Service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - Device IO Service capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetVideoSources</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetVideoSourcesResponse</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list =: <emphasis role="italic">videoSourcesList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">videoSourcesList</emphasis> is empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If number of items in <emphasis role="italic">videoSourcesList</emphasis> is not equal to <emphasis role="italic">cap</emphasis>.VideoSources, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">videoSourcesList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetVideoSourcesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Audio Output-->
    <section xml:id="tc.device_io.audio_output" xreflabel="Section 5.9">
      <title>Audio Output</title>
      <!--DEVICEIO-8-1-1-->
      <section xml:id="tc.DEVICEIO-8-1-1">
        <title>IO GET AUDIO OUTPUTS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> DEVICEIO-8-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAudioOutputs (ONVIF Device IO Service Specification).
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAudioOutputs
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> deviceio.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify retrieving supported Audio Outputs.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Device IO Service is received from the DUT. Media2 Service is supported by Device. Media2 Audio Output is supported by Device as indicated by the ProfileCapabilities.ConfigurationsSupported = AudioOutput capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves Device IO Service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - Device IO Service capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetAudioOutputs</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAudioOutputsResponse</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list =: <emphasis role="italic">audioOutputsList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">audioOutputsList</emphasis> is empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If number of items in <emphasis role="italic">audioOutputsList</emphasis> is not equal to <emphasis role="italic">cap</emphasis>.AudioOutputs, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">audioOutputsList</emphasis> contains at least two items with the same @token, FAIL the test and skip other steps.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAudioOutputsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>

  </chapter>
  <appendix>
    <title>Helper Procedures and Additional Notes</title>
    <!--A.1-->
    <section xml:id="Annex_ActionURIforEventServiceMessages" xreflabel="Annex A.1">
      <title>Action URI’s for Event Service Messages </title>
      <para>
        The following Action URI’s shall be used for Event Service:
      </para>
      <para>
        <table>
          <title>Action URI’s for Event Service Messages</title>
          <tgroup cols="2">
            <colspec colwidth="500*" />
            <colspec colwidth="500*" />
            <thead>
              <row>
                <entry>Message</entry>
                <entry>Action URI of WS-Addressing</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Notify</entry>
                <entry>http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify</entry>
              </row>
              <row>
                <entry>SubscribeRequest</entry>
                <entry>http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest</entry>
              </row>
              <row>
                <entry>SubscribeResponse</entry>
                <entry>http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeResponse</entry>
              </row>
              <row>
                <entry>RenewRequest</entry>
                <entry>http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest</entry>
              </row>
              <row>
                <entry>RenewResponse</entry>
                <entry>http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewResponse</entry>
              </row>
              <row>
                <entry>UnsubscribeRequest</entry>
                <entry>http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest</entry>
              </row>
              <row>
                <entry>UnsubscribeResponse</entry>
                <entry>http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeResponse</entry>
              </row>
              <row>
                <entry>GetEventPropertiesRequest</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest</entry>
              </row>
              <row>
                <entry>GetEventPropertiesResponse</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesResponse</entry>
              </row>
              <row>
                <entry>CreatePullPointSubscriptionRequest</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest</entry>
              </row>
              <row>
                <entry>CreatePullPointSubscriptionResponse</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionResponse</entry>
              </row>
              <row>
                <entry>PullMessagesRequest</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest</entry>
              </row>
              <row>
                <entry>PullMessagesResponse</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesResponse</entry>
              </row>
              <row>
                <entry>SetSynchronizationPointRequest</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest</entry>
              </row>
              <row>
                <entry>SetSynchronizationPointResponse</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointResponse</entry>
              </row>
              <row>
                <entry>GetServiceCapabilitiesResponse</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilities</entry>
              </row>
              <row>
                <entry>GetServiceCapabilitiesRequest</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest</entry>
              </row>
              <row>
                <entry>SeekRequest</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest</entry>
              </row>
              <row>
                <entry>SeekResponse</entry>
                <entry>http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekResponse</entry>
              </row>
              <row>
                <entry>All faults</entry>
                <entry>http://www.w3.org/2005/08/addressing/soap/fault</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </para>
    </section>
    <!--A.2-->
    <section xml:id="Annex_HelperGetRelayOutputsList" xreflabel="Annex A.2">
      <title>Get Relay Outputs List</title>
      <para>
        <emphasis role="bold"> Name:</emphasis> HelperGetRelayOutputsList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve Relay Outputs List.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> DeviceIO Service is received from the DUT. DUT supports Relay Outputs.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Relay Outputs list (<emphasis role="italic">relayOutputsList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetRelayOutputs</emphasis> request
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT sends the <emphasis role="bold">GetRelayOutputsResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    RelayOutputs list =: <emphasis role="italic">relayOutputsList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetRelayOutputsResponse</emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.3-->
    <section xml:id="Annex_HelperSelectRelayOutputWithRequiredMode" xreflabel="Annex A.3">
      <title>Select Relay Output with supporting of required Relay Mode and Idle State</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperSelectRelayOutputWithRequiredMode
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to find RelayOutput which supports required Relay Mode and Idle Sate.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Devuce IO Service is received from the DUT. Relay Outputs is supported by DUT. Relay Output Options is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Relay Mode (<emphasis role="italic">relayMode</emphasis>). Idle State (<emphasis role="italic">idleState</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Relay Output (<emphasis role="italic">relayOutput</emphasis>) with supporting of required Relay Mode and Idle State. Realy Output Options (<emphasis role="italic">relayOutputOptions</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>

      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperSelectRelayOutputWithRequiredMode.1">
            <para>
              If there are no Relay Optputs whith support of RelayMode = <emphasis role="italic">relayMode</emphasis> and IdleSate = <emphasis role="italic">idleState</emphasis> for this Relay Mode, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperSelectRelayOutputWithRequiredMode.2">
            <para>
              Set <emphasis role="italic">relayOutputToken</emphasis> := [token of Relay Optput which supports RelayMode = <emphasis role="italic">relayMode</emphasis> and IdleSate = <emphasis role="italic">idleState</emphasis> for this Relay Mode].
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetRelayOutputOptions</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    RelayOutputToken := <emphasis role="italic">relayOutputToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetRelayOutputOptionsResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    RelayOutputOptions list := <emphasis role="italic">options</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">options</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">relayOutputOptions</emphasis> := <emphasis role="italic">options</emphasis>[0].
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetRelayOutputs</emphasis> request.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT sends the <emphasis role="bold">GetRelayOutputsResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    RelayOutputs list =: <emphasis role="italic">relayOutputsList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">relayOutputsList</emphasis> does not contain RelayOutputs item with token = <emphasis role="italic">relayOutputToken</emphasis>, FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">relayOutput</emphasis> := <emphasis role="italic">relayOutputsList</emphasis>[token = <emphasis role="italic">relayOutputToken</emphasis>].
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetRelayOutputOptionsResponse</emphasis> message
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetRelayOutputsResponse</emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> To check condition at step <xref linkend="Annex_HelperSelectRelayOutputWithRequiredMode.1"/> and selection criteria at step <xref linkend="Annex_HelperSelectRelayOutputWithRequiredMode.2"/> the feature discovery procedure results are used.
      </para>
    </section>
    <!--A.4-->
    <section xml:id="Annex_HelperCreatePullPointSubscription" xreflabel="Annex A.4">
      <title>Create Pull Point Subscription</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreatePullPointSubscription
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create PullPoint Subscription with specified Topic.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Notification Topic (<emphasis role="italic">topic</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>), subscription termination time (<emphasis role="italic">tt</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Filter.TopicExpression := <emphasis role="italic">topic</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"

                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    SubscriptionReference =: <emphasis role="italic">s</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    CurrentTime =: <emphasis role="italic">ct</emphasis>

                  </para>
                </listitem>
                <listitem>
                  <para>
                    TerminationTime =: <emphasis role="italic">tt</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message
            </para>
          </listitem>

        </itemizedlist>
      </para>
    </section>
    <!--A.5-->
    <section xml:id="Annex_HelperDeleteSubscription" xreflabel="Annex A.5">
      <title>Delete Subscription</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteSubscription
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete subscription.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">Unsubscribe</emphasis> request to the subscription endpoint <emphasis role="italic">s</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
            </para>
          </listitem>

        </itemizedlist>
      </para>
    </section>
    <!--A.6-->
    <section xml:id="Annex_HelperRestoreRelayOutput" xreflabel="Annex A.6">
      <title>Restore Relay Output settings</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperRestoreRelayOutput
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to restore Relay Output settings.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> DeviceIO Service is received from the DUT. DUT supports Relay Outputs.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Relay Output (<emphasis role="italic">initialRelayOutput</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">SetRelayOutputSettings</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    RelayOutput.@token := <emphasis role="italic">initialRelayOutput</emphasis>.@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RelayOutput.Properties.Mode := <emphasis role="italic">initialRelayOutput</emphasis>.Properties.Mode
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RelayOutput.Properties.DelayTime := <emphasis role="italic">initialRelayOutput</emphasis>.Properties.DelayTime
                  </para>
                </listitem>
                <listitem>
                  <para>
                    RelayOutput.Properties.IdleState := <emphasis role="italic">initialRelayOutput</emphasis>.Properties.IdleState

                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">SetRelayOutputSettingsResponse</emphasis> message.
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">SetRelayOutputSettingsResponse</emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.7-->
    <section xml:id="Annex_HelperGetServiceCapabilities" xreflabel="Annex A.7">
      <title>Get Device IO Service Capabilities</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetServiceCapabilities
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get Device IO Service Capabilities from the DUT.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Device IO Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The service capabilities (<emphasis role="italic">cap</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis> request.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Capabilities =: <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.8-->
    <section xml:id="Annex_HelperGetSerialPortsList" xreflabel="Annex A.8">
      <title>Get Serial Ports List</title>
      <para>
        <emphasis role="bold"> Name:</emphasis> HelperGetSerialPortsList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve Serial Ports List.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> DeviceIO Service is received from the DUT. Serial Port is supported by DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Serial Ports list (<emphasis role="italic">serialPortList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetSerialPorts</emphasis> request.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetSerialPortsResponse</emphasis> message with parameters:
              <itemizedlist>
                <listitem>
                  <para>
                    SerialPort list =: <emphasis role="italic">serialPortList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">serialPortList</emphasis> is empty, FAIL the test and skip other steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetSerialPortsResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.9-->
    <section xml:id="Annex_HelperPullTriggerRelay" xreflabel="Annex A.9">
      <title>Retrieve Relay Output Trigger Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullTriggerRelay
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:Device/Trigger/Relay event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis>
        Subscription reference (<emphasis role="italic">s</emphasis>).
        Current time for the DUT (<emphasis role="italic">ct</emphasis>).
        Subscription termination time (<emphasis role="italic">tt</emphasis>).
        Relay Output token (<emphasis role="italic">relayOutputToken</emphasis>).
        Expected Property Operation (<emphasis role="italic">propertyOperation</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Current Logical State (<emphasis role="italic">logicalState</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullTriggerRelay.loop">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty and contains item with Message.Source.SimpleItem with Name = "RelayToken" and Value = <emphasis role="italic">relayOutputToken</emphasis>:
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">notificationMessage</emphasis> :=  [NotificationMessage from <emphasis role="italic">notificationMessageList</emphasis> which contains item with Message.Source.SimpleItem with Name = "RelayToken" and Value = <emphasis role="italic">relayOutputToken</emphasis>].
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Go to step <xref linkend="Annex_HelperPullTriggerRelay.check"/>.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <xref linkend="Annex_HelperPullTriggerRelay.loop"/> without
                    Notification with Token source simple item equal to <emphasis role="italic">profileToken</emphasis>, FAIL the test and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperPullTriggerRelay.check">
            <para>
              If <emphasis role="italic">notificationMessage</emphasis>.Message.PropertyOperation != <emphasis role="italic">propertyOperation</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">notificationMessage</emphasis>.Message.Data does not contain SimpleItem with Name = "LogicalState" and Value of tt:RelayLogicalState type, FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">logicalState</emphasis> :=  [value of Value attribute from <emphasis role="italic">notificationMessage</emphasis>.Message.Data.SimpleItem[Name = "LogicalState"]].
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
  <!--A.10-->
<section xml:id="Annex_HelperSetRelayOptputToMonostableInactive" xreflabel="Annex A.10">
      <title>Move Relay Output to Monostable Mode with Inactive Logical State</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperSetRelayOptputToMonostableInactive
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to set Relay Output in Monostable Mode and move it in Inactive Logical State.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT. DeviceIO Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis>       
        Relay Output token (<emphasis role="italic">relayOutputToken</emphasis>).
        Required Idle State (<emphasis role="italic">idleState</emphasis>). 
        Required DelayTime <emphasis role="italic">delayTime</emphasis>.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">SetRelayOutputSettings</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      RelayOutput.@token := <emphasis role="italic">relayOutputToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      RelayOutput.Properties.Mode := Monostable
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      RelayOutput.Properties.DelayTime := <emphasis role="italic">delayTime</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      RelayOutput.Properties.IdleState := <emphasis role="italic">idleState</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetRelayOutputSettingsResponse</emphasis> message.
              </para>
            </listitem>
          <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription Reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription Termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves current logical state by <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutputToken</emphasis> - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Initialized - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentLogicalState</emphasis> - Current Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
           <listitem>
                    <para>
                      If <emphasis role="italic">currentLogicalState</emphasis> = inactive, go to step <xref linkend="Annex_HelperSetRelayOptputToMonostableInactive.Unsubscribe"/>.
                    </para>
                  </listitem>
          <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">SetRelayOutputState</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      RelayOutputToken := <emphasis role="italic">relayOutputToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      LogicalState := inactive
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetRelayOutputStateResponse</emphasis> message.
              </para>
            </listitem>
          <listitem>
              <para>
                ONVIF Client retrieves changed logical state by <emphasis role="bold">tns1:Device/Trigger/Relay</emphasis> event for the specified Relay Output by following the procedure mentioned in <xref linkend="Annex_HelperPullTriggerRelay"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">relayOutputToken</emphasis> - Relay Output token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in Changed - Expected Property Operation
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">updatedLogicalState</emphasis> - Updated Logical State
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
           <listitem>
                    <para>
                      If <emphasis role="italic">updatedLogicalState</emphasis> != inactive, FAIL the test, restore the DUT state, and skip other steps. 
                    </para>
                  </listitem>
         
          <listitem xml:id="Annex_HelperSetRelayOptputToMonostableInactive.Unsubscribe">
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
  </appendix>
</book>