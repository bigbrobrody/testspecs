<?xml version="1.0" encoding="UTF-8"?>
<!--For online version-->
<?xml-stylesheet href="docbook-css/docbook.xsl" type="text/xsl" ?>
<!--For PDF version - New ONVIF-->
<!--<?xml-stylesheet href="../ONVIFNew-stylesheets/onvif-specification-fo-us.xsl" type="text/xsl" ?>-->
<book xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xhtml="http://www.w3.org/1999/xhtml"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:xml="http://www.w3.org/XML/1998/namespace"
      xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
      version="0.1"
      xml:id="ONVIF_Access_Control_Device_TS">
  <info>
    <orgname>
      <phrase>
        <trademark class="registered">ONVIF</trademark>
      </phrase>
    </orgname>
    <title>Access Control Device Test Specification</title>
    <subtitle>Version 21.06</subtitle>
    <date>June, 2021</date>
    <copyright>
      <year>2021</year>
      <holder>ONVIF, Inc. All rights reserved.</holder>
    </copyright>
    <address>
      <uri>www.onvif.org</uri>
    </address>
    <legalnotice role="notices">
      <para>
        Recipients of this document may copy, distribute, publish, or display this
        document so long as this copyright notice, license and disclaimer are retained with
        all copies of the document. No license is granted to modify this document.
      </para>
      <para>
        THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR
        AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
        NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
        NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY
        PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS,
        COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.
      </para>
      <para>
        IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR
        ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES,
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR
        NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE
        POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND
        ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT. THE
        FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR
        LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE
        AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE
        CORPORATION.
      </para>
    </legalnotice>
    <revhistory>
      <revision>
        <revnumber>13.06</revnumber>
        <date>Jun, 2013</date>
        <revdescription>
          <para>First issue</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>13.12</revnumber>
        <date>Dec, 2013</date>
        <revdescription>
          <para>Minor updates.</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>17.12</revnumber>
        <date>Aug 08, 2017</date>
        <revdescription>
          <para>Current document name was changed from Access Control Test Specification to Access Control Device Test Specification.</para>
          <para>The document formatting was updated.</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.06</revnumber>
        <date>Jun 21, 2018</date>
        <revdescription>
          <para>Reformatting document using new template</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.12</revnumber>
        <date>Oct 05, 2018</date>
        <revdescription>
          <para>
            The following were updated in the scope of #1677:
          </para>
          <para>
            Scope\Access Denied Events (tns1:AccessControl/Denied/CredentialNotFound added)
          </para>
          <para>
            Test Overview\Prerequisites (updated with new test with user interaction)
          </para>
          <para>
            Test Overview\Test Policy\Access Denied Events (tns1:AccessControl/Denied/CredentialNotFound added)
          </para>
          <para>
            Annex A.1 Get Complete Access Point Info List (format updated)
          </para>
          <para>
            Annex A.3 Create Pull Point Subscription (added)
          </para>
          <para>
            Annex A.4 Delete Subscription (added)
          </para>
          <para>
            Annex A.5 Retrieve CredentialNotFound Event by PullPoint (added)
          </para>
          <para>
            ACCESSCONTROL-9-1-4 ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL EVENT (CREDENTIAL NOT FOUND) (added)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>18.12</revnumber>
        <date>Dec 21, 2018</date>
        <revdescription>
          <para>Switching Hub description in 'Network Configuration for DUT' section was updated according to #1737</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>Aug 15, 2019</date>
        <revdescription>
          <para>The following were updated in the scope of #1880:</para>
          <para>
            Scope/Access Granted Events (was updated with tns1:AccessControl/AccessGranted/Identifier)
          </para>
          <para>
            Test Policy/Access Granted Events (was updated with tns1:AccessControl/AccessGranted/Identifier)
          </para>
          <para>
            ACCESSCONTROL-6-1-3 ACCESS CONTROL - ACCESS GRANTED TO IDENTIFIER EVENT (was added)
          </para>
          <para>
            Annex A.6 Retrieve Access Granted Identifier Event by PullPoint (was added)
          </para>
          <para>
            Prerequisites (was updated with ACCESSCONTROL-6-1-3 test with manual action)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>Aug 15, 2019</date>
        <revdescription>
          <para>The following were updated in the scope of #1882:</para>
          <para>
            Scope/Access Denied Events (was updated with tns1:AccessControl/Denied/Identifier)
          </para>
          <para>
            Test Policy/Access Granted Events (was updated with tns1:AccessControl/Denied/Identifier)
          </para>
          <para>
            ACCESSCONTROL-9-1-5 ACCESS CONTROL - ACCESS DENIED TO IDENTIFIER EVENT (was added)
          </para>
          <para>
            Annex A.7 Retrieve Denied Identifier Event by PullPoint (was added)
          </para>
          <para>
            Prerequisites (was updated with ACCESSCONTROL-9-1-5 test with manual action)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>Aug 15, 2019</date>
        <revdescription>
          <para>The following were updated in the scope of #1923:</para>
          <para>
            ACCESSCONTROL-9-1-5 ACCESS CONTROL - ACCESS DENIED TO IDENTIFIER EVENT (pre-requisite and step was updated to include clarification from CR2633)
          </para>
          <para>
            ACCESSCONTROL-6-1-3 ACCESS CONTROL - ACCESS GRANTED TO IDENTIFIER EVENT (pre-requisite and step was updated to include clarification from CR2633)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>Jan 15, 2020</date>
        <revdescription>
          <para>The following were updated in the scope of #1878:</para>
          <para>
            Scope\External Authorization (tns1:AccessControl/Request/Identifier were added)
          </para>
          <para>
            Prerequisites (new test cases with manual action were added, new prerequisite for Identifier Access capability were added)
          </para>
          <para>
            Test Policy\External Authorization (new test policies for Identifier External Authorization were added)
          </para>
          <para>
            ACCESSCONTROL-11-1-9 ACCESS CONTROL - ACCESS GRANTED TO IDENTIFIER (EXTERNAL AUTHORIZATION) (new)
          </para>
          <para>
            ACCESSCONTROL-11-1-10 ACCESS CONTROL - ACCESS DENIED TO IDENTIFIER (EXTERNAL AUTHORIZATION) (new)
          </para>
          <para>
            ACCESSCONTROL-11-1-11 ACCESS CONTROL - ACCESS TIMEOUT TO IDENTIFIER (EXTERNAL AUTHORIZATION) (new)
          </para>
          <para>
            Annex A.8 Retrieve Request Identifier Event by PullPoint (new)
          </para>
          <para>
            Annex A.9 Retrieve Request Timeout Event by PullPoint (new)
          </para>
          <para>
            Annex A.10 Retrieve AccessGranted Event by PullPoint for Identifier External Authorization (new)
          </para>
          <para>
            Annex A.11 Retrieve Denied Event by PullPoint for Identifier External Authorization (new)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>Feb 13, 2020</date>
        <revdescription>
          <para>The following were updated in the scope of #1676:</para>
          <para>
            ACCESSCONTROL-14-1-1 GET ACCESS POINTS (new)
          </para>
          <para>
            ACCESSCONTROL-14-1-2 GET ACCESS POINT LIST - LIMIT (new)
          </para>
          <para>
            ACCESSCONTROL-14-1-3 GET ACCESS POINT LIST - START REFERENCE AND LIMIT (new)
          </para>
          <para>
            ACCESSCONTROL-14-1-4 GET ACCESS POINT LIST - NO LIMIT (new)
          </para>
          <para>ACCESSCONTROL-15-1-1 GET AREAS (new)</para>
          <para>ACCESSCONTROL-15-1-2 GET AREA LIST - LIMIT (new)</para>
          <para>ACCESSCONTROL-15-1-3 GET AREA LIST - START REFERENCE AND LIMIT (new)</para>
          <para>ACCESSCONTROL-15-1-4 GET AREA LIST - NO LIMIT (new)</para>
          <para>
            Annex A.12 Get Access Points List (new)
          </para>
          <para>
            Annex A.13 Get Service Capabilities (new)
          </para>
          <para>
            Annex A.14 Get Areas List (new)
          </para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>Feb 28, 2020</date>
        <revdescription>
          <para>The following test case was updated in the scope of #1676:</para>
          <para>ACCESSCONTROL-1-1-2 GET SERVICES AND GET ACCESS CONTROL SERVICE CAPABILITIES CONSISTENCY (NOTE updated with adding of new capabilities in check)</para>
          <para>The following test cases and annexes were added in the scope of #1676:</para>
          <para>ACCESSCONTROL-14-1-5 CREATE ACCESS POINT (ACCESS POINT CAPABILITIES TRUE)</para>
          <para>ACCESSCONTROL-14-1-6 CREATE ACCESS POINT (ACCESS POINT CAPABILITIES FALSE)</para>
          <para>ACCESSCONTROL-14-1-7 MODIFY ACCESS POINT</para>
          <para>ACCESSCONTROL-14-1-8 DELETE ACCESS POINT</para>
          <para>ACCESSCONTROL-14-1-9 GET ACCESS POINTS WITH INVALID TOKEN</para>
          <para>ACCESSCONTROL-14-1-10 GET ACCESS POINTS - TOO MANY ITEMS</para>
          <para>ACCESSCONTROL-14-1-11 CREATE ACCESS POINT - NOT EMPTY ACCESS POINT TOKEN</para>
          <para>ACCESSCONTROL-14-1-12 MODIFY ACCESS POINT WITH INVALID TOKEN</para>
          <para>ACCESSCONTROL-14-1-13 DELETE ACCESS POINT WITH INVALID TOKEN</para>
          <para>ACCESSCONTROL-15-1-5 CREATE AREA</para>
          <para>ACCESSCONTROL-15-1-6 MODIFY AREA</para>
          <para>ACCESSCONTROL-15-1-7 DELETE AREA</para>
          <para>ACCESSCONTROL-15-1-8 GET AREAS WITH INVALID TOKEN</para>
          <para>ACCESSCONTROL-15-1-9 GET AREAS - TOO MANY ITEMS</para>
          <para>ACCESSCONTROL-15-1-10 CREATE AREA - NOT EMPTY AREA TOKEN</para>
          <para>ACCESSCONTROL-15-1-11 MODIFY AREA WITH INVALID TOKEN</para>
          <para>ACCESSCONTROL-15-1-12 DELETE AREA WITH INVALID TOKEN</para>
          <para>A.15 Free Storage for Additional Access Point</para>
          <para>A.16 Find Access Point To Delete</para>
          <para>A.17 Retrieve Access Point Changed Event by PullPoint (similar to annex for DoorCahnged event)</para>
          <para>A.18 Get Area Token</para>
          <para>A.19 Create Area</para>
          <para>A.20 Get Door Token</para>
          <para>A.21 Create Door</para>
          <para>A.22 Get Door Control Service Capabilities</para>
          <para>A.23 Get Complete Door Info List</para>
          <para>A.24 Get Access Point</para>
          <para>A.25 Get Access Point Info</para>
          <para>A.26 Delete Access Point</para>
          <para>A.27 Create Access Point</para>
          <para>A.28 Retrieve Access Point Removed Event by PullPoint</para>
          <para>A.29 Free Storage for Additional Area</para>
          <para>A.30 Find Area To Delete</para>
          <para>A.31 Retrieve Area Changed Event by PullPoint</para>
          <para>A.32 Get Area</para>
          <para>A.33 Get Area Info</para>
          <para>A.34 Delete Area</para>
          <para>A.35 Retrieve Area Removed Event by PullPoint</para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>Feb 28, 2020</date>
        <revdescription>
          <para>The following test cases and annexes were added in the scope of #1669:</para>
          <para>ACCESSCONTROL-14-1-14 CREATE NEW ACCESS POINT WITH SET ACCESS POINT (ACCESS POINT CAPABILITIES TRUE)</para>
          <para>ACCESSCONTROL-14-1-15 CREATE NEW ACCESS POINT WITH SET ACCESS POINT (ACCESS POINT CAPABILITIES FALSE)</para>
          <para>ACCESSCONTROL-14-1-16 MODIFY ACCESS POINT WITH SET ACCESS POINT</para>
          <para>ACCESSCONTROL-14-1-17 SET ACCESS POINT - EMPTY ACCESS POINT TOKEN</para>
          <para>ACCESSCONTROL-15-1-13 CREATE NEW AREA WITH SET AREA</para>
          <para>ACCESSCONTROL-15-1-14 MODIFY AREA WITH SET AREA</para>
          <para>ACCESSCONTROL-15-1-15 SET AREA - EMPTY AREA TOKEN</para>
        </revdescription>
      </revision>
      <!--To be uncomment when #1949 is implemented-->
      <!--<revision>
        <revnumber>20.06</revnumber>
        <date>Mar 05, 2020</date>
        <revdescription>
          <para>The following test cases were updated in the scope of #1949:</para>
          <para>ACCESSCONTROL-12-1-1 ACCESS CONTROL – ADD OR CHANGE ACCESS POINT EVENT (step 8 added)</para>
          <para>ACCESSCONTROL-12-1-2 ACCESS CONTROL – REMOVE ACCESS POINT EVENT (step 8 added)</para>
          <para>ACCESSCONTROL-13-1-1 ACCESS CONTROL – ADD OR CHANGE AREA EVENT  (step 8 added)</para>
          <para>ACCESSCONTROL-13-1-2 ACCESS CONTROL – REMOVE AREA EVENT  (step 8 added)</para>
        </revdescription>
      </revision>-->
      <revision>
        <revnumber>20.06</revnumber>
        <date>Mar 05, 2020</date>
        <revdescription>
          <para>The following test cases were updated in the scope of #1954:</para>
          <para>ACCESSCONTROL-1-1-1 ACCESS CONTROL SERVICE CAPABILITIES (steps 5 and 6 added)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.06</revnumber>
        <date>May 13, 2020</date>
        <revdescription>
          <para>Pre-Requisite of the following test cases updated with adding of Pull-Point Notification feature according to #1999:</para>
          <para>ACCESSCONTROL-11-1-1 ACCESS CONTROL - ACCESS GRANTED TO ANONYMOUS (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-2 ACCESS CONTROL - ACCESS DENIED TO ANONYMOUS (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-3 ACCESS CONTROL - ACCESS TIMEOUT TO ANONYMOUS (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-4 ACCESS CONTROL - ACCESS GRANTED WITH CREDENTIAL (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-5 ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-6 ACCESS CONTROL - ACCESS TIMEOUT WITH CREDENTIAL (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-9 ACCESS CONTROL - ACCESS GRANTED TO IDENTIFIER (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-10 ACCESS CONTROL - ACCESS DENIED TO IDENTIFIER (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-11 ACCESS CONTROL - ACCESS TIMEOUT TO IDENTIFIER (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-5-1-1 ACCESS CONTROL - ACCESS POINT ENABLED EVENT</para>
          <para>ACCESSCONTROL-5-1-2 ACCESS CONTROL - ACCESS POINT ENABLED EVENT STATE CHANGE</para>
          <para>ACCESSCONTROL-6-1-1 ACCESS CONTROL - ACCESS GRANTED TO ANONYMOUS EVENT</para>
          <para>ACCESSCONTROL-6-1-2 ACCESS CONTROL - ACCESS GRANTED WITH CREDENTIAL EVENT</para>
          <para>ACCESSCONTROL-6-1-3 ACCESS CONTROL - ACCESS GRANTED TO IDENTIFIER EVENT</para>
          <para>ACCESSCONTROL-7-1-1 ACCESS CONTROL - ACCESS TAKEN BY ANONYMOUS EVENT</para>
          <para>ACCESSCONTROL-7-1-2 ACCESS CONTROL - ACCESS TAKEN WITH CREDENTIAL EVENT</para>
          <para>ACCESSCONTROL-8-1-1 ACCESS CONTROL - ACCESS NOT TAKEN BY ANONYMOUS EVENT</para>
          <para>ACCESSCONTROL-8-1-2 ACCESS CONTROL - ACCESS NOT TAKEN WITH CREDENTIAL EVENT</para>
          <para>ACCESSCONTROL-9-1-1	ACCESS CONTROL – ACCESS DENIED TO ANONYMOUS EVENT</para>
          <para>ACCESSCONTROL-9-1-2	ACCESS CONTROL – ACCESS DENIED WITH CREDENTIAL EVENT</para>
          <para>ACCESSCONTROL-9-1-3	ACCESS CONTROL – ACCESS DENIED WITH CREDENTIAL EVENT (CREDENTIAL NOT FOUND – CARD)</para>
          <para>ACCESSCONTROL-9-1-4	ACCESS CONTROL – ACCESS DENIED WITH CREDENTIAL EVENT (CREDENTIAL NOT FOUND)</para>
          <para>ACCESSCONTROL-9-1-5	ACCESS CONTROL – ACCESS DENIED TO IDENTIFIER EVENT</para>
          <para>ACCESSCONTROL-10-1-2	ACCESS CONTROL – DURESS</para>
          <para>ACCESSCONTROL-12-1-1	ACCESS CONTROL – ADD OR CHANGE ACCESS POINT EVENT</para>
          <para>ACCESSCONTROL-12-1-2	ACCESS CONTROL – REMOVE ACCESS POINT EVENT</para>
          <para>ACCESSCONTROL-13-1-1	ACCESS CONTROL – ADD OR CHANGE AREA EVENT</para>
          <para>ACCESSCONTROL-13-1-2	ACCESS CONTROL – REMOVE AREA EVENT</para>
          <para>ACCESSCONTROL-14-1-5	CREATE ACCESS POINT (ACCESS POINT CAPABILITIES TRUE)</para>
          <para>ACCESSCONTROL-14-1-6	CREATE ACCESS POINT (ACCESS POINT CAPABILITIES FALSE)</para>
          <para>ACCESSCONTROL-14-1-7	MODIFY ACCESS POINT</para>
          <para>ACCESSCONTROL-14-1-8	DELETE ACCESS POINT</para>
          <para>ACCESSCONTROL-15-1-5	CREATE AREA</para>
          <para>ACCESSCONTROL-15-1-6	MODIFY AREA</para>
          <para>ACCESSCONTROL-15-1-7	DELETE AREA</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Oct 26, 2020</date>
        <revdescription>
          <para>Access Point Entity added into Pre-Requisite of the following test cases in the scope of #1866:</para>
          <para>ACCESSCONTROL-2-1-1 GET ACCESS POINT INFO</para>
          <para>ACCESSCONTROL-2-1-4 GET ACCESS POINT INFO LIST - START REFERENCE AND LIMIT</para>
          <para>ACCESSCONTROL-2-1-6 GET ACCESS POINT INFO - TOO MANY ITEMS</para>
          <para>ACCESSCONTROL-2-1-7 GET ACCESS POINT STATE</para>
          <para>ACCESSCONTROL-2-1-8 GET ACCESS POINT STATE WITH INVALID TOKEN</para>
          <para>ACCESSCONTROL-2-1-9 ENABLE/DISABLE ACCESS POINT</para>
          <para>ACCESSCONTROL-2-1-10 ENABLE/DISABLE ACCESS POINT - COMMAND NOT SUPPORTED</para>
          <para>ACCESSCONTROL-2-1-11 ENABLE ACCESS POINT WITH INVALID TOKEN</para>
          <para>ACCESSCONTROL-2-1-12 DISABLE ACCESS POINT WITH INVALID TOKEN</para>
          <para>ACCESSCONTROL-4-1-1 GET AREA INFO LIST AND GET ACCESS POINT INFO LIST CONSISTENCY</para>
          <para>ACCESSCONTROL-5-1-1 ACCESS CONTROL - ACCESS POINT ENABLED EVENT</para>
          <para>ACCESSCONTROL-5-1-2 ACCESS CONTROL - ACCESS POINT ENABLED EVENT STATE CHANGE</para>
          <para>ACCESSCONTROL-6-1-1 ACCESS CONTROL - ACCESS GRANTED TO ANONYMOUS EVENT</para>
          <para>ACCESSCONTROL-6-1-2 ACCESS CONTROL - ACCESS GRANTED WITH CREDENTIAL EVENT</para>
          <para>ACCESSCONTROL-6-1-3 ACCESS CONTROL - ACCESS GRANTED TO IDENTIFIER EVENT</para>
          <para>ACCESSCONTROL-7-1-1 ACCESS CONTROL - ACCESS TAKEN BY ANONYMOUS EVENT</para>
          <para>ACCESSCONTROL-7-1-2 ACCESS CONTROL - ACCESS TAKEN WITH CREDENTIAL EVENT</para>
          <para>ACCESSCONTROL-8-1-1 ACCESS CONTROL - ACCESS NOT TAKEN BY ANONYMOUS EVENT</para>
          <para>ACCESSCONTROL-8-1-2 ACCESS CONTROL - ACCESS NOT TAKEN WITH CREDENTIAL EVENT</para>
          <para>ACCESSCONTROL-9-1-1 ACCESS CONTROL - ACCESS DENIED TO ANONYMOUS EVENT</para>
          <para>ACCESSCONTROL-9-1-2 ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL EVENT</para>
          <para>ACCESSCONTROL-9-1-3 ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL EVENT (CREDENTIAL NOT FOUND - CARD)</para>
          <para>ACCESSCONTROL-9-1-4 ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL EVENT (CREDENTIAL NOT FOUND)</para>
          <para>ACCESSCONTROL-9-1-5 ACCESS CONTROL - ACCESS DENIED TO IDENTIFIER EVENT</para>
          <para>ACCESSCONTROL-10-1-2 ACCESS CONTROL - DURESS</para>
          <para>ACCESSCONTROL-11-1-1 ACCESS CONTROL - ACCESS GRANTED TO ANONYMOUS (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-2 ACCESS CONTROL - ACCESS DENIED TO ANONYMOUS (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-3 ACCESS CONTROL - ACCESS TIMEOUT TO ANONYMOUS (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-4 ACCESS CONTROL - ACCESS GRANTED WITH CREDENTIAL (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-5 ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-6 ACCESS CONTROL - ACCESS TIMEOUT WITH CREDENTIAL (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-7 EXTERNAL AUTHORIZATION WITH INVALID TOKEN</para>
          <para>ACCESSCONTROL-11-1-8 EXTERNAL AUTHORIZATION - COMMAND NOT SUPPORTED</para>
          <para>ACCESSCONTROL-11-1-9 ACCESS CONTROL - ACCESS GRANTED TO IDENTIFIER (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-10 ACCESS CONTROL - ACCESS DENIED TO IDENTIFIER (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-11 ACCESS CONTROL - ACCESS TIMEOUT TO IDENTIFIER (EXTERNAL AUTHORIZATION)</para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Oct 26, 2020</date>
        <revdescription>
          <para>The following test cases were updated in the scope of #1866:</para>
          <para>ACCESSCONTROL-2-1-2 GET ACCESS POINT INFO WITH INVALID TOKEN (step 8 updated)</para>
          <para>ACCESSCONTROL-2-1-3 GET ACCESS POINT INFO LIST - LIMIT (steps 4, 5, 8.4, 12, 13.3 added, step 8 and 13: condition added)</para>
          <para>ACCESSCONTROL-2-1-5 GET ACCESS POINT INFO LIST - NO LIMIT (step 7 added)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Nov 09, 2020</date>
        <revdescription>
          <para>The following test cases were updated in the scope of #2098:</para>
          <para>ACCESSCONTROL-11-1-2 ACCESS CONTROL - ACCESS DENIED TO ANONYMOUS (EXTERNAL AUTHORIZATION) (Reason value in ExternalAuthorization request changed; check of Reason vaue in event removed)</para>
          <para>ACCESSCONTROL-11-1-5 ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL (EXTERNAL AUTHORIZATION) (Reason value in ExternalAuthorization request changed; check of Reason vaue in event removed)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Nov 09, 2020</date>
        <revdescription>
          <para>The following test cases was added in the scope of #2097:</para>
          <para>ACCESSCONTROL-4-1-2 ACCESS POINT CAPABILITIES CONSISTENCY</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Nov 10, 2020</date>
        <revdescription>
          <para>Pre-Requisites of the following test cases were updated in the scope of #1866:</para>
          <para>ACCESSCONTROL-6-1-1 ACCESS CONTROL – ACCESS GRANTED TO ANONYMOUS EVENT</para>
          <para>ACCESSCONTROL-6-1-2 ACCESS CONTROL – ACCESS GRANTED WITH CREDENTIAL EVENT</para>
          <para>ACCESSCONTROL-7-1-2 ACCESS CONTROL – ACCESS TAKEN WITH CREDENTIAL EVENT</para>
          <para>ACCESSCONTROL-8-1-2 ACCESS CONTROL – ACCESS NOT TAKEN WITH CREDENTIAL EVENT</para>
          <para>ACCESSCONTROL-9-1-1 ACCESS CONTROL – ACCESS DENIED TO ANONYMOUS EVENT</para>
          <para>ACCESSCONTROL-9-1-2 ACCESS CONTROL – ACCESS DENIED WITH CREDENTIAL EVENT</para>
          <para>ACCESSCONTROL-11-1-4 ACCESS CONTROL – ACCESS GRANTED WITH CREDENTIAL (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-5 ACCESS CONTROL – ACCESS DENIED WITH CREDENTIAL (EXTERNAL AUTHORIZATION)</para>
          <para>ACCESSCONTROL-11-1-6 ACCESS CONTROL – ACCESS TIMEOUT WITH CREDENTIAL (EXTERNAL AUTHORIZATION)</para>

        </revdescription>
      </revision>
      <revision>
        <revnumber>20.12</revnumber>
        <date>Dec 09, 2020</date>
        <revdescription>
          <para>'IdentiferAccess' was repleced with 'IdentifierAccess' according to wsdl change in the scope of #2133.</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>Dec 22, 2020</date>
        <revdescription>
          <para>The following test case was updated in the scope of #2029:</para>
          <para>ACCESSCONTROL-4-1-2 ACCESS POINT CAPABILITIES CONSISTENCY (step 4.2 added)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>Dec 26, 2020</date>
        <revdescription>
          <para>The following was done in the scope of #1879:</para>
          <para>ACCESSCONTROL-7-1-3 ACCESS CONTROL - ACCESS TAKEN TO IDENTIFIER EVENT (added)</para>
          <para>ACCESSCONTROL-8-1-3 ACCESS CONTROL - ACCESS NOT TAKEN TO IDENTIFIER EVENT (added)</para>
          <para>A.6 Retrieve Access Granted Identifier Event by PullPoint (added)</para>
          <para>A.36 Retrieve Identifier Event by PullPoint (updated)</para>
          <para>A.37 Validate Identifier Message (added)</para>
          <para>A.38 Validate Identifier Message Description (added)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>Feb 05, 2021</date>
        <revdescription>
          <para>The following was done in the scope of #2139:</para>
          <para>ACCESSCONTROL-11-1-9 was renamed from "ACCESS CONTROL - ACCESS GRANTED TO IDENTIFIER (EXTERNAL AUTHORIZATION)" to "ACCESS CONTROL - ACCESS GRANTED TO ANONYMOUS (EXTERNAL AUTHORIZATION FOR IDENTIFIER REQUEST)"</para>
          <para>ACCESSCONTROL-11-1-9 was updated with waiting for only AccessGranted/Anonymous event</para>
          <para>ACCESSCONTROL-11-1-10 was renamed from "ACCESS CONTROL - ACCESS DENIED TO IDENTIFIER (EXTERNAL AUTHORIZATION)" to "ACCESS CONTROL - ACCESS DENIED TO ANONYMOUS (EXTERNAL AUTHORIZATION FOR IDENTIFIER REQUEST)"</para>
          <para>ACCESSCONTROL-11-1-10 was updated with waiting for only Denied/Anonymous event</para>
          <para>ACCESSCONTROL-11-1-12 ACCESS CONTROL - ACCESS GRANTED WITH CREDENTIAL (EXTERNAL AUTHORIZATION FOR IDENTIFIER REQUEST) (added)</para>
          <para>ACCESSCONTROL-11-1-13 ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL (EXTERNAL AUTHORIZATION FOR IDENTIFIER REQUEST) (added)</para>
          <para>A.10 Retrieve AccessGranted Event by PullPoint for Identifier External Authorization (updated)</para>
          <para>A.11 Retrieve Denied Event by PullPoint for Identifier External Authorization (updated)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>Mar 31, 2021</date>
        <revdescription>
          <para>Reason value in ExternalAuthorization request was changed to 'Other' in the scope of #2098:</para>
          <para>ACCESSCONTROL-11-1-10-v21.06 ACCESS CONTROL - ACCESS DENIED TO ANONYMOUS (EXTERNAL AUTHORIZATION FOR IDENTIFIER REQUEST)</para>
          <para>ACCESSCONTROL-11-1-13-v21.06 ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL (EXTERNAL AUTHORIZATION FOR IDENTIFIER REQUEST)</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>Apr 16, 2021</date>
        <revdescription>
          <para>Credential entity added into Prerequisites in the scope of #2184:</para>
          <para>ACCESSCONTROL-6-1-2-v21.06 ACCESS CONTROL – ACCESS GRANTED WITH CREDENTIAL EVENT</para>
          <para>ACCESSCONTROL-9-1-2-v21.06 ACCESS CONTROL – ACCESS DENIED WITH CREDENTIAL EVENT</para>
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>May 04, 2021</date>
        <revdescription>
          <para>ACCESSCONTROL-16-1-1 FEEDBACK test case added in the scope of #2107.</para>      
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>May 26, 2021</date>
        <revdescription>
          <para>Area entity added into Prerequisites in the scope of #2208:</para>
          <para>ACCESSCONTROL-3-1-4 GET AREA INFO LIST - LIMIT</para>      
        </revdescription>
      </revision>
      <revision>
        <revnumber>21.06</revnumber>
        <date>May 26, 2021</date>
        <revdescription>
          <para>The following test case was updated in the scope of #2029:</para>
          <para>ACCESSCONTROL-4-1-2 ACCESS POINT CAPABILITIES CONSISTENCY (step 4.2 removed)</para>
        </revdescription>
      </revision>
    </revhistory>
  </info>
  <chapter xml:id="s.intro">
    <title>Introduction</title>
    <para>
      The goal of the ONVIF test specification set is to make it possible to realize fully interoperable IP physical security implementation from different vendors. The set of ONVIF test specification describes the test cases needed to verify the [ONVIF Network Interface Specs] and [ONVIF Conformance] requirements. And also the test cases are to be basic inputs for some Profile specification requirements. It also describes the test framework, test setup, pre-requisites, test policies needed for the execution of the described test cases.
    </para>
    <para>
      This ONVIF Access Control Test Specification acts as a supplementary document to the [ONVIF Network Interface Specs], illustrating necessary test cases to be executed and passed. And also this specification acts as an input document to the development of test tool which will be used to test the ONVIF device implementation conformance towards ONVIF standard. This test tool is referred as ONVIF Client hereafter.
    </para>
    <section xml:id="s.intro.scope">
      <title>Scope</title>
      <para>
        This ONVIF Access Control Test Specification defines and regulates the conformance testing procedure for the ONVIF conformant devices. Conformance testing is meant to be functional black-box testing. The objective of this specification is to provide test cases for testing individual requirements of ONVIF devices according to ONVIF Access Control service which is defined in [ONVIF Network Interface Specs].
      </para>
      <para>
        The principal intended purposes are:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>Provide self-assessment tool for implementations.</para>
          </listitem>
          <listitem>
            <para>
              Provide comprehensive test suite coverage for [ONVIF Network Interface Specs].
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        This specification does not address the following:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              Product use cases and non-functional (performance and regression) testing.
            </para>
          </listitem>
          <listitem>
            <para>
              SOAP Implementation Interoperability test i.e. Web Service Interoperability Basic Profile version 2.0 (WS-I BP 2.0).
            </para>
          </listitem>
          <listitem>
            <para>
              Network protocol implementation Conformance test for HTTP, HTTPS, RTP protocol.
            </para>
          </listitem>
          <listitem>
            <para>
              Wi-Fi Conformance test
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        The set of ONVIF Test Specification will not cover the complete set of requirements as defined in [ONVIF Network Interface Specs]; instead it would cover its subset.
      </para>
      <para>
        This ONVIF Access Control Test Specification covers ONVIF Access Control service and Access Control Events which are a functional block of [ONVIF Network Interface Specs]. The following sections give a brief overview and scope of each functional block.
      </para>

      <section xml:id="s.intro.scope.capabilities">
        <title>Capabilities</title>
        <para>
          Capabilities test cases cover verification of getting Access Control Service capabilities. It means that the following commands are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                GetServices (Device Management Service)
              </para>
            </listitem>
            <listitem>
              <para>
                GetServiceCapabilities
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.access_point">
        <title>Access Point</title>
        <para>
          Access Point test cases cover verification of getting Access Point list, information, state and to enable/disable access point. It means that the following commands are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                GetAccessPointInfo
              </para>
            </listitem>
            <listitem>
              <para>
                GetAccessPointInfoList
              </para>
            </listitem>
            <listitem>
              <para>
                GetAccessPointState
              </para>
            </listitem>
            <listitem>
              <para>
                EnableAccessPoint
              </para>
            </listitem>
            <listitem>
              <para>
                DisableAccessPoint
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.area">
        <title>Area</title>
        <para>
          Area test cases cover verification of getting Area list and information. It means that the following commands are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                GetAreaInfo
              </para>
            </listitem>
            <listitem>
              <para>
                GetAreaInfoList
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.external_authorization">
        <title>External Authorization</title>
        <para>
          External Authorization test cases cover verification of external authorization procedure. It means that the following commands and events are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                ExternalAuthorization
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Denied/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Denied/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Request/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Request/Timeout
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Request/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Request/Identifier
              </para>
            </listitem>

          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.property_events">
        <title>Property Events</title>
        <para>
          Property events test cases cover verification of property events provided by Access Control Service. It means that the following commands and events are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                EnableAccessPoint
              </para>
            </listitem>
            <listitem>
              <para>
                DisableAccessPoint
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessPoint/State/Enabled

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.access_granted_events">
        <title>Access Granted Events</title>
        <para>
          Access Granted events test cases cover verification of access granted events provided by Access Control Service. It means that the following events are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Identifier
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.access_taken_events">
        <title>Access taken events</title>
        <para>
          Access taken events test cases cover verification of access taken events provided by Access Control Service. It means that the following events are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessTaken/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessTaken/Credential

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.access_not_taken_events">
        <title>Access not taken events</title>
        <para>
          Access not taken events test cases cover verification of access not taken events provided by Access Control Service. It means that the following events are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessNotTaken/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessNotTaken/Credential

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.access_denied_events">
        <title>Access Denied Events</title>
        <para>
          Access denied events test cases cover verification of access denied events provided by Access Control Service. It means that the following events are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/Denied/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Denied/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Denied/CredentialNotFound/Card
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Denied/CredentialNotFound
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.duress_events">
        <title>Duress events</title>
        <para>
          Duress events test cases cover verification of duress events provided by Access Control Service. It means that the following events are covered by the following test case:
          <itemizedlist>
            <listitem>
              <para>
                tns:AccessControl/Duress
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.consistency">
        <title>Consistency</title>
        <para>
          Consistency test cases cover verification of consistency between different entities and commands. It means that consistency between the following entities is covered by the following test case:
          <itemizedlist>
            <listitem>
              <para>
                Access Point Info and Get Area Info
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.access_point_change_events">
        <title>Access Point Change Events</title>
        <para>
          Access point change events test cases cover verification of access point change events provided by Access Control Service. It means that the following events are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Configuration/AccessPoint/Change
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:Configuration/AccessPoint/Removed

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

      <section xml:id="s.intro.scope.area_change_events">
        <title>Area Change Events</title>
        <para>
          Area change events test cases cover verification of area change events provided by Access Control Service. It means that the following events are covered by these test cases:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Configuration/Area/Change
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:Configuration/Area/Removed

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

    </section>
  </chapter>
  <chapter xml:id="additions">
    <title>Terms and Definitions</title>
    <section xml:id="additions.definitions">
      <title>Definitions</title>
      <para>This section defines terms that are specific to the ONVIF Device IO Service and tests. For a list of applicable general terms and definitions, please see [ONVIF Base Test].</para>
      <variablelist>

        <varlistentry>
          <term>Access Point</term>
          <listitem>
            <para>
              A logical composition of a physical door and ID point(s) controlling access in one direction.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Access Point Disable</term>
          <listitem>
            <para>
              If an Access Point is disabled, it will not be considered in the decision making process and no commands will be issued from that Access Point to the Door configured for that Access Point. When an Access Point is disabled, the associated ID Point may or may not be disabled or shut down. Clients may still be able to command the Door Controller to control associated door even though that door is also referenced by a disabled access point.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Credential</term>
          <listitem>
            <para>
              A physical/tangible object, a piece of knowledge, or a facet of a person's physical being, that enables an individual access to a given physical facility or computer-based information system.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Credential Number</term>
          <listitem>
            <para>
              A sequence of bytes uniquely identifying a credential at an access point.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Door</term>
          <listitem>
            <para>
              A physical door, barrier, turnstile, etc which can be controlled remotely and restricts access between two areas. A door is usually equipped with an electronic lock and a door monitor.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Duress</term>
          <listitem>
            <para>
              Forcing a person to provide access to a secure area against that person's wishes.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ID Point</term>
          <listitem>
            <para>
              A device that converts reader signals to protocols recognized by an authorization engine. It can be card reader, REX, biometric reader etc.
            </para>
          </listitem>
        </varlistentry>

      </variablelist>
    </section>
    <section xml:id="additions.abbreviations">
      <title>Abbreviations</title>
      <para>This section describes abbreviations used in this document.</para>
      <variablelist>
        <varlistentry>
          <term>HTTP</term>
          <listitem>
            <para>Hypertext Transfer (or Transport) Protocol</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>PACS</term>
          <listitem>
            <para>Physical Access Control System</para>
          </listitem>
        </varlistentry>

      </variablelist>
    </section>
  </chapter>
  <chapter xml:id="overview">
    <title>Test Overview</title>
    <para>
      This section provides information the test setup procedure and required prerequisites, and the test policies that should be followed for test case execution.
    </para>
    <section xml:id="overview.test_setup">
      <title>Test Setup</title>
      <section xml:id="overview.test_setup.network_configuration">
        <title>Network Configuration for DUT</title>
        <para>
          The generic test configuration for the execution of test cases defined in this document is as shown below (Figure 4.1).
        </para>
        <para>
          Based on the individual test case requirements, some of the entities in the below setup may not be needed for the execution of those corresponding test cases.
        </para>
        <figure>
          <title>Test Configuration for DUT</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="test_network.png"
                         format="PNG"
                         scalefit="0"/>
            </imageobject>
            <textobject>
              <phrase>Test Configuration for DUT</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <para>
          <emphasis role="bold">DUT:</emphasis> ONVIF device to be tested. Hereafter, this is referred to as DUT (Device Under Test).
        </para>
        <para>
          <emphasis role="bold">ONVIF Client (Test Tool):</emphasis> Tests are executed by this system and it controls the behavior of the DUT. It handles both expected and unexpected behavior.
        </para>
        <para>
          <emphasis role="bold">HTTP Proxy:</emphasis> provides facilitation in case of RTP and RTSP tunneling over HTTP.
        </para>
        <para>
          <emphasis role="bold">Wireless Access Point:</emphasis> provides wireless connectivity to the devices that support wireless connection.
        </para>
        <para>
          <emphasis role="bold">DNS Server:</emphasis> provides DNS related information to the connected devices.
        </para>
        <para>
          <emphasis role="bold">DHCP Server:</emphasis> provides IPv4 Address to the connected devices.
        </para>
        <para>
          <emphasis role="bold">NTP Server:</emphasis> provides time synchronization between ONVIF Client and DUT.
        </para>
        <para>
          <emphasis role="bold">Switching Hub:</emphasis> provides network connectivity among all the test equipments in the test environment. All devices should be connected to the Switching Hub.
          When running multiple test instances in parallel on the same network, the Switching Hub should be configured to use filtering in order to avoid multicast traffic being flooded to all ports, because this may affect test stability.
        </para>
        <para>
          <emphasis role="bold">Router:</emphasis> provides router advertisements for IPv6 configuration.
        </para>
      </section>
    </section>
    <section xml:id="overview.prerequisites">
      <title>Prerequisites</title>
      <para>
        The pre-requisites for executing the test cases described in this Test Specification are the following:
        <itemizedlist>
          <listitem>
            <para>
              The DUT shall be configured with an IPv4 address.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be IP reachable [in the test configuration].
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be able to be discovered by the ONVIF Device Test Tool.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT shall be configured with the time i.e. manual configuration of UTC time and if NTP is supported by DUT, then NTP time shall be synchronized with NTP Server.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT time and ONVIF Device Test tool time shall be synchronized with each other either manually or by common NTP server.
            </para>
          </listitem>
          <listitem>
            <para>
              Test Operator shall configure Operation Delay properly so that it would have enough time to receive Notification messages for the following test cases for ONVIF Device Test Tool (see test description for more details):
              <itemizedlist>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-11-1-1"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-11-1-2"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-11-1-3"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-11-1-4"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-11-1-5"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-11-1-6"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-5-1-1"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-5-1-2"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-6-1-1"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-6-1-2"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-6-1-3"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-7-1-1"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-7-1-2"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-8-1-1"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-8-1-2"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-9-1-1"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-9-1-2"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-9-1-3"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-9-1-4"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-9-1-5"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-10-1-2"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-11-1-9"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-11-1-10"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-11-1-11"/>
                  </para>
                </listitem>

                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-12-1-1"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-12-1-2"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-13-1-1"/>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <xref linkend="tc.ACCESSCONTROL-13-1-2"/>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Access Point is configured and added to the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Access Point with Enable/Disable capability is configured and added to the DUT, if Enable/Disable capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Access Point with Duress capability is configured and added to the DUT, if Duress capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Access Point with Access Taken capability is configured and added to the DUT, if Access Taken capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Access Point with External Authorization capability is configured and added to the DUT, if External Authorization capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Access Point with Identifier Access capability is configured and added to the DUT, if Identifier Access capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Access Point with Anonymous Access capability is configured and added to the DUT, if Anonymous Access capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Access Point with Anonymous Access capability and External Authorization capability is configured and added to the DUT, if Anonymous Access capability and External Authorization capability are supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Access Point with Anonymous Access capability and Access Taken capability is configured and added to the DUT, if Anonymous Access capability and Access Taken capability are supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Access Point with tns1:AccessControl/Denied/CredentialNotFound/Card event capability is configured and added to the DUT, if tns1:AccessControl/Denied/CredentialNotFound/Card capability is supported by the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              At least one Area is configured and added to the DUT, if it is possible for the DUT.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <section xml:id="overview.test_policy">
      <title>Test Policy</title>
      <para>
        This section describes the test policies specific to the test case execution of each functional block.
      </para>
      <para>
        The DUT shall adhere to the test policies defined in this section.
      </para>
      <section xml:id="overview.test_policy.capabilities">
        <title>Capabilities</title>
        <para>
          DUT shall give the Access Control Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServices and GetServiceCapabilities command.
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_control.capabilities"/> for Capabilities Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.access_point">
        <title>Access Point</title>
        <para>

          DUT shall give the Access Control Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServices and GetServiceCapabilities command.
        </para>
        <para>
          DUT shall support at least one Access Point. And also at least one Access Point shall be added and configured on device.
        </para>
        <para>
          DUT shall support the following commands:
          <itemizedlist>
            <listitem>
              <para>
                GetAccessPointInfo
              </para>
            </listitem>
            <listitem>
              <para>
                GetAccessPointInfoList
              </para>
            </listitem>
            <listitem>
              <para>
                GetAccessPointState
              </para>
            </listitem>
          </itemizedlist>

          DUT shall return capabilities for each specific access point. If DUT returns Disable Access Point capability as supported by access point, then DUT shall support the following commands for this access point:
          <itemizedlist>
            <listitem>
              <para>
                DisableAccessPoint
              </para>
            </listitem>
            <listitem>
              <para>
                EnableAccessPoint
              </para>
            </listitem>
          </itemizedlist>

          DUT shall not return any fault, if GetAccessPointInfo was invoked for nonexistent Access Point token. Such tokens shall be ignored.
        </para>
        <para>
          DUT shall not return more items in GetAccessPointInfo and GetAccessPointInfoList responses than specified in service capabilities by MaxLimit.
        </para>
        <para>
          DUT shall not return more items in GetAccessPointInfoList response than specified by Limit parameter in request.
        </para>
        <para>
          DUT shall return SOAP 1.2 fault message (InvalidArgs/TooManyItems), if more items than MaxLimit were requested by GetAccessPointInfo command.
        </para>
        <para>
          DUT should return SOAP 1.2 fault message (InvalidArgVal/NotFound), if GetAccessPointState, EnableAccessPoint or DisableAccessPoint command was invoked for nonexistent Access Point token.
        </para>
        <para>
          DUT should return SOAP 1.2 fault message (ActionNotSupported/NotSupported), if EnableAccessPoint or DisableAccessPoint command was invoked for Access Point without Disable Access Point capability token.
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_control.access_point"/> for Access Point Test Cases.

        </para>
      </section>
      <section xml:id="overview.test_policy.area">
        <title>Area</title>
        <para>
          DUT shall give the Access Control Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServiceCapabilities command.
        </para>
        <para>
          If DUT supports at least one Area, one Area shall be added and configured on device.
        </para>
        <para>
          DUT shall support the following commands:
          <itemizedlist>
            <listitem>
              <para>
                GetAreaInfo
              </para>
            </listitem>
            <listitem>
              <para>
                GetAreaInfoList
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          DUT shall not return any fault, if GetAreaInfo was invoked for nonexistent Area token. Such tokens shall be ignored.
        </para>
        <para>
          DUT shall not return more items in GetAreaInfo and GetAreaInfoList responses than specified in service capabilities by MaxLimit.
        </para>
        <para>
          DUT shall not return more items in GetAreaInfoList response than specified by Limit parameter in request.
        </para>
        <para>
          DUT shall return SOAP 1.2 fault message (InvalidArgs/TooManyItems), if more items than MaxLimit were requested by GetAreaInfo command.
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_control.area"/> for Area Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.external_authorization">
        <title>External Authorization</title>
        <para>
          DUT shall give the Access Control Service entry point and Event Service entry point by GetServices command, if DUT supports Access Control service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServiceCapabilities command.
        </para>
        <para>
          DUT shall return capabilities for each specific access point.
        </para>
        <para>
          If DUT returns External Authorization capability as supported by access point, then DUT shall support the following commands and events for this access point:
          <itemizedlist>
            <listitem>
              <para>
                ExternalAuthorization
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Denied/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Request/Timeout
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Request/Credential
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns External Authorization capability and Anonymous Access capability as supported by access point, then DUT shall support the following events for this access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Denied/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Request/Anonymous
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns Identifier Access capability as supported by access point, then DUT shall support the following events for this access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Anonymous or tns1:AccessControl/AccessGranted/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Denied/Anonymous or tns1:AccessControl/Denied/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Request/Identifier
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Request/Timeout
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          DUT shall support GetEventProperties command and return all supported events in TopicSet.
        </para>
        <para>
          DUT shall support Pull Point Subscription and Topic Expression filter.
        </para>
        <para>
          DUT should return SOAP 1.2 fault message (InvalidArgVal/NotFound), if ExternalAuthorization command was invoked for nonexistent Access Point token.
        </para>
        <para>
          DUT should return SOAP 1.2 fault message (ActionNotSupported/NotSupported), if ExternalAuthorization command was invoked for Access Point without External Authorization capability token.
        </para>
        <para>
          A test operator shall manually invoke the following events if required:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/Request/Timeout
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Request/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Request/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Request/Identifier
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_control.external_authorization"/> for External Authorization Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.property_events">
        <title>Property Events</title>
        <para>
          DUT shall give the Access Control Service entry point and Event Service entry point by GetServices command, if DUT supports Access Control service. Otherwise these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServiceCapabilities command.
        </para>
        <para>
          DUT shall support following property events:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessPoint/State/Enabled
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          DUT shall return capabilities for each specific access point. If DUT returns Disable Access Point capability as supported by access point, then DUT shall support the following commands for this access point:
          <itemizedlist>
            <listitem>
              <para>
                DisableAccessPoint
              </para>
            </listitem>
            <listitem>
              <para>
                EnableAccessPoint
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          DUT shall support GetEventProperties command and return all supported events in TopicSet.
        </para>
        <para>
          DUT shall support Pull Point Subscription and Topic Expression filter.
        </para>
        <para>
          DUT shall generate property events with initial state after subscription was done.
        </para>
        <para>
          DUT shall generate property events with current state after corresponding properties were changed.
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_control.property_events"/> for Property Events Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.access_granted_events">
        <title>Access Granted Events</title>
        <para>
          DUT shall give the Access Control Service entry point and Event Service entry point by GetServices command, if DUT supports Access Control service. Otherwise these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServiceCapabilities command.
        </para>
        <para>
          DUT shall return capabilities for each specific access point.
        </para>
        <para>
          DUT shall support the following events for each access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Credential
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns Anonymous Access capability as supported by access point, then DUT shall support the following events for this access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Anonymous
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns tns1:AccessControl/AccessGranted/Identifier in topic set, then DUT shall support the following events:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Identifier
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          DUT shall support GetEventProperties command and return all supported events in TopicSet.
        </para>
        <para>
          DUT shall support Pull Point Subscription and Topic Expression filter.
        </para>
        <para>
          A test operator shall manually invoke the following events if required:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Identifier
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_control.access_granted_events"/> for Access granted events Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.access_taken_events">
        <title>Access taken events</title>
        <para>
          DUT shall give the Access Control Service entry point and Event Service entry point by GetServices command, if DUT supports Access Control service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServiceCapabilities command.
        </para>
        <para>
          DUT shall return capabilities for each specific access point.
        </para>
        <para>
          DUT shall support the following events for each access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Credential
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns Anonymous Access capability as supported by access point, then DUT shall support the following events for this access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Anonymous
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns Access Taken capability as supported by access point, then DUT shall support the following events for this access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessTaken/Credential
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns Anonymous Access capability and Access Taken capability as supported by access point, then DUT shall support the following events for this access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessTaken/Anonymous
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          DUT shall support GetEventProperties command and return all supported events in TopicSet.
        </para>
        <para>
          DUT shall support Pull Point Subscription and Topic Expression filter.
        </para>
        <para>
          A test operator shall manually invoke the following events if required:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessTaken/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessTaken/Credential
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_control.access_taken_events"/> for Access taken events Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.access_not_taken_events">
        <title>Access not taken events</title>
        <para>
          DUT shall give the Access Control Service entry point and Event Service entry point by GetServices command, if DUT supports Access Control service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServiceCapabilities command.
        </para>
        <para>
          DUT shall return capabilities for each specific access point.
        </para>
        <para>
          DUT shall support the following events for each access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Credential
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns Anonymous Access capability as supported by access point, then DUT shall support the following events for this access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Anonymous
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns Access Taken capability as supported by access point, then DUT shall support the following events for this access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessNotTaken/Credential
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns Anonymous Access capability and Access Taken capability as supported by access point, then DUT shall support the following events for this access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessNotTaken/Anonymous
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          DUT shall support GetEventProperties command and return all supported events in TopicSet.
        </para>
        <para>
          DUT shall support Pull Point Subscription and Topic Expression filter.
        </para>
        <para>
          A test operator shall manually invoke the following events if required:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessGranted/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessNotTaken/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/AccessNotTaken/Credential
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_control.access_not_taken_events"/> for Access not taken events Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.access_denied_events">
        <title>Access Denied Events</title>
        <para>
          DUT shall give the Access Control Service entry point and Event Service entry point by GetServices command, if DUT supports Access Control service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServiceCapabilities command.
        </para>
        <para>
          DUT shall return capabilities for each specific access point.
        </para>
        <para>
          DUT shall support the following events for each access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/Denied/Credential
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns tns1:AccessControl/Denied/CredentialNotFound/Card as supported, DUT shall support the following event for at least one configured access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/Denied/CredentialNotFound/Card
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns tns1:AccessControl/Denied/CredentialNotFound as supported, DUT shall support the following event for at least one configured access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/Denied/CredentialNotFound
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns Anonymous Access capability as supported by access point, then DUT shall support the following events for this access point:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/Denied/Anonymous
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns tns1:AccessControl/Denied/Identifier in topic set, then DUT shall support the following events:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/Denied/Identifier
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          DUT shall support GetEventProperties command and return all supported events in TopicSet.
        </para>
        <para>
          DUT shall support Pull Point Subscription and Topic Expression filter.
        </para>
        <para>
          A test operator shall manually invoke the following events if required:
          <itemizedlist>
            <listitem>
              <para>
                tns1:AccessControl/Denied/Anonymous
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Denied/Credential
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Denied/CredentialNotFound/Card
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Denied/CredentialNotFound
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:AccessControl/Denied/Identifier
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_control.access_denied_events"/> for Access Denied Events Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.duress_events">
        <title>Duress events</title>
        <para>
          DUT shall give the Access Control Service entry point and Event Service entry point by GetServices command, if DUT supports Access Control service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetServiceCapabilities command.
        </para>
        <para>
          DUT shall return capabilities for each specific access point.
        </para>
        <para>
          If DUT returns Duress capability as supported by access point, then DUT shall support the following events for this access point:
          <itemizedlist>
            <listitem>
              <para>
                tns:AccessControl/Duress
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          DUT shall support GetEventProperties command and return all supported events in TopicSet.
        </para>
        <para>
          DUT shall support Pull Point Subscription and Topic Expression filter.
        </para>
        <para>
          A test operator shall manually invoke the following events if required:
          <itemizedlist>
            <listitem>
              <para>
                tns:AccessControl/Duress
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_control.duress_events"/> for Duress events Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.consistency">
        <title>Consistency</title>
        <para>
          DUT shall give the Access Control Service entry point by GetServices command, if DUT supports this service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support at least one Access Point. And also at least one Access Point shall be added and configured on device.
        </para>
        <para>
          If DUT supports at least one Area, at least one Area shall be added and configured on device.
        </para>
        <para>
          DUT shall support the following commands:
          <itemizedlist>
            <listitem>
              <para>
                GetAccessPointInfoList
              </para>
            </listitem>
            <listitem>
              <para>
                GetAreaInfoList
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          DUT shall not return other Area tokens, than listed in GetAreaInfoList responses, in AreaTo and AreaFrom fields of GetAccessPointInfo’s.
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_control.consistency"/> for Consistency Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.access_point_change_events">
        <title>Access Point Change Events</title>
        <para>
          DUT shall give the Access Control Service entry point and Event Service entry point by GetServices command, if DUT supports Access Control service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetEventProperties command and return all supported events in TopicSet.
        </para>
        <para>
          DUT shall support Pull Point Subscription and Topic Expression filter.
        </para>
        <para>
          If DUT supports adding or changing access points, then DUT shall support the following events:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Configuration/AccessPoint/Change
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns tns1:Configuration/AccessPoint/Change topic in GetEventProperties command, then DUT should have possibility to invoke it.
        </para>
        <para>
          If DUT supports removing access points, then DUT shall support the following events:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Configuration/AccessPoint/Removed
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns tns1:Configuration/AccessPoint/Removed topic in GetEventProperties command, then DUT should have possibility to invoke it.
        </para>
        <para>
          A test operator shall manually invoke the following events if required:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Configuration/AccessPoint/Change
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:Configuration/AccessPoint/Removed
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_control.access_point_configuration"/> for Access Point Change events Test Cases.
        </para>
      </section>
      <section xml:id="overview.test_policy.area_change_events">
        <title>Area Change Events</title>
        <para>
          DUT shall give the Access Control Service entry point and Event Service entry point by GetServices command, if DUT supports Access Control service. Otherwise, these test cases will be skipped.
        </para>
        <para>
          DUT shall support GetEventProperties command and return all supported events in TopicSet.
        </para>
        <para>
          DUT shall support Pull Point Subscription and Topic Expression filter.
        </para>
        <para>
          If DUT supports adding or changing areas, then DUT shall support the following events:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Configuration/Area/Change
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns tns1:Configuration/Area/Change topic in GetEventProperties command, then DUT should have possibility to invoke it.
        </para>
        <para>
          If DUT supports removing areas, then DUT shall support the following events:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Configuration/Area/Removed
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          If DUT returns tns1:Configuration/Area/Removed topic in GetEventProperties command, then DUT should have possibility to invoke it.
        </para>
        <para>
          A test operator shall manually invoke the following events if required:
          <itemizedlist>
            <listitem>
              <para>
                tns1:Configuration/Area/Change
              </para>
            </listitem>
            <listitem>
              <para>
                tns1:Configuration/Area/Removed
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          Please, refer to <xref linkend="tc.access_control.area_configuration"/> for Area Change events Test Cases.
        </para>
      </section>

    </section>
  </chapter>
  <!--Access Control Test Cases-->
  <chapter xml:id="tc.access_control">
    <title>Access Control Test Cases</title>
    <!--Capabilities-->
    <section xml:id="tc.access_control.capabilities"
             xreflabel="Section 4.1">
      <title>Capabilities</title>
      <!--ACCESSCONTROL-1-1-1-->
      <section xml:id="tc.ACCESSCONTROL-1-1-1">
        <title>ACCESS CONTROL SERVICE CAPABILITIES</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-1-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Capability exchange (ONVIF Core Specification), GetServiceCapabilities (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServiceCapabilities (for Access Control Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify DUT Access Control Service Capabilities.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Capabilities =: <emphasis role="italic">cap</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.@AccessPointManagementSupported = true and <emphasis role="italic">cap</emphasis>.@MaxAccessPoints = 0, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.@AreaManagementSupported = true and <emphasis role="italic">cap</emphasis>.@MaxAreas = 0, FAIL the test.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
      <!--ACCESSCONTROL-1-1-2-->
      <section xml:id="tc.ACCESSCONTROL-1-1-2">
        <title>GET SERVICES AND GET ACCESS CONTROL SERVICE CAPABILITIES CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-1-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Capability exchange (ONVIF Core Specification), GetServiceCapabilities (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetServices, GetServiceCapabilities (for Access Control Service)
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> devicemgmt.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Services and Access Control Service Capabilities consistency.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServices</emphasis> request (IncludeCapability = true) to retrieve all services of the DUT with service capabilities.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServicesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve DUT Access Control service capabilities.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServicesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent different Capabilities in <emphasis role="bold">GetServicesResponse</emphasis> message and in <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Service will be defined as Access Controller service if it has Namespace element that is equal to “http://www.onvif.org/ver10/accesscontrol/wsdl”.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Capabilities in <emphasis role="bold">GetServicesResponse</emphasis> message and in <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message will be assumed as different in the following cases:
          <itemizedlist>
            <listitem>
              <para>
                Values of MaxLimit attribute are different.
              </para>
            </listitem>
            <listitem>
              <para>
                MaxAccessPoints attribute values are different;
              </para>
            </listitem>
            <listitem>
              <para>
                MaxAreas attribute values are different;
              </para>
            </listitem>
            <listitem>
              <para>
                MaxAccessPoints attribute is skipped only for GetServices or only for GetServiceCapabilities request;
              </para>
            </listitem>
            <listitem>
              <para>
                MaxAreas attribute is skipped only for GetServices or only for GetServiceCapabilities request;
              </para>
            </listitem>
            <listitem>
              <para>
                ClientSuppliedTokenSupported  attribute values are different;
              </para>
            </listitem>
            <listitem>
              <para>
                AccessPointManagementSupported attribute values are different.
              </para>
            </listitem>
            <listitem>
              <para>
                AreaManagementSupported attribute values are different.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Access Point-->
    <section xml:id="tc.access_control.access_point"
             xreflabel="Section 4.2">
      <title>Access Point</title>
      <!--ACCESSCONTROL-2-1-1-->
      <section xml:id="tc.ACCESSCONTROL-2-1-1">
        <title>GET ACCESS POINT INFO</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-2-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAccessPointInfo (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Point Info.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. Access Point Entity is supported by the DUT. At least one Access Point is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-1.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-1.4">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve MaxLimit capability.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointInfo</emphasis> request (Token list with subset of AccessPointInfo.token values from a complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-1.3"/> with token number equal to MaxLimit) to retrieve a subset of Access Point Information from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-1.7">
              <para>
                Verify the <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that all requested AccessPointInfo items are in <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-1.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPoint</emphasis> request (Token = Token1, where Token1 is the first token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-1.3"/>) to retrieve AccessPoint Information for specified token from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-1.10">
              <para>
                Verify the <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-1.11">
              <para>
                Verify that <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message contains AccessPointInfo only for specified token.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-1.12">
              <para>
                Repeat steps <xref linkend="tc.ACCESSCONTROL-2-1-1.9"/>-<xref linkend="tc.ACCESSCONTROL-2-1-1.11"/> for all other tokens from a complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-1.3"/>.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message that contains at least two AccessPointInfo items with equal tokens.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return requested AccessPointInfo items in <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message for step <xref linkend="tc.ACCESSCONTROL-2-1-1.7"/> or <xref linkend="tc.ACCESSCONTROL-2-1-1.10"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more items than requested in <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message for step <xref linkend="tc.ACCESSCONTROL-2-1-1.7"/> or <xref linkend="tc.ACCESSCONTROL-2-1-1.10"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point at step <xref linkend="tc.ACCESSCONTROL-2-1-1.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT did not return any AccessPointInfo on complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-1.3"/>, skip steps <xref linkend="tc.ACCESSCONTROL-2-1-1.4"/>-<xref linkend="tc.ACCESSCONTROL-2-1-1.12"/>, fail test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> In case MaxLimit is equal to 0, 1 will be used instead in requests.

        </para>
      </section>
      <!--ACCESSCONTROL-2-1-2-->
      <section xml:id="tc.ACCESSCONTROL-2-1-2">
        <title>GET ACCESS POINT INFO WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-2-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAccessPointInfo (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Point Info with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. At least one Access Point is configured and added to the DUT if Access Point Entity is supported by the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-2.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve MaxLimit capability.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointInfo</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-2.7">
              <para>
                Verify the <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message from the DUT. Check that empty list was returned.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-2.8">
              <para>
                If DUT supports Access Point Entity feature and if MaxLimit &gt; 1:
                <itemizedlist>
                  <listitem>
                    <para>
                      ONVIF Client will invoke <emphasis role="bold">GetAccessPointInfo</emphasis> request (invalid Token, valid Token).
                    </para>
                  </listitem>
                  <listitem xml:id="tc.ACCESSCONTROL-2-1-2.9">
                    <para>
                      Verify the <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message from the DUT. Check that list which contains AccessPoint for valid Token only was returned.

                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>

                The DUT did not send valid <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message that contains at least two AccessPointInfo items with equal tokens.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message that contains any AccessPointInfo items for step <xref linkend="tc.ACCESSCONTROL-2-1-2.7"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message that contains any AccessPointInfo items other than item for valid Token or does not contains AccessPointInfo item for valid token step <xref linkend="tc.ACCESSCONTROL-2-1-2.8"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point at step <xref linkend="tc.ACCESSCONTROL-2-1-2.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If MaxLimit is less than 2 skip step <xref linkend="tc.ACCESSCONTROL-2-1-2.8"/>.
        </para>
      </section>
      <!--ACCESSCONTROL-2-1-3-->
      <section xml:id="tc.ACCESSCONTROL-2-1-3">
        <title>GET ACCESS POINT INFO LIST - LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-2-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Point Info List using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. At least one Access Point is configured and added to the DUT if Access Point Entity is supported by the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-3.3">
              <para>
                ONVIF Client retrieves complete list of access point info items by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access points info list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointsNumber</emphasis> - access points number
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT supports Access Point Entity feature and <emphasis role="italic">accessPointsNumber</emphasis> &lt; = 0, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT does not support Access Point Entity feature and <emphasis role="italic">accessPointsNumber</emphasis> != 0, FAIL the test and skip other steps.
              </para>
            </listitem>

            <listitem xml:id="tc.ACCESSCONTROL-2-1-3.4">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve MaxLimit capability.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-3.5">
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                If MaxLimit &gt; 0
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width=2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetAccessPointInfoList</emphasis> request (Limit = 1, no StartReference) to retrieve the first item on the list of Access Point Information from the DUT.
                    </para>
                  </listitem>
                  <listitem xml:id="tc.ACCESSCONTROL-2-1-3.7">
                    <para>
                      The DUT responds with a <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            List of AccessPointInfo := <emphasis role="italic">accessPointInfoList1</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointInfoList1</emphasis> contains number of items greater than 1, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If DUT does not support Access Point Entity and <emphasis role="italic">accessPointInfoList1</emphasis> is not empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetAccessPointInfoList</emphasis> request (Limit = MaxLimit, no StartReference) to retrieve the first part of Access Point Information list from the DUT and is limited by MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      List of AccessPointInfo := <emphasis role="italic">accessPointInfoList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoList2</emphasis> contains number of items greater than MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT does not support Access Point Entity and <emphasis role="italic">accessPointInfoList2</emphasis> is not empty, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If MaxLimit &gt; 0
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width=2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client invokes <emphasis role="bold">GetAccessPointInfoList</emphasis> request (Limit = ItemNumber, no StartReference, where ItemNumber is between 1 and minimal value of MaxLimit and total number of access points) to retrieve sublist of Access Point Information limited by ItemNumber from the DUT.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with a <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            List of AccessPointInfo := <emphasis role="italic">accessPointInfoList3</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointInfoList3</emphasis> contains number of items greater than ItemNumber, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If DUT does not support Access Point Entity and <emphasis role="italic">accessPointInfoList3</emphasis> is not empty, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-2-1-3.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more AccessPointInfo items in <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message than it was specified in Limit parameter.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more AccessPointInfo items in <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message than MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <!--<para>
          <emphasis role="bold">Note:</emphasis> If the DUT did not return any AccessPointInfo on complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-3.3"/>, skip steps <xref linkend="tc.ACCESSCONTROL-2-1-3.4"/>-<xref linkend="tc.ACCESSCONTROL-2-1-3.14"/>, fail test and go to the next test.
        </para>-->
        <para>
          <emphasis role="bold">Note:</emphasis> In case MaxLimit is equal to 0, 1 will be used instead for request.

        </para>
      </section>
      <!--ACCESSCONTROL-2-1-4-->
      <section xml:id="tc.ACCESSCONTROL-2-1-4">
        <title>GET ACCESS POINT INFO LIST - START REFERENCE AND LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-2-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Point Info List using StartReference and Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. Access Point Entity is supported by the DUT. At least one Access Point is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve DUT access control service capabilities.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-4.4">
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> (MaxLimit) message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-4.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointInfoList</emphasis> request (Limit = MaxLimit, no StartReference) to retrieve the first part of Access Point Information list from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-4.6">
              <para>
                Verify the <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message from the DUT. Verify that <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message does not contain number of items greater than Limit. Verify that <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-4.7">
              <para>
                If <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message contains NextStartReference, repeat steps <xref linkend="tc.ACCESSCONTROL-2-1-4.5"/>-<xref linkend="tc.ACCESSCONTROL-2-1-4.6"/> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting the complete access point list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> messages at step <xref linkend="tc.ACCESSCONTROL-2-1-4.6"/> does not contain AccessPointInfo items with the same tokens values all over the list, i.e. there shall be no <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> messages containing the same value for AccessPointInfo items token.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-4.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointInfoList</emphasis> request (Limit = 1, no StartReference) to retrieve the first part of Access Point Information list from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-4.10">
              <para>
                Verify the <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message from the DUT. Verify that <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message does not contain number of items greater than Limit. Verify that <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-4.11">
              <para>
                If <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message contains NextStartReference, repeat steps <xref linkend="tc.ACCESSCONTROL-2-1-4.9"/>-<xref linkend="tc.ACCESSCONTROL-2-1-4.12"/> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting the complete access point list.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-4.12">
              <para>
                Verify that <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> messages at step <xref linkend="tc.ACCESSCONTROL-2-1-4.10"/> does not contain AccessPointInfo items with the same tokens values all over the list, i.e. there shall be no <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> messages containing the same value for AccessPointInfo items token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the total list received during steps <xref linkend="tc.ACCESSCONTROL-2-1-4.5"/>-<xref linkend="tc.ACCESSCONTROL-2-1-4.7"/> has the same items as the list received during steps <xref linkend="tc.ACCESSCONTROL-2-1-4.9"/>-<xref linkend="tc.ACCESSCONTROL-2-1-4.11"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-4.14">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointInfoList</emphasis> request (Limit = [limit_value], no StartReference, where limit_value is between 1 and MaxLimit) to retrieve the first part of Access Point Information list from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-4.15">
              <para>
                Verify the <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message from the DUT. Verify that <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message does not contain number of items greater than Limit. Verify that <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-4.16">
              <para>
                If <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message contains NextStartReference, repeat steps <xref linkend="tc.ACCESSCONTROL-2-1-4.14"/>-<xref linkend="tc.ACCESSCONTROL-2-1-4.17"/> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting the complete access point list.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-4.17">
              <para>
                Verify that <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> messages at step <xref linkend="tc.ACCESSCONTROL-2-1-4.15"/> does not contain AccessPointInfo items with the same tokens values all over the list, i.e. there shall be no <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> messages containing the same value for AccessPointInfo items token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the total list received during steps <xref linkend="tc.ACCESSCONTROL-2-1-4.5"/>-<xref linkend="tc.ACCESSCONTROL-2-1-4.7"/> has the same items as the list received during steps <xref linkend="tc.ACCESSCONTROL-2-1-4.14"/>-<xref linkend="tc.ACCESSCONTROL-2-1-4.16"/>.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message that contains wrong item list than requested according to StartReference and Limit values.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> messages for step <xref linkend="tc.ACCESSCONTROL-2-1-4.6"/> contains at least one pair of the same tokens for AccessPointInfo item all over the messages.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> messages for step <xref linkend="tc.ACCESSCONTROL-2-1-4.10"/> contains at least one pair of the same tokens for AccessPointInfo item all over the messages.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> messages for step <xref linkend="tc.ACCESSCONTROL-2-1-4.15"/> contains at least one pair of the same tokens for AccessPointInfo item all over the messages.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more AccessPointInfo items in <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message than it was specified in Limit parameter.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more AccessPointInfo items in <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message than MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> In case MaxLimit is equal to 0, 1 will be used instead for request.
        </para>
      </section>
      <!--ACCESSCONTROL-2-1-5-->
      <section xml:id="tc.ACCESSCONTROL-2-1-5">
        <title>GET ACCESS POINT INFO LIST - NO LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-2-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Point Info List without using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. At least one Access Point is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve DUT access control service capabilities.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> (MaxLimit) message from the DUT.
              </para>
            </listitem>

            <listitem xml:id="tc.ACCESSCONTROL-2-1-5.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointInfoList</emphasis> request (no Limit, no StartReference) to retrieve the first part of Access Point Information list from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-5.6">
              <para>
                Verify the <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message from the DUT. Verify that <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                If DUT does not support Access Point Entity and AccessPointInfoList in <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> is not empty, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message contains NextStartReference, repeat steps <xref linkend="tc.ACCESSCONTROL-2-1-5.5"/>-<xref linkend="tc.ACCESSCONTROL-2-1-5.6"/> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting the complete access point list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> messages at step <xref linkend="tc.ACCESSCONTROL-2-1-5.6"/> does not contain AccessPointInfo items with the same tokens values all over the list, i.e. there shall be no <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> messages containing the same value for AccessPointInfo items token.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message that contains wrong item list than requested according to StartReference and Limit values.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> messages for step <xref linkend="tc.ACCESSCONTROL-2-1-5.6"/> contains at least one pair of the same tokens for AccessPointInfo item all over the messages.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more AccessPointInfo items in <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message than MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-2-1-6-->
      <section xml:id="tc.ACCESSCONTROL-2-1-6">
        <title>GET ACCESS POINT INFO - TOO MANY ITEMS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-2-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAccessPointInfo (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Point Info in case if there a more items than MaxLimit in request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. Access Point Entity is supported by the DUT. At least one Access Point is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-6.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-6.4">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve MaxLimit capability.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                If total number of access points is less than MaxLimit, skip other steps and go to the text test.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointInfo</emphasis> request (Token list with subset of AccessPointInfo.token values from a complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-6.3"/> with token number greater than MaxLimit) to retrieve a subset of Access Point Information from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-6.8">
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgs/TooManyItems</emphasis>).

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-2-1-6.3"/>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT did not return any AccessPointInfo on complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-6.3"/>, skip steps <xref linkend="tc.ACCESSCONTROL-2-1-6.4"/>-<xref linkend="tc.ACCESSCONTROL-2-1-6.8"/>, fail test and go to the next test.
        </para>
      </section>
      <!--ACCESSCONTROL-2-1-7-->
      <section xml:id="tc.ACCESSCONTROL-2-1-7">
        <title>GET ACCESS POINT STATE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-2-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAccessPointState (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Point State.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. Access Point Entity is supported by the DUT. At least one Access Point is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-7.3">
              <para>
                Get a complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-7.4">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointState</emphasis> request (TokenList.Token = Token1, where Token1 is the first token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-7.3"/>) to retrieve Access Point state for specified token from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-7.5">
              <para>
                Verify the <emphasis role="bold">GetAccessPointStateResponse</emphasis> message from the DUT. Check that AccessPointState.Enabled is equal to true, if Access Point does not supports DisableAccessPoint capability, e.g. AccessPointInfo.Capabilities.DisableAccessPoint = false.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-7.6">
              <para>
                Repeat steps <xref linkend="tc.ACCESSCONTROL-2-1-7.4"/>-<xref linkend="tc.ACCESSCONTROL-2-1-7.5"/> for all other tokens from complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-7.3"/>.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetAccessPointStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-2-1-7.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned AccessPointState.Enabled = false for at least one Access Point in case AccessPointInfo.Capabilities.DisableAccessPoint = false for this Access Point.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT did not return any AccessPointInfo on complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-7.3"/>, skip steps <xref linkend="tc.ACCESSCONTROL-2-1-7.4"/>-<xref linkend="tc.ACCESSCONTROL-2-1-7.6"/>, fail the test and go to the next test.
        </para>
      </section>
      <!--ACCESSCONTROL-2-1-8-->
      <section xml:id="tc.ACCESSCONTROL-2-1-8">
        <title>GET ACCESS POINT STATE WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-2-1-8
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAccessPointState (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Point State with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service address was received from the DUT. Access Point Entity is supported by the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointState</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--ACCESSCONTROL-2-1-9-->
      <section xml:id="tc.ACCESSCONTROL-2-1-9">
        <title>ENABLE/DISABLE ACCESS POINT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-2-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> EnableAccessPoint (ONVIF Access Control Service Specification), DisableAccessPoint (ONVIF Access Control Service Specification), GetAccessPointState (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> EnableAccessPoint, DisableAccessPoint, GetAccessPointState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Enable and Disable Access Point and its State Change.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. Access Point Entity is supported by the DUT. At least one Access Point with Enable/Disable capability equal to true is configured and added to the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-9.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                If there is no Access Points with DisableAccessPoint equal to true, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-9.5">
              <para>
                If Access Point with Token1 (Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>) has AccessPointInfo.Capabilities.DisableAccessPoint equal to false, then skip steps <xref linkend="tc.ACCESSCONTROL-2-1-9.6"/>-<xref linkend="tc.ACCESSCONTROL-2-1-9.29"/> and go to the step <xref linkend="tc.ACCESSCONTROL-2-1-9.30"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-9.6">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointState</emphasis> request (Token = “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>) to get current access point state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetAccessPointStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                If Access Point with Token1 (Token1 is the first AccessPointState.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>) has AccessPointState.Enabled equal to true, then skip steps <xref linkend="tc.ACCESSCONTROL-2-1-9.9"/>-<xref linkend="tc.ACCESSCONTROL-2-1-9.19"/> and go to the step <xref linkend="tc.ACCESSCONTROL-2-1-9.20"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-9.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">EnableAccessPoint</emphasis> request (Token = “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>) to try enabling access point.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">EnableAccessPointResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointState</emphasis> request (Token = “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>) to get current access point state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetAccessPointStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that AccessPointState.Enabled is equal to true.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DisableAccessPoint</emphasis> request (Token = “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>) to try disabling access point.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DisableAccessPointResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointState</emphasis> request (Token = “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>) to get current access point state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetAccessPointStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that AccessPointState.Enabled is present and equal to false.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-9.19">
              <para>
                Go to step <xref linkend="tc.ACCESSCONTROL-2-1-9.30"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-9.20">
              <para>
                ONVIF Client will invoke <emphasis role="bold">DisableAccessPoint</emphasis> request (Token = “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>) to try disabling access point.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DisableAccessPointResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointState</emphasis> request (Token = “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>) to get current access point state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetAccessPointStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that AccessPointState.Enabled is present and equal to false.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">EnableAccessPoint</emphasis> request (Token = “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>) to try enabling access point.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">EnableAccessPointResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointState</emphasis> request (Token = “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>) to get current access point state.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetAccessPointStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-9.29">
              <para>
                Verify that AccessPointState.Enabled is equal to true or skipped.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-9.30">
              <para>
                Repeat steps <xref linkend="tc.ACCESSCONTROL-2-1-9.5"/>-<xref linkend="tc.ACCESSCONTROL-2-1-9.29"/> for all other tokens from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetAccessPointStateResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">EnableAccessPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">DisableAccessPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not change Access Point Enabled value to false after <emphasis role="bold">DisableAccessPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not change Access Point Enabled value to true after <emphasis role="bold">EnableAccessPointResponse</emphasis> message (Enabled element could be skipped in <emphasis role="bold">GetAccessPointStateResponse</emphasis> message for this case).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT did not return any AccessPointInfo on complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-9.3"/>, skip steps <xref linkend="tc.ACCESSCONTROL-2-1-9.5"/>-<xref linkend="tc.ACCESSCONTROL-2-1-9.30"/>, fail the test and go to the next test.
        </para>
      </section>
      <!--ACCESSCONTROL-2-1-10-->
      <section xml:id="tc.ACCESSCONTROL-2-1-10">
        <title>ENABLE/DISABLE ACCESS POINT - COMMAND NOT SUPPORTED</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-2-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> EnableAccessPoint (ONVIF Access Control Service Specification), DisableAccessPoint (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> EnableAccessPoint, DisableAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Enable and Disable Access Point in case Door does not support this capability.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. Access Point Entity is supported by the DUT. At least one Access Point is configured and added to the DUT. At least one Access Point with Enable/Disable capability equal to false is configured and added to the DUT, if possible.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-10.3">
              <para>
                Get a complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-10.4">
              <para>
                If Access Point with Token1 (Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-10.3"/>) has AccessPointInfo.Capabilities.DisableAccessPoint equal to true or skipped, then skip steps <xref linkend="tc.ACCESSCONTROL-2-1-10.5"/>-<xref linkend="tc.ACCESSCONTROL-2-1-10.8"/> and go to the step <xref linkend="tc.ACCESSCONTROL-2-1-10.9"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-10.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">EnableAccessPoint</emphasis> request (Token = “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-10.3"/>) to try enabling access point.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">ActionNotSupported/NotSupported</emphasis>).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DisableAccessPoint</emphasis> request ( “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-10.3"/>) to try disabling access point.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-10.8">
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">ActionNotSupported/NotSupported</emphasis>).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-2-1-10.9">
              <para>
                Repeat steps <xref linkend="tc.ACCESSCONTROL-2-1-10.4"/>-<xref linkend="tc.ACCESSCONTROL-2-1-10.8"/> for all other tokens from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-10.3"/>.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-2-1-10.3"/>.
              </para>

            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT did not return any AccessPointInfo on complete list of access points at step <xref linkend="tc.ACCESSCONTROL-2-1-10.3"/>, skip steps <xref linkend="tc.ACCESSCONTROL-2-1-10.4"/>-<xref linkend="tc.ACCESSCONTROL-2-1-10.9"/>, fail the test and go to the next test.

        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--ACCESSCONTROL-2-1-11-->
      <section xml:id="tc.ACCESSCONTROL-2-1-11">
        <title>ENABLE ACCESS POINT WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-2-1-11
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> EnableAccessPoint (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> EnableAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Enable Access Point with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service address was received from the DUT. Access Point Entity is supported by the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">EnableAccessPoint</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--ACCESSCONTROL-2-1-12-->
      <section xml:id="tc.ACCESSCONTROL-2-1-12">
        <title>DISABLE ACCESS POINT WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-2-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DisableAccessPoint (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DisableAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Disable Access Point with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service address was received from the DUT. Access Point Entity is supported by the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">DisableAccessPoint</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>

    </section>
    <!--Area-->
    <section xml:id="tc.access_control.area"
             xreflabel="Section 4.3">
      <title>Area</title>
      <!--ACCESSCONTROL-3-1-1-->
      <section xml:id="tc.ACCESSCONTROL-3-1-1">
        <title>GET AREA INFO</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-3-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAreaInfo (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAreaInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Area Info.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. At least one Area is configured and added to the DUT, if the DUT allows this.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-1.3">
              <para>
                Get the complete list of areas from the DUT (see <xref linkend="Annex_HelperGetCompleteAreaInfoList"/>).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-1.4">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve MaxLimit capability.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAreaInfo</emphasis> request (Token list with subset of AreaInfo.token values from the complete list of areas at step <xref linkend="tc.ACCESSCONTROL-3-1-1.3"/> with token number equal to MaxLimit) to retrieve subset of Area Information from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-1.7">
              <para>
                Verify the <emphasis role="bold">GetAreaInfoResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that all requested AreaInfo items are in <emphasis role="bold">GetAreaInfoResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-1.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAreaInfo</emphasis> request (Token = Token1, where Token1 is the first token from the complete list of areas at step <xref linkend="tc.ACCESSCONTROL-3-1-1.3"/>) to retrieve Area Information for specified token from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-1.10">
              <para>
                Verify the <emphasis role="bold">GetAreaInfoResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-1.11">
              <para>
                Verify that <emphasis role="bold">GetAreaInfoResponse</emphasis> message contains AreaInfo only for specified token.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-1.12">
              <para>
                Repeat steps <xref linkend="tc.ACCESSCONTROL-3-1-1.9"/>-<xref linkend="tc.ACCESSCONTROL-3-1-1.11"/> for all other tokens from complete list of areas at step <xref linkend="tc.ACCESSCONTROL-3-1-1.3"/>.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetAreaInfoResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAreaInfoResponse</emphasis> message that contains at least two AreaInfo items with equal tokens.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return requested AreaInfo items in <emphasis role="bold">GetAreaInfoResponse</emphasis> message for step <xref linkend="tc.ACCESSCONTROL-3-1-1.7"/> or <xref linkend="tc.ACCESSCONTROL-3-1-1.10"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more items than requested in <emphasis role="bold">GetAreaInfoResponse</emphasis> message for step <xref linkend="tc.ACCESSCONTROL-3-1-1.7"/> or <xref linkend="tc.ACCESSCONTROL-3-1-1.10"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT did not return any AreaInfo on complete list of areas at step <xref linkend="tc.ACCESSCONTROL-3-1-1.3"/>, skip steps <xref linkend="tc.ACCESSCONTROL-3-1-1.4"/>-<xref linkend="tc.ACCESSCONTROL-3-1-1.12"/> and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> In case MaxLimit is equal to 0, 1 will be used instead in requests.

        </para>
      </section>
      <!--ACCESSCONTROL-3-1-2-->
      <section xml:id="tc.ACCESSCONTROL-3-1-2">
        <title>GET AREA INFO WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-3-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAreaInfo (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAreaInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Area Info with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. At least one Area is configured and added to the DUT, if the DUT allows this.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-2.3">
              <para>
                Get complete list of areas from the DUT (see <xref linkend="Annex_HelperGetCompleteAreaInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve MaxLimit capability.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAreaInfo</emphasis> request (invalid Token).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-2.7">
              <para>
                Verify the <emphasis role="bold">GetAreaInfoResponse</emphasis> message from the DUT. Check that empty list was returned.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-2.8">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAreaInfo</emphasis> request (invalid Token, valid Token).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-2.9">
              <para>
                Verify the <emphasis role="bold">GetAreaInfoResponse</emphasis> message from the DUT. Check that list which contains Area for valid Token only was returned.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetAreaInfoResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAreaInfoResponse</emphasis> message that contains at least two AreaInfo items with equal tokens.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetAreaInfoResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAreaInfoResponse</emphasis> message that contains any AreaInfo items for step <xref linkend="tc.ACCESSCONTROL-3-1-2.7"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAreaInfoResponse</emphasis> message that contains any AreaInfo items other than item for valid Token or does not contains AreaInfo item for valid token step <xref linkend="tc.ACCESSCONTROL-3-1-2.9"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If MaxLimit is less than 2, skip steps <xref linkend="tc.ACCESSCONTROL-3-1-2.8"/>-<xref linkend="tc.ACCESSCONTROL-3-1-2.9"/>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT did not return any AreaInfo on complete list of areas at step <xref linkend="tc.ACCESSCONTROL-3-1-2.3"/>, skip steps <xref linkend="tc.ACCESSCONTROL-3-1-2.8"/>-<xref linkend="tc.ACCESSCONTROL-3-1-2.9"/> and go to the next test.

        </para>
      </section>
      <!--ACCESSCONTROL-3-1-4-->
      <section xml:id="tc.ACCESSCONTROL-3-1-4">
        <title>GET AREA INFO LIST - LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-3-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAreaInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAreaInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Area Info List using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. Area Entity is supported.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-4.3">
              <para>
                Get a complete list of areas from the DUT (see <xref linkend="Annex_HelperGetCompleteAreaInfoList"/>)
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-4.4">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve MaxLimit capability.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAreaInfoList</emphasis> request (Limit = 1, no StartReference) to retrieve the first item on the list of Area Information from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-4.7">
              <para>
                Verify the <emphasis role="bold">GetAreaInfoListResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> message at step <xref linkend="tc.ACCESSCONTROL-3-1-4.7"/> does not contain number of items greater than 1. Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> message at step <xref linkend="tc.ACCESSCONTROL-3-1-4.7"/> does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAreaInfoList</emphasis> request (Limit = MaxLimit, no StartReference) to retrieve the first part list of Area Information from the DUT and is limited by MaxLimit.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-4.10">
              <para>
                Verify the <emphasis role="bold">GetAreaInfoListResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> message at step <xref linkend="tc.ACCESSCONTROL-3-1-4.10"/> does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAreaInfoList</emphasis> request (Limit = ItemNumber, no StartReference, where ItemNumber between 1 and minimal value between MaxLimit and total number of areas) to retrieve sublist of Area Information, and is limited by ItemNumber from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-4.13">
              <para>
                Verify the <emphasis role="bold">GetAreaInfoListResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-4.14">
              <para>
                Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> message at step <xref linkend="tc.ACCESSCONTROL-3-1-4.13"/> does not contain number of items greater than ItemNumber. Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> message at step <xref linkend="tc.ACCESSCONTROL-3-1-4.13"/> does not contain number of items greater than MaxLimit.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetAreaInfoListResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAreaInfoListResponse</emphasis> message that contains wrong item list than requested according to Limit value and StartReference value.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more AreaInfo items in <emphasis role="bold">GetAreaInfoListResponse</emphasis> message than it was specified in Limit parameter.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more AreaInfo items in <emphasis role="bold">GetAreaInfoListResponse</emphasis> message than MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT did not return any AreaInfo on complete list of areas at step <xref linkend="tc.ACCESSCONTROL-3-1-4.3"/>, skip steps <xref linkend="tc.ACCESSCONTROL-3-1-4.4"/>-<xref linkend="tc.ACCESSCONTROL-3-1-4.14"/> and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> In case MaxLimit is equal to 0, 1 will be used instead in requests.

        </para>
      </section>
      <!--ACCESSCONTROL-3-1-5-->
      <section xml:id="tc.ACCESSCONTROL-3-1-5">
        <title>GET AREA INFO LIST - START REFERENCE AND LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-3-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAreaInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAreaInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Area Info List using StartReference and Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. At least one Area is configured and added to the DUT, if the DUT allows this.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-5.3">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve area control service capabilities of the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> (MaxLimit) message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-5.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAreaInfoList</emphasis> request (Limit = MaxLimit, no StartReference) to retrieve the first part of Area Information list from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-5.6">
              <para>
                Verify the <emphasis role="bold">GetAreaInfoListResponse</emphasis> message from the DUT. Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> message does not contain number of items greater than Limit. Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> message does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-5.7">
              <para>
                If <emphasis role="bold">GetAreaInfoListResponse</emphasis> message contains NextStartReference, repeat steps <xref linkend="tc.ACCESSCONTROL-3-1-5.5"/>-<xref linkend="tc.ACCESSCONTROL-3-1-5.6"/> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting complete area list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> messages at step <xref linkend="tc.ACCESSCONTROL-3-1-5.6"/> does not contain AreaInfo items with the same tokens values all over the list, i.e. there shall be no <emphasis role="bold">GetAreaInfoListResponse</emphasis> messages containing the same value for AreaInfo items token.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-5.9">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAreaInfoList</emphasis> request (Limit = 1, no StartReference) to retrieve the first part of Area Information list from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-5.10">
              <para>
                Verify the <emphasis role="bold">GetAreaInfoListResponse</emphasis> message from the DUT. Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> message does not contain number of items greater than Limit. Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> message does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-5.11">
              <para>
                If <emphasis role="bold">GetAreaInfoListResponse</emphasis> message contains NextStartReference, repeat steps <xref linkend="tc.ACCESSCONTROL-3-1-5.5"/>-<xref linkend="tc.ACCESSCONTROL-3-1-5.6"/> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting complete area list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> messages at step <xref linkend="tc.ACCESSCONTROL-3-1-5.10"/> does not contain AreaInfo items with the same tokens values all over the list, i.e. there shall be no <emphasis role="bold">GetAreaInfoListResponse</emphasis> messages containing the same value for AreaInfo items token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that total list received during steps <xref linkend="tc.ACCESSCONTROL-3-1-5.5"/>-<xref linkend="tc.ACCESSCONTROL-3-1-5.7"/> has the same items as the list received during steps <xref linkend="tc.ACCESSCONTROL-3-1-5.9"/>-<xref linkend="tc.ACCESSCONTROL-3-1-5.11"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-5.14">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAreaInfoList</emphasis> request (Limit = [limit_value], no StartReference, where limit_value is between 1 and MaxLimit) to retrieve the first part of Area Information list from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-5.15">
              <para>
                Verify the <emphasis role="bold">GetAreaInfoListResponse</emphasis> message from the DUT. Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> message does not contain number of items greater than Limit. Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> message does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-5.16">
              <para>
                If <emphasis role="bold">GetAreaInfoListResponse</emphasis> message contains NextStartReference, repeat steps <xref linkend="tc.ACCESSCONTROL-3-1-5.5"/>-<xref linkend="tc.ACCESSCONTROL-3-1-5.6"/> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting complete area list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> messages at step <xref linkend="tc.ACCESSCONTROL-3-1-5.15"/> does not contain AreaInfo items with the same tokens values all over the list, i.e. there shall be no <emphasis role="bold">GetAreaInfoListResponse</emphasis> messages containing the same value for AreaInfo items token.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that total list received during steps <xref linkend="tc.ACCESSCONTROL-3-1-5.5"/>-<xref linkend="tc.ACCESSCONTROL-3-1-5.7"/> has the same items as the list received during steps <xref linkend="tc.ACCESSCONTROL-3-1-5.14"/>-<xref linkend="tc.ACCESSCONTROL-3-1-5.16"/>.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetAreaInfoListResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAreaInfoListResponse</emphasis> message that contains wrong item list than requested according to Offset and StartReference values.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAreaInfoListResponse</emphasis> messages for step <xref linkend="tc.ACCESSCONTROL-3-1-5.6"/> contains at least one pair of the same tokens for AreaInfo item all over the messages.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAreaInfoListResponse</emphasis> messages for step <xref linkend="tc.ACCESSCONTROL-3-1-5.10"/> contains at least one pair of the same tokens for AreaInfo item all over the messages.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAreaInfoListResponse</emphasis> messages for step <xref linkend="tc.ACCESSCONTROL-3-1-5.15"/> contains at least one pair of the same tokens for AreaInfo item all over the messages.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more AreaInfo items in <emphasis role="bold">GetAreaInfoListResponse</emphasis> message than it was specified in Limit parameter.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> In case MaxLimit is equal to 0, 1 will be used instead in requests.
        </para>
      </section>
      <!--ACCESSCONTROL-3-1-9-->
      <section xml:id="tc.ACCESSCONTROL-3-1-9">
        <title>GET AREA INFO - TOO MANY ITEMS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-3-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAreaInfo (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAreaInfo
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Area Info in case if there a more items than MaxLimit in request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. At least one Area is configured and added to the DUT, if the DUT allows this.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-9.3">
              <para>
                Get the complete list of areas from the DUT (see <xref linkend="Annex_HelperGetCompleteAreaInfoList"/>).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-9.4">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve MaxLimit capability.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                If total number of areas is less than MaxLimit, skip other steps and go to the text test.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAreaInfo</emphasis> request (Token list with subset of AreaInfo.token values from a complete list of areas at step <xref linkend="tc.ACCESSCONTROL-3-1-9.3"/> with token number greater than MaxLimit) to retrieve a subset of Area Information from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-9.8">
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgs/TooManyItems</emphasis>).

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT did not return any AreaInfo on complete list of areas at step <xref linkend="tc.ACCESSCONTROL-3-1-9.3"/>, skip steps <xref linkend="tc.ACCESSCONTROL-3-1-9.4"/>-<xref linkend="tc.ACCESSCONTROL-3-1-9.8"/> and go to the next test.
        </para>
      </section>
      <!--ACCESSCONTROL-3-1-10-->
      <section xml:id="tc.ACCESSCONTROL-3-1-10">
        <title>GET AREA INFO LIST - NO LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-3-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAreaInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAreaInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Area Info List without using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. At least one Area is configured and added to the DUT, if the DUT allows this.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetServiceCapabilities</emphasis> request to retrieve DUT access control service capabilities.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> (MaxLimit) message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-10.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAreaInfoList</emphasis> request (no Limit, no StartReference) to retrieve the first part of Area Information list from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-3-1-10.6">
              <para>
                Verify the <emphasis role="bold">GetAreaInfoListResponse</emphasis> message from the DUT. Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> message does not contain number of items greater than MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="bold">GetAreaInfoListResponse</emphasis> message contains NextStartReference, repeat steps <xref linkend="tc.ACCESSCONTROL-3-1-10.5"/>-<xref linkend="tc.ACCESSCONTROL-3-1-10.6"/> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting the complete area list.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that <emphasis role="bold">GetAreaInfoListResponse</emphasis> messages at step <xref linkend="tc.ACCESSCONTROL-3-1-10.6"/> does not contain AreaInfo items with the same tokens values all over the list, i.e. there shall be no <emphasis role="bold">GetAreaInfoListResponse</emphasis> messages containing the same value for AreaInfo items token.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetAreaInfoListResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAreaInfoListResponse</emphasis> message that contains wrong item list than requested according to StartReference and Limit values.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned <emphasis role="bold">GetAreaInfoListResponse</emphasis> messages for step <xref linkend="tc.ACCESSCONTROL-3-1-10.6"/> contains at least one pair of the same tokens for AreaInfo item all over the messages.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returned more AreaInfo items in <emphasis role="bold">GetAreaInfoListResponse</emphasis> message than MaxLimit.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>


    </section>
    <!--External Authorization-->
    <section xml:id="tc.access_control.external_authorization"
             xreflabel="Section 4.4">
      <title>External Authorization</title>
      <!--ACCESSCONTROL-11-1-1-->
      <section xml:id="tc.ACCESSCONTROL-11-1-1"
               xreflabel="ACCESSCONTROL-11-1-1 (see Section 4.4.1)">
        <title>ACCESS CONTROL - ACCESS GRANTED TO ANONYMOUS (EXTERNAL AUTHORIZATION)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-11-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/AccessGranted/Anonymous (Access Control Service Specification), tns1:AccessControl/Request/Anonymous (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification), ExternalAuthorization (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ExternalAuthorization, tns1:AccessControl/AccessGranted/Anonymous, tns1:AccessControl/Request/Anonymous.
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Access Granted to Anonymous scenario in the case of External Authorization.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with External Authorization capability and Anonymous Access capability is configured and added to the DUT.
          Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-1.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Points with Capabilities.AnonymousAccess = "true" and Capabilities.ExternalAuthorization = "true" in complete list of access points, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/AccessGranted/Anonymous. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "External" and Type = "xs:boolean".
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/Request/Anonymous. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/Request/Anonymous Topic and tns1:AccessControl/AccessGranted/Anonymous Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/Request/Anonymous event for any Access Points with Capabilities.AnonymousAccess = "true" and Capabilities.ExternalAuthorization = "true".
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-1.17">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-1.18">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-11-1-1.17"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Request/Anonymous for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the Notification message contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to one of existing Access Point Tokens Capabilities.AnonymousAccess = "true" and Capabilities.ExternalAuthorization = "true" (e.g. complete list of access points contains Access Point with the same token and this Access Point has Capabilities.AnonymousAccess = "true" and Capabilities.ExternalAuthorization = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">ExternalAuthorization</emphasis> request (AccessPointToken from Notification message, no CredentialToken, Reason = "Test Access Granted", Decision = "Granted") to Grant Access for Anonymous.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-1.24">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-1.25">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-11-1-1.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/AccessGranted/Anonymous for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to Access Point Token from tns1:AccessControl/Request/Anonymous notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "External" and its Value is equal to “true”.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/Request/Anonymous event at step <xref linkend="tc.ACCESSCONTROL-11-1-1.18"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1: tns1:AccessControl/AccessGranted/Anonymous event at step <xref linkend="tc.ACCESSCONTROL-11-1-1.25"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value, invalid External value for tns1:AccessControl/AccessGranted/Anonymous notification message).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-11-1-1.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/AccessGranted/Anonymous in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Request/Anonymous in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for step <xref linkend="tc.ACCESSCONTROL-11-1-1.18"/> or <xref linkend="tc.ACCESSCONTROL-11-1-1.25"/> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-11-1-2-->
      <section xml:id="tc.ACCESSCONTROL-11-1-2"
               xreflabel="ACCESSCONTROL-11-1-2 (see Section 4.4.2)">
        <title>ACCESS CONTROL - ACCESS DENIED TO ANONYMOUS (EXTERNAL AUTHORIZATION)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-11-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/Denied/Anonymous (Access Control Service Specification), tns1:AccessControl/Request/Anonymous (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification), ExternalAuthorization (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ExternalAuthorization, tns1:AccessControl/Denied/Anonymous, tns1:AccessControl/Request/Anonymous.
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Access Denied to Anonymous scenario in the case of External Authorization.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with External Authorization capability and Anonymous Access capability is configured and added to the DUT.
          Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-2.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Points with Capabilities.AnonymousAccess = "true" and Capabilities.ExternalAuthorization = "true" in complete list of access points, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/Denied/Anonymous. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "External" and Type = "xs:boolean".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "Reason" and Type = " xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/Request/Anonymous Topic and tns1:AccessControl/Denied/Anonymous Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/Request/Anonymous event for any Access Points with Capabilities.AnonymousAccess = "true" and Capabilities.ExternalAuthorization = "true".
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-2.15">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-2.16">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-11-1-2.15"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Request/Anonymous for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to one of existing Access Point Tokens Capabilities.AnonymousAccess = "true" and Capabilities.ExternalAuthorization = "true" (e.g. complete list of access points contains Access Point with the same token and this Access Point has Capabilities.AnonymousAccess = "true" and Capabilities.ExternalAuthorization = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">ExternalAuthorization</emphasis> request (AccessPointToken from Notification message, no CredentialToken, Reason = "Other", Decision = "Denied") to Deny Access for Anonymous.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-2.22">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-2.23">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-11-1-2.22"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Denied/Anonymous for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to Access Point Token from tns1:AccessControl/Request/Anonymous notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "External" and its Value is equal to “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "Reason" contains Value with type is equal to xs:string.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/Request/Anonymous event at step <xref linkend="tc.ACCESSCONTROL-11-1-2.16"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1: tns1:AccessControl/Denied/Anonymous event at step <xref linkend="tc.ACCESSCONTROL-11-1-2.23"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value invalid External or Reason value for tns1:AccessControl/Denied/Anonymous notification message).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-11-1-2.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Denied/Anonymous in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Request/Anonymous in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for step <xref linkend="tc.ACCESSCONTROL-11-1-2.16"/> or <xref linkend="tc.ACCESSCONTROL-11-1-2.23"/> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-11-1-3-->
      <section xml:id="tc.ACCESSCONTROL-11-1-3"
               xreflabel="ACCESSCONTROL-11-1-3 (see Section 4.4.3)">
        <title>ACCESS CONTROL - ACCESS TIMEOUT TO ANONYMOUS (EXTERNAL AUTHORIZATION)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-11-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/Request/Timeout (Access Control Service Specification), tns1:AccessControl/Request/Anonymous (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification), ExternalAuthorization (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ExternalAuthorization, tns1:AccessControl/Request/Timeout, tns1:AccessControl/Request/Anonymous.
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Access Timeout to Anonymous scenario in the case of External Authorization.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with External Authorization capability and Anonymous Access capability is configured and added to the DUT.
          Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-3.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Points with Capabilities.AnonymousAccess = "true" and Capabilities.ExternalAuthorization = "true" in complete list of access points, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/Request/Timeout. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/Request/Anonymous Topic and tns1:AccessControl/Request/Timeout Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/Request/Anonymous event for any Access Points with Capabilities.AnonymousAccess = "true" and Capabilities.ExternalAuthorization = "true".
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-3.13">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-3.14">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-11-1-3.13"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-3.16">
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Request/Anonymous for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to one of existing Access Point Tokens Capabilities.AnonymousAccess = "true" and Capabilities.ExternalAuthorization = "true" (e.g. complete list of access points contains Access Point with the same token and this Access Point has Capabilities.AnonymousAccess = "true" and Capabilities.ExternalAuthorization = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client waits for timeout to initiate tns1:AccessControl/Request/Timeout event.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-3.19">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-3.20">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-11-1-3.19"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Request/Timeout for the Notification message.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-3.22">
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-3.23">
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to Access Point Token from tns1:AccessControl/Request/Anonymous notification message.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/Request/Anonymous event at step <xref linkend="tc.ACCESSCONTROL-11-1-3.14"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1: tns1:AccessControl/Denied/Anonymous event at step <xref linkend="tc.ACCESSCONTROL-11-1-3.20"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-11-1-3.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Request/Timeout in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Request/Anonymous in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for step <xref linkend="tc.ACCESSCONTROL-11-1-3.16"/> or <xref linkend="tc.ACCESSCONTROL-11-1-3.23"/> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-11-1-4-->
      <section xml:id="tc.ACCESSCONTROL-11-1-4"
               xreflabel="ACCESSCONTROL-11-1-4 (see Section 4.4.4)">
        <title>ACCESS CONTROL - ACCESS GRANTED WITH CREDENTIAL (EXTERNAL AUTHORIZATION)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-11-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/AccessGranted/Credential (Access Control Service Specification), tns1:AccessControl/Request/Credential (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification), ExternalAuthorization (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ExternalAuthorization, tns1:AccessControl/AccessGranted/Credential, tns1:AccessControl/Request/Credential.
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Access Granted with Credential scenario in the case of External Authorization.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with External Authorization capability is configured and added to the DUT.
          Device supports Pull-Point Notification feature. Device supports tns1:AccessControl/AccessGranted/Credential. Device supports tns1:AccessControl/Request/Credential.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-4.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Point with Capabilities.ExternalAuthorization = "true" in complete list of access points, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/AccessGranted/Credential. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "CredentialToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if this event contains Data.SimpleItemDescription item with Name = "CredentialHolderName", than it has Type = " xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "External" and Type = "xs:boolean".
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/Request/Credential. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "CredentialToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if this event contains Data.SimpleItemDescription item with Name = "CredentialHolderName", than it has Type = "xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/Request/Credential Topic and tns1:AccessControl/AccessGranted/Credential Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/Request/Credential event for any Access Points with Capabilities.ExternalAuthorization = "true".
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-4.21">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-4.22">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-11-1-4.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Request/Credential for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to one of existing Access Point Tokens Capabilities.ExternalAuthorization = "true" (e.g. complete list of access points contains Access Point with the same token and this Access Point has Capabilities.ExternalAuthorization = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "CredentialToken" and Value with type is equal to pt:ReferenceToken.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification which contains Data.SimpleItem item with Name = "CredentialHolderName" contains Value with type is equal to xs:string.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">ExternalAuthorization</emphasis> request (AccessPointToken from Notification message, CredentialToken from Notification message, Reason = "Test Access Granted", Decision = "Granted") to Grant Access with Credential.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-4.30">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-4.31">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-11-1-4.30"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/AccessGranted/Credential for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to Access Point Token from tns1:AccessControl/Request/Credential notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "CredentialToken" and Value with type is equal to pt:ReferenceToken. Verify that this value is equal to the same Data.SimpleItem from tns1:AccessControl/Request/Credential notification.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification which contains Data.SimpleItem item with Name = "CredentialHolderName" contains Value with type is equal to xs:string. Verify that this value is equal to the same Data.SimpleItem from tns1:AccessControl/Request/Credential notification.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "External" and its Value is equal to “true”.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/Request/Credential event at step <xref linkend="tc.ACCESSCONTROL-11-1-4.22"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1: tns1:AccessControl/AccessGranted/Anonymous event at step <xref linkend="tc.ACCESSCONTROL-11-1-4.31"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value, invalid CredentialToken, invalid CredentialHolderName, invalid External value for tns1:AccessControl/AccessGranted/Credential notification message).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-11-1-4.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/AccessGranted/Credential in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Request/Credential in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for step <xref linkend="tc.ACCESSCONTROL-11-1-4.22"/> or <xref linkend="tc.ACCESSCONTROL-11-1-4.31"/> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-11-1-5-->
      <section xml:id="tc.ACCESSCONTROL-11-1-5"
               xreflabel="ACCESSCONTROL-11-1-5 (see Section 4.4.5)">
        <title>ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL (EXTERNAL AUTHORIZATION)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-11-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/Denied/Credential (Access Control Service Specification), tns1:AccessControl/Request/Credential (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification), ExternalAuthorization (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ExternalAuthorization, tns1:AccessControl/Denied/Credential, tns1:AccessControl/Request/Credential.
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Access Denied with Credential scenario in the case of External Authorization.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with External Authorization capability is configured and added to the DUT. Device supports tns1:AccessControl/Denied/Credential. Device supports  tns1:AccessControl/Request/Credential.
          Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-5.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-5.4">
              <para>
                If there are no Access Point with and Capabilities.ExternalAuthorization = "true" in complete list of access points, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/Denied/Credential. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "CredentialToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if this event contains Data.SimpleItemDescription item with Name = "CredentialHolderName", than it has Type = "xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "External" and Type = "xs:boolean".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "Reason" and Type = "xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/Request/Credential Topic and tns1:AccessControl/Denied/Credential Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/Request/Credential event for any Access Points with Capabilities.ExternalAuthorization = "true".
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-5.17">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-5.18">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-11-1-5.17"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Request/Credential for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to one of existing Access Point Tokens Capabilities.ExternalAuthorization = "true" (e.g. complete list of access points contains Access Point with the same token and this Access Point has Capabilities.ExternalAuthorization = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "CredentialToken" and Value with type is equal to pt:ReferenceToken.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification which contains Data.SimpleItem item with Name = "CredentialHolderName" contains Value with type is equal to xs:string.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">ExternalAuthorization</emphasis> request (AccessPointToken from Notification message, CredentialToken from Notification message, Reason = "Other", Decision = "Denied") to Deny Access with Credential.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-5.26">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-5.27">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-11-1-5.26"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Denied/Credential for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to Access Point Token from tns1:AccessControl/Request/Credential notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = «CredentialToken» and Value with type is equal to pt:ReferenceToken. Verify that this value is equal to the same Data.SimpleItem from tns1:AccessControl/Request/Credential notification.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification which contains Data.SimpleItem item with Name = "CredentialHolderName" contains Value with type is equal to xs:string. Verify that this value is equal to the same Data.SimpleItem from tns1:AccessControl/Request/Credential notification.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "External" and its Value is equal to “true”.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "Reason" contains Value with type is equal to xs:string.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/Request/Credential event at step <xref linkend="tc.ACCESSCONTROL-11-1-5.18"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1: tns1:AccessControl/Denied/Anonymous event at step <xref linkend="tc.ACCESSCONTROL-11-1-5.27"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value, invalid CredentialToken, invalid CredentialHolderName, invalid External value for tns1:AccessControl/Denied/Credential notification message).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-11-1-5.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Denied/Credential in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Request/Credential in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for at <xref linkend="tc.ACCESSCONTROL-11-1-5.18"/> or <xref linkend="tc.ACCESSCONTROL-11-1-5.27"/> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-11-1-6-->
      <section xml:id="tc.ACCESSCONTROL-11-1-6"
               xreflabel="ACCESSCONTROL-11-1-6 (see Section 4.4.6)">
        <title>ACCESS CONTROL - ACCESS TIMEOUT WITH CREDENTIAL (EXTERNAL AUTHORIZATION)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-11-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/Request/Timeout (Access Control Service Specification), tns1:AccessControl/Request/Credential (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ExternalAuthorization, tns1:AccessControl/Request/Timeout, tns1:AccessControl/Request/Credential.
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Access Timeout with Credential scenario in the case of External Authorization.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with External Authorization capability is configured and added to the DUT.
          Device supports Pull-Point Notification feature. Device supports  tns1:AccessControl/Request/Credential.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-6.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Point with Capabilities.ExternalAuthorization = "true" in complete list of access points, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/Request/Timeout. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/Request/Credential Topic and tns1:AccessControl/Request/Timeout Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/Request/Credential event for any Access Points with Capabilities.ExternalAuthorization = "true".
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-6.13">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-6.14">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-11-1-6.13"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Request/Credential for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to one of existing Access Point Tokens Capabilities.ExternalAuthorization = "true" (e.g. complete list of access points contains Access Point with the same token and this Access Point has Capabilities.ExternalAuthorization = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "CredentialToken" and Value with type is equal to pt:ReferenceToken.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification which contains Data.SimpleItem item with Name = "CredentialHolderName" contains Value with type is equal to xs:string.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client waits for timeout to initiate tns1:AccessControl/Request/Timeout event.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-6.21">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-6.22">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-11-1-6.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Request/Timeout for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to Access Point Token from tns1:AccessControl/Request/Credential notification message.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/Request/Credential event at step <xref linkend="tc.ACCESSCONTROL-11-1-6.14"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/Request/Timeout event at step <xref linkend="tc.ACCESSCONTROL-11-1-6.22"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value, invalid CredentialToken, invalid CredentialHolderName).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-11-1-6.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Request/Credential in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Request/Timeout in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for step <xref linkend="tc.ACCESSCONTROL-11-1-6.14"/> or <xref linkend="tc.ACCESSCONTROL-11-1-6.22"/> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-11-1-7-->
      <section xml:id="tc.ACCESSCONTROL-11-1-7">
        <title>EXTERNAL AUTHORIZATION WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-11-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ExternalAuthorization (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ExternalAuthorization
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify External Authorization with invalid Token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service address was received from the DUT. Access Point Entity is supported by the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">ExternalAuthorization</emphasis> request (invalid AccessPointToken).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">InvalidArgVal/NotFound</emphasis>).

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent incorrect SOAP 1.2 fault message (fault code, namespace, etc.).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.
        </para>
      </section>
      <!--ACCESSCONTROL-11-1-8-->
      <section xml:id="tc.ACCESSCONTROL-11-1-8">
        <title>EXTERNAL AUTHORIZATION - COMMAND NOT SUPPORTED</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-11-1-8
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ExternalAuthorization (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ExternalAuthorization
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify External Authorization in case Access Point does not support it.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service address was received from the DUT. Access Point Entity is supported by the DUT. At least one Access Point is configured without External Authorization capability and added to the DUT, if possible.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-8.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-8.4">
              <para>
                If Access Point with Token1 (Token1 is the first AccessPointInfo.token from the complete list of Access Points at step <xref linkend="tc.ACCESSCONTROL-11-1-8.3"/>) has AccessPointInfo.Capabilities.ExternalAuthorization equal to true, then skip steps <xref linkend="tc.ACCESSCONTROL-11-1-8.5"/>-<xref linkend="tc.ACCESSCONTROL-11-1-8.6"/> and go to the step <xref linkend="tc.ACCESSCONTROL-11-1-8.7"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-8.5">
              <para>
                ONVIF Client will invoke <emphasis role="bold">ExternalAuthorization</emphasis> request (AccessPointToken = “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of doors at step <xref linkend="tc.ACCESSCONTROL-11-1-8.3"/>) to try perform external authorization.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-8.6">
              <para>
                The DUT will generate SOAP 1.2 fault message (<emphasis role="bold">ActionNotSupported/NotSupported</emphasis>).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-11-1-8.7">
              <para>
                Repeat steps <xref linkend="tc.ACCESSCONTROL-11-1-8.4"/>-<xref linkend="tc.ACCESSCONTROL-11-1-8.6"/> for all other tokens from the complete list of Access Point at step <xref linkend="tc.ACCESSCONTROL-11-1-8.3"/>.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send SOAP 1.2 fault message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-11-1-8.3"/>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any Access Point for step <xref linkend="tc.ACCESSCONTROL-11-1-8.3"/>, skip steps <xref linkend="tc.ACCESSCONTROL-11-1-8.4"/>-<xref linkend="tc.ACCESSCONTROL-11-1-8.7"/>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Other faults than specified in the test are acceptable, but the specified are preferable.

        </para>
      </section>
      <!--ACCESSCONTROL-11-1-9-->
      <section xml:id="tc.ACCESSCONTROL-11-1-9"
               xreflabel="ACCESSCONTROL-11-1-9 (see Section 4.4.9)">
        <title>ACCESS CONTROL - ACCESS GRANTED TO ANONYMOUS (EXTERNAL AUTHORIZATION FOR IDENTIFIER REQUEST)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-11-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/AccessGranted/Anonymous (Access Control Service Specification), tns1:AccessControl/Request/Identifier (Access Control Service Specification), ExternalAuthorization (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ExternalAuthorization, tns1:AccessControl/AccessGranted/Anonymous, tns1:AccessControl/Request/Identifier.
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Access Granted to Anonymous scenario in the case of External Authorization for Identifier.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with Identifier Access capability is configured and added to the DUT.
          Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access point info items by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access points info list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointsNumber</emphasis> - access points number
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Points with Capabilities.IdentifierAccess = true in <emphasis role="italic">accessPointInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/Request/Identifier topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/AccessGranted/Anonymous topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:AccessControl/Request/Identifier topic (<emphasis role="italic">requestIdentifierTopic</emphasis>) from topicSet:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">requestIdentifierTopic</emphasis>.MessageDescription.IsProperty equals to true, FAIL the test, restore the DUT state, and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">requestIdentifierTopic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name = "AccessPointToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">requestIdentifierTopic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name = "AccessPointToken" does not have Type = "pt:ReferenceToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">requestIdentifierTopic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "IdentifierType", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">requestIdentifierTopic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "IdentifierType" does not have Type = "xs:string", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">requestIdentifierTopic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "FormatType", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">requestIdentifierTopic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "FormatType" does not have Type = "xs:string", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">requestIdentifierTopic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "IdentifierValue", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">requestIdentifierTopic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "IdentifierValue" does not have Type = "xs:hexBinary", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">topicFilter</emphasis> :=  <emphasis role="bold">"tns1:AccessControl/Request/Identifier|tns1:AccessControl/AccessGranted/Anonymous"</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">topicFilter</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for any Access Points with Capabilities.IdentifierAccess = true.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullRequestIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointToken</emphasis> - token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not contain item with token = <emphasis role="italic">accessPointToken</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If item with token = <emphasis role="italic">accessPointToken</emphasis> from <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not have Capabilities.IdentifierAccess = true, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ExternalAuthorization</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPointToken  := <emphasis role="italic">accessPointToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CredentialToken is skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Reason := "Test Reason"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Decision := Granted
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/AccessGranted/Anonymous</emphasis> event for the external authorzation by following the procedure mentioned in <xref linkend="Annex_HelperPullExternalAuthAccessGrantedIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "tns1:AccessControl/AccessGranted/Anonymous" - topic to validate
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-11-1-10-->
      <section xml:id="tc.ACCESSCONTROL-11-1-10"
               xreflabel="ACCESSCONTROL-11-1-10 (see Section 4.4.10)">
        <title>ACCESS CONTROL - ACCESS DENIED TO ANONYMOUS (EXTERNAL AUTHORIZATION FOR IDENTIFIER REQUEST)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-11-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/Denied/Anonymous (Access Control Service Specification), tns1:AccessControl/Request/Identifier (Access Control Service Specification), ExternalAuthorization (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ExternalAuthorization, tns1:AccessControl/Denied/Anonymous, tns1:AccessControl/Request/Identifier.
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Access Denied to Anonymous scenario in the case of External Authorization for Identifier.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with Identifier Access capability is configured and added to the DUT.
          Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access point info items by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access points info list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointsNumber</emphasis> - access points number
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Points with Capabilities.IdentifierAccess = true in <emphasis role="italic">accessPointInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/Request/Identifier topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/Denied/Anonymous topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">topicFilter</emphasis> :=  <emphasis role="bold">"tns1:AccessControl/Request/Identifier|tns1:AccessControl/Denied/Anonymous"</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">topicFilter</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for any Access Points with Capabilities.IdentifierAccess = true.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullRequestIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointToken</emphasis> - token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not contain item with token = <emphasis role="italic">accessPointToken</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If item with token = <emphasis role="italic">accessPointToken</emphasis> from <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not have Capabilities.IdentifierAccess = true, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ExternalAuthorization</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPointToken  := <emphasis role="italic">accessPointToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CredentialToken is skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Reason := "Other"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Decision := Denied
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/Denied/Anonymous</emphasis> event for the external authorzation by following the procedure mentioned in <xref linkend="Annex_HelperPullExternalAuthAccessDeniedIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "tns1:AccessControl/Denied/Anonymous" - topic to validate
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-11-1-11-->
      <section xml:id="tc.ACCESSCONTROL-11-1-11"
               xreflabel="ACCESSCONTROL-11-1-11 (see Section 4.4.11)">
        <title>ACCESS CONTROL - ACCESS TIMEOUT TO IDENTIFIER (EXTERNAL AUTHORIZATION)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-11-1-11
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/Request/Timeout (Access Control Service Specification), tns1:AccessControl/Request/Identifier (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification), ExternalAuthorization (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ExternalAuthorization, tns1:AccessControl/Request/Timeout, tns1:AccessControl/Request/Identifier.
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Access Timeout to Identifier scenario in the case of External Authorization.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with Identifier Access capability is configured and added to the DUT. Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access point info items by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access points info list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointsNumber</emphasis> - access points number
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Points with Capabilities.IdentifierAccess = true in <emphasis role="italic">accessPointInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/Request/Identifier topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/Request/Timeout topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:AccessControl/Request/Timeout topic (<emphasis role="italic">requestTimeoutTopic</emphasis>) from topicSet:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">requestTimeoutTopic</emphasis>.MessageDescription.IsProperty equals to true, FAIL the test, restore the DUT state, and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">requestTimeoutTopic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name = "AccessPointToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">requestTimeoutTopic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name = "AccessPointToken" does not have Type = "pt:ReferenceToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">topicFilter</emphasis> :=  <emphasis role="bold">"tns1:AccessControl/Request/Identifier|tns1:AccessControl/Request/Timeout"</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">topicFilter</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for any Access Points with Capabilities.IdentifierAccess = true.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullRequestIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access points info list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointToken</emphasis> - token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client waits for <emphasis role="italic">operationDelay</emphasis> to initiate tns1:AccessControl/Request/Timeout event.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/Request/Timeout</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullRequestTimeout"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Timeout</emphasis> notification was recieved
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
        </para>
      </section>
      <!--ACCESSCONTROL-11-1-12-->
      <section xml:id="tc.ACCESSCONTROL-11-1-12"
                 xreflabel="ACCESSCONTROL-11-1-12 (see Section 4.4.12)">
        <title>ACCESS CONTROL - ACCESS GRANTED WITH CREDENTIAL (EXTERNAL AUTHORIZATION FOR IDENTIFIER REQUEST)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-11-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/AccessGranted/Credential (Access Control Service Specification), tns1:AccessControl/Request/Identifier (Access Control Service Specification), ExternalAuthorization (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ExternalAuthorization, tns1:AccessControl/AccessGranted/Credential, tns1:AccessControl/Request/Identifier.
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Access Granted with Credential scenario in the case of External Authorization for Identifier.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with Identifier Access capability is configured and added to the DUT.
          Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access point info items by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access points info list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointsNumber</emphasis> - access points number
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Points with Capabilities.IdentifierAccess = true in <emphasis role="italic">accessPointInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/Request/Identifier topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/AccessGranted/Credential topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">topicFilter</emphasis> :=  <emphasis role="bold">"tns1:AccessControl/Request/Identifier|tns1:AccessControl/AccessGranted/Credential"</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">topicFilter</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for any Access Points with Capabilities.IdentifierAccess = true.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullRequestIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointToken</emphasis> - token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not contain item with token = <emphasis role="italic">accessPointToken</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If item with token = <emphasis role="italic">accessPointToken</emphasis> from <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not have Capabilities.IdentifierAccess = true, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ExternalAuthorization</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPointToken  := <emphasis role="italic">accessPointToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CredentialToken := "TestCredetialToken"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Reason := "Test Reason"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Decision := Granted
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/AccessGranted/Credential</emphasis> event for the external authorzation by following the procedure mentioned in <xref linkend="Annex_HelperPullExternalAuthAccessGrantedIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "tns1:AccessControl/AccessGranted/Credential" - topic to validate
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in "TestCredetialToken" - token of credetial
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-11-1-13-->
      <section xml:id="tc.ACCESSCONTROL-11-1-13"
                    xreflabel="ACCESSCONTROL-11-1-13 (see Section 4.4.13)">
        <title>ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL (EXTERNAL AUTHORIZATION FOR IDENTIFIER REQUEST)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-11-1-13
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/Denied/Credential (Access Control Service Specification), tns1:AccessControl/Request/Identifier (Access Control Service Specification), ExternalAuthorization (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ExternalAuthorization, tns1:AccessControl/Denied/Credential, tns1:AccessControl/Request/Identifier.
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Access Denied with Credential scenario in the case of External Authorization for Identifier.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with Identifier Access capability is configured and added to the DUT.
          Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access point info items by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access points info list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointsNumber</emphasis> - access points number
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Points with Capabilities.IdentifierAccess = true in <emphasis role="italic">accessPointInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/Request/Identifier topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/Denied/Credential topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">topicFilter</emphasis> :=  <emphasis role="bold">"tns1:AccessControl/Request/Identifier|tns1:AccessControl/Denied/Credential"</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">topicFilter</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for any Access Points with Capabilities.IdentifierAccess = true.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullRequestIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointToken</emphasis> - token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not contain item with token = <emphasis role="italic">accessPointToken</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If item with token = <emphasis role="italic">accessPointToken</emphasis> from <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not have Capabilities.IdentifierAccess = true, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ExternalAuthorization</emphasis> request with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPointToken  := <emphasis role="italic">accessPointToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      CredentialToken := "TestCredentialToken"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Reason := "Other"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Decision := Denied
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/Denied/Credential</emphasis> event for the external authorzation by following the procedure mentioned in <xref linkend="Annex_HelperPullExternalAuthAccessDeniedIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "tns1:AccessControl/Denied/Credential" - topic to validate
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in "TestCredentialToken" - token of credential
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ExternalAuthorizationResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Property Events-->
    <section xml:id="tc.access_control.property_events"
             xreflabel="Section 4.5">
      <title>Property Events</title>
      <!--ACCESSCONTROL-5-1-1-->
      <section xml:id="tc.ACCESSCONTROL-5-1-1"
               xreflabel="ACCESSCONTROL-5-1-1 (see Section 4.5.1)">
        <title>ACCESS CONTROL - ACCESS POINT ENABLED EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-5-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessPoint/State/Enabled (Access Control Service Specification), GetAccessPointState (ONVIF Access Control Service Specification), Properties (ONVIF Core Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessPoint/State/Enabled event generation after subscription and to verify tns1:AccessPoint/State/Enabled event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with Enable/Disable capability is configured and added to the DUT. Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-1.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-1.4">
              <para>
                If there is no Access Points with DisableAccessPoint equal to true, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessPoint/State/Enabled. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is a Property event (MessageDescription.IsProperty = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "State" and Type = " xs:boolean".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessPoint/State/Enabled Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-1.13">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-1.14">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <xref linkend="tc.ACCESSCONTROL-5-1-1.13"/> until Notification for all Access Points will be received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessPoint/State/Enabled for all received Notification messages.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to one of the existing Access Point Tokens (e.g. complete list of access points contains Access Point with the same token). Verify that there are Notification messages for each Access Point.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that each notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to xs:boolean.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that Notify PropertyOperation = "Initialized".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointState</emphasis> request for each Access Point with corresponding tokens.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-1.21">
              <para>
                Verify the <emphasis role="bold">GetAccessPointStateResponse</emphasis> messages from the DUT. Verify that Data.SimpleItem item with Name = "Enabled" from Notification message has the same value with Enabled elements from corresponding <emphasis role="bold">GetAccessPointStateResponse</emphasis> messages for each AccessPoint.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:AccessPoint/State/Enabled at least for one Access Point.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken or State values, PropertyOperation is not equal to "Initialized").
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point at step <xref linkend="tc.ACCESSCONTROL-5-1-1.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return Topic tns1:AccessPoint/State/Enabled in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client at step <xref linkend="tc.ACCESSCONTROL-5-1-1.14"/> will wait for Notification messages until notification for all Access Points is received or Operation Delay has expired. Notification messages for all Access Points are assumed as received, if the number of Notification messages is equal to the number of Access Points.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any access point for step <xref linkend="tc.ACCESSCONTROL-5-1-1.3"/>, skip steps <xref linkend="tc.ACCESSCONTROL-5-1-1.4"/>-<xref linkend="tc.ACCESSCONTROL-5-1-1.21"/>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-5-1-2-->
      <section xml:id="tc.ACCESSCONTROL-5-1-2"
               xreflabel="ACCESSCONTROL-5-1-2 (see Section 4.5.2)">
        <title>ACCESS CONTROL - ACCESS POINT ENABLED EVENT STATE CHANGE</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-5-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessPoint/State/Enabled (Access Control Service Specification), EnableAccessPoint (ONVIF Access Control Service Specification), DisableAccessPoint (ONVIF Access Control Service Specification), GetAccessPointState (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> EnableAccessPoint, DisableAccessPoint, GetAccessPointState
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessPoint/State/Enabled event generation after property was changed and to verify tns1:AccessPoint/State/Enabled event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with Enable/Disable capability is configured and added to the DUT.
          Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-2.3">
              <para>
                Get a complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-2.4">
              <para>
                If there is no Access Points with DisableAccessPoint equal to true, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-2.5">
              <para>
                If Access Point with Token1 (Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-5-1-2.3"/>) has AccessPointInfo.Capabilities.DisableAccessPoint equal to false, then skip steps <xref linkend="tc.ACCESSCONTROL-5-1-2.6"/>-<xref linkend="tc.ACCESSCONTROL-5-1-2.20"/> and go to the step <xref linkend="tc.ACCESSCONTROL-5-1-2.21"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-2.6">
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointState</emphasis> request (TokenList.Token = Token1, where Token1 is the first token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-5-1-2.3"/>) to retrieve Access Point state for specified token from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetAccessPointStateResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessPoint/State/Enabled Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                If Access Point with Token1 (Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-5-1-2.3"/>) has AccessPointState.Enabled equal to true, then skip steps <xref linkend="tc.ACCESSCONTROL-5-1-2.11"/>-<xref linkend="tc.ACCESSCONTROL-5-1-2.12"/> and go to the step <xref linkend="tc.ACCESSCONTROL-5-1-2.13"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-2.11">
              <para>
                ONVIF Client will invoke <emphasis role="bold">EnableAccessPoint</emphasis> request (Token = “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-5-1-2.3"/>) to try enabling access point.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-2.12">
              <para>
                Verify the <emphasis role="bold">EnableAccessPointResponse</emphasis> message from the DUT. Go to the step <xref linkend="tc.ACCESSCONTROL-5-1-2.15"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-2.13">
              <para>
                ONVIF Client will invoke <emphasis role="bold">DisableAccessPoint</emphasis> request (Token = “Token1”, where Token1 is the first AccessPointInfo.token from the complete list of access points at step <xref linkend="tc.ACCESSCONTROL-5-1-2.3"/>) to try disabling access point.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">DisableAccessPointResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-2.15">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains NotificationMessages. Repeat step <xref linkend="tc.ACCESSCONTROL-5-1-2.15"/> until Notification with PropertyOperation = "Changed" for Access Point with Token = “Token1” will be received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessPoint/State/Enabled for all received Notification messages.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value = “Token1” (e.g. a complete list of access points contains Access Point with the same token).
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-2.20">
              <para>
                Verify that notification contains Data.SimpleItem item with Name = "State" and Value with type is equal to xs:boolean and with value equal to current state of Access Point.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-5-1-2.21">
              <para>
                Repeat steps <xref linkend="tc.ACCESSCONTROL-5-1-2.5"/>-<xref linkend="tc.ACCESSCONTROL-5-1-2.20"/> for all other tokens from complete list of access points at step <xref linkend="tc.ACCESSCONTROL-5-1-2.3"/>.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains a property event tns1:AccessPoint/State/Enabled with valid AccessPointToken and Enabled value.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken or State values).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-5-1-2.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">EnableAccessPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid <emphasis role="bold">DisableAccessPointResponse</emphasis> message.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> All Notification messages except messages with PropertyOperation = "Changed" will be ignored.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no required Notification messages are received for step <xref linkend="tc.ACCESSCONTROL-5-1-2.15"/> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If the DUT does not return any access point for step <xref linkend="tc.ACCESSCONTROL-5-1-2.3"/>, skip steps <xref linkend="tc.ACCESSCONTROL-5-1-2.4"/>-<xref linkend="tc.ACCESSCONTROL-5-1-2.21"/>, fail the test and go to the next test.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during a test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
    </section>
    <!--Access granted events-->
    <section xml:id="tc.access_control.access_granted_events"
             xreflabel="Section 4.6">
      <title>Access granted events</title>
      <!--ACCESSCONTROL-6-1-1-->
      <section xml:id="tc.ACCESSCONTROL-6-1-1"
               xreflabel="ACCESSCONTROL-6-1-1 (see Section 4.6.1)">
        <title>ACCESS CONTROL - ACCESS GRANTED TO ANONYMOUS EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-6-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/AccessGranted/Anonymous (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:AccessControl/AccessGranted/Anonymous
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/AccessGranted/Anonymous event generation and to verify tns1:AccessControl/AccessGranted/Anonymous event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with Anonymous Access capability is configured and added to the DUT. Device supports Pull-Point Notification feature. Device supports tns1:AccessControl/AccessGranted/Anonymous.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-6-1-1.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Point with Capabilities.AnonymousAccess = “true” in complete list of access points, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/AccessGranted/Anonymous. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if this event contains Data.SimpleItemDescription item with Name = "External", than it has Type = "xs:boolean".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/AccessGranted/Anonymous Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/AccessGranted/Anonymous event for any Access Points with Capabilities.AnonymousAccess = “true”.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-6-1-1.14">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-6-1-1.15">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-6-1-1.14"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/AccessGranted/Anonymous for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to one of existing Access Point Tokens with Capabilities.AnonymousAccess = “true” (e.g. complete list of access points contains Access Point with the same token and this Access Point has Capabilities.AnonymousAccess = “true”).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification doesn’t contain Data.SimpleItem item with Name = "External", if it was not included in Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis> message. Verify that the notification doesn’t contain Data.SimpleItem item with Name = "External" or contains Data.SimpleItem item with Name = "External" and its Value is equal to “false”, if it was included in Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/AccessGranted/Anonymous event.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value, invalid External).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-6-1-1.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/AccessGranted/Anonymous in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for step <xref linkend="tc.ACCESSCONTROL-6-1-1.15"/> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-6-1-2-->
      <section xml:id="tc.ACCESSCONTROL-6-1-2"
               xreflabel="ACCESSCONTROL-6-1-2 (see Section 4.6.2)">
        <title>ACCESS CONTROL - ACCESS GRANTED WITH CREDENTIAL EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-6-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/AccessGranted/Credential (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:AccessControl/AccessGranted/Credential
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/AccessGranted/Credential event generation and to verify tns1:AccessControl/AccessGranted/Credential event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point is configured and added to the DUT. Device supports Pull-Point Notification feature. Device supports tns1:AccessControl/AccessGranted/Credential. Credential entity is supported by the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-6-1-2.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/AccessGranted/Credential. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "CredentialToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if this event contains Data.SimpleItemDescription item with Name = "CredentialHolderName", than it has Type = " xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if this event contains Data.SimpleItemDescription item with Name = "External", than it has Type = "xs:boolean".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/AccessGranted/Credential Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/AccessGranted/Credential event for any Access Points.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-6-1-2.15">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-6-1-2.16">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-6-1-2.15"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/AccessGranted/Credential for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to one of existing Access Point Tokens (e.g. complete list of access points contains Access Point with the same token).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "CredentialToken" and Value with type is equal to pt:ReferenceToken.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification which contains Data.SimpleItem item with Name = "CredentialHolderName" contains Value with type is equal to xs:string.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification doesn’t contain Data.SimpleItem item with Name = "External", if it was not included in Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis> message. Verify that the notification doesn’t contain Data.SimpleItem item with Name = "External" or contains Data.SimpleItem item with Name = "External" and its Value is equal to “false”, if it was included in Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/AccessGranted/Credential event.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value, invalid CredentialToken, invalid CredentialHolderName, invalid External).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-6-1-2.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/AccessGranted/Credential in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for step <xref linkend="tc.ACCESSCONTROL-6-1-2.16"/> during certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-6-1-3-->
      <section xml:id="tc.ACCESSCONTROL-6-1-3"
               xreflabel="ACCESSCONTROL-6-1-3 (see Section 4.6.3)">
        <title>ACCESS CONTROL - ACCESS GRANTED TO IDENTIFIER EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-6-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Access granted/Identifier (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:AccessControl/AccessGranted/Identifier
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/AccessGranted/Identifier event generation and to verify tns1:AccessControl/AccessGranted/Identifier event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT. tns1:AccessControl/AccessGranted/Identifier event topic is supported by the DUT.
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/AccessGranted/Identifier topic, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:AccessControl/AccessGranted/Identifier topic (<emphasis role="italic">accessGrantedIdentifierTopic</emphasis>) from topicSet:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessGrantedIdentifierTopic</emphasis>.MessageDescription.IsProperty equals to true, FAIL the test, restore the DUT state, and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessGrantedIdentifierTopic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name = "AccessPointToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessGrantedIdentifierTopic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name = "AccessPointToken" does not have Type = "pt:ReferenceToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessGrantedIdentifierTopic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "IdentifierType", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessGrantedIdentifierTopic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "IdentifierType" does not have Type = "xs:string", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessGrantedIdentifierTopic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "FormatType", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessGrantedIdentifierTopic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "FormatType" does not have Type = "xs:string", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessGrantedIdentifierTopic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "IdentifierValue", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessGrantedIdentifierTopic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "IdentifierValue" does not have Type = "xs:hexBinary", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">"tns1:AccessControl/AccessGranted/Identifier"</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke <emphasis role="bold">tns1:AccessControl/AccessGranted/Identifier</emphasis> event for any Access Point.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/AccessGranted/Identifier</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullAccessGrantedIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

    </section>
    <!--Access taken events-->
    <section xml:id="tc.access_control.access_taken_events"
             xreflabel="Section 4.7">
      <title>Access taken events</title>
      <!--ACCESSCONTROL-7-1-1-->
      <section xml:id="tc.ACCESSCONTROL-7-1-1"
               xreflabel="ACCESSCONTROL-7-1-1 (see Section 4.7.1)">
        <title>ACCESS CONTROL - ACCESS TAKEN BY ANONYMOUS EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-7-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns:AccessControl/AccessGranted/Anonymous (Access Control Service Specification), AccessControl/AccessTaken/Anonymous (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns:AccessControl/AccessGranted/Anonymous
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/AccessTaken/Anonymous event generation and to verify tns1:AccessControl/AccessTaken/Anonymous event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with Anonymous Access capability and Access Taken capability is configured and added to the DUT. Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-7-1-1.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Point with Capabilities.AnonymousAccess = "true" and Capabilities.AccessTaken = "true" in complete list of access points, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/AccessTaken/Anonymous. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/AccessGranted/Anonymous Topic and tns1:AccessControl/AccessTaken/Anonymous Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/AccessGranted/Anonymous event for any Access Points with Capabilities.AnonymousAccess = “true” and Capabilities.AccessTaken = "true".
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-7-1-1.13">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-7-1-1.14">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-7-1-1.13"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/AccessGranted/Anonymous for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/AccessTaken/Anonymous event for the same Access Point.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-7-1-1.18">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-7-1-1.19">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-7-1-1.18"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/AccessTaken/Anonymous for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to AccessPointToken from tns1:AccessControl/AccessGranted/Anonymous notification and there is Access Point Tokens with Capabilities.AnonymousAccess = "true" and Capabilities.AccessTaken = "true" in the complete list of access points (e.g. complete list of access points contains Access Point with the same token and this Access Point has Capabilities.AnonymousAccess = "true" and Capabilities.AccessTaken = "true").

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/AccessGranted/Anonymous event on step <xref linkend="tc.ACCESSCONTROL-7-1-1.14"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/AccessTaken/Anonymous event on step <xref linkend="tc.ACCESSCONTROL-7-1-1.19"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value) on step <xref linkend="tc.ACCESSCONTROL-7-1-1.19"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-7-1-1.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/AccessTaken/Anonymous in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for steps <xref linkend="tc.ACCESSCONTROL-7-1-1.14"/> and 19 during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-7-1-2-->
      <section xml:id="tc.ACCESSCONTROL-7-1-2"
               xreflabel="ACCESSCONTROL-7-1-2 (see Section 4.7.2)">
        <title>ACCESS CONTROL - ACCESS TAKEN WITH CREDENTIAL EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-7-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns:AccessControl/AccessGranted/Credential (Access Control Service Specification), tns1:AccessControl/AccessTaken/Credential (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns:AccessControl/AccessGranted/Credential
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/AccessTaken/Credential event generation and to verify tns1:AccessControl/AccessTaken/Credential event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with Access Taken capability is configured and added to the DUT. Device supports Pull-Point Notification feature. Device supports tns1:AccessControl/AccessTaken/Credential

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-7-1-2.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Points with Capabilities.AccessTaken = "true" in complete list of access points, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/AccessTaken/Credential. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "CredentialToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if this event contains Data.SimpleItemDescription item with Name = "CredentialHolderName", than it has Type = " xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/AccessGranted/Credential Topic and tns1:AccessControl/AccessTaken/Credential Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/AccessGranted/Credential event for any Access Points with Capabilities.AccessTaken = "true".
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-7-1-2.15">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-7-1-2.16">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-7-1-2.15"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/AccessGranted/Credential for the Notification message.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-7-1-2.19">
              <para>
                Test Operator will invoke tns1:AccessControl/AccessTaken/Credential event for the same Access Point.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-7-1-2.20">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-7-1-2.21">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-7-1-2.20"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/AccessTaken/Credential for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to AccessPointToken from tns1:AccessControl/AccessGranted/Credential notification and there is Access Point Tokens with Capabilities.AccessTaken = "true" in the complete list of access points (e.g. complete list of access points contains Access Point with the same token and this Access Point has Capabilities.AccessTaken = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "CredentialToken" and Value with type is equal to pt:ReferenceToken. Verify that this value is equal to the same Data.SimpleItem from tns1:AccessControl/AccessGranted/Credential notification.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification which contains Data.SimpleItem item with Name = "CredentialHolderName" contains Value with type is equal to xs:string. Verify that this value is equal to the same Data.SimpleItem from tns1:AccessControl/AccessGranted/Credential notification.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/AccessGranted/Credential event on step <xref linkend="tc.ACCESSCONTROL-7-1-2.16"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/AccessTaken/Credential event on step <xref linkend="tc.ACCESSCONTROL-7-1-2.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value, invalid CredentialToken value, and invalid CredentialHolderName value) on step <xref linkend="tc.ACCESSCONTROL-7-1-2.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-7-1-2.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/AccessTaken/Credential in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for step <xref linkend="tc.ACCESSCONTROL-7-1-2.16"/> and <xref linkend="tc.ACCESSCONTROL-7-1-2.19"/> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-7-1-3-->
      <section xml:id="tc.ACCESSCONTROL-7-1-3"
               xreflabel="ACCESSCONTROL-7-1-3 (see Section 4.7.3)">
        <title>ACCESS CONTROL - ACCESS TAKEN TO IDENTIFIER EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-7-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns:AccessControl/AccessGranted/Identifier (Access Control Service Specification), tns1:AccessControl/AccessTaken/Identifier (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:AccessControl/AccessTaken/Identifier
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/AccessTaken/Identifier event generation and to verify tns1:AccessControl/AccessTaken/Identifier event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>
          Event Service was received from the DUT.
          Device supports Pull-Point Notification feature.
          Access Control Service was received from the DUT.
          Access Point Entity is supported by the DUT.
          tns1:AccessControl/AccessTaken/Identifier event topic is supported by the DUT.
          At least one Access Point with Access Taken capability is configured and added to the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/AccessTaken/Identifier topic, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">accessTakenIdentifierTopic</emphasis> := message description of  tns1:AccessControl/AccessTaken/Identifier topic from <emphasis role="italic">topicSet</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:AccessControl/AccessTaken/Identifier topic by following the procedure mentioned in <xref linkend="Annex_HelperValidateIdentifierMessageDescription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessTakenIdentifierTopic</emphasis> - topic
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client retrieves complete list of access point info items by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access points info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">"tns1:AccessControl/AccessGranted/Identifier|tns1:AccessControl/AccessTaken/Identifier"</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-7-1-3.SendAccessGrantedEvent"
               xreflabel="9">
              <para>
                Test Operator will invoke <emphasis role="bold">tns1:AccessControl/AccessGranted/Identifier</emphasis> event for any Access Point with Capabilities.AccessTaken = true.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/AccessGranted/Identifier</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "tns1:AccessControl/AccessGranted/Identifier" - topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessGrantedIdentifierNotification</emphasis> - Access Granted Identifier Notification Message
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke <emphasis role="bold">tns1:AccessControl/AccessTaken/Identifier</emphasis> event for the same Access Point as was sent in step <xref linkend="tc.ACCESSCONTROL-7-1-3.SendAccessGrantedEvent"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/AccessTaken/Identifier</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "tns1:AccessControl/AccessTaken/Identifier" - topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessTakenIdentifierNotification</emphasis> - Access Taken Identifier Notification Message
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessGrantedIdentifierNotification</emphasis>.Source.SimpleItem[Name = "AccessPointToken"] != <emphasis role="italic">accessTakenIdentifierNotification</emphasis>.Source.SimpleItem[Name = "AccessPointToken"], FAIL the test, restore DUT setting, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessGrantedIdentifierNotification</emphasis>.Data.SimpleItem[Name = "IdentifierType"] != <emphasis role="italic">accessTakenIdentifierNotification</emphasis>.Data.SimpleItem[Name = "IdentifierType"], FAIL the test, restore DUT settings, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessGrantedIdentifierNotification</emphasis>.Data.SimpleItem[Name = "FormatType"] != <emphasis role="italic">accessTakenIdentifierNotification</emphasis>.Data.SimpleItem[Name = "FormatType"], FAIL the test, restore DUT settings, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessGrantedIdentifierNotification</emphasis>.Data.SimpleItem[Name = "IdentifierValue"] != <emphasis role="italic">accessTakenIdentifierNotification</emphasis>.Data.SimpleItem[Name = "IdentifierValue"], FAIL the test, restore DUT settings, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not contain item with token = <emphasis role="italic">accessGrantedIdentifierNotification</emphasis>.Source.SimpleItem[Name = "AccessPointToken"], FAIL the test, restore DUT settings, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">accessPointInfo</emphasis> := item from <emphasis role="italic">accessPointInfoCompleteList</emphasis> with token = <emphasis role="italic">accessGrantedIdentifierNotification</emphasis>.Source.SimpleItem[Name = "AccessPointToken"].
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfo</emphasis>.Capabilities.AccessTaken != true, FAIL the test, restore DUT settings, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>


    </section>
    <!--Access not taken events-->
    <section xml:id="tc.access_control.access_not_taken_events"
             xreflabel="Section 4.8">
      <title>Access not taken events</title>
      <!--ACCESSCONTROL-8-1-1-->
      <section xml:id="tc.ACCESSCONTROL-8-1-1"
               xreflabel="ACCESSCONTROL-8-1-1 (see Section 4.8.1)">
        <title>ACCESS CONTROL - ACCESS NOT TAKEN BY ANONYMOUS EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-8-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns:AccessControl/AccessGranted/Anonymous (Access Control Service Specification), AccessControl/AccessNotTaken/Anonymous (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> AccessControl/AccessNotTaken/Anonymous
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/AccessNotTaken/Anonymous event generation and to verify tns1:AccessControl/AccessNotTaken/Anonymous event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with Anonymous Access capability and Access Taken capability is configured and added to the DUT. Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-8-1-1.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Points with Capabilities.AnonymousAccess = "true" and Capabilities.AccessTaken = "true" in complete list of access points, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/AccessNotTaken/Anonymous. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/AccessGranted/Anonymous Topic and tns1:AccessControl/AccessNotTaken/Anonymous Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/AccessGranted/Anonymous event for any Access Points with Capabilities.AnonymousAccess = “true” and Capabilities.AccessTaken = "true".
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-8-1-1.13">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-8-1-1.14">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-8-1-1.13"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/AccessGranted/Anonymous for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/AccessNotTaken/Anonymous event for the same Access Point.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-8-1-1.18">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-8-1-1.19">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-8-1-1.18"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/AccessNotTaken/Anonymous for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to AccessPointToken from tns1:AccessControl/AccessGranted/Anonymous notification and there is Access Point Tokens with Capabilities.AnonymousAccess = "true" and Capabilities.AccessTaken = "true" in the complete list of access points (e.g. complete list of access points contains Access Point with the same token and this Access Point has Capabilities.AnonymousAccess = "true" and Capabilities.AccessTaken = "true").

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/AccessGranted/Anonymous event on step <xref linkend="tc.ACCESSCONTROL-8-1-1.14"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/AccessNotTaken/Anonymous event on step <xref linkend="tc.ACCESSCONTROL-8-1-1.19"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value) on step <xref linkend="tc.ACCESSCONTROL-8-1-1.19"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-8-1-1.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/AccessNotTaken/Anonymous in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for steps <xref linkend="tc.ACCESSCONTROL-8-1-1.14"/> and <xref linkend="tc.ACCESSCONTROL-8-1-1.19"/> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-8-1-2-->
      <section xml:id="tc.ACCESSCONTROL-8-1-2"
               xreflabel="ACCESSCONTROL-8-1-2 (see Section 4.8.2)">
        <title>ACCESS CONTROL - ACCESS NOT TAKEN WITH CREDENTIAL EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-8-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns:AccessControl/AccessGranted/Credential (Access Control Service Specification), tns1:AccessControl/AccessNotTaken/Credential (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:AccessControl/AccessNotTaken/Credential
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/AccessNotTaken/Credential event generation and to verify tns1:AccessControl/AccessNotTaken/Credential event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with Access Taken capability is configured and added to the DUT. Device supports Pull-Point Notification feature. Device supports tns1:AccessControl/AccessNotTaken/Credential.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-8-1-2.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Point with Capabilities.AccessTaken = "true" in complete list of access points, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/AccessNotTaken/Credential. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "CredentialToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if this event contains Data.SimpleItemDescription item with Name = "CredentialHolderName", than it has Type = " xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/AccessGranted/Credential Topic and tns1:AccessControl/AccessNotTaken/Credential Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/AccessGranted/Credential event for any Access Points with Capabilities.AccessTaken = "true".
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-8-1-2.15">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-8-1-2.16">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-8-1-2.15"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/AccessGranted/Credential for the Notification message.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-8-1-2.19">
              <para>
                Test Operator will invoke tns1:AccessControl/AccessNotTaken/Credential event for the same Access Point.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-8-1-2.20">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-8-1-2.21">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-8-1-2.20"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/AccessNotTaken/Credential for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to AccessPointToken from tns1:AccessControl/AccessGranted/Credential notification and there is Access Point Tokens with Capabilities.AccessTaken = "true" in the complete list of access points (e.g. complete list of access points contains Access Point with the same token and this Access Point has Capabilities.AccessTaken = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "CredentialToken" and Value with type is equal to pt:ReferenceToken. Verify that this value is equal to the same Data.SimpleItem from tns1:AccessControl/AccessGranted/Credential notification.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification which contains Data.SimpleItem item with Name = "CredentialHolderName" contains Value with type is equal to xs:string. Verify that this value is equal to the same Data.SimpleItem from tns1:AccessControl/AccessGranted/Credential notification.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/AccessGranted/Credential event on step <xref linkend="tc.ACCESSCONTROL-8-1-2.16"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/AccessNotTaken/Credential event on step <xref linkend="tc.ACCESSCONTROL-8-1-2.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value, invalid CredentialToken value, and invalid CredentialHolderName value) on step <xref linkend="tc.ACCESSCONTROL-8-1-2.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-8-1-2.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/AccessNotTaken/Credential in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime will expire.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for step <xref linkend="tc.ACCESSCONTROL-8-1-2.16"/> and <xref linkend="tc.ACCESSCONTROL-8-1-2.19"/> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-8-1-3-->
      <section xml:id="tc.ACCESSCONTROL-8-1-3"
               xreflabel="ACCESSCONTROL-8-1-3 (see Section 4.8.3)">
        <title>ACCESS CONTROL - ACCESS NOT TAKEN TO IDENTIFIER EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-8-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns:AccessControl/AccessGranted/Identifier (Access Control Service Specification), tns1:AccessControl/AccessNotTaken/Identifier (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:AccessControl/AccessNotTaken/Identifier
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/AccessNotTaken/Identifier event generation and to verify tns1:AccessControl/AccessNotTaken/Identifier event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>
          Event Service was received from the DUT.
          Device supports Pull-Point Notification feature.
          Access Control Service was received from the DUT.
          Access Point Entity is supported by the DUT.
          tns1:AccessControl/AccessNotTaken/Identifier event topic is supported by the DUT.
          At least one Access Point with Access Taken capability is configured and added to the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/AccessNotTaken/Identifier topic, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">accessNotTakenIdentifierTopic</emphasis> := message description of  tns1:AccessControl/AccessNotTaken/Identifier topic from <emphasis role="italic">topicSet</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:AccessControl/AccessNotTaken/Identifier topic by following the procedure mentioned in <xref linkend="Annex_HelperValidateIdentifierMessageDescription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessNotTakenIdentifierTopic</emphasis> - topic
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access point info items by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access points info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">"tns1:AccessControl/AccessGranted/Identifier|tns1:AccessControl/AccessNotTaken/Identifier"</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-8-1-3.SendAccessGrantedEvent"
               xreflabel="9">
              <para>
                Test Operator will invoke <emphasis role="bold">tns1:AccessControl/AccessGranted/Identifier</emphasis> event for any Access Point with Capabilities.AccessTaken = true.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/AccessGranted/Identifier</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "tns1:AccessControl/AccessGranted/Identifier" - topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessGrantedIdentifierNotification</emphasis> - Access Granted Identifier Notification Message
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke <emphasis role="bold">tns1:AccessControl/AccessNotTaken/Identifier</emphasis> event for the same Access Point as was sent in step <xref linkend="tc.ACCESSCONTROL-8-1-3.SendAccessGrantedEvent"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/AccessNotTaken/Identifier</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "tns1:AccessControl/AccessNotTaken/Identifier" - topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessNotTakenIdentifierNotification</emphasis> - Access Not Taken Identifier Notification Message
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessGrantedIdentifierNotification</emphasis>.Source.SimpleItem[Name = "AccessPointToken"] != <emphasis role="italic">accessNotTakenIdentifierNotification</emphasis>.Source.SimpleItem[Name = "AccessPointToken"], FAIL the test, restore DUT setting, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessGrantedIdentifierNotification</emphasis>.Data.SimpleItem[Name = "IdentifierType"] != <emphasis role="italic">accessNotTakenIdentifierNotification</emphasis>.Data.SimpleItem[Name = "IdentifierType"], FAIL the test, restore DUT settings, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessGrantedIdentifierNotification</emphasis>.Data.SimpleItem[Name = "FormatType"] != <emphasis role="italic">accessNotTakenIdentifierNotification</emphasis>.Data.SimpleItem[Name = "FormatType"], FAIL the test, restore DUT settings, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessGrantedIdentifierNotification</emphasis>.Data.SimpleItem[Name = "IdentifierValue"] != <emphasis role="italic">accessNotTakenIdentifierNotification</emphasis>.Data.SimpleItem[Name = "IdentifierValue"], FAIL the test, restore DUT settings, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not contain item with token = <emphasis role="italic">accessGrantedIdentifierNotification</emphasis>.Source.SimpleItem[Name = "AccessPointToken"], FAIL the test, restore DUT settings, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">accessPointInfo</emphasis> := item from <emphasis role="italic">accessPointInfoCompleteList</emphasis> with token = <emphasis role="italic">accessGrantedIdentifierNotification</emphasis>.Source.SimpleItem[Name = "AccessPointToken"].
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfo</emphasis>.Capabilities.AccessTaken != true, FAIL the test, restore DUT settings, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Access Denied Events-->
    <section xml:id="tc.access_control.access_denied_events"
             xreflabel="Section 4.9">
      <title>Access Denied Events</title>
      <!--ACCESSCONTROL-9-1-1-->
      <section xml:id="tc.ACCESSCONTROL-9-1-1"
               xreflabel="ACCESSCONTROL-9-1-1 (see Section 4.9.1)">
        <title>ACCESS CONTROL - ACCESS DENIED TO ANONYMOUS EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-9-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/Denied/Anonymous (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:AccessControl/Denied/Anonymous
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/Denied/Anonymous event generation and to verify tns1:AccessControl/Denied/Anonymous event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with Anonymous Access capability is configured and added to the DUT. Device supports Pull-Point Notification feature. Device supports tns1:AccessControl/Denied/Anonymous.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-9-1-1.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                If there are no Access Points with Capabilities.AnonymousAccess = “true” in complete list of access points, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/Denied/Anonymous. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if this event contains Data.SimpleItemDescription item with Name = "External", than it has Type = "xs:boolean".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "Reason" and Type = " xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/Denied/Anonymous Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/Denied/Anonymous event for any Access Points with Capabilities.AnonymousAccess = “true”.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-9-1-1.15">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-9-1-1.16">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-9-1-1.15"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Denied/Anonymous for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to one of existing Access Point Tokens with Capabilities.AnonymousAccess = “true” (e.g. complete list of access points contains Access Point with the same token and this Access Point has Capabilities.AnonymousAccess = “true”).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification doesn’t contain Data.SimpleItem item with Name = "External", if it was not included in Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis> message. Verify that the notification doesn’t contain Data.SimpleItem item with Name = "External" or contains Data.SimpleItem item with Name = "External" and its Value is equal to “false”, if it was included in Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "Reason" contains Value with type is equal to xs:string. Check that Reason value is one of the following strings: “CredentialNotEnabled”, “CredentialNotActive”, “CredentialExpired”, “InvalidPIN”, “NotPermittedAtThisTime”, “Unauthorized”, “Other”.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/Denied/Anonymous event.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value, invalid External, invalid Reason).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-9-1-1.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Denied/Anonymous in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message will be received for step <xref linkend="tc.ACCESSCONTROL-9-1-1.16"/> during certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-9-1-2-->
      <section xml:id="tc.ACCESSCONTROL-9-1-2"
               xreflabel="ACCESSCONTROL-9-1-2 (see Section 4.9.2)">
        <title>ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-9-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/Denied/Credential (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:AccessControl/Denied/Credential
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/Denied/Credential generation and to verify tns1:AccessControl/Denied/Credential event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point is configured and added to the DUT. Device supports Pull-Point Notification feature. Device supports tns1:AccessControl/Denied/Credential. Credential entity is supported by the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-9-1-2.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/Denied/Credential. If there is no event with such Topic skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "CredentialToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if this event contains Data.SimpleItemDescription item with Name = "CredentialHolderName", than it has Type = " xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if this event contains Data.SimpleItemDescription item with Name = "External", than it has Type = "xs:boolean".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "Reason" and Type = " xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/Denied/Credential Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/Denied/Credential event for any Access Points.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-9-1-2.16">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-9-1-2.17">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-9-1-2.16"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Denied/Credential for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to one of existing Access Point Tokens (e.g. complete list of access points contains Access Point with the same token).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "CredentialToken" and Value with type is equal to pt:ReferenceToken.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification which contains Data.SimpleItem item with Name = "CredentialHolderName" contains Value with type is equal to xs:string.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification doesn’t contain Data.SimpleItem item with Name = "External", if it was not included in Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis> message. Verify that the notification doesn’t contain Data.SimpleItem item with Name = "External" or contains Data.SimpleItem item with Name = "External" and its Value is equal to “false”, if it was included in Topic in <emphasis role="bold">GetEventPropertiesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "Reason" contains Value with type is equal to xs:string. Check that Reason value is one of the following strings: “CredentialNotEnabled”, “CredentialNotActive”, “CredentialExpired”, “InvalidPIN”, “NotPermittedAtThisTime”, “Unauthorized”, “Other”.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/Denied/Credential event.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value, invalid CredentialToken, invalid CredentialHolderName, invalid External, invalid Reason).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-9-1-2.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Denied/Credential in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for step <xref linkend="tc.ACCESSCONTROL-9-1-2.17"/> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-9-1-3-->
      <section xml:id="tc.ACCESSCONTROL-9-1-3"
               xreflabel="ACCESSCONTROL-9-1-3 (see Section 4.9.3)">
        <title>ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL EVENT (CREDENTIAL NOT FOUND - CARD)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-9-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:AccessControl/Denied/CredentialNotFound/Card (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:AccessControl/Denied/CredentialNotFound/Card
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/Denied/CredentialNotFound/Card generation and to verify tns1:AccessControl/Denied/CredentialNotFound/Card format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with tns1:AccessControl/Denied/CredentialNotFound/Card event capability is configured and added to the DUT. Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-9-1-3.3">
              <para>
                Get complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/Denied/CredentialNotFound/Card. If there is no event with such Topic fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "Card" and Type = " xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/Denied/CredentialNotFound/Card Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/Denied/CredentialNotFound/Card event for any Access Points.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-9-1-3.13">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-9-1-3.14">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-9-1-3.13"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Denied/CredentialNotFound/Card for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to one of existing Access Point Tokens (e.g. complete list of access points contains Access Point with the same token).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "Card" and Value with type is equal to xs:string.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/Denied/CredentialNotFound/Card event.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value, invalid Card).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point on step <xref linkend="tc.ACCESSCONTROL-9-1-3.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Denied/CredentialNotFound/Card in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will be failed, if no Notification message is received for step <xref linkend="tc.ACCESSCONTROL-9-1-3.14"/> during a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-9-1-4-->
      <section xml:id="tc.ACCESSCONTROL-9-1-4"
               xreflabel="ACCESSCONTROL-9-1-4 (see Section 4.9.4)">
        <title>ACCESS CONTROL - ACCESS DENIED WITH CREDENTIAL EVENT (CREDENTIAL NOT FOUND)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-9-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CredentialNotFound (Access Control Service Specification), GetAccessPointInfoList command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:AccessControl/Denied/CredentialNotFound
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/Denied/CredentialNotFound generation and to verify tns1:AccessControl/Denied/CredentialNotFound format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
          At least one Access Point with tns1:AccessControl/Denied/CredentialNotFound event capability is configured and added to the DUT.
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access point info items by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access points info list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointsNumber</emphasis> - access points number
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointsNumber</emphasis> &lt; 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis> request.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      TopicNamespaceLocation list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FixedTopicSet
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicExpressionDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentFilterDialect list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      MessageContentSchemaLocation list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/Denied/CredentialNotFound topic, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">topic</emphasis> := tns1:AccessControl/Denied/CredentialNotFound topic from <emphasis role="italic">topicSet</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topic</emphasis>.MessageDescription.IsProperty is present and equal to true, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name = "AccessPointToken", FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name = "AccessPointToken" does not have Type = "pt:ReferenceToken", FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "IdentifierType", FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "IdentifierType" does not have Type = "xs:string", FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "IdentifierValue", FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "IdentifierValue" does not have Type = "xs:hexBinary", FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:AccessControl/Denied/CredentialNotFound</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription Reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription Termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke <emphasis role="bold">tns1:AccessControl/Denied/CredentialNotFound</emphasis> event for any Access Points.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/Denied/CredentialNotFound</emphasis> event by following the procedure mentioned in <xref linkend="Annex_HelperPullDeniedCredentialNotFound"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointInfoCompleteList</emphasis> - access points list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-9-1-5-->
      <section xml:id="tc.ACCESSCONTROL-9-1-5"
               xreflabel="ACCESSCONTROL-9-1-5 (see Section 4.9.5)">
        <title>ACCESS CONTROL - ACCESS DENIED TO IDENTIFIER EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-9-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Access denied/Identifier (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:AccessControl/Denied/Identifier
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/Denied/Identifier event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT. tns1:AccessControl/Denied/Identifier event topic is supported by the DUT.
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">GetEventProperties</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with a <emphasis role="bold">GetEventPropertiesResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>TopicNamespaceLocation list</para>
                  </listitem>
                  <listitem>
                    <para>FixedTopicSet</para>
                  </listitem>
                  <listitem>
                    <para>
                      TopicSet =: <emphasis role="italic">topicSet</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>TopicExpressionDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentFilterDialect list</para>
                  </listitem>
                  <listitem>
                    <para>MessageContentSchemaLocation list</para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">topicSet</emphasis> does not contain tns1:AccessControl/Denied/Identifier topic, FAIL the test, restore the DUT state, and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client verifies tns1:AccessControl/Denied/Identifier topic (<emphasis role="italic">accessDeniedIdentifierTopic</emphasis>) from topicSet:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessDeniedIdentifierTopic</emphasis>.MessageDescription.IsProperty equals to true, FAIL the test, restore the DUT state, and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessDeniedIdentifierTopic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name = "AccessPointToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessDeniedIdentifierTopic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name = "AccessPointToken" does not have Type = "pt:ReferenceToken", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessDeniedIdentifierTopic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "IdentifierType", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessDeniedIdentifierTopic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "IdentifierType" does not have Type = "xs:string", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessDeniedIdentifierTopic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "FormatType", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessDeniedIdentifierTopic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "FormatType" does not have Type = "xs:string", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessDeniedIdentifierTopic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "IdentifierValue", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessDeniedIdentifierTopic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "IdentifierValue" does not have Type = "xs:hexBinary", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessDeniedIdentifierTopic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "Reason", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessDeniedIdentifierTopic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "Reason" does not have Type = "xs:string", FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">"tns1:AccessControl/Denied/Identifier"</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke <emphasis role="bold">tns1:AccessControl/Denied/Identifier</emphasis> event for any Access Point.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/Denied/Identifier</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullDeniedIdentifier"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Duress events-->
    <section xml:id="tc.access_control.duress_events"
             xreflabel="Section 4.10">
      <title>Duress events</title>
      <!--ACCESSCONTROL-10-1-2-->
      <section xml:id="tc.ACCESSCONTROL-10-1-2"
               xreflabel="ACCESSCONTROL-10-1-2 (see Section 4.10.1)">
        <title>ACCESS CONTROL - DURESS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-10-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns:AccessControl/Duress (Access Control Service Specification), GetAccessPointInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns:AccessControl/Duress
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:AccessControl/Duress event generation and to verify tns1:AccessControl/Duress event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. Access Point Entity is supported by the DUT. At least one Access Point with Duress capability is configured and added to the DUT.
          Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-10-1-1.3">
              <para>
                Get a complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>).
              </para>
            </listitem>
            <listitem>
              <para>
                If there is no Access Point with Capabilities.Duress = "true" on complete list of access points, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:AccessControl/Duress. If there is no event with such Topic, skip other steps, fail the test and go to the next test.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event is not a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if this event contains Data.SimpleItemDescription item with Name = "CredentialToken", then it has Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that if this event contains Data.SimpleItemDescription item with Name = "CredentialHolderName", then it has Type = " xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Data.SimpleItemDescription item with Name = "Reason" and Type = "xs:string".
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:AccessControl/Duress Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will invoke tns1:AccessControl/Duress event for any Access Point with Capabilities.Duress = "true".
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-10-1-1.16">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-10-1-1.17">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. If no NotificationMessage were received repeat step <xref linkend="tc.ACCESSCONTROL-10-1-1.16"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification message (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:AccessControl/Duress for the Notification message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value is equal to one of existing Access Point Tokens with Capabilities.Duress = "true" (e.g. complete list of access points contains Access Point with the same token and this Access Point has Capabilities.Duress = "true").
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification contains Data.SimpleItem item with Name = "Reason" and Value with type is equal to xs:string.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification which contains Data.SimpleItem item with Name = «CredentialToken» contains Value with type is equal to pt:ReferenceToken.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the notification which contains Data.SimpleItem item with Name = "CredentialHolderName" contains Value with type is equal to xs:string.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">PullMessagesResponse</emphasis> message that contains one tns1:AccessControl/Duress event.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (no corresponding Source.SimpleItem or Data.SimpleItem, wrong type of Value fields, invalid AccessPointToken value, invalid CredentialToken, invalid CredentialHolderName, invalid Reason).
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point at step <xref linkend="tc.ACCESSCONTROL-10-1-1.3"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return valid Topic tns1:AccessControl/Duress in <emphasis role="bold">GetEventPropertiesResponse</emphasis>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> Test will fail, if no Notification message is received at step <xref linkend="tc.ACCESSCONTROL-10-1-1.17"/> for a certain period of time (Operation Delay should be used in ONVIF Device Test Tool).
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>

    </section>
    <!--Consistency-->
    <section xml:id="tc.access_control.consistency"
             xreflabel="Section 4.11">
      <title>Consistency</title>
      <!--ACCESSCONTROL-4-1-1-->
      <section xml:id="tc.ACCESSCONTROL-4-1-1"
               xreflabel="ACCESSCONTROL-4-1-1 (see Section 4.11.1)">
        <title>GET AREA INFO LIST AND GET ACCESS POINT INFO LIST CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-4-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAccessPointInfoList (ONVIF Access Control Service Specification), GetAreaInfoList (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointInfoList, GetAreaInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that Area Info List contains all Areas from Access Point Info List.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. Access Point Entity is supported by the DUT. At least one Access Point is configured and added to the DUT. At least one Area is configured and added to the DUT, if the DUT supports Areas.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-4-1-1.3">
              <para>
                Get a complete list of access points from the DUT (see <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>)
              </para>
            </listitem>
            <listitem>
              <para>
                Get a complete list of areas from the DUT (see <xref linkend="Annex_HelperGetCompleteAreaInfoList"/>)
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the complete list of areas contains all Areas from AreaTo and AreaFrom elements of a complete access points list.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT returned at least one value in AreaTo or AreaFrom element of complete access points list that was not listed in the complete list of areas.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not return at least one Access Point at step <xref linkend="tc.ACCESSCONTROL-4-1-1.3"/>.

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-4-1-2-->
      <section xml:id="tc.ACCESSCONTROL-4-1-2"
               xreflabel="ACCESSCONTROL-4-1-2 (see Section 4.11.2)">
        <title>ACCESS POINT CAPABILITIES CONSISTENCY</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-4-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessPointCapabilities (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointInfoList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify that AccessPoint сapabilities consistency.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service was received from the DUT. Access Point Entity is supported by the DUT.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-4-1-2.3">
              <para>
                ONVIF Client retrieves a complete access point information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                For each Access Point Info (<emphasis role="italic">accessPointInfo</emphasis>) from <emphasis role="italic">accessPointInfoCompleteList</emphasis>
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width=2.5em"?>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointInfo</emphasis>.Capabilities.IdentifierAccess = true and <emphasis role="italic">accessPointInfo</emphasis>.Capabilities.ExternalAuthorization != true, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <!--<listitem>
                    <para>
                      If DUT supports Profile D and External Authorization feature:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width=2.5em"?>
                        <listitem>
                          <para>
                            If <emphasis role="italic">accessPointInfo</emphasis>.Capabilities.ExternalAuthorization != true, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>

                    </para>
                  </listitem>-->
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT does not pass all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>


    </section>
    <!--Access Point Configuration-->
    <section xml:id="tc.access_control.access_point_configuration"
             xreflabel="Section 4.12">
      <title>Access Point Configuration</title>
      <!--ACCESSCONTROL-12-1-1-->
      <section xml:id="tc.ACCESSCONTROL-12-1-1"
               xreflabel="ACCESSCONTROL-12-1-1 (see Section 4.12.1)">
        <title>ACCESS CONTROL - ADD OR CHANGE ACCESS POINT EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-12-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Configuration/AccessPoint/Changed (Access Control Service Specification), GetAccessPointInfo (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:Configuration/AccessPoint/Changed
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Configuration/AccessPoint/Changed event generation after adding new access point or changing access point configuration to the DUT and to verify: tns1:Configuration/AccessPoint/Changed event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. The DUT allows adding or changing Access Points. Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:Configuration/AccessPoint/Changed. If there is no event with such Topic fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event isn’t a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>

            <!--Step to be uncomment when #1949 is implemented-->
            <!--<listitem>
              <para>
                If DUT supports Access Point Management feature, skip other steps with PASS result (Note: Access Point Changed event generation will be tested in Access Point Management section).
              </para>
            </listitem>-->
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Configuration/AccessPoint/Changed Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will add Access Point or change Access Point configuration.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-12-1-1.11">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-12-1-1.12">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. Repeat step <xref linkend="tc.ACCESSCONTROL-12-1-1.11"/> until Notification received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Configuration/AccessPoint/Changed for received message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value with type is equal to tdc:ReferenceToken.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointInfo</emphasis> request (Token from Notification message) to retrieve subset of AccessPoint Information from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message from the DUT. Verify that requested Access Point was returned.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetAccessPointInfoResponse</emphasis> with specified Access Point.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:Configuration/AccessPoint/Changed with valid AccessPointToken.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (invalid AccessPointToken value).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client on step <xref linkend="tc.ACCESSCONTROL-12-1-1.12"/> will wait Notification messages until expected notification is received or Operation Delay has expired.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-12-1-2-->
      <section xml:id="tc.ACCESSCONTROL-12-1-2"
               xreflabel="ACCESSCONTROL-12-1-2 (see Section 4.12.2)">
        <title>ACCESS CONTROL - REMOVE ACCESS POINT EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-12-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Configuration/AccessPoint/Removed (Access Control Service Specification), GetAccessPointInfo (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:Configuration/AccessPoint/Removed
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Configuration/AccessPoint/Removed event generation after removing access point configuration to the DUT and to verify tns1:Configuration/AccessPoint/Removed event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT.
          At least one Access Point is configured and added to the DUT. The DUT supports Access Points remove. Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:Configuration/AccessPoint/Removed. If there is no event with such Topic, fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event isn’t a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AccessPointToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <!--Step to be uncomment when #1949 is implemented-->
            <!--<listitem>
              <para>
                If DUT supports Access Point Management feature, skip other steps with PASS result (Note: Access Point Removed event generation will be tested in Access Point Management section).
              </para>
            </listitem>-->
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Configuration/AccessPoint/Removed Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will remove Access Point.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-12-1-2.11">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-12-1-2.12">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. Repeat step <xref linkend="tc.ACCESSCONTROL-12-1-2.11"/> until Notification received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Configuration/AccessPoint/Removed for received message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "AccessPointToken" and Value with type is equal to tdc:ReferenceToken.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAccessPointInfo</emphasis> request (Token from Notification message) to retrieve subset of Access Point Information from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message from the DUT. Check that empty list was returned.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetAccessPointInfoResponse</emphasis> with empty list.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:Configuration/AccessPoint/Removed with valid AccessPointToken.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (invalid AccessPointToken value).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client on step <xref linkend="tc.ACCESSCONTROL-12-1-2.12"/> will wait Notification messages until expected notification is received or Operation Delay has expired.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>



    </section>
    <!--Area Configuration-->
    <section xml:id="tc.access_control.area_configuration"
             xreflabel="Section 4.13">
      <title>Area Configuration</title>
      <!--ACCESSCONTROL-13-1-1-->
      <section xml:id="tc.ACCESSCONTROL-13-1-1"
               xreflabel="ACCESSCONTROL-13-1-1 (see Section 4.13.1)">
        <title>ACCESS CONTROL - ADD OR CHANGE AREA EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-13-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Configuration/Area/Change (Access Control Service Specification), GetAreaInfo (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:Configuration/Area/Change
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify: tns1:Configuration/Area/Change event generation after adding new area or changing area configuration to the DUT and to verify: tns1:Configuration/Area/Change event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT. The DUT allows adding or changing Area. Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:Configuration/Area/Change. If there is no event with such Topic fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event isn’t a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AreaToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <!--Step to be uncomment when #1949 is implemented-->
            <!--<listitem>
              <para>
                If DUT supports Area Management feature, skip other steps with PASS result (Note: Area Changed event generation will be tested in Area Management section).
              </para>
            </listitem>-->
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Configuration/Area/Changed Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>

            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will add Area or change Area configuration.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-13-1-1.11">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-13-1-1.12">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. Repeat step <xref linkend="tc.ACCESSCONTROL-13-1-1.11"/> until Notification received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Configuration/Area/Change for received message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "AreaToken" and Value with type is equal to tdc:ReferenceToken.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke GetAreaInfo request (Token from Notification message) to retrieve subset of Area Information from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetAreaInfoResponse</emphasis> message from the DUT. Verify that requested Area was returned.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetAreaInfoResponse</emphasis> with specified Area.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:Configuration/Area/Change with valid AreaToken.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (invalid AreaToken value).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client on step <xref linkend="tc.ACCESSCONTROL-13-1-1.12"/> will wait Notification messages until expected notification is received or Operation Delay after last notification has expired.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>
      <!--ACCESSCONTROL-13-1-2-->
      <section xml:id="tc.ACCESSCONTROL-13-1-2"
               xreflabel="ACCESSCONTROL-13-1-2 (see Section 4.13.2)">
        <title>ACCESS CONTROL - REMOVE AREA EVENT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-13-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> tns1:Configuration/Area/Removed (Access Control Service Specification), GetAreaInfo (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> tns1:Configuration/Area/Removed
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> event.wsdl, accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify tns1:Configuration/Area/Removed event generation after removing Area configuration to the DUT and to verify tns1:Configuration/Area/Removed event format.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Event Service was received from the DUT. Access Control Service was received from the DUT.
          At least one Area is configured and added to the DUT. The DUT supports Area remove. Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetEventProperties</emphasis> request to retrieve all events supported by the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetEventPropertiesResponse</emphasis> message from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Check if there is an event with Topic tns1:Configuration/Area/Removed. If there is no event with such Topic fail the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event isn’t a Property event (MessageDescription.IsProperty = "false").
              </para>
            </listitem>
            <listitem>
              <para>
                Check that this event contains Source.SimpleItemDescription item with Name = "AreaToken" and Type = "pt:ReferenceToken".
              </para>
            </listitem>
            <!--Step to be uncomment when #1949 is implemented-->
            <!--<listitem>
              <para>
                If DUT supports Area Management feature, skip other steps with PASS result (Note: Area Removed event generation will be tested in Area Management section).
              </para>
            </listitem>-->
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">CreatePullPointSubscription</emphasis> request with tns1:Configuration/Area/Removed Topic as Filter and an InitialTerminationTime of timeout1.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that the DUT sends a <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                Test Operator will remove Area.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-13-1-2.11">
              <para>
                ONVIF Client will invoke <emphasis role="bold">PullMessages</emphasis> request with a PullMessagesTimeout of 20s and a MessageLimit of 1.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-13-1-2.12">
              <para>
                Verify that the DUT sends a <emphasis role="bold">PullMessagesResponse</emphasis> that contains one NotificationMessage. Repeat step <xref linkend="tc.ACCESSCONTROL-13-1-2.11"/> until Notification received.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify received Notification messages (correct value for UTC time, TopicExpression and wsnt:Message).
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that TopicExpression is equal to tns1:Configuration/Area/Removed for received message.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify that notification contains Source.SimpleItem item with Name = "AreaToken" and Value with type is equal to tdc:ReferenceToken.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client will invoke <emphasis role="bold">GetAreaInfo</emphasis> request (Token from Notification message) to retrieve subset of Area Information from the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                Verify the <emphasis role="bold">GetAreaInfoResponse</emphasis> message from the DUT. Check that empty list was returned.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL -</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetEventPropertiesResponse</emphasis>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send valid SubscriptionReference.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a <emphasis role="bold">GetAreaInfoResponse</emphasis> with empty list.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT did not send a Notification message that contains an event tns1:Configuration/Area/Removed with valid AreaToken.
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sent an invalid Notification message (invalid AreaToken value).

              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> ONVIF Client on step <xref linkend="tc.ACCESSCONTROL-13-1-2.12"/> will wait Notification messages until expected notification is received or Operation Delay after last notification has expired.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The Subscription Manager has to be deleted at the end of the test either by calling unsubscribe or through a timeout.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The <emphasis role="bold">Renew</emphasis> has to be used for renew subscription during test, if InitialTerminationTime expires.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to Timeout or MessageLimit, ONVIF Client retries to send the PullMessage message with Timeout and MessageLimit which is contained in PullMessagesFaultResponse.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If DUT cannot accept the set value to a TerminationTime, ONVIF Client retries to send the <emphasis role="bold">Renew</emphasis> request MinimumTime value which is contained in UnacceptableTerminationTimeFault.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> timeout1 will be taken from Subscription Timeout field of ONVIF Device Test Tool.

        </para>
      </section>

    </section>
    <!--Access Point Management-->
    <section xml:id="tc.access_point.management" xreflabel="Section 4.14">
      <title>Access Point Management</title>
      <!--ACCESSCONTROL-14-1-1-->
      <section xml:id="tc.ACCESSCONTROL-14-1-1">
        <title>GET ACCESS POINTS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessPointInfo (ONVIF Access Control Service Specification), AccessPoint (ONVIF Access Control Service Specification), GetAccessPoints command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPoints
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Points.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of Access Points (out <emphasis role="italic">accessPointCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-1.6">
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">accessPointCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessPoints</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessPointsResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPoint list =: <emphasis role="italic">accessPointList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointList1</emphasis> does not contain AccessPoint item for each token from <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointList1</emphasis> contains at least two AccessPoint items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointList1</emphasis> contains other AccessPoint items than listed in <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each AccessPoint.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">accessPointCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessPoints</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token[0] := <emphasis role="italic">token</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessPointsResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            AccessPoint list =: <emphasis role="italic">accessPointList2</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointList2</emphasis> does not contain only one AccessPoint item with token equal to <emphasis role="italic">token</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem xml:id="tc.ACCESSCONTROL-14-1-1.12.4"
                            xreflabel="12.4">
                    <para>
                      If <emphasis role="italic">accessPointList2</emphasis>[0] item does not have equal field values to <emphasis role="italic">accessPointCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessPointsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If number of items in <emphasis role="italic">accessPointCompleteList</emphasis> is less than <emphasis role="italic">cap</emphasis>.MaxLimit, then all <emphasis role="italic">accessPointCompleteList</emphasis>.Token items shall be used for the step <xref linkend="tc.ACCESSCONTROL-14-1-1.6"/>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.ACCESSCONTROL-14-1-1.12.4"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPoint:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>


                  <listitem>
                    <para>
                      AuthenticationProfileToken
                    </para>
                  </listitem>



                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-2-->
      <section xml:id="tc.ACCESSCONTROL-14-1-2">
        <title>GET ACCESS POINT LIST - LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessPointInfo (ONVIF Access Control Service Specification), AccessPoint (ONVIF Access Control Service Specification), GetAccessPointList command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Point List using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessPointList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := 1
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessPointListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint list =: <emphasis role="italic">accessPointList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointList1</emphasis> contains more access point items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessPointList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessPointListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint list =: <emphasis role="italic">accessPointList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointList2</emphasis> contains more AccessPoint items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessPointList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessPointListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint list =: <emphasis role="italic">accessPointList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointList3</emphasis> contains more AccessPoint items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessPointListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-3-->
      <section xml:id="tc.ACCESSCONTROL-14-1-3">
        <title>GET ACCESS POINT LIST - START REFERENCE AND LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessPointInfo (ONVIF Access Control Service Specification), AccessPoint (ONVIF Access Control Service Specification), GetAccessPointList command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get AccessPoint List using StartReference and Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessPointList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessPointListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint list =: <emphasis role="italic">accessPointCompleteList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList1</emphasis> contains more AccessPoint items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessPointList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessPointListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessPoint list =: <emphasis role="italic">accessPointListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointListPart</emphasis> contains more AccessPoint items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">accessPointCompleteList1</emphasis> := <emphasis role="italic">accessPointCompleteList1</emphasis> + <emphasis role="italic">accessPointListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList1</emphasis> contains at least two AccessPoint items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, do the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of access points info (out <emphasis role="italic">accessPointInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointCompleteList1</emphasis> does not contain all access points from <emphasis role="italic">accessPointInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointCompleteList1</emphasis> contains access points other than access points from <emphasis role="italic">accessPointInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each AccessPointInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">accessPointInfoCompleteList</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic"
                                   inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem xml:id="tc.ACCESSCONTROL-14-1-3.9.4.1" xreflabel="9.4.1">
                          <para>
                            If <emphasis role="italic">accessPointCompleteList1</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">accessPointInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessPointList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := 1
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessPointListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint list =: <emphasis role="italic">accessPointCompleteList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList2</emphasis> contains more AccessPoint items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessPointList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := 1
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessPointListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessPoint list =: <emphasis role="italic">accessPointListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointListPart</emphasis> contains more AccessPoint items than 1, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">accessPointCompleteList2</emphasis> := <emphasis role="italic">accessPointCompleteList2</emphasis> + <emphasis role="italic">accessPointListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList2</emphasis> contains at least two AccessPoint items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList2</emphasis> does not contain all access points from <emphasis role="italic">accessPointCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList2</emphasis> contains access points other than access points from <emphasis role="italic">accessPointCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2 do the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of access points info (out <emphasis role="italic">accessPointInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointCompleteList2</emphasis> does not contain all access points from <emphasis role="italic">accessPointInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointCompleteList2</emphasis> contains access points other than access points from <emphasis role="italic">accessPointInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each AccessPointInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">accessPointInfoCompleteList</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic"
                                   inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem xml:id="tc.ACCESSCONTROL-14-1-3.17.4.1" xreflabel="17.4.1">
                          <para>
                            If <emphasis role="italic">accessPointCompleteList2</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">accessPointInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessPointList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessPointListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint list =: <emphasis role="italic">accessPointCompleteList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList3</emphasis> contains more AccessPoint items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessPointList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">limit</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessPointListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessPoint list =: <emphasis role="italic">accessPointListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointListPart</emphasis> contains more AccessPoint items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">accessPointCompleteList3</emphasis> := <emphasis role="italic">accessPointCompleteList3</emphasis> + <emphasis role="italic">accessPointListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList3</emphasis> contains at least two AccessPoint items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList3</emphasis> does not contain all access points from <emphasis role="italic">accessPointCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList3</emphasis> contains access points other than access points from <emphasis role="italic">accessPointCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access points info (out <emphasis role="italic">accessPointInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList3</emphasis> does not contain all access points from <emphasis role="italic">accessPointInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList3</emphasis> contains access points other than access points from <emphasis role="italic">accessPointInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each AccessPointInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">accessPointInfoCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem xml:id="tc.ACCESSCONTROL-14-1-3.29.1"
                            xreflabel="29.1">
                    <para>
                      If <emphasis role="italic">accessPointCompleteList3</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">accessPointInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessPointListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.ACCESSCONTROL-14-1-3.9.4.1"/>, <xref linkend="tc.ACCESSCONTROL-14-1-3.17.4.1"/>, and <xref linkend="tc.ACCESSCONTROL-14-1-3.29.1"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPointInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-4-->
      <section xml:id="tc.ACCESSCONTROL-14-1-4">
        <title>GET ACCESS POINT LIST - NO LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessPointInfo (ONVIF Access Control Service Specification), AccessPoint (ONVIF Access Control Service Specification), GetAccessPointList command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPointList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Point List without using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessPointList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessPointListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint list =: <emphasis role="italic">accessPointCompleteList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList</emphasis> contains more AccessPoint items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAccessPointList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAccessPointListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessPoint list =: <emphasis role="italic">accessPointListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointListPart</emphasis> contains more AccessPoint items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">accessPointCompleteList</emphasis> := <emphasis role="italic">accessPointCompleteList</emphasis> + <emphasis role="italic">accessPointListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>

                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList</emphasis> contains at least two AccessPoint items with equal token, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access points (out <emphasis role="italic">accessPointInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList</emphasis> does not contain all access points from <emphasis role="italic">accessPointInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList</emphasis> contains access points other than access points from <emphasis role="italic">accessPointInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each AccessPointInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">accessPointInfoCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem xml:id="tc.ACCESSCONTROL-14-1-4.12.1"
                            xreflabel="12.1">
                    <para>
                      If <emphasis role="italic">accessPointCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">accessPointInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessPointListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.ACCESSCONTROL-14-1-4.12.1"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPointInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>

        </para>
      </section>
      <!--ACCESSCONTROL-14-1-5 CREATE ACCESS POINT (ACCESS POINT CAPABILITIES TRUE)-->
      <section xml:id="tc.ACCESSCONTROL-14-1-5">
        <title>CREATE ACCESS POINT (ACCESS POINT CAPABILITIES TRUE)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreateAccessPoint command (ONVIF Access Control Service Specification), AccessPoint (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, door.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of access point and generating of access point changed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Event Service was received from the DUT.
          The DUT shall have enough free storage capacity for one additional access point. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported  capability.
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-5.4">
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-5.5">
              <para>
                ONVIF Client checks free storage for additional access point by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">accessPointToRestore</emphasis> - deleted access point
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-5.GetAreaToken" xreflabel ="5">
              <para>
                ONVIF Client retrieves references to Areas existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaToken"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToken1</emphasis> - token of the 1st Area
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToken2</emphasis> - token of the 2nd Area
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If Door Control Service is supported by the DUT
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client gets the Door Control service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorControlServiceCapabilities"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">cap</emphasis>.MaxDoors >0 or skipped:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="2.5em"?>
                        <listitem  xml:id="tc.ACCESSCONTROL-14-1-5.GetDoorToken" xreflabel ="6.2.1">
                          <para>
                            ONVIF Client retrieves references to a Door existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorToken"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  out (optional) <emphasis role="italic">doorToken</emphasis> - token of the door
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/AccessPoint/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-5.10">
              <para>
                ONVIF client invokes <emphasis role="bold">CreateAccessPoint</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPoint.token := ""
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaFrom := <emphasis role="italic">areaToken1</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-5.GetAreaToken"/>, otherwise skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaTo := <emphasis role="italic">areaToken2</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-5.GetAreaToken"/>, otherwise skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.EntityType := "tdc:Door" if door token was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-5.GetDoorToken"/>, otherwise value taken from UI.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Entity := <emphasis role="italic">doorToken</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-5.GetDoorToken"/>, otherwise value taken from UI.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.DisableAccessPoint := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.Duress := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AnonymousAccess := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AccessTaken := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.ExternalAuthorization := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedRecognitionTypes skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.IdentifierAccess := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedSecurityLevels  skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AuthenticationProfileToken skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreateAccessPointResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">accessPointToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/AccessPoint/Changed</emphasis> event for the specified AccessPoint token by following the procedure mentioned in <xref linkend="Annex_HelperPullAccessPointChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - Access Point token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an access point by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointList</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-5.15">
              <para>
                If <emphasis role="italic">accessPointList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-5.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-5.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an access point info by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-5.17">
              <para>
                If <emphasis role="italic">accessPointInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-5.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-5.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete access point information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>

                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-5.19">
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not have AccessPointInfo[token = <emphasis role="italic">accessPointToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-5.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-5.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList2</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-5.21">
              <para>
                If <emphasis role="italic">accessPointCompleteList2</emphasis> does not have AccessPoint[token = <emphasis role="italic">accessPointToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-5.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-5.24"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-5.24">
              <para>
                ONVIF Client deletes the access point by following the procedure mentioned in <xref linkend="Annex_HelperDeleteAccessPoint"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores access point deleted at step <xref linkend="tc.ACCESSCONTROL-14-1-5.5"/> if any.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes door created at step <xref linkend="tc.ACCESSCONTROL-14-1-5.GetDoorToken"/> if any.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes areas created at step <xref linkend="tc.ACCESSCONTROL-14-1-5.GetAreaToken"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>

            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateAccessPointResponse</emphasis> message.
              </para>
            </listitem>



          </itemizedlist>
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-14-1-5.15"/>, <xref linkend="tc.ACCESSCONTROL-14-1-5.21"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPoint:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            IdentifierAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AuthenticationProfileToken
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>

        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-14-1-5.17"/>, <xref linkend="tc.ACCESSCONTROL-14-1-5.19"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPoint:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            IdentifierAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-6-->
      <section xml:id="tc.ACCESSCONTROL-14-1-6">
        <title>CREATE ACCESS POINT (ACCESS POINT CAPABILITIES FALSE)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreateAccessPoint command (ONVIF Access Control Service Specification), AccessPoint (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, door.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of access point and generating of access point changed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Event Service was received from the DUT.
          The DUT shall have enough free storage capacity for one additional access point. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported  capability.
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-6.4">
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-6.5">
              <para>
                ONVIF Client checks free storage for additional access point by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">accessPointToRestore</emphasis> - deleted access point
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                If Door Control Service is supported by the DUT
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client gets the Door Control service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorControlServiceCapabilities"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">cap</emphasis>.MaxDoors >0 or skipped:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="2.5em"?>
                        <listitem  xml:id="tc.ACCESSCONTROL-14-1-6.GetDoorToken" xreflabel ="6.2.1">
                          <para>
                            ONVIF Client retrieves references to a Door existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorToken"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  out (optional) <emphasis role="italic">doorToken</emphasis> - token of the door
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/AccessPoint/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-6.10">
              <para>
                ONVIF client invokes <emphasis role="bold">CreateAccessPoint</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPoint.token := ""
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Description skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaFrom skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaTo skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.EntityType := "tdc:Door" if door token was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-6.GetDoorToken"/>, otherwise value taken from UI.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Entity := <emphasis role="italic">doorToken</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-6.GetDoorToken"/>, otherwise value taken from UI.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.DisableAccessPoint := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.Duress := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AnonymousAccess := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AccessTaken := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.ExternalAuthorization := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedRecognitionTypes skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.IdentifierAccess := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedSecurityLevels  skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AuthenticationProfileToken skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreateAccessPointResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">accessPointToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/AccessPoint/Changed</emphasis> event for the specified AccessPoint token by following the procedure mentioned in <xref linkend="Annex_HelperPullAccessPointChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - Access Point token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an access point by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointList</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-6.15">
              <para>
                If <emphasis role="italic">accessPointList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-6.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-6.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an access point info by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-6.17">
              <para>
                If <emphasis role="italic">accessPointInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-6.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-6.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete access point information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>

                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-6.19">
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not have AccessPointInfo[token = <emphasis role="italic">accessPointToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-6.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-6.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList2</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-6.21">
              <para>
                If <emphasis role="italic">accessPointCompleteList2</emphasis> does not have AccessPoint[token = <emphasis role="italic">accessPointToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-6.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-6.24"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-6.24">
              <para>
                ONVIF Client deletes the access point by following the procedure mentioned in <xref linkend="Annex_HelperDeleteAccessPoint"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores access point deleted at step <xref linkend="tc.ACCESSCONTROL-14-1-6.5"/> if any.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes door created at step <xref linkend="tc.ACCESSCONTROL-14-1-6.GetDoorToken"/> if any.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>

            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateAccessPointResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-14-1-6.15"/>, <xref linkend="tc.ACCESSCONTROL-14-1-6.21"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPoint:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            IdentifierAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AuthenticationProfileToken
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>

        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-14-1-6.17"/>, <xref linkend="tc.ACCESSCONTROL-14-1-6.19"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPoint:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            IdentifierAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-7 MODIFY ACCESS POINT-->
      <section xml:id="tc.ACCESSCONTROL-14-1-7">
        <title>MODIFY ACCESS POINT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessPointInfo (ONVIF Access Control Service Specification), AccessPoint (ONVIF Access Control Service Specification), ModifyAccessPoint command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ModifyAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, door.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifying of access point and generating of access point changed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Event Service was received from the DUT.
          The DUT shall have enough free storage capacity for one additional Access Point. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.
          Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-7.4">
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-7.5">
              <para>
                ONVIF Client checks free storage for additional access point by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">accessPointToRestore</emphasis> - deleted access point
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-7.GetAreaToken" xreflabel ="5">
              <para>
                ONVIF Client retrieves references to Areas existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaToken"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToken1</emphasis> - token of the 1st Area
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToken2</emphasis> - token of the 2nd Area
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If Door Control Service is supported by the DUT
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client gets the Door Control service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorControlServiceCapabilities"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">cap</emphasis>.MaxDoors >0 or skipped:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="2.5em"?>
                        <listitem  xml:id="tc.ACCESSCONTROL-14-1-7.GetDoorToken" xreflabel ="6.2.1">
                          <para>
                            ONVIF Client retrieves references to a Door existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorToken"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  out (optional) <emphasis role="italic">doorToken</emphasis> - token of the door
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>

            <listitem>
              <para>
                ONVIF Client creates access point by following the procedure mentioned in <xref linkend="Annex_HelperCreateAccessPoint"/>  with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "Test Name1" -  Access Point Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in "Test Description1" - Access Point Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken1</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-7.GetAreaToken"/>, otherwise skipped - Area From Token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken2</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-7.GetAreaToken"/>, otherwise skipped - Area To Token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in "tdc:Door" if door token was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-7.GetDoorToken"/>, otherwise value taken from UI - Access Point Entity Type
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-7.GetDoorToken"/>, otherwise value taken from UI - Access Point Entity Token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in false - Disable Access Point Capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in false - Access Point Duress Capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in false - Access Point Anonymous Access Capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in false - Access Point Access Taken Capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in false - Access Point External Authorization Capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in false - Access Point Identifier Access Capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointToken</emphasis> - Access Point Token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/AccessPoint/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.ACCESSCONTROL-14-1-7.9">
              <para>
                ONVIF client invokes <emphasis role="bold">ModifyAccessPoint</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPoint.token := <emphasis role="italic">accessPointToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Name := "Test Name2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Description := "Test Description2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaFrom := <emphasis role="italic">areaToken2</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-7.GetAreaToken"/>, otherwise skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaTo := <emphasis role="italic">areaToken1</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-7.GetAreaToken"/>, otherwise skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.EntityType := "tdc:Door" if door token was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-7.GetDoorToken"/>, otherwise value taken from UI
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Entity := <emphasis role="italic">doorToken</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-7.GetDoorToken"/>, otherwise value taken from UI
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.DisableAccessPoint := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.Duress := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AnonymousAccess := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AccessTaken := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.ExternalAuthorization := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedRecognitionTypes skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.IdentifierAccess := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedSecurityLevels  skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AuthenticationProfileToken skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with empty <emphasis role="bold">ModifyAccessPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/AccessPoint/Changed</emphasis> event for the specified Access Point token by following the procedure mentioned in <xref linkend="Annex_HelperPullAccessPointChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-7.13">
              <para>
                ONVIF Client retrieves an access point by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointList</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-7.14">
              <para>
                If <emphasis role="italic">accessPointList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-7.9"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-7.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an access point info by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-7.16">
              <para>
                If <emphasis role="italic">accessPointInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-7.9"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-7.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete access point information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>

                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-7.18">
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not have AccessPointInfo[token:= <emphasis role="italic">accessPointToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-7.9"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-7.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList2</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-7.20">
              <para>
                If <emphasis role="italic">accessPointCompleteList2</emphasis> does not have AccessPoint[token = <emphasis role="italic">accessPointToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-7.9"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-7.21"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-7.21">
              <para>
                ONVIF Client deletes the access point by following the procedure mentioned in <xref linkend="Annex_HelperDeleteAccessPoint"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores access point deleted at step <xref linkend="tc.ACCESSCONTROL-14-1-7.5"/> if any.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes door created at step <xref linkend="tc.ACCESSCONTROL-14-1-7.GetDoorToken"/> if any.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes areas created at step <xref linkend="tc.ACCESSCONTROL-14-1-7.GetAreaToken"/> if any.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>


            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ModifyAccessPointResponse</emphasis> message.
              </para>
            </listitem>


          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-14-1-7.14"/>, <xref linkend="tc.ACCESSCONTROL-14-1-7.20"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPoint:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            IdentifierAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AuthenticationProfileToken
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>

        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-14-1-7.16"/>, <xref linkend="tc.ACCESSCONTROL-14-1-7.18"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPoint:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            IdentifierAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-8-->
      <section xml:id="tc.ACCESSCONTROL-14-1-8">
        <title>DELETE ACCESS POINT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-8
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DeleteAccessPoint command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, door.wsdl and event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify deleting of access point and generating of access point removed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Event Service was received from the DUT.
          The DUT shall have enough free storage capacity for one additional access point. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.
          Device supports Pull-Point Notification feature.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-8.4">
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-8.5">
              <para>
                ONVIF Client checks free storage for additional access point by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">accessPointToRestore</emphasis> - deleted access point
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If Door Control Service is supported by the DUT
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client gets the Door Control service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorControlServiceCapabilities"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">cap</emphasis>.MaxDoors >0 or skipped:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="2.5em"?>
                        <listitem  xml:id="tc.ACCESSCONTROL-14-1-8.GetDoorToken" xreflabel ="6.2.1">
                          <para>
                            ONVIF Client retrieves references to a Door existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorToken"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  out (optional) <emphasis role="italic">doorToken</emphasis> - token of the door
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates access point by following the procedure mentioned in <xref linkend="Annex_HelperCreateAccessPoint"/>  with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "Test Name1" -  Access Point Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in "Test Description1" - Access Point Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in "tdc:Door" if door token was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-8.GetDoorToken"/>, otherwise value taken from UI - Access Point Entity Type
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-8.GetDoorToken"/>, otherwise value taken from UI - Access Point Entity Token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in false - Disable Access Point Capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointToken</emphasis> - Access Point Token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/AccessPoint/Removed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">DeleteAccessPoint</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">accessPointToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with empty <emphasis role="bold">DeleteAccessPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/AccessPoint/Removed</emphasis> event for the specified access point token by following the procedure mentioned in <xref linkend="Annex_HelperPullAccessPointRemoved"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-8.12">
              <para>
                ONVIF Client retrieves an access point by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointList</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointList</emphasis> is not empty, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-8.20"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an access point info by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoList</emphasis> is not empty, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-8.20"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete access point information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> contains AccessPointInfo[token:= <emphasis role="italic">accessPointToken</emphasis>] item, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-8.20"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList2</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList2</emphasis> contains AccessPoint[token:= <emphasis role="italic">accessPointToken</emphasis>] item, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-8.20"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-8.20">
              <para>
                ONVIF Client restores access point deleted at step <xref linkend="tc.ACCESSCONTROL-14-1-8.5"/> if any.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-8.21">
              <para>
                ONVIF Client deletes door created at step <xref linkend="tc.ACCESSCONTROL-14-1-8.GetDoorToken"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">DeleteAccessPointResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-9-->
      <section xml:id="tc.ACCESSCONTROL-14-1-9">
        <title>GET ACCESS POINTS WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>GetAccessPoints command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPoints
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Points with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access points info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">accessPointInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessPoints</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token[0] := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessPointsResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPoint list =: <emphasis role="italic">accessPointList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointList</emphasis> is not empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - access control capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is less than 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessPoints</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token[0] := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Token[1] := <emphasis role="italic">accessPointInfoCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAccessPointsResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPointInfo list =: <emphasis role="italic">accessPointList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointList</emphasis> is empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointList</emphasis> contains more than one item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointList</emphasis>[0].token does not equal to <emphasis role="italic">accessPointInfoCompleteList</emphasis>[0].token, FAIL the test.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAccessPointsResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-10-->
      <section xml:id="tc.ACCESSCONTROL-14-1-10">
        <title>GET ACCESS POINTS - TOO MANY ITEMS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAccessPoints command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAccessPoints
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Access Points if there are more items than MaxLimit in request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList</emphasis> - complete access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - access control capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointCompleteList</emphasis>.token items number is less than <emphasis role="italic">cap</emphasis>.MaxLimit or equal to <emphasis role="italic">cap</emphasis>.MaxLimit, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">accessPointCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit + 1]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAccessPoints</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-11-->
      <section xml:id="tc.ACCESSCONTROL-14-1-11">
        <title>CREATE ACCESS POINT - NOT EMPTY ACCESS POINT TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-11
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreateAccessPoint command (ONVIF Access Control Service Specification), AccessPoint (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, door.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> Create Access Point with not Empty Token Verification.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. The DUT shall have enough free storage capacity for one additional access point. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported  capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-11.4">
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-11.5">
              <para>
                ONVIF Client checks free storage for additional access point by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">accessPointToRestore</emphasis> - deleted access point
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If Door Control Service is supported by the DUT
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client gets the Door Control service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorControlServiceCapabilities"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">cap</emphasis>.MaxDoors >0 or skipped:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="2.5em"?>
                        <listitem  xml:id="tc.ACCESSCONTROL-14-1-11.GetDoorToken" xreflabel ="6.2.1">
                          <para>
                            ONVIF Client retrieves references to a Door existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorToken"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  out (optional) <emphasis role="italic">doorToken</emphasis> - token of the door
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-11.10">
              <para>
                ONVIF client invokes <emphasis role="bold">CreateAccessPoint</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPoint.token := "AccessPointToken"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Description skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaFrom skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaTo skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.EntityType := "tdc:Door" if door token was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-11.GetDoorToken"/>, otherwise value taken from UI.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Entity := <emphasis role="italic">doorToken</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-11.GetDoorToken"/>, otherwise value taken from UI.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.DisableAccessPoint := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.Duress skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AnonymousAccess skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AccessTaken skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.ExternalAuthorization skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedRecognitionTypes skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.IdentifierAccess skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedSecurityLevels  skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AuthenticationProfileToken skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores access point deleted at step <xref linkend="tc.ACCESSCONTROL-14-1-11.5"/> if any.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes door created at step <xref linkend="tc.ACCESSCONTROL-14-1-11.GetDoorToken"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>

            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-12-->
      <section xml:id="tc.ACCESSCONTROL-14-1-12">
        <title>MODIFY ACCESS POINT WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AccessPointInfo (ONVIF Access Control Service Specification), AccessPoint (ONVIF Access Control Service Specification), ModifyAccessPoint command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ModifyAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, door.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifying of access point with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access point info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">accessPointInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If Door Control Service is supported by the DUT
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client gets the Door Control service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorControlServiceCapabilities"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">cap</emphasis>.MaxDoors >0 or skipped:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="2.5em"?>
                        <listitem  xml:id="tc.ACCESSCONTROL-14-1-12.GetDoorToken" xreflabel ="6.2.1">
                          <para>
                            ONVIF Client retrieves references to a Door existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorToken"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  out (optional) <emphasis role="italic">doorToken</emphasis> - token of the door
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-12.9">
              <para>
                ONVIF client invokes <emphasis role="bold">ModifyAccessPoint</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPoint.token := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Description skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaFrom skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaTo skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.EntityType := "tdc:Door" if door token was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-12.GetDoorToken"/>, otherwise value taken from UI
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Entity := <emphasis role="italic">doorToken</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-12.GetDoorToken"/>, otherwise value taken from UI
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.DisableAccessPoint := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.Duress skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AnonymousAccess skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AccessTaken skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.ExternalAuthorization skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedRecognitionTypes skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.IdentifierAccess := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedSecurityLevels  skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AuthenticationProfileToken skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes door created at step <xref linkend="tc.ACCESSCONTROL-14-1-12.GetDoorToken"/> if any.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-13-->
      <section xml:id="tc.ACCESSCONTROL-14-1-13">
        <title>DELETE ACCESS POINT WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-13
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DeleteAccessPoint command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify deleting of access point with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access point info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">accessPointInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">DeleteAccessPoint</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
      <!--ACCESSCONTROL-14-1-14-->
      <section xml:id="tc.ACCESSCONTROL-14-1-14">
        <title>CREATE NEW ACCESS POINT WITH SET ACCESS POINT (ACCESS POINT CAPABILITIES TRUE)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-14
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SetAccessPoint command (ONVIF Access Control Service Specification), AccessPoint (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, door.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of access point using SetAccessPoint command and generating of appropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Event Service was received from the DUT.
          The DUT shall have enough free storage capacity for one additional access point.
          Client Supplied Token is supported by the DUT as indicated by ClientSuppliedTokenSupported capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-14.4">
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">accssPointToken</emphasis> := token that differs from tokens listed in <emphasis role="italic">accessPointCompleteList1</emphasis>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-14.5">
              <para>
                ONVIF Client checks free storage for additional access point by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">accessPointToRestore</emphasis> - deleted access point
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-14.GetAreaToken" xreflabel ="6">
              <para>
                ONVIF Client retrieves references to Areas existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaToken"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToken1</emphasis> - token of the 1st Area
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToken2</emphasis> - token of the 2nd Area
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If Door Control Service is supported by the DUT
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client gets the Door Control service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorControlServiceCapabilities"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">cap</emphasis>.MaxDoors >0 or skipped:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="2.5em"?>
                        <listitem  xml:id="tc.ACCESSCONTROL-14-1-14.GetDoorToken" xreflabel ="6.2.1">
                          <para>
                            ONVIF Client retrieves references to a Door existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorToken"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  out (optional) <emphasis role="italic">doorToken</emphasis> - token of the door
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/AccessPoint/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-14.10">
              <para>
                ONVIF client invokes <emphasis role="bold">SetAccessPoint</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPoint.token := <emphasis role="italic">accssPointToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Description := "Test Description"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaFrom := <emphasis role="italic">areaToken1</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-14.GetAreaToken"/>, otherwise skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaTo := <emphasis role="italic">areaToken2</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-14.GetAreaToken"/>, otherwise skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.EntityType := "tdc:Door" if door token was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-14.GetDoorToken"/>, otherwise value taken from UI.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Entity := <emphasis role="italic">doorToken</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-14.GetDoorToken"/>, otherwise value taken from UI.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.DisableAccessPoint := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.Duress := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AnonymousAccess := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AccessTaken := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.ExternalAuthorization := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedRecognitionTypes skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.IdentifierAccess := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedSecurityLevels  skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AuthenticationProfileToken skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetAccessPointResponse</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/AccessPoint/Changed</emphasis> event for the specified AccessPoint token by following the procedure mentioned in <xref linkend="Annex_HelperPullAccessPointChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - Access Point token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an access point by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointList</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-14.15">
              <para>
                If <emphasis role="italic">accessPointList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-14.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-14.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an access point info by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-14.17">
              <para>
                If <emphasis role="italic">accessPointInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-14.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-14.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete access point information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-14.19">
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not have AccessPointInfo[token = <emphasis role="italic">accessPointToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-14.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-14.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList2</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-14.21">
              <para>
                If <emphasis role="italic">accessPointCompleteList2</emphasis> does not have AccessPoint[token = <emphasis role="italic">accessPointToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-14.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-14.24"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-14.24">
              <para>
                ONVIF Client deletes the access point by following the procedure mentioned in <xref linkend="Annex_HelperDeleteAccessPoint"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores access point deleted at step <xref linkend="tc.ACCESSCONTROL-14-1-14.5"/> if any.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes door created at step <xref linkend="tc.ACCESSCONTROL-14-1-14.GetDoorToken"/> if any.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes areas created at step <xref linkend="tc.ACCESSCONTROL-14-1-14.GetAreaToken"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>

            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateAccessPointResponse</emphasis> message.
              </para>
            </listitem>



          </itemizedlist>
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-14-1-14.15"/>, <xref linkend="tc.ACCESSCONTROL-14-1-14.21"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPoint:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            IdentifierAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AuthenticationProfileToken
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>

        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-14-1-14.17"/>, <xref linkend="tc.ACCESSCONTROL-14-1-14.19"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPoint:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            IdentifierAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-15 CREATE NEW ACCESS POINT WITH SET DOOR (ACCESS POINT CAPABILITIES FALSE)-->
      <section xml:id="tc.ACCESSCONTROL-14-1-15">
        <title>CREATE NEW ACCESS POINT WITH SET ACCESS POINT (ACCESS POINT CAPABILITIES FALSE)</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-15
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SetAccessPoint command (ONVIF Access Control Service Specification), AccessPoint (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, door.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of access point using SetAccessPoint command and generating of appropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Event Service was received from the DUT.
          The DUT shall have enough free storage capacity for one additional access point.
          Client Supplied Token is supported by the DUT as indicated by ClientSuppliedTokenSupported capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-15.4">
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">accssPointToken</emphasis> := token that differs from tokens listed in <emphasis role="italic">accessPointCompleteList1</emphasis>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-15.5">
              <para>
                ONVIF Client checks free storage for additional access point by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">accessPointToRestore</emphasis> - deleted access point
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If Door Control Service is supported by the DUT
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client gets the Door Control service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorControlServiceCapabilities"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">cap</emphasis>.MaxDoors >0 or skipped:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="2.5em"?>
                        <listitem  xml:id="tc.ACCESSCONTROL-14-1-15.GetDoorToken" xreflabel ="6.2.1">
                          <para>
                            ONVIF Client retrieves references to a Door existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorToken"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  out (optional) <emphasis role="italic">doorToken</emphasis> - token of the door
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/AccessPoint/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-15.10">
              <para>
                ONVIF client invokes <emphasis role="bold">SetAccessPoint</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPoint.token := <emphasis role="italic">accssPointToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Description skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaFrom skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaTo skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.EntityType := "tdc:Door" if door token was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-15.GetDoorToken"/>, otherwise value taken from UI.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Entity := <emphasis role="italic">doorToken</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-15.GetDoorToken"/>, otherwise value taken from UI.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.DisableAccessPoint := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.Duress := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AnonymousAccess := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AccessTaken := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.ExternalAuthorization := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedRecognitionTypes skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.IdentifierAccess := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedSecurityLevels  skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AuthenticationProfileToken skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">SetAccessPointResponse</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/AccessPoint/Changed</emphasis> event for the specified AccessPoint token by following the procedure mentioned in <xref linkend="Annex_HelperPullAccessPointChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - Access Point token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an access point by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointList</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-15.15">
              <para>
                If <emphasis role="italic">accessPointList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-15.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-15.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an access point info by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-15.17">
              <para>
                If <emphasis role="italic">accessPointInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-15.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-15.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete access point information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-15.19">
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not have AccessPointInfo[token = <emphasis role="italic">accessPointToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-15.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-15.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList2</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-15.21">
              <para>
                If <emphasis role="italic">accessPointCompleteList2</emphasis> does not have AccessPoint[token = <emphasis role="italic">accessPointToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-15.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-15.24"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-15.24">
              <para>
                ONVIF Client deletes the access point by following the procedure mentioned in <xref linkend="Annex_HelperDeleteAccessPoint"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores access point deleted at step <xref linkend="tc.ACCESSCONTROL-14-1-15.5"/> if any.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes door created at step <xref linkend="tc.ACCESSCONTROL-14-1-15.GetDoorToken"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>

            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateAccessPointResponse</emphasis> message.
              </para>
            </listitem>



          </itemizedlist>
        </para>

        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-14-1-15.15"/>, <xref linkend="tc.ACCESSCONTROL-14-1-15.21"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPoint:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            IdentifierAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AuthenticationProfileToken
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>

        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-14-1-15.17"/>, <xref linkend="tc.ACCESSCONTROL-14-1-15.19"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPoint:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            IdentifierAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-16 MODIFY ACCESS POINT WITH SET ACCESS POINT-->
      <section xml:id="tc.ACCESSCONTROL-14-1-16">
        <title>MODIFY ACCESS POINT WITH SET ACCESS POINT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-16
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SetAccessPoint command (ONVIF Access Control Service Specification), AccessPointInfo (ONVIF Access Control Service Specification), AccessPoint (ONVIF Access Control Service Specification), ModifyAccessPoint command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, door.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifying of access point using SetAccessPoint and generating of access point changed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis>  Access Control Service is received from the DUT. Event Service was received from the DUT.
          The DUT shall have enough free storage capacity for one additional access point.
          Client Supplied Token is supported by the DUT as indicated by ClientSuppliedTokenSupported capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-16.4">
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-16.5">
              <para>
                ONVIF Client checks free storage for additional access point by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">accessPointToRestore</emphasis> - deleted access point
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-16.GetAreaToken" xreflabel ="5">
              <para>
                ONVIF Client retrieves references to Areas existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaToken"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToken1</emphasis> - token of the 1st Area
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToken2</emphasis> - token of the 2nd Area
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If Door Control Service is supported by the DUT
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client gets the Door Control service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorControlServiceCapabilities"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">cap</emphasis>.MaxDoors >0 or skipped:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="2.5em"?>
                        <listitem  xml:id="tc.ACCESSCONTROL-14-1-16.GetDoorToken" xreflabel ="6.2.1">
                          <para>
                            ONVIF Client retrieves references to a Door existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorToken"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  out (optional) <emphasis role="italic">doorToken</emphasis> - token of the door
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates access point by following the procedure mentioned in <xref linkend="Annex_HelperCreateAccessPoint"/>  with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "Test Name1" -  Access Point Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in "Test Description1" - Access Point Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken1</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-16.GetAreaToken"/>, otherwise skipped - Area From Token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken2</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-16.GetAreaToken"/>, otherwise skipped - Area To Token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in "tdc:Door" if door token was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-16.GetDoorToken"/>, otherwise value taken from UI - Access Point Entity Type
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">doorToken</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-16.GetDoorToken"/>, otherwise value taken from UI - Access Point Entity Token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in false - Disable Access Point Capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in false - Access Point Duress Capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in false - Access Point Anonymous Access Capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in false - Access Point Access Taken Capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in false - Access Point External Authorization Capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in false - Access Point Identifier Access Capabilities
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointToken</emphasis> - Access Point Token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/AccessPoint/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-16.9">
              <para>
                ONVIF client invokes <emphasis role="bold">SetAccessPoint</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPoint.token := <emphasis role="italic">accessPointToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Name := "Test Name2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Description := "Test Description2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaFrom := <emphasis role="italic">areaToken2</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-16.GetAreaToken"/>, otherwise skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaTo := <emphasis role="italic">areaToken1</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-16.GetAreaToken"/>, otherwise skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.EntityType := "tdc:Door" if door token was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-16.GetDoorToken"/>, otherwise value taken from UI
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Entity := <emphasis role="italic">doorToken</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-16.GetDoorToken"/>, otherwise value taken from UI
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.DisableAccessPoint := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.Duress := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AnonymousAccess := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AccessTaken := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.ExternalAuthorization := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedRecognitionTypes skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.IdentifierAccess := true
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedSecurityLevels  skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AuthenticationProfileToken skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with empty <emphasis role="bold">SetAccessPointResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/AccessPoint/Changed</emphasis> event for the specified Access Point token by following the procedure mentioned in <xref linkend="Annex_HelperPullAccessPointChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-16.13">
              <para>
                ONVIF Client retrieves an access point by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointList</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-16.14">
              <para>
                If <emphasis role="italic">accessPointList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-16.9"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-16.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an access point info by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-16.16">
              <para>
                If <emphasis role="italic">accessPointInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-16.9"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-16.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete access point information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>

                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - access point info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-16.18">
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not have AccessPointInfo[token:= <emphasis role="italic">accessPointToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-16.9"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-16.21"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList2</emphasis> - access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-16.20">
              <para>
                If <emphasis role="italic">accessPointCompleteList2</emphasis> does not have AccessPoint[token = <emphasis role="italic">accessPointToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-14-1-16.9"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-14-1-16.21"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-16.21">
              <para>
                ONVIF Client deletes the access point by following the procedure mentioned in <xref linkend="Annex_HelperDeleteAccessPoint"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointToken</emphasis> - access point token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores access point deleted at step <xref linkend="tc.ACCESSCONTROL-14-1-16.5"/> if any.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes door created at step <xref linkend="tc.ACCESSCONTROL-14-1-16.GetDoorToken"/> if any.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes areas created at step <xref linkend="tc.ACCESSCONTROL-14-1-16.GetAreaToken"/> if any.
              </para>
            </listitem>

          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>


            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">ModifyAccessPointResponse</emphasis> message.
              </para>
            </listitem>


          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-14-1-16.14"/>, <xref linkend="tc.ACCESSCONTROL-14-1-16.20"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPoint:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            IdentifierAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AuthenticationProfileToken
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>

        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-14-1-16.16"/>, <xref linkend="tc.ACCESSCONTROL-14-1-16.18"/>:
          <itemizedlist>
            <listitem>
              <para>
                AccessPoint:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaFrom
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AreaTo
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      EntityType
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Entity
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Capabilities
                      <itemizedlist>
                        <listitem>
                          <para>
                            DisableAccessPoint
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Duress
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AnonymousAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            AccessTaken
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            ExternalAuthorization
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedRecognitionTypes
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            IdentifierAccess
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            SupportedSecurityLevels
                          </para>
                        </listitem>

                      </itemizedlist>
                    </para>
                  </listitem>
                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-14-1-17 SET ACCESS POINT - EMPTY ACCESS POINT TOKEN-->
      <section xml:id="tc.ACCESSCONTROL-14-1-17">
        <title>SET ACCESS POINT - EMPTY ACCESS POINT TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-14-1-17
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SetAccessPoint command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetAccessPoint
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, door.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify SetAccessPoint command with empty access point token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT.
          The DUT shall have enough free storage capacity for one additional access point.
          Client Supplied Token is supported by the DUT as indicated by ClientSuppliedTokenSupported capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-17.4">
              <para>
                ONVIF Client retrieves a complete list of access points by following the procedure mentioned in <xref linkend="Annex_HelperGetAccessPointList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-17.5">
              <para>
                ONVIF Client checks free storage for additional access point by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForAccessPoint"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">accessPointCompleteList1</emphasis> - complete access point list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">accessPointToRestore</emphasis> - deleted access point
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If Door Control Service is supported by the DUT
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client gets the Door Control service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorControlServiceCapabilities"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">cap</emphasis>.MaxDoors >0 or skipped:
                      <orderedlist numeration="arabic" inheritnum="inherit">
                        <?dbfo label-width="2.5em"?>
                        <listitem  xml:id="tc.ACCESSCONTROL-14-1-17.GetDoorToken" xreflabel ="6.2.1">
                          <para>
                            ONVIF Client retrieves references to a Door existing on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorToken"/> with the following input and output parameters
                            <itemizedlist>
                              <listitem>
                                <para>
                                  out (optional) <emphasis role="italic">doorToken</emphasis> - token of the door
                                </para>
                              </listitem>
                            </itemizedlist>
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>

                </orderedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-14-1-17.10">
              <para>
                ONVIF client invokes <emphasis role="bold">SetAccessPoint</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPoint.token := ""
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Description skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaFrom skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AreaTo skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.EntityType := "tdc:Door" if door token was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-17.GetDoorToken"/>, otherwise value taken from UI.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Entity := <emphasis role="italic">doorToken</emphasis> if it was returned at step <xref linkend="tc.ACCESSCONTROL-14-1-17.GetDoorToken"/>, otherwise value taken from UI.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.DisableAccessPoint := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.Duress := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AnonymousAccess := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.AccessTaken := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.ExternalAuthorization := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedRecognitionTypes skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.IdentifierAccess := false
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.Capabilities.SupportedSecurityLevels  skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      AccessPoint.AuthenticationProfileToken skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores access point deleted at step <xref linkend="tc.ACCESSCONTROL-14-1-17.5"/> if any.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes door created at step <xref linkend="tc.ACCESSCONTROL-14-1-17.GetDoorToken"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
    </section>
    <!--Area Management-->
    <section xml:id="tc.area.management" xreflabel="Section 4.14">
      <title>Area Management</title>
      <!--ACCESSCONTROL-15-1-1-->
      <section xml:id="tc.ACCESSCONTROL-15-1-1">
        <title>GET AREAS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AreaInfo (ONVIF Access Control Service Specification), Area (ONVIF Access Control Service Specification), GetAreas command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAreas
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Areas.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of Areas (out <emphasis role="italic">areaCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-1.6">
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">areaCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAreas</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAreasResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Area list =: <emphasis role="italic">areaList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaList1</emphasis> does not contain Area item for each token from <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaList1</emphasis> contains at least two Area items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaList1</emphasis> contains other Area items than listed in <emphasis role="italic">tokenList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each Area.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">areaCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAreas</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Token[0] := <emphasis role="italic">token</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAreasResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Area list =: <emphasis role="italic">areaList2</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">areaList2</emphasis> does not contain only one Area item with token equal to <emphasis role="italic">token</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem xml:id="tc.ACCESSCONTROL-15-1-1.12.4"
                            xreflabel="12.4">
                    <para>
                      If <emphasis role="italic">areaList2</emphasis>[0] item does not have equal field values to <emphasis role="italic">areaCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAreasResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> If number of items in <emphasis role="italic">areaCompleteList</emphasis> is less than <emphasis role="italic">cap</emphasis>.MaxLimit, then all <emphasis role="italic">areaCompleteList</emphasis>.Token items shall be used for the step <xref linkend="tc.ACCESSCONTROL-15-1-1.6"/>.
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.ACCESSCONTROL-15-1-1.12.4"/>:
          <itemizedlist>
            <listitem>
              <para>
                Area:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-15-1-2-->
      <section xml:id="tc.ACCESSCONTROL-15-1-2">
        <title>GET AREA LIST - LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-2
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AreaInfo (ONVIF Access Control Service Specification), Area (ONVIF Access Control Service Specification), GetAreaList command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAreaList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Area List using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAreaList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := 1
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAreaListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area list =: <emphasis role="italic">areaList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaList1</emphasis> contains more area items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAreaList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAreaListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area list =: <emphasis role="italic">areaList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaList2</emphasis> contains more Area items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAreaList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAreaListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area list =: <emphasis role="italic">areaList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaList3</emphasis> contains more Area items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAreaListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-15-1-3-->
      <section xml:id="tc.ACCESSCONTROL-15-1-3">
        <title>GET AREA LIST - START REFERENCE AND LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-3
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AreaInfo (ONVIF Access Control Service Specification), Area (ONVIF Access Control Service Specification), GetAreaList command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAreaList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Area List using StartReference and Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAreaList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAreaListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area list =: <emphasis role="italic">areaCompleteList1</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList1</emphasis> contains more Area items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAreaList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">cap</emphasis>.MaxLimit
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAreaListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Area list =: <emphasis role="italic">areaListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">areaListPart</emphasis> contains more Area items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">areaCompleteList1</emphasis> := <emphasis role="italic">areaCompleteList1</emphasis> + <emphasis role="italic">areaListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList1</emphasis> contains at least two Area items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 1, do the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of areas info (out <emphasis role="italic">areaInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAreaInfoList"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">areaCompleteList1</emphasis> does not contain all areas from <emphasis role="italic">areaInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">areaCompleteList1</emphasis> contains areas other than areas from <emphasis role="italic">areaInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each AreaInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">areaInfoCompleteList</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic"
                                   inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem xml:id="tc.ACCESSCONTROL-15-1-3.9.4.1" xreflabel="9.4.1">
                          <para>
                            If <emphasis role="italic">areaCompleteList1</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">areaInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAreaList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := 1
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAreaListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area list =: <emphasis role="italic">areaCompleteList2</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList2</emphasis> contains more Area items than 1, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAreaList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := 1
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAreaListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Area list =: <emphasis role="italic">areaListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">areaListPart</emphasis> contains more Area items than 1, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">areaCompleteList2</emphasis> := <emphasis role="italic">areaCompleteList2</emphasis> + <emphasis role="italic">areaListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList2</emphasis> contains at least two Area items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList2</emphasis> does not contain all areas from <emphasis role="italic">areaCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList2</emphasis> contains areas other than areas from <emphasis role="italic">areaCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is equal to 2 do the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client retrieves a complete list of areas info (out <emphasis role="italic">areaInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAreaInfoList"/>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">areaCompleteList2</emphasis> does not contain all areas from <emphasis role="italic">areaInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">areaCompleteList2</emphasis> contains areas other than areas from <emphasis role="italic">areaInfoCompleteList</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      For each AreaInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">areaInfoCompleteList</emphasis> repeat the following steps:
                      <orderedlist numeration="arabic"
                                   inheritnum="inherit">
                        <?dbfo label-width="3.5em"?>
                        <listitem xml:id="tc.ACCESSCONTROL-15-1-3.17.4.1" xreflabel="17.4.1">
                          <para>
                            If <emphasis role="italic">areaCompleteList2</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">areaInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                          </para>
                        </listitem>
                      </orderedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">limit</emphasis> := [number between 1 and <emphasis role="italic">cap</emphasis>.MaxLimit]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAreaList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit := <emphasis role="italic">limit</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAreaListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area list =: <emphasis role="italic">areaCompleteList3</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList3</emphasis> contains more Area items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAreaList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit := <emphasis role="italic">limit</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAreaListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Area list =: <emphasis role="italic">areaListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">areaListPart</emphasis> contains more Area items than <emphasis role="italic">limit</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">areaCompleteList3</emphasis> := <emphasis role="italic">areaCompleteList3</emphasis> + <emphasis role="italic">areaListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList3</emphasis> contains at least two Area items with equal token, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList3</emphasis> does not contain all areas from <emphasis role="italic">areaCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList3</emphasis> contains areas other than areas from <emphasis role="italic">areaCompleteList1</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas info (out <emphasis role="italic">areaInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAreaInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList3</emphasis> does not contain all areas from <emphasis role="italic">areaInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList3</emphasis> contains areas other than areas from <emphasis role="italic">areaInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each AreaInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">areaInfoCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem xml:id="tc.ACCESSCONTROL-15-1-3.29.1"
                            xreflabel="29.1">
                    <para>
                      If <emphasis role="italic">areaCompleteList3</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">areaInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAreaListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.ACCESSCONTROL-15-1-3.9.4.1"/>, <xref linkend="tc.ACCESSCONTROL-15-1-3.17.4.1"/>, and <xref linkend="tc.ACCESSCONTROL-15-1-3.29.1"/>:
          <itemizedlist>
            <listitem>
              <para>
                AreaInfo:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>

                </itemizedlist>

              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-15-1-4-->
      <section xml:id="tc.ACCESSCONTROL-15-1-4">
        <title>GET AREA LIST - NO LIMIT</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-4
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AreaInfo (ONVIF Access Control Service Specification), Area (ONVIF Access Control Service Specification), GetAreaList command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAreaList
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Area List without using Limit.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAreaList</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Limit skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      StartReference skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAreaListResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area list =: <emphasis role="italic">areaCompleteList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList</emphasis> contains more Area items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">GetAreaList</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            Limit skipped
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            StartReference := <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">GetAreaListResponse</emphasis> message with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            Area list =: <emphasis role="italic">areaListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">areaListPart</emphasis> contains more Area items than <emphasis role="italic">cap</emphasis>.MaxLimit, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Set the following:
                      <itemizedlist>
                        <listitem>
                          <para>
                            <emphasis role="italic">areaCompleteList</emphasis> := <emphasis role="italic">areaCompleteList</emphasis> + <emphasis role="italic">areaListPart</emphasis>
                          </para>
                        </listitem>
                      </itemizedlist>

                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList</emphasis> contains at least two area items with equal token, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas (out <emphasis role="italic">areaInfoCompleteList</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAreaInfoList"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList</emphasis> does not contain all areas from <emphasis role="italic">areaInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList</emphasis> contains areas other than areas from <emphasis role="italic">areaInfoCompleteList</emphasis>, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                For each AreaInfo.token <emphasis role="italic">token</emphasis> from <emphasis role="italic">areaInfoCompleteList</emphasis> repeat the following steps:
                <orderedlist numeration="arabic"
                             inheritnum="inherit">
                  <?dbfo label-width="2.5em"?>
                  <listitem xml:id="tc.ACCESSCONTROL-15-1-4.12.1"
                            xreflabel="12.1">
                    <para>
                      If <emphasis role="italic">areaCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item does not have equal field values to <emphasis role="italic">areaInfoCompleteList</emphasis>[token = <emphasis role="italic">token</emphasis>] item, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAreaListResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at step <xref linkend="tc.ACCESSCONTROL-15-1-4.12.1"/>:
          <itemizedlist>
            <listitem>
              <para>
                token
              </para>
            </listitem>
            <listitem>
              <para>
                Name
              </para>
            </listitem>
            <listitem>
              <para>
                Description
              </para>
            </listitem>

          </itemizedlist>

        </para>
      </section>
      <!--ACCESSCONTROL-15-1-5 CREATE AREA-->
      <section xml:id="tc.ACCESSCONTROL-15-1-5">
        <title>CREATE AREA</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-5
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreateArea command (ONVIF Access Control Service Specification), Area (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateArea
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of area and generating of area changed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Event Service was received from the DUT.
          The DUT shall have enough free storage capacity for one additional area. Area Management is supported by the DUT as indicated by AreaManagementSupported  capability.
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-5.4">
              <para>
                ONVIF Client checks free storage for additional area by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForArea"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToRestore</emphasis> - deleted area
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Area/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-5.10">
              <para>
                ONVIF client invokes <emphasis role="bold">CreateArea</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Area.token := ""
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Description := "Test Description"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">CreateAreaResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token =: <emphasis role="italic">areaToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Area/Changed</emphasis> event for the specified Area token by following the procedure mentioned in <xref linkend="Annex_HelperPullAreaChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - Area token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an area by following the procedure mentioned in <xref linkend="Annex_HelperGetArea"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaList</emphasis> - area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-5.15">
              <para>
                If <emphasis role="italic">areaList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-5.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-5.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an area info by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaInfoList</emphasis> - area info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-5.17">
              <para>
                If <emphasis role="italic">areaInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-5.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-5.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete area information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAreaInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaInfoCompleteList</emphasis> - area info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-5.19">
              <para>
                If <emphasis role="italic">areaInfoCompleteList</emphasis> does not have AreaInfo[token = <emphasis role="italic">areaToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-5.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-5.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaCompleteList2</emphasis> - area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-5.21">
              <para>
                If <emphasis role="italic">areaCompleteList2</emphasis> does not have Area[token = <emphasis role="italic">areaToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-5.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-5.24"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-5.24">
              <para>
                ONVIF Client deletes the area by following the procedure mentioned in <xref linkend="Annex_HelperDeleteArea"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores area deleted at step <xref linkend="tc.ACCESSCONTROL-15-1-5.4"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateAreaResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-15-1-5.15"/>, <xref linkend="tc.ACCESSCONTROL-15-1-5.17"/>, <xref linkend="tc.ACCESSCONTROL-15-1-5.19"/>, and <xref linkend="tc.ACCESSCONTROL-15-1-5.21"/>:
          <itemizedlist>
            <listitem>
              <para>
                Area:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-15-1-6 MODIFY AREA-->
      <section xml:id="tc.ACCESSCONTROL-15-1-6">
        <title>MODIFY AREA</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-6
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> ModifyArea command (ONVIF Access Control Service Specification), Area (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ModifyArea
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifying of area and generating of area changed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Event Service was received from the DUT.
          The DUT shall have enough free storage capacity for one additional area. Area Management is supported by the DUT as indicated by AreaManagementSupported  capability.
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-6.4">
              <para>
                ONVIF Client checks free storage for additional area by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForArea"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToRestore</emphasis> - deleted area
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates an area by following the procedure mentioned in <xref linkend="Annex_HelperCreateArea"/>  with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "Test Name1" -  Access Point Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in "Test Description1" - Access Point Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaToken</emphasis> - area Token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Area/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-6.10">
              <para>
                ONVIF client invokes <emphasis role="bold">ModifyArea</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Area.token := <emphasis role="italic">areaToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Name := "Test Name2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Description := "Test Description2"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with empty <emphasis role="bold">ModifyAreaResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Area/Changed</emphasis> event for the specified Area token by following the procedure mentioned in <xref linkend="Annex_HelperPullAreaChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - Area token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an area by following the procedure mentioned in <xref linkend="Annex_HelperGetArea"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaList</emphasis> - area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-6.15">
              <para>
                If <emphasis role="italic">areaList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-6.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-6.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an area info by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaInfoList</emphasis> - area info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-6.17">
              <para>
                If <emphasis role="italic">areaInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-6.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-6.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete area information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAreaInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaInfoCompleteList</emphasis> - area info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-6.19">
              <para>
                If <emphasis role="italic">areaInfoCompleteList</emphasis> does not have AreaInfo[token = <emphasis role="italic">areaToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-6.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-6.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaCompleteList2</emphasis> - area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-6.21">
              <para>
                If <emphasis role="italic">areaCompleteList2</emphasis> does not have Area[token = <emphasis role="italic">areaToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-6.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-6.24"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-6.24">
              <para>
                ONVIF Client deletes the area by following the procedure mentioned in <xref linkend="Annex_HelperDeleteArea"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores area deleted at step <xref linkend="tc.ACCESSCONTROL-15-1-6.4"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateAreaResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-15-1-6.15"/>, <xref linkend="tc.ACCESSCONTROL-15-1-6.17"/>, <xref linkend="tc.ACCESSCONTROL-15-1-6.19"/>, and <xref linkend="tc.ACCESSCONTROL-15-1-6.21"/>:
          <itemizedlist>
            <listitem>
              <para>
                Area:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-15-1-7 DELETE AREA-->
      <section xml:id="tc.ACCESSCONTROL-15-1-7">
        <title>DELETE AREA</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-7
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DeleteArea command (ONVIF Access Control Service Specification), Area (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteArea
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifying of area and generating of area removed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Event Service was received from the DUT.
          The DUT shall have enough free storage capacity for one additional area. Area Management is supported by the DUT as indicated by AreaManagementSupported  capability.
          Device supports Pull-Point Notification feature.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-7.4">
              <para>
                ONVIF Client checks free storage for additional area by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForArea"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToRestore</emphasis> - deleted area
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates an area by following the procedure mentioned in <xref linkend="Annex_HelperCreateArea"/>  with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "Test Name" -  Access Point Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaToken</emphasis> - area Token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Area/Removed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-7.10">
              <para>
                ONVIF client invokes <emphasis role="bold">DeleteArea</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Area.token := <emphasis role="italic">areaToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with empty <emphasis role="bold">DeleteAreaResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Area/Removed</emphasis> event for the specified Area token by following the procedure mentioned in <xref linkend="Annex_HelperPullAreaRemoved"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - Area token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an area by following the procedure mentioned in <xref linkend="Annex_HelperGetArea"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaList</emphasis> - area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-7.15">
              <para>
                If <emphasis role="italic">areaList</emphasis> list is not empty, FAIL the test and restore the DUT settings.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an area info by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaInfoList</emphasis> - area info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-7.17">
              <para>
                If <emphasis role="italic">areaInfoList</emphasis> list is not empty, FAIL the test and restore the DUT settings.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete area information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAreaInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaInfoCompleteList</emphasis> - area info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-7.19">
              <para>
                If <emphasis role="italic">areaInfoCompleteList</emphasis> contains AreaInfo[token = <emphasis role="italic">areaToken</emphasis>] item, FAIL the test  and restore the DUT settings.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaCompleteList2</emphasis> - area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-7.21">
              <para>
                If <emphasis role="italic">areaCompleteList2</emphasis> contains Area[token = <emphasis role="italic">areaToken</emphasis>] item, FAIL the test and restore the DUT settings.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores area deleted at step <xref linkend="tc.ACCESSCONTROL-15-1-7.4"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">DeleteAreaResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-15-1-8 GET AREAS WITH INVALID TOKEN-->
      <section xml:id="tc.ACCESSCONTROL-15-1-8">
        <title>GET AREAS WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-8
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis>GetAreas command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAreas
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Areas with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAreaInfoList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaInfoCompleteList</emphasis> - complete area info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">areaInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAreas</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token[0] := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAreasResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Area list =: <emphasis role="italic">areaList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaList</emphasis> is not empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaInfoCompleteList</emphasis> is empty, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - access control capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">cap</emphasis>.MaxLimit is less than 2, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAreas</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token[0] := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Token[1] := <emphasis role="italic">areaInfoCompleteList</emphasis>[0].token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">GetAreasResponse</emphasis> message with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AreaInfo list =: <emphasis role="italic">areaList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaList</emphasis> is empty, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaList</emphasis> contains more than one item, FAIL the test.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaList</emphasis>[0].token does not equal to <emphasis role="italic">areaInfoCompleteList</emphasis>[0].token, FAIL the test.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">GetAreasResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-15-1-9 GET AREAS - TOO MANY ITEMS-->
      <section xml:id="tc.ACCESSCONTROL-15-1-9">
        <title>GET AREAS - TOO MANY ITEMS</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-9
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> GetAreas command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> GetAreas
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Get Areas if there are more items than MaxLimit in request.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaCompleteList</emphasis> - complete area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client gets the service capabilities by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">cap</emphasis> - access control capabilities
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">areaCompleteList</emphasis>.token items number is less than <emphasis role="italic">cap</emphasis>.MaxLimit or equal to <emphasis role="italic">cap</emphasis>.MaxLimit, skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">tokenList</emphasis> := [subset of <emphasis role="italic">areaCompleteList</emphasis>.token values with items number equal to <emphasis role="italic">cap</emphasis>.MaxLimit + 1]
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">GetAreas</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token list := <emphasis role="italic">tokenList</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgs\ter:TooManyItems</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-15-1-10 CREATE AREA - NOT EMPTY AREA TOKEN-->
      <section xml:id="tc.ACCESSCONTROL-15-1-10">
        <title>CREATE AREA - NOT EMPTY AREA TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-10
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> CreateArea command (ONVIF Access Control Service Specification), Area (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> CreateArea
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> Create Area with not Empty Token Verification.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. The DUT shall have enough free storage capacity for one additional area. Area Management is supported by the DUT as indicated by AreaManagementSupported  capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-10.4">
              <para>
                ONVIF Client checks free storage for additional area by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForArea"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToRestore</emphasis> - deleted area
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>

            <listitem xml:id="tc.ACCESSCONTROL-15-1-10.10">
              <para>
                ONVIF client invokes <emphasis role="bold">CreateArea</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Area.token := "AreaToken"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Description := "Test Description"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT sends <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores area deleted at step <xref linkend="tc.ACCESSCONTROL-15-1-10.4"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">CreateAreaResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-15-1-11 MODIFY AREA WITH INVALID TOKEN-->
      <section xml:id="tc.ACCESSCONTROL-15-1-11">
        <title>MODIFY AREA WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-11
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> AreaInfo (ONVIF Access Control Service Specification), Area (ONVIF Access Control Service Specification), ModifyArea command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> ModifyArea
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, door.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifying of area with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of area info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAreaInfoList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaInfoCompleteList</emphasis> - complete area info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">areaInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">ModifyArea</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Area.token := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Description skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-15-1-12 DELETE AREA WITH INVALID TOKEN-->
      <section xml:id="tc.ACCESSCONTROL-15-1-12">
        <title>DELETE AREA WITH INVALID TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-12
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> DeleteArea command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> DeleteArea
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify deleting of area with invalid token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of area info by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaInfoCompleteList</emphasis> - complete area info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set the following:
                <itemizedlist>
                  <listitem>
                    <para>
                      <emphasis role="italic">invalidToken</emphasis> := value not equal to any <emphasis role="italic">areaInfoCompleteList</emphasis>.token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client invokes <emphasis role="bold">DeleteArea</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Token := <emphasis role="italic">invalidToken</emphasis>
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT returns <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault.

              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">env:Sender\ter:InvalidArgVal\ter:NotFound</emphasis> SOAP 1.2 fault
              </para>
            </listitem>
          </itemizedlist>
        </para>

      </section>
      <!--ACCESSCONTROL-15-1-13 CREATE NEW AREA WITH SET AREA-->
      <section xml:id="tc.ACCESSCONTROL-15-1-13">
        <title>CREATE NEW AREA WITH SET AREA</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-13
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SetArea command (ONVIF Access Control Service Specification), Area (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetArea
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify creation of area using SetArea command and generating of appropriate notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Event Service was received from the DUT.
          The DUT shall have enough free storage capacity for one additional area.
          Client Supplied Token is supported by the DUT as indicated by ClientSuppliedTokenSupported capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                Set <emphasis role="italic">areaToken</emphasis> := token that differs from tokens listed in <emphasis role="italic">areaCompleteList1</emphasis>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-13.5">
              <para>
                ONVIF Client checks free storage for additional area by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForArea"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToRestore</emphasis> - deleted area
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Area/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-13.10">
              <para>
                ONVIF client invokes <emphasis role="bold">SetArea</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Area.token := <emphasis role="italic">areaToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Description := "Test Description"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with empty <emphasis role="bold">SetAreaResponse</emphasis> message
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Area/Changed</emphasis> event for the specified Area token by following the procedure mentioned in <xref linkend="Annex_HelperPullAreaChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - Area token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an area by following the procedure mentioned in <xref linkend="Annex_HelperGetArea"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaList</emphasis> - area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-13.15">
              <para>
                If <emphasis role="italic">areaList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-13.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-13.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an area info by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaInfoList</emphasis> - area info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-13.17">
              <para>
                If <emphasis role="italic">areaInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-13.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-13.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete area information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAreaInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaInfoCompleteList</emphasis> - area info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-13.19">
              <para>
                If <emphasis role="italic">areaInfoCompleteList</emphasis> does not have AreaInfo[token = <emphasis role="italic">areaToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-13.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-13.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaCompleteList2</emphasis> - area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-13.21">
              <para>
                If <emphasis role="italic">areaCompleteList2</emphasis> does not have Area[token = <emphasis role="italic">areaToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-13.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-13.24"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-13.24">
              <para>
                ONVIF Client deletes the area by following the procedure mentioned in <xref linkend="Annex_HelperDeleteArea"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores area deleted at step <xref linkend="tc.ACCESSCONTROL-15-1-13.5"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetAreaResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-15-1-13.15"/>, <xref linkend="tc.ACCESSCONTROL-15-1-13.17"/>, <xref linkend="tc.ACCESSCONTROL-15-1-13.19"/>, and <xref linkend="tc.ACCESSCONTROL-15-1-13.21"/>:
          <itemizedlist>
            <listitem>
              <para>
                Area:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-15-1-14 MODIFY AREA WITH SET AREA-->
      <section xml:id="tc.ACCESSCONTROL-15-1-14">
        <title>MODIFY AREA WITH SET AREA</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-14
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SetArea command (ONVIF Access Control Service Specification), Area (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetArea
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl, event.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify modifying of area using SetArea and generating of access point changed notifications.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Event Service was received from the DUT.
          The DUT shall have enough free storage capacity for one additional area.
          Client Supplied Token is supported by the DUT as indicated by ClientSuppliedTokenSupported capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-14.4">
              <para>
                ONVIF Client checks free storage for additional area by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForArea"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToRestore</emphasis> - deleted area
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates an area by following the procedure mentioned in <xref linkend="Annex_HelperCreateArea"/>  with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in "Test Name1" -  Access Point Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in "Test Description1" - Access Point Description
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaToken</emphasis> - area Token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="bold">tns1:Configuration/Area/Changed</emphasis> - Notification Topic
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-14.10">
              <para>
                ONVIF client invokes <emphasis role="bold">SetArea</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Area.token := <emphasis role="italic">areaToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Name := "Test Name2"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Description := "Test Description2"
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with empty <emphasis role="bold">SetAreaResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves and checks <emphasis role="bold">tns1:Configuration/Area/Changed</emphasis> event for the specified Area token by following the procedure mentioned in <xref linkend="Annex_HelperPullAreaChanged"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - Area token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">s</emphasis> - Subscription reference
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an area by following the procedure mentioned in <xref linkend="Annex_HelperGetArea"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaList</emphasis> - area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-14.15">
              <para>
                If <emphasis role="italic">areaList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-14.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-14.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves an area info by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaInfo"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaInfoList</emphasis> - area info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-14.17">
              <para>
                If <emphasis role="italic">areaInfoList</emphasis>[0] item does not have equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-14.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-14.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete area information list by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAreaInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaInfoCompleteList</emphasis> - area info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-14.19">
              <para>
                If <emphasis role="italic">areaInfoCompleteList</emphasis> does not have AreaInfo[token = <emphasis role="italic">areaToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-14.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-14.24"/>.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaCompleteList2</emphasis> - area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-14.21">
              <para>
                If <emphasis role="italic">areaCompleteList2</emphasis> does not have Area[token = <emphasis role="italic">areaToken</emphasis>] item with equal field values to values from step <xref linkend="tc.ACCESSCONTROL-15-1-14.10"/>, FAIL the test and go step <xref linkend="tc.ACCESSCONTROL-15-1-14.24"/>.
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-14.24">
              <para>
                ONVIF Client deletes the area by following the procedure mentioned in <xref linkend="Annex_HelperDeleteArea"/> to restore DUT configuration with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaToken</emphasis> - area token
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores area deleted at step <xref linkend="tc.ACCESSCONTROL-15-1-14.4"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetAreaResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">Note:</emphasis> The following fields are compared at steps <xref linkend="tc.ACCESSCONTROL-15-1-14.15"/>, <xref linkend="tc.ACCESSCONTROL-15-1-14.17"/>, <xref linkend="tc.ACCESSCONTROL-15-1-14.19"/>, and <xref linkend="tc.ACCESSCONTROL-15-1-14.21"/>:
          <itemizedlist>
            <listitem>
              <para>
                Area:
                <itemizedlist>
                  <listitem>
                    <para>
                      token
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Name
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Description
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>
      <!--ACCESSCONTROL-15-1-15 SET AREA - EMPTY AREA TOKEN-->
      <section xml:id="tc.ACCESSCONTROL-15-1-15">
        <title>SET AREA - EMPTY AREA TOKEN</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-15-1-15
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> SetArea command (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> SetArea
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify SetArea command with empty area token.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Event Service was received from the DUT.
          The DUT shall have enough free storage capacity for one additional area.
          Client Supplied Token is supported by the DUT as indicated by ClientSuppliedTokenSupported capability.
        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves a complete list of areas by following the procedure mentioned in <xref linkend="Annex_HelperGetAreaList"/> with the following output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-15.4">
              <para>
                ONVIF Client checks free storage for additional area by following the procedure mentioned in <xref linkend="Annex_HelperCheckFreeStorageForArea"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      in <emphasis role="italic">areaCompleteList1</emphasis> - complete area list
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      out (optional) <emphasis role="italic">areaToRestore</emphasis> - deleted area
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem xml:id="tc.ACCESSCONTROL-15-1-15.10">
              <para>
                ONVIF client invokes <emphasis role="bold">SetArea</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      Area.token := ""
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Name := "Test Name"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Area.Description skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">env:Sender\ter:InvalidArgVal</emphasis> SOAP 1.2 fault.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client restores area deleted at step <xref linkend="tc.ACCESSCONTROL-15-1-15.4"/> if any.
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                The DUT did not send <emphasis role="bold">SetAreaResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

    </section>
    <!--Feedback-->
    <section xml:id="tc.feedback" xreflabel="Section 4.15">
      <title>Feedback</title>
      <!--ACCESSCONTROL-16-1-1-->
      <section xml:id="tc.ACCESSCONTROL-16-1-1">
        <title>FEEDBACK</title>
        <para>
          <emphasis role="bold">Test Case ID:</emphasis> ACCESSCONTROL-16-1-1
        </para>
        <para>
          <emphasis role="bold">Specification Coverage:</emphasis> Feedback (ONVIF Access Control Service Specification)
        </para>
        <para>
          <emphasis role="bold">Feature Under Test:</emphasis> Feedback
        </para>
        <para>
          <emphasis role="bold">WSDL Reference:</emphasis> accesscontrol.wsdl
        </para>
        <para>
          <emphasis role="bold">Test Purpose:</emphasis> To verify Feedback command.
        </para>
        <para>
          <emphasis role="bold">Pre-Requisite:</emphasis> Access Control Service is received from the DUT. Feedback is supported by the DUT as indicated by SupportedFeedbackTypes capability. Pull Point is supported by the DUT.

        </para>
        <para>
          <emphasis role="bold">Test Configuration:</emphasis> ONVIF Client and DUT
        </para>
        <para>
          <emphasis role="bold">Test Procedure:</emphasis>
        </para>
        <para>
          <orderedlist>
            <?dbfo label-width="1.5em"?>
            <listitem>
              <para>
                Start an ONVIF Client.
              </para>
            </listitem>
            <listitem>
              <para>
                Start the DUT.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF Client retrieves complete list of access point info items by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAccessPointInfoList"/> with the following input and output parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      out <emphasis role="italic">accessPointInfoCompleteList</emphasis> - complete access points info list
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not contain at least one Access Point with non empty Capabilities.SupportedFeedbackTypes list, FAIL the test and skip other steps.
              </para>
            </listitem>
            <listitem>
              <para>
                If Feedback UI tab fields are filled
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width=2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client sets <emphasis role="italic">accessPointToken</emphasis> := value of Access Point token from UI tab.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF client sets <emphasis role="italic">feedbackType</emphasis> := value of Feedback Type from UI tab.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not contain item with token = <emphasis role="italic">accessPointToken</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If Access Point with token <emphasis role="italic">accessPointToken</emphasis> from <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not have Capabilities.SupportedFeedbackTypes list with <emphasis role="italic">feedbackType</emphasis> value, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                If Feedback UI tab fields are empty
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width=2.5em"?>
                  <listitem>
                    <para>
                      ONVIF client sets <emphasis role="italic">accessPointToken</emphasis> := token of the first AccessPoint from <emphasis role="italic">accessPointInfoCompleteList</emphasis> which has non empty Capabilities.SupportedFeedbackTypes list.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF client sets <emphasis role="italic">feedbackType</emphasis> := the first value of Feedback Type from Capabilities.SupportedFeedbackTypes of Access Point with token <emphasis role="italic">apToken</emphasis>.
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">Feedback</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPointToken  := <emphasis role="italic">accessPointToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FeedbackType := <emphasis role="italic">feedbackType</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      RecognitionType skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TextMessage skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">FeedbackResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                ONVIF client invokes <emphasis role="bold">Feedback</emphasis> with parameters
                <itemizedlist>
                  <listitem>
                    <para>
                      AccessPointToken  := <emphasis role="italic">accessPointToken</emphasis>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      FeedbackType := "pt:12345"
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      RecognitionType skipped
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      TextMessage skipped
                    </para>
                  </listitem>
                </itemizedlist>
              </para>
            </listitem>
            <listitem>
              <para>
                The DUT responds with <emphasis role="bold">FeedbackResponse</emphasis> message.
              </para>
            </listitem>
            <listitem>
              <para>
                If <emphasis role="italic">accessPointInfoCompleteList</emphasis> contains at least one Access Point with Capabilities.IdentifierAccess = true and with "RequireIdentifier" value in Capabilities.SupportedFeedbackTypes list
                <orderedlist numeration="arabic" inheritnum="inherit">
                  <?dbfo label-width=2.5em"?>
                  <listitem>
                    <para>
                      ONVIF Client creates PullPoint subscription for the specified topic by following the procedure mentioned in <xref linkend="Annex_HelperCreatePullPointSubscription"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in "tns1:AccessControl/Request/Identifier" - Notification Topic
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            out <emphasis role="italic">s</emphasis> - Subscription reference
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            out <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            out <emphasis role="italic">terminationTime</emphasis> - Subscription termination time
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Test Operator invokes <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for any Access Points with Capabilities.IdentifierAccess = true and with "RequireIdentifier" value in Capabilities.SupportedFeedbackTypes list.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullRequestIdentifier"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">s</emphasis> - Subscription reference
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            out <emphasis role="italic">accessPointToken</emphasis> - token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            out <emphasis role="italic">identifierType</emphasis> - Identifier Type value received in notification
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointInfoCompleteList</emphasis> does not contain item with <emphasis role="italic">accessPointToken</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF client sets <emphasis role="italic">accessPointInfo</emphasis> := item with token = <emphasis role="italic">accessPointToken</emphasis> from <emphasis role="italic">accessPointInfoCompleteList</emphasis>.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointInfo</emphasis> does not have Capabilities.IdentifierAccess = true, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointInfo</emphasis> does not have "RequireIdentifier" value in Capabilities.SupportedFeedbackTypes, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointInfo</emphasis> does not have Capabilities.SupportedRecognitionTypes with non empty list, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF client sets <emphasis role="italic">recognitionType</emphasis> := any value from <emphasis role="italic">accessPointInfo</emphasis>.Capabilities.SupportedRecognitionTypes list (differs from <emphasis role="italic">identifierType</emphasis> if possible).
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF client invokes <emphasis role="bold">Feedback</emphasis> with parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            AccessPointToken  := <emphasis role="italic">accessPointToken</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            FeedbackType := "RequireIdentifier"
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            RecognitionType := <emphasis role="italic">recognitionType</emphasis>
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            TextMessage skipped
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      The DUT responds with <emphasis role="bold">FeedbackResponse</emphasis> message.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      Test Operator invokes <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for Access Point with token = <emphasis role="italic">accessPointToken</emphasis> with recognition type requested in Feedback command.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client retrieves and checks <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> event for the specified credential identifiers by following the procedure mentioned in <xref linkend="Annex_HelperPullRequestIdentifier"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">s</emphasis> - Subscription reference
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">currentTime</emphasis> - current time for the DUT
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            in <emphasis role="italic">terminationTime</emphasis> - subscription termination time
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            out <emphasis role="italic">accessPointToken1</emphasis> - token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved
                          </para>
                        </listitem>
                        <listitem>
                          <para>
                            out <emphasis role="italic">identifierType</emphasis> - Identifier Type value received in notification
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">accessPointToken1</emphasis> != <emphasis role="italic">accessPointToken</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      If <emphasis role="italic">identifierType</emphasis> != <emphasis role="italic">recognitionType</emphasis>, FAIL the test and skip other steps.
                    </para>
                  </listitem>
                  <listitem>
                    <para>
                      ONVIF Client deletes PullPoint subscription by following the procedure mentioned in <xref linkend="Annex_HelperDeleteSubscription"/> with the following input and output parameters
                      <itemizedlist>
                        <listitem>
                          <para>
                            in <emphasis role="italic">s</emphasis> - Subscription reference
                          </para>
                        </listitem>
                      </itemizedlist>
                    </para>
                  </listitem>
                </orderedlist>
              </para>
            </listitem>
          </orderedlist>
        </para>
        <para>
          <emphasis role="bold">Test Result:</emphasis>
        </para>
        <para>
          <emphasis role="bold">PASS –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT passes all assertions.
              </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          <emphasis role="bold">FAIL –</emphasis>
          <itemizedlist>
            <listitem>
              <para>
                DUT did not send <emphasis role="bold">FeedbackResponse</emphasis> message.
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </section>

    </section>

  </chapter>
  <appendix>
    <title>Helper Procedures and Additional Notes</title>
    <!--A.1 Get Complete Access Point Info List-->
    <section xml:id="Annex_HelperGetCompleteAccessPointInfoList"
             xreflabel="Annex A.1">
      <title>Get Complete Access Point Info List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetCompleteAccessPointInfoList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve complete access points info list.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service was received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Complete access points info list (<emphasis role="italic">accessPointInfoCompleteList</emphasis>). Number of access points (<emphasis role="italic">accessPointsNumber</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">GetAccessPointInfoList</emphasis> with parameters<itemizedlist>
                <listitem>
                  <para>Limit is skipped</para>
                </listitem>
                <listitem>
                  <para>StartReference is skipped</para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message with parameters<itemizedlist>
                <listitem>
                  <para>
                    NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPointInfo list =: <emphasis role="italic">accessPointInfoCompleteList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
              <orderedlist numeration="arabic"
                           inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF client invokes <emphasis role="bold">GetAccessPointInfoList</emphasis> with parameters<itemizedlist>
                      <listitem>
                        <para>Limit is skipped</para>
                      </listitem>
                      <listitem>
                        <para>
                          StartReference := <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message with parameters<itemizedlist>
                      <listitem>
                        <para>
                          NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          AccessPointInfo list =: <emphasis role="italic">accessPointInfoListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set <emphasis role="italic">accessPointInfoCompleteList</emphasis> := <emphasis role="italic">accessPointInfoCompleteList</emphasis> + <emphasis role="italic">accessPointInfoListPart</emphasis>.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Set <emphasis role="italic">accessPointsNumber</emphasis> := number of AccessPointInfo items in <emphasis role="italic">accessPointInfoCompleteList</emphasis>.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT passed all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetAccessPointInfoListResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.2 Get Complete Area Info List-->
    <section xml:id="Annex_HelperGetCompleteAreaInfoList"
             xreflabel="Annex A.2">
      <title>Get Complete Area Info List</title>
      <para>
        The following algorithm will be used to get a complete list of Areas:
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperGetCompleteAreaInfoList.1">
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetAreaInfoList</emphasis> request (no Limit, no StartReference) to retrieve the first part of Area Information list from the DUT.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperGetCompleteAreaInfoList.2">
            <para>
              Verify the <emphasis role="bold">GetAreaInfoListResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="bold">GetAreaInfoListResponse</emphasis> message contains NextStartReference, repeat steps <xref linkend="Annex_HelperGetCompleteAreaInfoList.1"/>-<xref linkend="Annex_HelperGetCompleteAreaInfoList.2"/> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting complete area list.
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        The complete ordered list of areas with information will be made by the means of uniting all <emphasis role="bold">GetAreaInfoListResponse</emphasis> messages. Also the total number of areas will be calculated.
      </para>
    </section>
    <!--A.3 Create Pull Point Subscription-->
    <section xml:id="Annex_HelperCreatePullPointSubscription"
             xreflabel="Annex A.3">
      <title>Create Pull Point Subscription</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreatePullPointSubscription
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create PullPoint Subscription with specified Topic.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Notification Topic (<emphasis role="italic">topic</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>), subscription termination time (<emphasis role="italic">tt</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">CreatePullPointSubscription</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Filter.TopicExpression := <emphasis role="italic">topic</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Filter.TopicExpression.@Dialect := "http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet"
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    SubscriptionReference =: <emphasis role="italic">s</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    CurrentTime =: <emphasis role="italic">ct</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    TerminationTime =: <emphasis role="italic">tt</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">CreatePullPointSubscriptionResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.4 Delete Subscription-->
    <section xml:id="Annex_HelperDeleteSubscription"
             xreflabel="Annex A.4">
      <title>Delete Subscription</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteSubscription
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete supscribtion.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client sends an <emphasis role="bold">Unsubscribe</emphasis> to the subscription endpoint s.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">UnsubscribeResponse</emphasis> message.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">UnsubscribeResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.5 Retrieve CredentialNotFound Event by PullPoint-->
    <section xml:id="Annex_HelperPullDeniedCredentialNotFound"
             xreflabel="Annex A.5">
      <title>Retrieve CredentialNotFound Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullDeniedCredentialNotFound
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:AccessControl/Denied/CredentialNotFound event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>),
        Subscription termination time (<emphasis role="italic">tt</emphasis>) and access points list (<emphasis role="italic">accessPointsList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullDeniedCredentialNotFound.1">
            <para>
              Until <emphasis role="italic">oprationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic"
                           inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty:
                    <orderedlist numeration="arabic"
                                 inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          If <emphasis role="italic">notification</emphasis>.Topic is not equal to <emphasis role="bold">tns1:AccessControl/Denied/CredentialNotFound</emphasis>, FAIL the test and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">notification</emphasis>.Message.Message does not have Source.SimpleItem with Name = "AccessPointToken" and Value which is equal to one of AccessPointInfo.token attribute from <emphasis role="italic">accessPointsList</emphasis>, FAIL the test and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">notification</emphasis>.Message.Message does not have Data.SimpleItem with Name = "IdentifierType" and Value with type is equal to "xs:string", FAIL the test and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">notification</emphasis>.Message.Message does not have Data.SimpleItem with Name = "IdentifierValue" and Value with type is equal to "xs:hexBinary", FAIL the test and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Skip other steps and finish the procedure.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">oprationDelay</emphasis> timeout expires for step <xref linkend="Annex_HelperPullDeniedCredentialNotFound.1"/> without
                    Notification, FAIL the test and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">oprationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.6 Retrieve Access Granted Identifier Event by PullPoint-->
    <section xml:id="Annex_HelperPullAccessGrantedIdentifier"
             xreflabel="Annex A.6">
      <title>Retrieve Access Granted Identifier Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullAccessGrantedIdentifier
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:AccessControl/AccessGranted/Identifier event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>). Current time for the DUT (<emphasis role="italic">ct</emphasis>).
        Subscription termination time (<emphasis role="italic">tt</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Access Granted Identifier Notification Message (optional) (<emphasis role="italic">accessGrantedIdentifierNotification</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullAccessGrantedIdentifier.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic"
                           inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty:
                    <orderedlist numeration="arabic"
                                 inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">message</emphasis> := <emphasis role="italic">notificationMessageList</emphasis>[0].Topic.Message.Message.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis> contains PropertyOperation attribute, FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source does not contain SimpleItem item with Name = "AccessPointToken", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "AccessPointToken" does not have Value value with type "pt:ReferenceToken", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "IdentifierType", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "IdentifierType" does not have Value value with type "xs:string", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "FormatType", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "FormatType" does not have Value value with type "xs:string", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "IdentifierValue", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "IdentifierValue" does not have Value value with type "xs:hexBinary", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Skip other steps of the procedure and return <emphasis role="italic">message</emphasis>.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <xref linkend="Annex_HelperPullAccessGrantedIdentifier.1"/> and no notifications were recieved, FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.7 Retrieve Denied Identifier Event by PullPoint-->
    <section xml:id="Annex_HelperPullDeniedIdentifier"
             xreflabel="Annex A.7">
      <title>Retrieve Denied Identifier Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullDeniedIdentifier
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:AccessControl/Denied/Identifier event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>). Current time for the DUT (<emphasis role="italic">ct</emphasis>).
        Subscription termination time (<emphasis role="italic">tt</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullDeniedIdentifier.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic"
                           inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty:
                    <orderedlist numeration="arabic"
                                 inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">message</emphasis> := <emphasis role="italic">notificationMessageList</emphasis>[0].Topic.Message.Message.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis> contains PropertyOperation attribute, FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source does not contain SimpleItem item with Name = "AccessPointToken", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "AccessPointToken" does not have Value value with type "pt:ReferenceToken", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "IdentifierType", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "IdentifierType" does not have Value value with type "xs:string", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "FormatType", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "FormatType" does not have Value value with type "xs:string", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "IdentifierValue", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "IdentifierValue" does not have Value value with type "xs:hexBinary", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "Reason", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "Reason" does not have Value value with type "xs:string", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Skip other steps of the procedure.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <xref linkend="Annex_HelperPullDeniedIdentifier.1"/> and no notifications were recieved, FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.8 Retrieve Request Identifier Event by PullPoint-->
    <section xml:id="Annex_HelperPullRequestIdentifier"
             xreflabel="Annex A.8">
      <title>Retrieve Request Identifier Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullRequestIdentifier
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:AccessControl/Request/Identifier event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>). Current time for the DUT (<emphasis role="italic">ct</emphasis>).
        Subscription termination time (<emphasis role="italic">tt</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved (<emphasis role="italic">accessPointToken</emphasis>).
        (optional) Identifier Type value (<emphasis role="italic">identifierType</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullRequestIdentifier.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic"
                           inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty:
                    <orderedlist numeration="arabic"
                                 inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">message</emphasis> := <emphasis role="italic">notificationMessageList</emphasis>[0].Topic.Message.Message.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis> contains PropertyOperation attribute, FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source does not contain SimpleItem item with Name = "AccessPointToken", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "AccessPointToken" does not have Value value with type "pt:ReferenceToken", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "IdentifierType", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data.SimpleItem with Name = "IdentifierType" does not have Value value with type "xs:string", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "FormatType", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data.SimpleItem with Name = "FormatType" does not have Value value with type "xs:string", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "IdentifierValue", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data.SimpleItem with Name = "IdentifierValue" does not have Value value with type "xs:hexBinary", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Skip other steps of the procedure.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <xref linkend="Annex_HelperPullRequestIdentifier.1"/> and no notifications were recieved, FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.9 Retrieve Request Timeout Event by PullPoint-->
    <section xml:id="Annex_HelperPullRequestTimeout"
             xreflabel="Annex A.9">
      <title>Retrieve Request Timeout Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullRequestTimeout
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:AccessControl/Request/Timeout event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>). Current time for the DUT (<emphasis role="italic">ct</emphasis>).
        Subscription termination time (<emphasis role="italic">tt</emphasis>). Token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved (<emphasis role="italic">accessPointToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullRequestTimeout.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic"
                           inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty:
                    <orderedlist numeration="arabic"
                                 inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">message</emphasis> := <emphasis role="italic">notificationMessageList</emphasis>[0].Topic.Message.Message.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis> contains PropertyOperation attribute, FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source does not contain SimpleItem item with Name = "AccessPointToken", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "AccessPointToken" does not have Value = <emphasis role="italic">accessPointToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Skip other steps of the procedure.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <xref linkend="Annex_HelperPullRequestTimeout.1"/> and no notifications were recieved, FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.10 Retrieve AccessGranted Event by PullPoint for Identifier External Authorization-->
    <section xml:id="Annex_HelperPullExternalAuthAccessGrantedIdentifier"
             xreflabel="Annex A.10">
      <title>Retrieve AccessGranted Event by PullPoint for Identifier External Authorization</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullExternalAuthAccessGrantedIdentifier
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:AccessControl/AccessGranted/Anonymous or tns1:AccessControl/AccessGranted/Credential event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Topic to validate (<emphasis role="italic">topic</emphasis>)
        Subscription reference (<emphasis role="italic">s</emphasis>).
        Current time for the DUT (<emphasis role="italic">ct</emphasis>).
        Subscription termination time (<emphasis role="italic">tt</emphasis>).
        Token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved (<emphasis role="italic">accessPointToken</emphasis>).
        (optional) Token of Credential (<emphasis role="italic">credentialToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullExternalAuthAccessGrantedIdentifier.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic"
                           inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty:
                    <orderedlist numeration="arabic"
                                 inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">message</emphasis> := <emphasis role="italic">notificationMessageList</emphasis>[0].Topic.Message.Message.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Topic !=  <emphasis role="italic">topic</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis> contains PropertyOperation attribute, FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source does not contain SimpleItem item with Name = "AccessPointToken", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "AccessPointToken" does not have Value = <emphasis role="italic">accessPointToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "External", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data.SimpleItem with Name = "External" does not have Value = true, FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">topic</emphasis> = "tns1:AccessControl/AccessGranted/Credential"
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width=2.5em"?>
                            <listitem>
                              <para>
                                If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "CredentialToken", FAIL the test, restore the DUT state, and skip other steps.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                If <emphasis role="italic">message</emphasis>.Data.SimpleItem with Name = "CredentialToken" does not have Value = <emphasis role="italic">credentialToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Skip other steps of the procedure.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <xref linkend="Annex_HelperPullExternalAuthAccessGrantedIdentifier.1"/> and no notifications were recieved, FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.11 Retrieve Denied Event by PullPoint for Identifier External Authorization-->
    <section xml:id="Annex_HelperPullExternalAuthAccessDeniedIdentifier"
             xreflabel="Annex A.11">
      <title>Retrieve Denied Event by PullPoint for Identifier External Authorization</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullExternalAuthAccessDeniedIdentifier
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:AccessControl/Denied/Anonymous or tns1:AccessControl/Denied/Credential event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis>
        Topic to validate (<emphasis role="italic">topic</emphasis>).
        Subscription reference (<emphasis role="italic">s</emphasis>).
        Current time for the DUT (<emphasis role="italic">ct</emphasis>).
        Subscription termination time (<emphasis role="italic">tt</emphasis>).
        Token of access point for which <emphasis role="bold">tns1:AccessControl/Request/Identifier</emphasis> notification was recieved (<emphasis role="italic">accessPointToken</emphasis>).
        (optional) Token of Credential (<emphasis role="italic">credentialToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullExternalAuthAccessDeniedIdentifier.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic"
                           inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty:
                    <orderedlist numeration="arabic"
                                 inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">message</emphasis> := <emphasis role="italic">notificationMessageList</emphasis>[0].Topic.Message.Message.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Topic !=  <emphasis role="italic">topic</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis> contains PropertyOperation attribute, FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source does not contain SimpleItem item with Name = "AccessPointToken", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "AccessPointToken" does not have Value = <emphasis role="italic">accessPointToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "External", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data.SimpleItem with Name = "External" does not have Value = true, FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "Reason", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">message</emphasis>.Data.SimpleItem with Name = "Reason" does not have Value with type "xs:string", FAIL the test, restore the DUT state, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          If <emphasis role="italic">topic</emphasis> = "tns1:AccessControl/Denied/Credential"
                          <orderedlist numeration="arabic" inheritnum="inherit">
                            <?dbfo label-width=2.5em"?>
                            <listitem>
                              <para>
                                If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "CredentialToken", FAIL the test, restore the DUT state, and skip other steps.
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                If <emphasis role="italic">message</emphasis>.Data.SimpleItem with Name = "CredentialToken" does not have Value = <emphasis role="italic">credentialToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                              </para>
                            </listitem>
                          </orderedlist>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Skip other steps of the procedure.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <xref linkend="Annex_HelperPullExternalAuthAccessDeniedIdentifier.1"/> and no notifications were recieved, FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.12 Get Access Points List-->
    <section xml:id="Annex_HelperGetAccessPointList"
             xreflabel="Annex A.12">
      <title>Get Access Points List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAccessPointList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get complete access points list.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The complete list of access points (<emphasis role="italic">accessPointCompleteList</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>

      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">GetAccessPointList</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Limit skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    StartReference skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAccessPointListResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint list =: <emphasis role="italic">accessPointCompleteList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
              <orderedlist numeration="arabic"
                           inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF client invokes <emphasis role="bold">GetAccessPointList</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Limit skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          StartReference := <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetAccessPointListResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          AccessPoint list =: <emphasis role="italic">accessPointListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set the following:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">accessPointCompleteList</emphasis> := <emphasis role="italic">accessPointCompleteList</emphasis> + <emphasis role="italic">accessPointListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>

      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetAccessPointListResponse</emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.13 Get Service Capabilities-->
    <section xml:id="Annex_HelperGetServiceCapabilities" xreflabel="Annex A.13">
      <title>Get Service Capabilities</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetServiceCapabilities
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get service capabilities.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The service capabilities (<emphasis role="italic">cap</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Capabilities =: <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.14 Get Areas List-->
    <section xml:id="Annex_HelperGetAreaList"
             xreflabel="Annex A.14">
      <title>Get Areas List</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAreaList
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get complete areas list.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The complete list of areas (<emphasis role="italic">areaCompleteList</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>

      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">GetAreaList</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Limit skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    StartReference skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAreaListResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Area list =: <emphasis role="italic">areaCompleteList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Until <emphasis role="italic">nextStartReference</emphasis> is not null, repeat the following steps:
              <orderedlist numeration="arabic"
                           inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF client invokes <emphasis role="bold">GetAreaList</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Limit skipped
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          StartReference := <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">GetAreaListResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          NextStartReference =: <emphasis role="italic">nextStartReference</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Area list =: <emphasis role="italic">areaListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Set the following:
                    <itemizedlist>
                      <listitem>
                        <para>
                          <emphasis role="italic">areaCompleteList</emphasis> := <emphasis role="italic">areaCompleteList</emphasis> + <emphasis role="italic">areaListPart</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>

      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetAreaListResponse</emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.15 Free Storage for Additional Access Point-->
    <section xml:id="Annex_HelperCheckFreeStorageForAccessPoint" xreflabel="Annex A.15">
      <title>Free Storage for Additional Access Point</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCheckFreeStorageForAccessPoint
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to provide possibility to add an access point.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> The complete list of access points (<emphasis role="italic">accessPointCompleteList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Removed access point (optional) (<emphasis role="italic">accessPointToRestore</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.MaxAccessPoints is skipped set <emphasis role="italic">cap</emphasis>.MaxAccessPoints := 10.
            </para>
          </listitem>
          <listitem>
            <para>
              If number of items of <emphasis role="italic">accessPointCompleteList</emphasis> less than cap.MaxAccessPoints, skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client find an access point to delete by following the procedure mentioned in <xref linkend="Annex_HelperFindAccessPointToDelete"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">accessPointCompleteList</emphasis> - access point list.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out (optional) <emphasis role="italic">accessPointToRestore</emphasis> - deleted access point to restore.
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>

        </itemizedlist>
      </para>
    </section>
    <!--A.16 Find Access Point To Delete-->
    <section xml:id="Annex_HelperFindAccessPointToDelete" xreflabel="Annex A.17">
      <title>Find Access Point To Delete</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperFindAccessPointToDelete
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to find an access point in the access point list that can be deleted.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Access Point list (<emphasis role="italic">accessPointList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Deleted Access Point (<emphasis role="italic">deletedAccessPoint</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              For each access point <emphasis role="italic">accessPoint</emphasis> from <emphasis role="italic">accessPointList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">DeleteAccessPoint</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Token =: <emphasis role="italic">accessPoint</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with SOAP fault message or with <emphasis role="bold">DeleteAccessPointResponse</emphasis> message.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If DUT returns <emphasis role="bold">DeleteAccessPointResponse</emphasis> message, set <emphasis role="italic">deletedAccessPoint</emphasis> := <emphasis role="italic">accessPoint</emphasis> and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Fail the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">DeleteAccessPointResponse</emphasis> message or SOAP fault message.
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.17 Retrieve Access Point Changed Event by PullPoint (similar to annex for DoorCahnged event)-->
    <section xml:id="Annex_HelperPullAccessPointChanged" xreflabel="Annex A.17">
      <title>Retrieve Access Point Changed Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullAccessPointChanged
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:Configuration/AccessPoint/Changed event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>),
        Subscription termination time (<emphasis role="italic">tt</emphasis>) and Access Point token (<emphasis role="italic">accessPointToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullAccessPointChanged.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> contains at least one NotificationMessage with Topic value is not equal to "tns1:Configuration/AccessPoint/Changed", FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty and the AccessPointToken source simple item in <emphasis role="italic">notificationMessageList</emphasis> is equal
                    to <emphasis role="italic">accessPointToken</emphasis>, skip other steps and finish the procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <link linkend="Annex_HelperPullAccessPointChanged.1">1</link> without
                    Notification with Token source simple item equal to <emphasis role="italic">accessPointToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.18 Get Area Token-->
    <section xml:id="Annex_HelperGetAreaToken" xreflabel="Annex A.18">
      <title>Get Area Token</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAreaToken
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve tokens of existing areas or to create new ares.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Token of the 1st Area (optional) (<emphasis role="italic">areaToken1</emphasis>), token of the 2nd Area (optional) (<emphasis role="italic">areaToken2</emphasis>)

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.MaxAreas is skipped set <emphasis role="italic">cap</emphasis>.MaxAreas := 10.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.MaxAreas &gt; 0
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client retrieves complete list of areas info from the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteAreaInfoList"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          out <emphasis role="italic">areaInfoList</emphasis> - list of area info
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">areaInfoList</emphasis> contains at least one item, set <emphasis role="italic">areaToken1</emphasis> := <emphasis role="italic">areaInfoList</emphasis>[0].@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">areaInfoList</emphasis> contains at least two items, set <emphasis role="italic">areaToken2</emphasis> := <emphasis role="italic">areaInfoList</emphasis>[1].@token
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">areaToken1</emphasis> != NULL and <emphasis role="italic">areaToken2</emphasis> != NULL, skip other steps and return to test procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">cap</emphasis>.AreaManagementSupported != true, skip other steps and return to test procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">areaToken1</emphasis> = NULL
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          ONVIF Client creates the 1st area on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperCreateArea"/> with the following input and output parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                in "Test Name1" -  Access Point Name
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                out <emphasis role="italic">areaToken1</emphasis> - area token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">areaToken2</emphasis> = NULL
                    <orderedlist numeration="arabic" inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          If <emphasis role="italic">cap</emphasis>.MaxAreas &lt; 2, skip other steps and return to test procedure.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ONVIF Client creates the 2nd area on the DUT by following the procedure mentioned in <xref linkend="Annex_HelperCreateArea"/> with the following input and output parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                in "Test Name2" -  Access Point Name
                              </para>
                            </listitem>
                            <listitem>
                              <para>
                                out <emphasis role="italic">areaToken2</emphasis> - area token
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">DeleteAccessPointResponse</emphasis> message or SOAP fault message.
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.19 Create Area-->
    <section xml:id="Annex_HelperCreateArea"
             xreflabel="Annex A.19">
      <title>Create Area</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreateArea
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create an area on the DUT.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Area Name <emphasis role="italic">areaName</emphasis>,
        Area Description (optional) <emphasis role="italic">areaDescription</emphasis>,
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Area (<emphasis role="italic">areaToken</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>

      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">CreateArea</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    token := ""
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Name := <emphasis role="italic">areaName</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Description  := <emphasis role="italic">areaDescription</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreateAreaResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">areaToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">CreateAreaResponse</emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If optional input parameter is skipped, corresponding field of CreateArea request will be skipped.
      </para>
    </section>
    <!--A.20 Get Door Token-->
    <section xml:id="Annex_HelperGetDoorToken" xreflabel="Annex A.20">
      <title>Get Door Token</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetDoorToken
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve tokens of existing door or to create new door.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Door Control Service is received from the DUT. Door Entity is supported by the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Token of the door (optional) (<emphasis role="italic">doorToken</emphasis>)

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client gets the Door Control service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetDoorControlServiceCapabilities"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.MaxDoors is skipped set <emphasis role="italic">cap</emphasis>.MaxDoors := 10.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.MaxDoors &gt; 0
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client retrieves complete list of door info from the DUT by following the procedure mentioned in <xref linkend="Annex_HelperGetCompleteDoorInfoList"/> with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          out <emphasis role="italic">doorInfoList</emphasis> - list of door info
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">doorInfoList</emphasis> contains at least one item, set <emphasis role="italic">doorToken</emphasis> := <emphasis role="italic">doorInfoList</emphasis>[0].@token, skipp other steps and return to test procedure.
                  </para>
                </listitem>

                <listitem>
                  <para>
                    If <emphasis role="italic">cap</emphasis>.DoorManagementSupported != true, skip other steps and return to test procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client creates door by following the procedure mentioned in <xref linkend="Annex_HelperCreateDoor"/>  with the following input and output parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          in false - for all door capabilities
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in "pt:Door" - Door Type
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in PT60S - ReleaseTime
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          in PT120S - OpenTime
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          out  <emphasis role="italic">doorToken</emphasis> - door token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.21 Create Door == A.12 from Door Control Test spec-->
    <section xml:id="Annex_HelperCreateDoor" xreflabel="Annex A.21">
      <title>Create Door</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreateDoor
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create door.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Door Control Service is received from the DUT. Door Management is supported by the DUT as indicated by DoorManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Door Capabilities (<emphasis role="italic">doorCapabilities</emphasis>), Door type (<emphasis role="italic">doorType</emphasis>),
        Release Time (<emphasis role="italic">releaseTime</emphasis>), Open Time (<emphasis role="italic">openTime</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Door Token (<emphasis role="italic">doorToken</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">CreateDoor</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Door.token := ""
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Name := "Test Name"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Description := "Test Description"
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Access := <emphasis role="italic">doorCapabilities</emphasis>.Access
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.AccessTimingOverride := <emphasis role="italic">doorCapabilities</emphasis>.AccessTimingOverride
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Lock := <emphasis role="italic">doorCapabilities</emphasis>.Lock
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Unlock := <emphasis role="italic">doorCapabilities</emphasis>.Unlock
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Block := <emphasis role="italic">doorCapabilities</emphasis>.Block
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.DoubleLock := <emphasis role="italic">doorCapabilities</emphasis>.DoubleLock
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.LockDown := <emphasis role="italic">doorCapabilities</emphasis>.LockDown
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.LockOpen := <emphasis role="italic">doorCapabilities</emphasis>.LockOpen
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.DoorMonitor := <emphasis role="italic">doorCapabilities</emphasis>.DoorMonitor
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.LockMonitor := <emphasis role="italic">doorCapabilities</emphasis>.LockMonitor
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.DoubleLockMonitor := <emphasis role="italic">doorCapabilities</emphasis>.DoubleLockMonitor
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Alarm := <emphasis role="italic">doorCapabilities</emphasis>.Alarm
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Tamper := <emphasis role="italic">doorCapabilities</emphasis>.Tamper
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Capabilities.Fault := <emphasis role="italic">doorCapabilities</emphasis>.Fault
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.DoorType := <emphasis role="italic">doorType</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Timings.ReleaseTime := <emphasis role="italic">releaseTime</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Timings.OpenTime := <emphasis role="italic">openTime</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Timings.ExtendedReleaseTime skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Timings.DelayTimeBeforeRelock skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Timings.ExtendedOpenTime skipped
                  </para>
                </listitem>
                <listitem>
                  <para>
                    Door.Timings.PreAlarmTime skipped
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreateDoorResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">doorToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>


        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">CreateDoorResponse </emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.22 Get Door Control Service Capabilities == A.7 from Door Control Test spec-->
    <section xml:id="Annex_HelperGetDoorControlServiceCapabilities" xreflabel="Annex A.22">
      <title>Get Door Control Service Capabilities</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetDoorControlServiceCapabilities
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get Door Control service capabilities.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Door Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> The service capabilities (<emphasis role="italic">cap</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetServiceCapabilities</emphasis>.
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with a <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Capabilities =: <emphasis role="italic">cap</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetServiceCapabilitiesResponse</emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.23 Get Complete Door Info List == A.1 from Door Control Test spec-->
    <section xml:id="Annex_HelperGetCompleteDoorInfoList" xreflabel="Annex A.23">
      <title>Get Complete Door Info List</title>
      <para>
        The following algorithm will be used to get a complete list of Doors:
        <orderedlist numeration="arabic">
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperGetCompleteDoorInfoList.1">
            <para>
              ONVIF Client will invoke <emphasis role="bold">GetDoorInfoList</emphasis> request (no Limit, no StartReference) to retrieve the first part of Door Information list from the DUT.
            </para>
          </listitem>
          <listitem xml:id="Annex_HelperGetCompleteDoorInfoList.2">
            <para>
              Verify the <emphasis role="bold">GetDoorInfoListResponse</emphasis> message from the DUT.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="bold">GetDoorInfoListResponse</emphasis> message contains NextStartReference, repeat steps <link linkend="Annex_HelperGetCompleteDoorInfoList.1">1</link>-<link linkend="Annex_HelperGetCompleteDoorInfoList.2">2</link> with StartReference = [current NextStartReference]. Otherwise, skip other steps and finalize getting complete door list.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        The complete ordered list of doors with information will be made by the means of uniting all <emphasis role="bold">GetDoorInfoListResponse</emphasis> messages. Also, the total number of doors will be calculated.
      </para>
    </section>
    <!--A.24 Get Access Point-->
    <section xml:id="Annex_HelperGetAccessPoint" xreflabel="Annex A.24">
      <title>Get Access Point</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAccessPoint
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get access point.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Access Point Token (<emphasis role="italic">accessPointToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Access Point List (<emphasis role="italic">accessPointList</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAccessPoints</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token[0] := <emphasis role="italic">accessPointToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAccessPointsResponse</emphasis> message with parameters:
              <itemizedlist>
                <listitem>
                  <para>
                    AccessPoint list =: <emphasis role="italic">accessPointList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetAccessPointsResponse </emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.25 Get Access Point Info-->
    <section xml:id="Annex_HelperGetAccessPointInfo" xreflabel="Annex A.25">
      <title>Get Access Point Info</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAccessPointInfo
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get access point info.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Control Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Access Point Token (<emphasis role="italic">accessPointToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Access Point Info List (<emphasis role="italic">accessPointInfoList</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAccessPointInfo</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token[0] := <emphasis role="italic">accessPointToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT sends the <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    AccessPointInfo =: <emphasis role="italic">accessPointInfoList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetAccessPointInfoResponse</emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.26 Delete Access Point-->
    <section xml:id="Annex_HelperDeleteAccessPoint" xreflabel="Annex A.26">
      <title>Delete Access Point</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteAccessPoint
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete access point.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Access Point Token (<emphasis role="italic">accessPointToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">DeleteAccessPoint</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">accessPointToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">DeleteAccessPointResponse </emphasis> message.
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">DeleteAccessPointResponse </emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.27 Create Access Point-->
    <section xml:id="Annex_HelperCreateAccessPoint" xreflabel="Annex A.27">
      <title>Create Access Point</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCreateAccessPoint
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to create access point.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service is received from the DUT. Access Point Management is supported by the DUT as indicated by AccessPointManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis>
        Access Point Name <emphasis role="italic">accessPointName</emphasis>,
        Access Point Description (optional) <emphasis role="italic">accessPointDescription</emphasis>,
        Area From Token (optional) <emphasis role="italic">areaFrom</emphasis>,
        Area To Token (optional) <emphasis role="italic">areaTo</emphasis>,
        Access Point Entity Type (optional) <emphasis role="italic">entityType</emphasis>,
        Access Point Entity Token <emphasis role="italic">entityToken</emphasis>,
        Disable Access Point Capabilities <emphasis role="italic">disableAccessPoint</emphasis>,
        Access Point Duress Capabilities (optional) <emphasis role="italic">duress</emphasis>,
        Access Point Anonymous Access Capabilities (optional) <emphasis role="italic">anonymousAccess</emphasis>,
        Access Point Access Taken Capabilities (optional) <emphasis role="italic">accessTaken</emphasis>,
        Access Point External Authorization Capabilities (optional) <emphasis role="italic">externalAuthorization</emphasis>,
        Access Point Supported Recognition Types Capabilities (optional) <emphasis role="italic">supportedRecognitionTypes</emphasis>,
        Access Point Identifier Access Capabilities (optional) <emphasis role="italic">identifierAccess</emphasis>,
        Access Point Supported Security Levels Capabilities (optional) <emphasis role="italic">supportedSecurityLevels</emphasis>,
        Access Point Authentication Profile Token (optional) <emphasis role="italic">authenticationProfileToken</emphasis>.
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Access Point Token (<emphasis role="italic">accessPointToken</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF client invokes <emphasis role="bold">CreateAccessPoint</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    AccessPoint.token := ""
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.Name := <emphasis role="italic">accessPointName</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.Description := <emphasis role="italic">accessPointDescription</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.AreaFrom := <emphasis role="italic">areaFrom</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.AreaTo := <emphasis role="italic">areaTo</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.EntityType := <emphasis role="italic">entityType</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.Entity := <emphasis role="italic">entityToken</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.Capabilities.DisableAccessPoint := <emphasis role="italic">disableAccessPoint</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.Capabilities.Duress := <emphasis role="italic">duress</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.Capabilities.AnonymousAccess := <emphasis role="italic">anonymousAccess</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.Capabilities.AccessTaken := <emphasis role="italic">accessTaken</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.Capabilities.ExternalAuthorization := <emphasis role="italic">externalAuthorization</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.Capabilities.SupportedRecognitionTypes := <emphasis role="italic">supportedRecognitionTypes</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.Capabilities.IdentifierAccess := <emphasis role="italic">identifierAccess</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.Capabilities.SupportedSecurityLevels  := <emphasis role="italic">supportedSecurityLevels</emphasis>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    AccessPoint.AuthenticationProfileToken := <emphasis role="italic">authenticationProfileToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">CreateAccessPointResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">accessPointToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>


        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">CreateAccessPointResponse </emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> If optional input parameter is skipped, corresponding field of CreateAccessPoint request will be skipped.
      </para>
    </section>
    <!--A.28 Retrieve Access Point Removed Event by PullPoint (similar to A.16 in DoorControl test spec)-->
    <section xml:id="Annex_HelperPullAccessPointRemoved" xreflabel="Annex A.28">
      <title>Retrieve Access Point Removed Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullAccessPointRemoved
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:Configuration/AccessPoint/Removed event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>),
        Subscription termination time (<emphasis role="italic">tt</emphasis>) and Access Point token (<emphasis role="italic">accessPointToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullAccessPointRemoved.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> contains at least one NotificationMessage with Topic value is not equal to "tns1:Configuration/AccessPoint/Removed", FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty and the AccessPointToken source simple item in <emphasis role="italic">notificationMessageList</emphasis> is equal
                    to <emphasis role="italic">accessPointToken</emphasis>, skip other steps and finish the procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <link linkend="Annex_HelperPullAccessPointRemoved.1">1</link> without
                    Notification with Token source simple item equal to <emphasis role="italic">accessPointToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.29 Free Storage for Additional Area-->
    <section xml:id="Annex_HelperCheckFreeStorageForArea" xreflabel="Annex A.29">
      <title>Free Storage for Additional Area</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperCheckFreeStorageForArea
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to provide possibility to add an area.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> The complete list of areas (<emphasis role="italic">areaCompleteList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Removed area (optional) (<emphasis role="italic">areaToRestore</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client gets the service capabilities (out <emphasis role="italic">cap</emphasis>) by following the procedure mentioned in <xref linkend="Annex_HelperGetServiceCapabilities"/>.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">cap</emphasis>.MaxAreas is skipped set <emphasis role="italic">cap</emphasis>.MaxAreas := 10.
            </para>
          </listitem>
          <listitem>
            <para>
              If number of items of <emphasis role="italic">areaCompleteList</emphasis> less than cap.MaxAreas, skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              ONVIF Client find an area to delete by following the procedure mentioned in <xref linkend="Annex_HelperFindAreaToDelete"/> with the following input parameters
              <itemizedlist>
                <listitem>
                  <para>
                    in <emphasis role="italic">areaCompleteList</emphasis> - area list.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    out (optional) <emphasis role="italic">areaToRestore</emphasis> - deleted area to restore.
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              None.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.30 Find Area To Delete-->
    <section xml:id="Annex_HelperFindAreaToDelete" xreflabel="Annex A.30">
      <title>Find Area To Delete</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperFindAreaToDelete
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to find an area in the area list that can be deleted.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Area list (<emphasis role="italic">areaList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Deleted Area (<emphasis role="italic">deletedArea</emphasis>).

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              For each area <emphasis role="italic">area</emphasis> from <emphasis role="italic">areaList</emphasis> repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">DeleteArea</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Token =: <emphasis role="italic">area</emphasis>.@token
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with SOAP fault message or with <emphasis role="bold">DeleteAreaResponse</emphasis> message.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If DUT returns <emphasis role="bold">DeleteAreaResponse</emphasis> message, set <emphasis role="italic">deletedArea</emphasis> := <emphasis role="italic">area</emphasis> and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              Fail the test.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">DeleteAreaResponse</emphasis> message or SOAP fault message.
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.31 Retrieve Area Changed Event by PullPoint (similar to annex for DoorCahnged event)-->
    <section xml:id="Annex_HelperPullAreaChanged" xreflabel="Annex A.31">
      <title>Retrieve Area Changed Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullAreaChanged
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:Configuration/Area/Changed event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>),
        Subscription termination time (<emphasis role="italic">tt</emphasis>) and Area token (<emphasis role="italic">areaToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullAreaChanged.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> contains at least one NotificationMessage with Topic value is not equal to "tns1:Configuration/Area/Changed", FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty and the AreaToken source simple item in <emphasis role="italic">notificationMessageList</emphasis> is equal
                    to <emphasis role="italic">areaToken</emphasis>, skip other steps and finish the procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <link linkend="Annex_HelperPullAreaChanged.1">1</link> without
                    Notification with Token source simple item equal to <emphasis role="italic">areaToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.32 Get Area-->
    <section xml:id="Annex_HelperGetArea" xreflabel="Annex A.32">
      <title>Get Area</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetArea
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get area.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Area Token (<emphasis role="italic">areaToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Area List (<emphasis role="italic">areaList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAreas</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token[0] := <emphasis role="italic">areaToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">GetAreasResponse</emphasis> message with parameters:
              <itemizedlist>
                <listitem>
                  <para>
                    Area list =: <emphasis role="italic">areaList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetAreasResponse </emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.33 Get Area Info-->
    <section xml:id="Annex_HelperGetAreaInfo" xreflabel="Annex A.33">
      <title>Get Area Info</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperGetAreaInfo
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to get area info.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Control Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Area Token (<emphasis role="italic">areaToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Area Info List (<emphasis role="italic">areaInfoList</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">GetAreaInfo</emphasis> with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token[0] := <emphasis role="italic">areaToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT sends the <emphasis role="bold">GetAreaInfoResponse</emphasis> message with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    AreaInfo =: <emphasis role="italic">areaInfoList</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">GetAreaInfoResponse</emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <!--A.34 Delete Area-->
    <section xml:id="Annex_HelperDeleteArea" xreflabel="Annex A.34">
      <title>Delete Area</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperDeleteArea
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to delete area.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Access Control Service is received from the DUT. Area Management is supported by the DUT as indicated by AreaManagementSupported capability.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Area Token (<emphasis role="italic">areaToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None.

      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              ONVIF Client invokes <emphasis role="bold">DeleteArea</emphasis> request with parameters
              <itemizedlist>
                <listitem>
                  <para>
                    Token =: <emphasis role="italic">areaToken</emphasis>
                  </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              The DUT responds with <emphasis role="bold">DeleteAreaResponse </emphasis> message.
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              The DUT did not send <emphasis role="bold">DeleteAreaResponse </emphasis> message
            </para>
          </listitem>
        </itemizedlist>
      </para>

    </section>
    <!--A.35 Retrieve Area Removed Event by PullPoint-->
    <section xml:id="Annex_HelperPullAreaRemoved" xreflabel="Annex A.35">
      <title>Retrieve Area Removed Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullAreaRemoved
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:Configuration/Area/Removed event with PullMessages.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Subscription reference (<emphasis role="italic">s</emphasis>), current time for the DUT (<emphasis role="italic">ct</emphasis>),
        Subscription termination time (<emphasis role="italic">tt</emphasis>) and Area token (<emphasis role="italic">areaToken</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullAreaRemoved.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic" inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> request with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> contains at least one NotificationMessage with Topic value is not equal to "tns1:Configuration/Area/Removed", FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty and the AreaToken source simple item in <emphasis role="italic">notificationMessageList</emphasis> is equal
                    to <emphasis role="italic">areaToken</emphasis>, skip other steps and finish the procedure.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <link linkend="Annex_HelperPullAreaRemoved.1">1</link> without
                    Notification with Token source simple item equal to <emphasis role="italic">areaToken</emphasis>, FAIL the test, restore the DUT state, and skip other steps.
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL –</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.36 Retrieve Identifier Event by PullPoint-->
    <section xml:id="Annex_HelperPullIdentifier"
             xreflabel="Annex A.36">
      <title>Retrieve Identifier Event by PullPoint</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperPullIdentifier
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to retrieve and check tns1:AccessControl/AccessTaken/Identifier or tns1:AccessControl/AccessNotTaken/Identifier or tns1:AccessControl/AccessGranted/Identifier event message.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> Event Service is received from the DUT.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis>
        Subscription reference (<emphasis role="italic">s</emphasis>).
        Current time for the DUT (<emphasis role="italic">ct</emphasis>).
        Subscription termination time (<emphasis role="italic">tt</emphasis>).
        Topic (<emphasis role="italic">topic</emphasis>).
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> Identifier Notification Message (<emphasis role="italic">message</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem xml:id="Annex_HelperPullIdentifier.1">
            <para>
              Until <emphasis role="italic">operationDelay</emphasis> timeout expires, repeat the following steps:
              <orderedlist numeration="arabic"
                           inheritnum="inherit">
                <?dbfo label-width="2.5em"?>
                <listitem>
                  <para>
                    ONVIF Client waits for time <emphasis role="italic">t</emphasis> := min{(<emphasis role="italic">tt</emphasis>-<emphasis role="italic">ct</emphasis>)/2, 1 second}.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    ONVIF Client invokes <emphasis role="bold">PullMessages</emphasis> to the subscription endpoint <emphasis role="italic">s</emphasis> with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          Timeout := PT60S
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          MessageLimit := 1
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    The DUT responds with <emphasis role="bold">PullMessagesResponse</emphasis> message with parameters
                    <itemizedlist>
                      <listitem>
                        <para>
                          CurrentTime =: <emphasis role="italic">ct</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          TerminationTime =: <emphasis role="italic">tt</emphasis>
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          NotificationMessage list =: <emphasis role="italic">notificationMessageList</emphasis>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    If <emphasis role="italic">notificationMessageList</emphasis> is not empty:
                    <orderedlist numeration="arabic"
                                 inheritnum="inherit">
                      <?dbfo label-width="3.5em"?>
                      <listitem>
                        <para>
                          If <emphasis role="italic">notificationMessageList</emphasis>[0].Topic != <emphasis role="italic">topic</emphasis>, FAIL the test, restore DUT settings, and skip other steps.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          Set <emphasis role="italic">message</emphasis> := <emphasis role="italic">notificationMessageList</emphasis>[0].Topic.Message.Message.
                        </para>
                      </listitem>
                      <listitem>
                        <para>
                          ONVIF Client validates identifier notifiation message by following the procedure mentioned in <xref linkend="Annex_HelperValidateIdentifierMessage"/> with the following input and output parameters
                          <itemizedlist>
                            <listitem>
                              <para>
                                in <emphasis role="italic">message</emphasis> - identifier message
                              </para>
                            </listitem>
                          </itemizedlist>
                        </para>
                      </listitem>

                      <listitem>
                        <para>
                          Skip other steps of the procedure and return <emphasis role="italic">message</emphasis>.
                        </para>
                      </listitem>
                    </orderedlist>
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">operationDelay</emphasis> timeout expires for step <xref linkend="Annex_HelperPullIdentifier.1"/> and no notifications were recieved, FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>

    <!--A.37 Validate Identifier Message-->
    <section xml:id="Annex_HelperValidateIdentifierMessage"
                 xreflabel="Annex A.37">
      <title>Validate Identifier Message</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperValidateIdentifierMessage
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to check tns1:AccessControl/AccessTaken/Identifier or tns1:AccessControl/AccessNotTaken/Identifier or tns1:AccessControl/AccessGranted/Identifier event message.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> Notification Message (<emphasis role="italic">message</emphasis>)
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              If <emphasis role="italic">message</emphasis> contains PropertyOperation attribute, FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">message</emphasis>.Source does not contain SimpleItem item with Name = "AccessPointToken", FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "AccessPointToken" does not have Value value with type "pt:ReferenceToken", FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "IdentifierType", FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "IdentifierType" does not have Value value with type "xs:string", FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "FormatType", FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "FormatType" does not have Value value with type "xs:string", FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">message</emphasis>.Data does not contain SimpleItem item with Name = "IdentifierValue", FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">message</emphasis>.Source.SimpleItem with Name = "IdentifierValue" does not have Value value with type "xs:hexBinary", FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
    <!--A.38 Validate Identifier Message Description-->
    <section xml:id="Annex_HelperValidateIdentifierMessageDescription"
                 xreflabel="Annex A.38">
      <title>Validate Identifier Message Description</title>
      <para>
        <emphasis role="bold">Name:</emphasis> HelperValidateIdentifierMessageDescription
      </para>
      <para>
        <emphasis role="bold">Procedure Purpose:</emphasis> Helper procedure to check structure of tns1:AccessControl/AccessTaken/Identifier, tns1:AccessControl/AccessNotTaken/Identifier, tns1:AccessControl/AccessGranted/Identifier topics provided in GetEventPropertiesResponse.
      </para>
      <para>
        <emphasis role="bold">Pre-requisite:</emphasis> None.
      </para>
      <para>
        <emphasis role="bold">Input:</emphasis> <emphasis role="italic">topic</emphasis> - message description of identifier topic
      </para>
      <para>
        <emphasis role="bold">Returns:</emphasis> None
      </para>
      <para>
        <emphasis role="bold">Procedure:</emphasis>
      </para>
      <para>
        <orderedlist>
          <?dbfo label-width="1.5em"?>
          <listitem>
            <para>
              If <emphasis role="italic">topic</emphasis>.MessageDescription.IsProperty equals to true, FAIL the test, restore the DUT state, and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">topic</emphasis> does not contain MessageDescription.Source.SimpleItemDescription item with Name = "AccessPointToken", FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">topic</emphasis>.MessageDescription.Source.SimpleItemDescription with Name = "AccessPointToken" does not have Type = "pt:ReferenceToken", FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">topic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "IdentifierType", FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">topic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "IdentifierType" does not have Type = "xs:string", FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">topic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "FormatType", FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">topic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "FormatType" does not have Type = "xs:string", FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">topic</emphasis> does not contain MessageDescription.Data.SimpleItemDescription item with Name = "IdentifierValue", FAIL the test and skip other steps.
            </para>
          </listitem>
          <listitem>
            <para>
              If <emphasis role="italic">topic</emphasis>.MessageDescription.Data.SimpleItemDescription with Name = "IdentifierValue" does not have Type = "xs:hexBinary", FAIL the test and skip other steps.
            </para>
          </listitem>

        </orderedlist>
      </para>
      <para>
        <emphasis role="bold">Procedure Result:</emphasis>
      </para>
      <para>
        <emphasis role="bold">PASS -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT passes all assertions.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">FAIL -</emphasis>
        <itemizedlist>
          <listitem>
            <para>
              DUT did not send <emphasis role="bold">PullMessagesResponse</emphasis> message.
            </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        <emphasis role="bold">Note:</emphasis> <emphasis role="italic">operationDelay</emphasis> will be taken from Operation Delay field of ONVIF Device Test Tool.
      </para>
    </section>
  </appendix>
</book>